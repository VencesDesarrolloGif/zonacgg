<?php
require_once dirname(__FILE__) . "/../libs/logger/KLogger.php";
date_default_timezone_set('America/Mexico_City');
class Persistencia
{
    public $conn;
    public $logger;

    public function __construct()
    {
        $this->conectar();

        $this->logger = new KLogger("persistencia.log", KLogger::DEBUG);
    }

    /**
     * Conecta con la base de datos
     */
    public function conectar()
    {
        $this->conn = mysqli_connect("127.0.0.1", "root", "Admin*gif", "zonacgg");
        //mysqli_select_db("dbo");
        mysqli_query($this->conn, "SET NAMES 'UTF8'");
    }

    /**
     * Asegura un valor para MySQL
     */
    public function safeValue($value)
    {
        return mysqli_real_escape_string($this->conn, $value);
    }

    /**
     * Obtiene una lista de puestos de la base de datos
     *
     * @return Una lista de puestos
     */

    public function login($user, $password)
    {
       // $this -> logger -> LogInfo ("Ejecutando. login en persistencia");
        $usuarios = array();

        try {

            $sql = "SELECT u.usuario,u.entidadFederativaUsuario,ef.nombreEntidadFederativa as nombreEntidad, u.apellidoPaterno,u.apellidoMaterno, u.nombre,cru.descripcionRolUsuario as rol,u.usuarioId 
            from  usuarios u
            LEFT JOIN entidadesfederativas ef ON (u.entidadFederativaUsuario=ef.idEntidadFederativa)
            LEFT JOIN catalogorolesusuarios cru ON (u.usuarioRolId=cru.idRolUsuario)
            where  u.usuario='" . mysqli_real_escape_string($this->conn, $user) . "' " .
            "and u.contrasenia='" . mysqli_real_escape_string($this->conn, $password) . "'";

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $usuarios[] = $reg;
            }
            return $usuarios;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());

        }
    }

    public function entidadesByuser($idUser)
    {
        $entidadesByuser = array();
        try {
            $sql="select idEntidadEnt
            from entidadesUsuario
            where idUsuarioEnt='$idUser'";
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $entidadesByuser[]= $reg;
            }
            return $entidadesByuser;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function sucursalesByuser($idUser)
    {
        $sucursalesByuser = array();
        try {
            $sql="SELECT idSucursalUsr
                  FROM sucursalesusuario
                  WHERE idUsuarioSuc='$idUser'";
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $sucursalesByuser[]= $reg;
            }
            return $sucursalesByuser;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function lineasnegocioByuser($idUser)
    {
        $lineasnegocioByuser = array();
        try {
            $sql="select idlineaNegocio
            from lineasnegociousuario
            where idUsuariolineaneg='$idUser'";
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lineasnegocioByuser[]= $reg;
            }
            return $lineasnegocioByuser;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function traeCatalogoPuestosPorTipoPlantillaReingreso($tipoPuesto, $lineaNegocio)
    {
        $listaPuestos = array();

        $sql = "select idPuesto as IdPuesto, descripcionPuesto, puestoLineaNegocioId from catalogoPuestos where ";

        $sql.="  puestoLineaNegocioId=" . mysqli_real_escape_string($this->conn, $lineaNegocio) . " order by descripcionPuesto";       
         $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaPuestos[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $listaPuestos;
    }

    public function traeCatalogoPuestosPorTipo($tipoPuesto, $lineaNegocio)
    {
        $listaPuestos = array();

        $sql = "select idPuesto as IdPuesto, descripcionPuesto, puestoLineaNegocioId from catalogoPuestos where puestoIdCategoria='" . mysqli_real_escape_string($this->conn, $tipoPuesto) . "'";

        $sql.=" and puestoLineaNegocioId=" . mysqli_real_escape_string($this->conn, $lineaNegocio) . " order by descripcionPuesto";       
        // $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaPuestos[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $listaPuestos;
    }

    /** Actualiza en la base de datos la informaciÃ³n de un guardia.
     *
     * @param guardia Array con los datos del guardia
     */
    public function actualizarInformacionGuardia($guardia)
    {
        $sql = "update empleados " .
        "set apellidoPaterno='" . mysqli_real_escape_string($this->conn, $guardia["apellidoPaterno"]) . "'," .
        "apellidoMaterno='" . mysqli_real_escape_string($this->conn, $guardia["apellidoMaterno"]) . "'," .
        "nombreEmpleado='" . mysqli_real_escape_string($this->conn, $guardia["nombreGuardia"]) . "'," .
        "fechaIngresoEmpleado='" . mysqli_real_escape_string($this->conn, $guardia["fechaIngreso"]) . "'," .
        "fotoEmpleado='" . mysqli_real_escape_string($this->conn, $guardia["fotoEmpleado"]) . "' " .
        "where numeroEmpleado='" . mysqli_real_escape_string($this->conn, $guardia["numeroEmpleado"]) . "'";

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
            throw new Exception("Error de actualización");
        }
    }
// Ya fue modificado
public function insertarEmpleadoEntrevista($empleado)
    {
        if($empleado["horarioAlta"]=="" || $empleado["horarioAlta"]==null || $empleado["horarioAlta"]=="null" || $empleado["horarioAlta"]==NULL || $empleado["horarioAlta"]=="NULL"){
            $empleado["horarioAlta"]="0";
        }
         $this -> logger -> LogInfo ("Ejecutando. insertarEmpleado en persistencia");
        if($empleado["OpcionTarjetaDeDespensa"]=="1"){
            $estatusEmpleadoTarjeta = "1";
            $sql1 = "UPDATE TarjetaDespensa 
                     SET IdEstatusAsignacionEmpleado='" . mysqli_real_escape_string($this->conn, $estatusEmpleadoTarjeta) . "',NumeroFirmaAsignoAElemento='" . mysqli_real_escape_string($this->conn, $empleado["txtnumeroFirmaempleado"]) . "',ContraseniaFirmaAsignoAlElemento='" . mysqli_real_escape_string($this->conn, $empleado["ContraseniaFirmaemp"]) . "',usuarioQueAsignoAlElemento='" . mysqli_real_escape_string($this->conn, $empleado["usuarioCapturaEmpleado"]) . "',FechaASignacionEmpleado=now(),EntidadEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $empleado["entidadFederativaId"]) . "',ConsecutivoEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoId"]) . "',TipoEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaId"]) . "'
                     WHERE idIutTarjeta='" . mysqli_real_escape_string($this->conn, $empleado["txtnumeroIut"]) . "'";
            $res1 = mysqli_query($this->conn, $sql1);
            if ($res1 !== true) {
                $this->logger->LogInfo("Ocurrio un error al actualizar TarjetaDespensa.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }

            $IdNumeroTarjetaDespensa = array();
            $sql3 = "SELECT IdTarjetaDespensa FROM TarjetaDespensa
                    where EntidadEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $empleado["entidadFederativaId"]) . "'
                    and ConsecutivoEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoId"]) . "'
                    and TipoEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaId"]) . "'
                    and idIutTarjeta='" . mysqli_real_escape_string($this->conn, $empleado["txtnumeroIut"]) . "'
                    and IdEstatusAsignacionEmpleado='1'";
                 // $this -> logger -> LogInfo ("Se ejecuto consulta como Despensa Consulta" . $sql3);
            $res3 = mysqli_query($this->conn, $sql3);
            while (($reg3 = mysqli_fetch_array($res3, MYSQLI_ASSOC))) {
    
                $IdNumeroTarjetaDespensa[] = $reg3;
            }
            $IdTarjetaDespensa = $IdNumeroTarjetaDespensa[0]["IdTarjetaDespensa"];
        }else{
            $IdTarjetaDespensa = "0"; 
        }
         if($empleado["antiguedadVacacionesS"] ==="1"){
            $estatusRevisionVac = "0";
         }else if($empleado["antiguedadVacacionesN"] ==="1"){
            $estatusRevisionVac = "1";
         }

         if($empleado["licenciaConducirpermanente"]==""){
            $empleado["licenciaConducirpermanente"]=0;
         }
       $sql = "INSERT INTO empleados (entidadFederativaId, empleadoConsecutivoId, empleadoCategoriaId, apellidoPaterno,
       apellidoMaterno, nombreEmpleado, fechaIngresoEmpleado,
       empleadoLocalizacion,  empleadoIdPuesto, empleadoIdPuntoServicio, empleadoIdTurno, empleadoIdGenero,claveINE,
       empleadoNumeroSeguroSocial,idBancoEmp, numeroCta, numeroCtaClabe, idTipoPuesto , idEntidadTrabajo,
       idEntidadResponsableAsistencia, consecutivoResponsableAsistencia, tipoResponsableAsistencia,
       empleadoLineaNegocioId, usuarioCapturaEmpleado, tipoPeriodo, fotoEmpleado, medioInformacionVacanteId,
       reclutadorEntidad,reclutadorConsecutivoId,reclutadorTipo,tesEmpleado,estaturaEmpleado,tallaCEmpleado,tallaPEmpleado,
       numCalzadoEmpleado,pesoEmpleado,empleadoFechaCaptura, empleadoEstatusId, estatusEmpleadoOperaciones,roloperativo,IdRolOperativoPlantillaEmp,foliopreseleccion,NumEmpleadoFirmaAltaEMp,ContraseniaEmpleadoFirmaAltaEMp,licenciaconducirpermanente,numlicencia,idHoario,contactoGif,correoGif,noGerenteRegAsignado,fechavigencialicencia,EstatusRevisionVacaciones,IdTarjetaDespensa) VALUES (
       '" . mysqli_real_escape_string($this->conn, $empleado["entidadFederativaId"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoId"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaId"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["apellidoPaterno"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["apellidoMaterno"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["nombreEmpleado"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["fechaIngresoEmpleado"]) . "'," .
       "'" . mysqli_real_escape_string($this->conn, $empleado["empleadoLocalizacion"]) . "'," .
       "'" . mysqli_real_escape_string($this->conn, $empleado["empleadoIdPuesto"]) . "'," .
       "'" . mysqli_real_escape_string($this->conn, $empleado["empleadoIdPuntoServicio"]) . "'," .   
       "'" . mysqli_real_escape_string($this->conn, $empleado["empleadoIdTurno"]) . "'," .
       "'" . mysqli_real_escape_string($this->conn, $empleado["empleadoIdGenero"]) . "'," .
       "'" . mysqli_real_escape_string($this->conn, $empleado["claveINE"]) . "'," .
       "'" . mysqli_real_escape_string($this->conn, $empleado["empleadoNumeroSeguroSocial"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["banco"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["numeroCta"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["numeroCtaClabe"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["idTipoPuesto"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["idEntidadTrabajo"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["idEntidadResponsableAsistencia"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["consecutivoResponsableAsistencia"]) . "', " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["tipoResponsableAsistencia"]) . "', " .
       "" . mysqli_real_escape_string($this->conn, $empleado["empleadoLineaNegocioId"]) . ", " .
       "'" . mysqli_real_escape_string($this->conn, $empleado["usuarioCapturaEmpleado"]) . "', " .
       "" . mysqli_real_escape_string($this->conn, $empleado["tipoPeriodo"]) . ", " .
       "'" . $this->safeValue($empleado["fotoEmpleado"]) . "'," .
       "'" . $this->safeValue($empleado["medioInformacionVacanteId"]) . "'," .
       "'" . $this->safeValue($empleado["reclutadorEntidad"]) . "'," .
       "'" . $this->safeValue($empleado["reclutadorConsecutivoId"]) . "'," .
       "'" . $this->safeValue($empleado["reclutadorTipo"]) . "'," .
       "'" . $this->safeValue($empleado["tesEmpleado"]) . "'," .
       "'" . $this->safeValue($empleado["estaturaEmpleado"]) . "'," .
       "'" . $this->safeValue($empleado["tallaCEmpleado"]) . "'," .
       "'" . $this->safeValue($empleado["tallaPEmpleado"]) . "'," .
       "'" . $this->safeValue($empleado["numCalzadoEmpleado"]) . "'," .
       "'" . $this->safeValue($empleado["pesoEmpleado"]) . "'," .
       " now(),1,1, '" . $this->safeValue($empleado["roloperativoTexto"]) . "', 
       '" . $this->safeValue($empleado["idRolOpertaivoPorPlantillaAlta"]) . "',
       '" . $this->safeValue($empleado["folioConsulta"]) . "' ,
       '" . $this->safeValue($empleado["NumeroAltEmpleado"]) . "' ,
       '" . $this->safeValue($empleado["ContraseniaAltEmpleado"]) . "' ,
       '" . $this->safeValue($empleado["licenciaConducirpermanente"]) . "',
       '" . $this->safeValue($empleado["numerolicencia"]) . "',
       '" . $this->safeValue($empleado["horarioAlta"]) . "',
       '" . $this->safeValue($empleado["txtContactoGifR"]) . "',
       '" . $this->safeValue($empleado["txtCorreoGifR"]) . "',
       '" . $this->safeValue($empleado["gerenteSup"]) . "'";
       if($empleado["inpfehavigencialicencia"]==""){ 
             $sql .= " , null,";
       }else{
             $sql .= " ,'" . $this->safeValue($empleado["inpfehavigencialicencia"]) . "',";
       }
       $sql .= " '" . $estatusRevisionVac . "',
       '" . $IdTarjetaDespensa . "')";
$this -> logger -> LogInfo ("Ejecutando SQL: empleados " . $sql);
       $res = mysqli_query($this->conn, $sql);
       if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}


public function throwExceptionFromErrNo($errno)
{
    $this->logger->LogError("Excepción para el errno de mysql : " . $errno);

    switch ($errno) {
            case 1062: // Duplicate entry
            throw new Exception("Uno de los valores que intenta registrar se duplica en la base de datos.");
            break;
            case 1064:
            throw new Exception("ERROR CRITICO. La base de datos no puede ejecutar la instruccion SQL. Error de sintaxis.");
            break;
            default:
            throw new Exception("(" . $errno . ") Error en base de datos no administrado.");
        }
    }

    public function traeCatalogoTipoPuestos()
    {
        $listaTipoPuestos = array();

        $sql = "SELECT idCategoria, descripcionCategoria FROM catalogocategoriastipopuestos";
        //$this -> logger -> LogInfo ("Ejecutando SQL: traeCatalogoTipoPuestos " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaTipoPuestos[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta catalogo listaTipoPuestos ".var_export ($listaTipoPuestos, true));
        return $listaTipoPuestos;
    }

    public function obtenerPosiblesJefesPorPuesto($puestoId)
    {
        $listaPosiblesJefesPorPuesto = array();

        $sql = " select concat( e.nombreEmpleado, \" \", e.apellidoPaterno, \" \", e.apellidoMaterno, \" (\", cp2.descripcionPuesto, \")\" ) AS nombre
        FROM puestojerarquia pj
        INNER JOIN catalogopuestos cp ON pj.idPuestoSuperior = cp.idPuesto
        INNER JOIN empleados e ON pj.idPuestoSuperior = e.empleadoIdPuesto
        INNER JOIN catalogopuestos cp2 ON empleadoIdPuesto=cp2.idPuesto
        WHERE pj.idPuesto = " . mysqli_real_escape_string($this->conn, $puestoId) . " order by e.nombreEmpleado asc";

        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaPosiblesJefesPorPuesto[] = $reg;
        }
        return $listaPosiblesJefesPorPuesto;
    }

    public function verificarDisponibilidadDeNumeroDeEmpleado($numeroEmpleado)
    {
        $empleado = array();

        try {

            $sql = "select e.numeroEmpleado, e.nombreEmpleado, e.apellidoPaterno, ApellidoMaterno from empleados e
            WHERE e.numeroEmpleado = '" . mysqli_real_escape_string($this->conn, $numeroEmpleado) . "'";

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $empleado[] = $reg;
            }
            return $empleado;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

    public function verificarNumeroCuentaDuplicado($numeroCuenta)
    {
        $empleado = array();

        try {

            $sql = "select apellidoPaterno,apellidoMaterno,nombreEmpleado from empleados
            WHERE numeroCta = '" . mysqli_real_escape_string($this->conn, $numeroCuenta) . "'";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaDuplicado " . $sql);
            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $empleado[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaDuplicado ".var_export ($empleado, true));
            return $empleado;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

    public function verificarNumeroCuentaClabeDuplicado($numeroCuentaClabe)
    {
        //$this -> logger -> LogInfo ("verificarNumeroCuentaClabeDuplicado en persistencia");
        $empleado = array();

        try {

            $sql = "select apellidoPaterno,apellidoMaterno,nombreEmpleado from empleados
            WHERE numeroCtaClabe = '" . mysqli_real_escape_string($this->conn, $numeroCuentaClabe) . "'";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);
            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $empleado[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));
            return $empleado;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

    public function verificarNumeroSeguroSocialDuplicado($numeroSeguroSocial)
    {
        $empleado = array();

        try {
            $sql = "select apellidoPaterno,apellidoMaterno,nombreEmpleado from empleados
            WHERE empleadoNumeroSeguroSocial = '" . mysqli_real_escape_string($this->conn, $numeroSeguroSocial) . "'";
            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroSeguroSocialDuplicado " . $sql);
            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $empleado[] = $reg;
            }
            return $empleado;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

    public function traeCatalogoEntidadesFederativas()
    {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
        $listaEnditadesFederativas = array();

        try {

            $sql = "Select idEntidadFederativa, nombreEntidadFederativa, claveEntidadF from entidadesfederativas where idEntidadFederativa!='50'";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaEnditadesFederativas[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
            return $listaEnditadesFederativas;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }
    public function traeCatalogoEntidadesFederativasLU($entidades)
    {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
        $listaEnditadesFederativas = array();

        try {

            $sql = "Select idEntidadFederativa, nombreEntidadFederativa, claveEntidadF from entidadesfederativas where";
            for($i=0;$i<count($entidades['entidadFederativaUsuario']);$i++){
                if(!is_array($entidades['entidadFederativaUsuario'])){
                    $entidadparaconsulta=$entidades['entidadFederativaUsuario'];
                }else{
                    $entidadparaconsulta=$entidades['entidadFederativaUsuario'][$i];
                }
                if($i==0){
                    $sql.=" ((idEntidadFederativa='" . mysqli_real_escape_string($this->conn, $entidadparaconsulta) . "')";  
                }else{
                    $sql.=" or (idEntidadFederativa='" . mysqli_real_escape_string($this->conn, $entidadparaconsulta) . "')";       
                }
            }
            $sql.=" )"; 
        
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaEnditadesFederativas[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
            return $listaEnditadesFederativas;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }
    public function traeCatalogoEntidadesFederativasaLaborar()
    {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
        $listaEnditadesFederativasaLaborar = array();

        try {

            $sql = "Select idEntidadFederativa, nombreEntidadFederativa, claveEntidadF from entidadesfederativas where idEntidadFederativa!='50'";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaEnditadesFederativasaLaborar[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
            return $listaEnditadesFederativasaLaborar;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }
    public function traecatalogomunicipios()
    {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
        $listaCatalogomunicipios = array();
        try {
            $sql = "Select idMunicipio, nombreMunicipio from catalogomunicipios";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaCatalogomunicipios[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
            return $listaCatalogomunicipios;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

    public function traeCatalogoEntidadesFederativasParaALmacen()
    {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
        $listaEnditadesFederativas = array();

        try {

            $sql = "Select idEntidadFederativa, nombreEntidadFederativa from entidadesfederativas";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaEnditadesFederativas[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
            return $listaEnditadesFederativas;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

    public function traerListaDeDepartamentos()
    {
        $listaDepartamentos = array();

        try {

            $sql = "select idDepto, nombreDepto from catalogodeptos where idDepto=25 or idDepto=9 or idDepto=28 or idDepto=27 or idDepto=2 or idDepto=29 or idDepto=11";

            //$this -> logger -> LogInfo("Ejecuntando Consulta traerListaDeDepartamentos " . $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaDepartamentos[] = $reg;
            }
            //$this -> logger ->LogInfo("valor del array traerListaDeDepartamentos". var_export($listaDepartamentos, true));
            return $listaDepartamentos;

        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR" . $e->getMessage());
        }
    }

    public function traerListaAsuntosPorDepartamento($departamentoId)
    {
        $listaAsuntos = array();

        try {
            $sql = "select idAsunto,descripcionAsunto,asuntoIdDepto from catalogoasuntos
            where asuntoIdDepto= " . mysqli_real_escape_string($this->conn, $departamentoId);

            //$this -> logger -> LogInfo("Ejecuntando en persistencia traerListaAsuntosPorDepartamento ". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaAsuntos[] = $reg;
            }

            //$this -> logger ->LogInfo("valor del array traerListaAsuntosPorDepartamento". var_export($listaAsuntos, true));
            return $listaAsuntos;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR" . $e->getMessage());
        }
    }

    public function traerListaIdentificaciones()
    {

        $listaIdentificaciones = array();

        try {

            $sql = "select idIdentificacion, nombreIdentifiacion from catalogoidentificacion";

            //$this -> logger -> LogInfo("ejecuntando traerListaIdentificaciones en persistencia" . $sql);

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaIdentificaciones[] = $reg;
            }

            //$this -> logger -> LogInfo("valor del array listaIdentificaciones". var_export($listaIdentificaciones,true));
            return $listaIdentificaciones;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR" . $e->getMessage());
        }
    }

    public function insertarVisitante($visitante)
    {

        //$this -> logger -> LogInfo ("Ejecutando. insertarVisitante en persistencia");

        $sql = "insert into visitantes(visitanteApPaterno, visitanteApMaterno, visitanteNombre, " .
        "  visitanteIdDepto, visitanteIdAsunto,visitanteIdIdentificacion,visitanteIdEstatus, visitanteEmpresa, horarioEntrada) " .
        "values ('" . mysqli_real_escape_string($this->conn, $visitante["visitanteApPaterno"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $visitante["visitanteApMaterno"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $visitante["visitanteNombre"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $visitante["visitanteIdDepto"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $visitante["visitanteIdAsunto"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $visitante["visitanteIdIdentificacion"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $visitante["visitanteIdEstatus"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $visitante["visitanteEmpresa"]) . "', " .
        " now())";

        //"'". mysqli_real_escape_string($this -> conn,  $visitante["horarioEntrada"])."')";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarVisitante como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traerListaVisitantesDelDia($inicio, $registrosPorPagina)
    {

        //$this -> logger -> LogInfo("Traer traerListaVisitantesDelDiaen presistencia");
        $listaVisitantesDelDia = array();
        try {

            $sql = "select v.idVisitante, v.visitanteApPaterno, v.visitanteApMaterno, v.visitanteNombre, cd.nombreDepto,
            ca.descripcionAsunto , v.horarioEntrada, ci.nombreIdentifiacion
            from visitantes v
            inner join catalogodeptos cd on v.visitanteIdDepto=cd.idDepto
            inner join catalogoasuntos ca on v.visitanteIdAsunto=ca.idAsunto
            inner join catalogoidentificacion ci on v.visitanteIdIdentificacion= ci.idIdentificacion
            where (v.visitanteIdEstatus=1 or v.visitanteIdEstatus=2 or v.visitanteIdEstatus=4) and
            day(v.horarioEntrada)= day(now()) and
            month(v.horarioEntrada)= month(now()) and
            year(v.horarioEntrada)= year(now()) order by v.horarioEntrada desc LIMIT " . mysqli_real_escape_string($this->conn, $inicio) . "," . mysqli_real_escape_string($this->conn, $registrosPorPagina) . "";

            //$this -> logger -> LogInfo ("ejecutando traerListaVisitantesDelDia en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaVisitantesDelDia[] = $reg;
            }
            //$this -> logger ->LogInfo("valor del array listaVisitantesDelDia". var_export($listaVisitantesDelDia, true));
            return $listaVisitantesDelDia;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR" . $e->getMessage());
        }
    }

    public function traerTotalDeVisitantes()
    {
        //$this -> logger -> LogInfo("Traer traerTotalDeVisitantes");

        try {

            $sql = "select v.idVisitante from visitantes v
            where (v.visitanteIdEstatus=1 or v.visitanteIdEstatus=2 or v.visitanteIdEstatus=4) and
            day(v.horarioEntrada)= day(now()) and
            month(v.horarioEntrada)= month(now()) and
            year(v.horarioEntrada)= year(now())";

            //$this -> logger -> LogInfo ("ejecutando traerTotalDeVisitantes en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            $totalVisitantes = mysqli_num_rows($res);

            //$this -> logger ->LogInfo("valor del totalVisitantes". var_export($totalVisitantes, true));
            return $totalVisitantes;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR" . $e->getMessage());
        }

    }

    public function traerUltimoNumeroEmpleadoRegistrado($entidad, $tipo)
    {

        //$this-> logger -> LogInfo("traerUltimoNumeroEmpleadoRegistrado");

        try {

            $sql = "select  LPAD(IF(MAX( empleadoConsecutivoId ) IS NULL , 0, MAX( convert(empleadoConsecutivoId,unsigned) ) + 1 ), 5, 0)  AS 'ultimoEmpleado' from empleados where
            entidadFederativaId = '" . mysqli_real_escape_string($this->conn, $entidad) . "' and " .
            " empleadoCategoriaId = '" . mysqli_real_escape_string($this->conn, $tipo) . "'";

           // $this -> logger -> LogInfo ("ejecutando traerUltimoNumeroEmpleadoRegistrado en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $numeroEmpleado = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoNumeroEmpleadoRegistrado ".var_export ($numeroEmpleado, true));

            return $numeroEmpleado;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function traerListaGeneros()
    {
        //$this-> logger -> LogInfo("traerListaGeneros");

        try {

            $sql = "select idGenero, descripcionGenero, nomenclaturaGenero from catalogogenero";

            //$this -> logger -> LogInfo ("ejecutando traerListaGeneros en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listaGeneros[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaGeneros ".var_export ($listaGeneros, true));

            return $listaGeneros;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }
    public function traerListaOficios()
    {
        //$this-> logger -> LogInfo("traerListaOficios");

        try {

            $sql = "select idOficio, descripcionOficio from catalogooficios";

            //$this -> logger -> LogInfo ("ejecutando traerListaOficios en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listaOficios[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaGeneros ".var_export ($listaOficios, true));

            return $listaOficios;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }
    public function traerListaTipoSangre()
    {
        //$this-> logger -> LogInfo("traerListaTipoSangre");

        try {

            $sql = "select  idTipoSangre, tipoSangre from catalogotiposangre order by tipoSangre asc";

            //$this -> logger -> LogInfo ("ejecutando traerListaTipoSangre en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listaTipoSangre[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaTipoSangre ".var_export ($listaTipoSangre, true));

            return $listaTipoSangre;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }
    public function traerListaTurnos()
    {
        //$this-> logger -> LogInfo("traerListaTurnos");

        try {

            $sql = "select idTipoTurno, descripcionTurno from catalogoturnos order by descripcionTurno asc";

            //$this -> logger -> LogInfo ("ejecutando traerListaTurnos en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listaTurnos[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaTurnos ".var_export ($listaTurnos, true));

            return $listaTurnos;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }

    public function traerListaVisitantesConDeptoRH()
    {
        //$this-> logger -> LogInfo("traerListaVisitantesConDeptoRH");

        $traerListaVisitantesConDeptoRH = array();
        try {

            $sql = "select v.idVisitante,  v.visitanteApPaterno, v.visitanteApMaterno, v.visitanteNombre ,ca.descripcionAsunto
            from visitantes v inner join catalogoasuntos ca on v.visitanteIdAsunto=ca.idAsunto where
            v.visitanteIdDepto=1 and day(v.horarioEntrada)= day(now()) and
            month(v.horarioEntrada)= month(now()) and
            year(v.horarioEntrada)= year(now()) and v.visitanteIdEstatus=1 order by v.horarioEntrada asc";

            //$this -> logger -> LogInfo ("ejecutando traerListaVisitantesConDeptoRH en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $traerListaVisitantesConDeptoRH[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la traerListaVisitantesConDeptoRH ".var_export ($traerListaVisitantesConDeptoRH, true));

        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

        return $traerListaVisitantesConDeptoRH;
    }

    public function actualizarEstatusVisitante($visitanteId, $estatusVisitante)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarEstatusVisitante en persistencia");

        $sql = "update visitantes set horarioSalida=now(), visitanteIdEstatus=" . mysqli_real_escape_string($this->conn, $estatusVisitante) . " where idVisitante=" . mysqli_real_escape_string($this->conn, $visitanteId) . "";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusVisitante como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            //$this -> logger -> LogInfo ("Ocurrio un error al actualizar Estatus Visitante.");
            //$this -> logger -> LogError ("ERRNO:" . mysqli_errno ($this -> conn) . " - " . mysqli_error ($this -> conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traerListaDocumentos()
    {
        //$this-> logger -> LogInfo("traerListaDocumentos");

        try {

            $sql = "select  idDocumento, nombreDocumento FROM catalogodocumentos order by orden";

            //$this -> logger -> LogInfo ("ejecutando traerListaDocumentos en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listaDocumentos[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la traerListaDocumentos ".var_export ($listaDocumentos, true));

            return $listaDocumentos;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }

    public function insertarEntregaDocumentos($documentacion)
    {

        //$this -> logger -> LogInfo ("Ejecutando. insertarEntregaDocumentos en persistencia");

        $sql = "INSERT INTO empleadosregistrodocumentacion (idEntidadEmpladoDocumento,empleadoConsecutivoDocumento,empleadoTipoDocumento, " .
        " idDocumento,idTipoDocumento,idEstatusDocumentos, fechaRegistro ) " .
        "values ('" . mysqli_real_escape_string($this->conn, $documentacion["idEntidadEmpladoDocumento"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $documentacion["empleadoConsecutivoDocumento"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $documentacion["empleadoTipoDocumento"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $documentacion["idDocumento"]) . "," .
        "" . mysqli_real_escape_string($this->conn, $documentacion["idTipoDocumento"]) . "," .
        "" . mysqli_real_escape_string($this->conn, $documentacion["idEstatusDocumentos"]) . "," .
        "now())";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarEntregaDocumentos como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traerListaVisitantesConFechaDe($dia, $mes, $anio)
    {

        //$this -> logger -> LogInfo("Traer lista de visitantes con fecha");
        $listaVisitantesConFechaDe = array();
        try {

            $sql = "select v.idVisitante, v.visitanteApPaterno, v.visitanteApMaterno, v.visitanteNombre, cd.nombreDepto,
            ca.descripcionAsunto , v.horarioEntrada, ci.nombreIdentifiacion, v.horarioSalida
            from visitantes v
            inner join catalogodeptos cd on v.visitanteIdDepto=cd.idDepto
            inner join catalogoasuntos ca on v.visitanteIdAsunto=ca.idAsunto
            inner join catalogoidentificacion ci on v.visitanteIdIdentificacion= ci.idIdentificacion
            where
            day(v.horarioEntrada)= " . mysqli_real_escape_string($this->conn, $dia) . " and
            month(v.horarioEntrada)= " . mysqli_real_escape_string($this->conn, $mes) . " and
            year(v.horarioEntrada)= " . mysqli_real_escape_string($this->conn, $anio) . " order by v.horarioEntrada desc ";

            //$this -> logger -> LogInfo ("ejecutando traerListaVisitantesConFechaDe en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaVisitantesConFechaDe[] = $reg;
            }
            //$this -> logger ->LogInfo("valor del array traerListaVisitantesConFechaDe". var_export($listaVisitantesConFechaDe, true));
            return $listaVisitantesConFechaDe;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR" . $e->getMessage());
        }
    }

    public function traerListaVisitantesConRangoDeFecha($dia1, $mes1, $anio1, $dia2, $mes2, $anio2)
    {

        //$this -> logger -> LogInfo("traerListaVisitantesConRangoDeFecha");
        $listaVisitantesConRangoFecha = array();
        try {

            $sql = "select v.idVisitante, v.visitanteApPaterno, v.visitanteApMaterno, v.visitanteNombre, cd.nombreDepto,
            ca.descripcionAsunto , v.horarioEntrada, ci.nombreIdentifiacion, v.horarioSalida
            from visitantes v
            inner join catalogodeptos cd on v.visitanteIdDepto=cd.idDepto
            inner join catalogoasuntos ca on v.visitanteIdAsunto=ca.idAsunto
            inner join catalogoidentificacion ci on v.visitanteIdIdentificacion= ci.idIdentificacion
            where
            day(v.horarioEntrada) between " . mysqli_real_escape_string($this->conn, $dia1) . " and  " . mysqli_real_escape_string($this->conn, $dia1) . "
            month(v.horarioEntrada) between" . mysqli_real_escape_string($this->conn, $mes1) . " and  " . mysqli_real_escape_string($this->conn, $mes2) . "
            year(v.horarioEntrada) between " . mysqli_real_escape_string($this->conn, $anio1) . " and  " . mysqli_real_escape_string($this->conn, $anio2) . " order by v.horarioEntrada desc ";

            //$this -> logger -> LogInfo ("ejecutando listaVisitantesConRangoFecha en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaVisitantesConRangoFecha[] = $reg;
            }
            //$this -> logger ->LogInfo("valor del array listaVisitantesConRangoFecha". var_export($listaVisitantesConRangoFecha, true));
            return $listaVisitantesConRangoFecha;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR" . $e->getMessage());
        }
    }

    public function traerListaTipoMovimientosFinancieros()
    {
        //$this-> logger -> LogInfo("traerListaTipoMovimientosFinancieros");

        try {

            $sql = "select idTipoMovimientoFinanciero, descripcionMovimientoFinanciero from catalogoTiposMovimientosFinancieros";

            //$this -> logger -> LogInfo ("ejecutando traerListaTipoMovimientosFinancieros en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $ListaTipoMovimientosFinancieros[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la ListaTipoMovimientosFinancieros ".var_export ($ListaTipoMovimientosFinancieros, true));

            return $ListaTipoMovimientosFinancieros;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }

    public function traerListaEmpresas()
    {
        //$this-> logger -> LogInfo("traerListaEmpresas");

        try {

            $sql = "select idEmpresa, nombreEmpresa from catalogoEmpresas";

            //$this -> logger -> LogInfo ("ejecutando traerListaEmpresas en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listaEmpresas[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaEmpresas ".var_export ($listaEmpresas, true));

            return $listaEmpresas;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }

    public function traerListaBancos()
    {
        //$this-> logger -> LogInfo("traerListaBancos");
        try {
            $sql = "select idBanco, nombreBanco from catalogoBancos";
            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaBancos[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));
            return $listaBancos;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function insertarSaldoInicial($saldo)
    {
        //$this -> logger -> LogInfo ("Ejecutando. insertarSaldoInicial en persistencia");
        $sql = "insert into libroSaldos(fechaSaldoInicial, idBancoSaldoInicial,saldoInicial, fechaRegistroSaldo) " .
        "values ('" . mysqli_real_escape_string($this->conn, $saldo["fechaSaldoInicial"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $saldo["idBancoSaldoInicial"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $saldo["saldoInicial"]) . "', " .
        " now())";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarSaldoInicial como" . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traerFecha()
    {
        //$this-> logger -> LogInfo("traerFecha");

        try {

            $sql = "select now() as 'fechaActual' ";

            //$this -> logger -> LogInfo ("ejecutando traerFecha en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $fechaActual[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor de traerFecha ".var_export ($fechaActual, true));

            return $fechaActual;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }

    public function traerListaTipoTransaccion()
    {
        //$this-> logger -> LogInfo("traerListaTipoTransaccion");

        try {

            $sql = "select idTipoTransaccion, descripcionTransaccion from catalogotipotransacciones";

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listaTipoTransacciones[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaTipoTransacciones ".var_export ($listaTipoTransacciones, true));

            return $listaTipoTransacciones;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function insertarMovimiento($movimiento)
    {

       // $this -> logger -> LogInfo ("valor del array de la movimiento".var_export ($movimiento, true));

        $this->logger->LogInfo("EJECUTANDO QUERY INSERTMOVIMIENTOS");
        $sql = "INSERT INTO libromovimientos (fechaMovimiento, idBancoM, beneficiario, concepto,  " .
        " idTipoTransaccionM, claveClasificacionM,idDepartamentoM, referencia, idEstatusM, fechaCaptura, idEmpresaM, monto, usuarioCaptura, idTipoMov, idLineaNeg, idEntidad,NumerodeCuenta,SubDepartamento,SubTotal,Descuento,TazadeIva,IvaRetenido) values ( " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["fechaMovimiento"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["idBancoM"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["beneficiario"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["concepto"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["idTipoTransaccionM"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["claveClasificacionM"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["idDepartamentoM"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["referencia"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["idEstatusM"]) . ", " .
        "now()," .
        "" . mysqli_real_escape_string($this->conn, $movimiento["idEmpresaM"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["monto"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["usuarioCaptura"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["idTipoMov"]) . ", " .
        "
        '" . mysqli_real_escape_string($this->conn, $movimiento["lineaNegocio"]) . "'," .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["entidad"]) . "'," .
        "" . mysqli_real_escape_string($this->conn, $movimiento["selectNumCuenta"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["subdepartamento"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["txtSubTotal"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["txtDescuento"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["txtIva"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["txtIvaRetenido"]) . ")";

        $this->logger->LogInfo("Se ejecuto consulta  insertarMovimiento como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            //$this->logger->LogInfo("Ocurrio un error al insertarMovimiento.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traeListaMovimientosPorDiaBanco($dia, $mes, $anio, $idBanco)
    {
        $listaMovimientosDiaBanco = array();

        $sql = "select lm.idMovimiento, lm.fechaMovimiento, lm.idBancoM ,cb.NombreBanco,lm.referencia, lm.beneficiario, lm.monto, ctmf.descripcionMovimientoFinanciero, lm.monto, ccc.descripcionClasificacion," .
        " cd.nombreDepto , lm.concepto, lm.idTipoMov, lm.idEstatusM, lm.idEmpresaM, lm.idTipoTransaccionM, lm.idDepartamentoM, lm.claveClasificacionM, cem.DescripcionEstatusMov from libromovimientos lm " .
        "left join catalogotiposmovimientosfinancieros ctmf on (ctmf.idTipoMovimientoFinanciero=lm.idTipoMov) " .
        "left join catalogoclaveclasificacion ccc on (ccc.idClasificacion=lm.claveClasificacionM) " .
        "left join catalogodeptos cd on (cd.idDepto=lm.idDepartamentoM) " .
        "left join catalogoestatusmovimientos cem on (lm.idEstatusM=cem.idEstatusMov) " .
        "left join catalogobancos cb on (cb.idBanco=lm.idBancoM) where " .
        "day(lm.fechaMovimiento)= " . mysqli_real_escape_string($this->conn, $dia) . " and
        month(lm.fechaMovimiento)= " . mysqli_real_escape_string($this->conn, $mes) . " and
        year(lm.fechaMovimiento)=" . mysqli_real_escape_string($this->conn, $anio) . " and
        lm.idBancoM=" . mysqli_real_escape_string($this->conn, $idBanco) . " and lm.idTipoMov <> 3 ";

        //$this -> logger -> LogInfo ("Ejecutando SQL: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaMovimientosDiaBanco[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consultamovimientosdiabanco".var_export ($listaMovimientosDiaBanco, true));
        return $listaMovimientosDiaBanco;
    }

    public function traerListaTipoMovimientosFinancierosSinObligaciones()
    {
        //$this-> logger -> LogInfo("ListaTipoMovimientosFinancieros");

        try {

            $sql = "select idTipoMovimientoFinanciero, descripcionMovimientoFinanciero from catalogoTiposMovimientosFinancieros where idTipoMovimientoFinanciero <> 3 ";

            //$this -> logger -> LogInfo ("ejecutando ListaTipoMovimientosFinancieros en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $ListaTipoMovimientosFinancieros[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la ListaTipoMovimientosFinancieros ".var_export ($ListaTipoMovimientosFinancieros, true));

            return $ListaTipoMovimientosFinancieros;

        } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }

    }

    /**
     * Obtiene el registro de un movimiento financiero a partir del id proporcionado
     */
    public function getMovimientoFinancieroById($movimientoId)
    {
        //$this-> logger -> LogInfo("getMovimientoFinancieroById");

        $sql = "select * from libromovimientos where idMovimiento = '" . mysqli_real_escape_string($this->conn, $movimientoId) . "'";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        //$this -> logger -> LogInfo ("Valor del movimiento ".var_export ($reg, true));

        return $reg;
    }

    public function actualizarMovimientoFinanciero($movimiento)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarMovimientoFinanciero en persistencia");

        $sql = "update libromovimientos " .
        "set fechaMovimiento='" . mysqli_real_escape_string($this->conn, $movimiento["fechaMovimiento"]) . "'," .
        "idBancoM=" . mysqli_real_escape_string($this->conn, $movimiento["idBancoM"]) . "," .
        "beneficiario='" . mysqli_real_escape_string($this->conn, $movimiento["beneficiario"]) . "'," .
        "concepto='" . mysqli_real_escape_string($this->conn, $movimiento["concepto"]) . "'," .
        "idTipoTransaccionM=" . mysqli_real_escape_string($this->conn, $movimiento["idTipoTransaccionM"]) . ", " .
        "idDepartamentoM=" . mysqli_real_escape_string($this->conn, $movimiento["idDepartamentoM"]) . ", " .
        "claveClasificacionM='" . mysqli_real_escape_string($this->conn, $movimiento["claveClasificacionM"]) . "', " .
        "referencia='" . mysqli_real_escape_string($this->conn, $movimiento["referencia"]) . "', " .
        "idEstatusM=" . mysqli_real_escape_string($this->conn, $movimiento["idEstatusM"]) . ", " .
        "idEmpresaM=" . mysqli_real_escape_string($this->conn, $movimiento["idEmpresaM"]) . ", " .
        "monto='" . mysqli_real_escape_string($this->conn, $movimiento["monto"]) . "', " .
        "usuarioCaptura='" . mysqli_real_escape_string($this->conn, $movimiento["usuarioCaptura"]) . "', " .
        "idTipoMov=" . mysqli_real_escape_string($this->conn, $movimiento["idTipoMov"]) . ", " .
        "fechaCaptura=NOW() " .
        "where idMovimiento=" . mysqli_real_escape_string($this->conn, $movimiento["idMovimiento"]) . "";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarMovimientoFinanciero como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizarMovimientoFinanciero.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function actualizarEstatusMovimientoFinanciero($movimiento)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarEstatusMovimientoFinanciero en persistencia");

        $sql = "update libromovimientos " .
        "set idEstatusM=" . mysqli_real_escape_string($this->conn, $movimiento["idEstatusM"]) . "," .
        "usuarioCaptura='" . mysqli_real_escape_string($this->conn, $movimiento["usuarioCaptura"]) . "', " .
        "fechaCaptura=NOW() " .
        "where idMovimiento=" . mysqli_real_escape_string($this->conn, $movimiento["idMovimiento"]) . "";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusMovimientoFinanciero como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizarEstatusMovimientoFinanciero.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traeListaMovimientosPorDiaBancoStoreProcedure($fecha, $bancoId, $empresaId)
    {
        $listaMovimientosDiaBanco = array();

        $sql = "call obtenerListaMovimientosFecha('" . mysqli_real_escape_string($this->conn, $fecha) . "'," . mysqli_real_escape_string($this->conn, $bancoId) . "," . mysqli_real_escape_string($this->conn, $empresaId) . ")";

        //$this -> logger -> LogInfo ("Ejecutando SQL: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaMovimientosDiaBanco[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la traeListaMovimientosPorDiaBancoStoreProcedure1  ".var_export ($listaMovimientosDiaBanco, true));
        return $listaMovimientosDiaBanco;
    }

    public function traerSaldosInicialesSistema($dia, $mes, $anio, $empresaId)
    {
        //$this-> logger -> LogInfo("traerSaldosInicialesSistema");

        try {

            $listaSaldosInicialesSistema = array();

            $sql = "select fechaSaldoInicialS, idBancoSaldoInicialS, saldoInicialS from libroSaldosSistema where
            day(fechaSaldoInicialS)= " . mysqli_real_escape_string($this->conn, $dia) . " and
            month(fechaSaldoInicialS)=" . mysqli_real_escape_string($this->conn, $mes) . " and
            year(fechaSaldoInicialS) = " . mysqli_real_escape_string($this->conn, $anio) . " and
            idEmpresaSaldo=" . mysqli_real_escape_string($this->conn, $empresaId) . "";

            //$this -> logger -> LogInfo ("ejecutando traerSaldosInicialesSistema en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listaSaldosInicialesSistema[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la traerSaldosInicialesSistema ".var_export ($listaSaldosInicialesSistema, true));

            return $listaSaldosInicialesSistema;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function traeListaMovimientosPorPeriodoBancoStoreProcedure($fecha1, $fecha2, $bancoId, $empresaId)
    {
        $listaMovimientosPeriodoBanco = array();

        $sql = "call obtenerListaMovimientosPeriodo('" . mysqli_real_escape_string($this->conn, $fecha1) . "', '" . mysqli_real_escape_string($this->conn, $fecha2) . "'," . mysqli_real_escape_string($this->conn, $bancoId) . "," . mysqli_real_escape_string($this->conn, $empresaId) . ")";

        //$this -> logger -> LogInfo ("Ejecutando SQL callobtenerListaMovimientosPeriodo: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaMovimientosPeriodoBanco[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la traeListaMovimientosPorPeriodoBancoStoreProcedure  ".var_export ($listaMovimientosPeriodoBanco, true));
        return $listaMovimientosPeriodoBanco;
    }

    /**
     * Recupera todos los beneficiarios que se han registrado en movimientos.
     */
    public function obtenerListaBeneficiarios()
    {
        //$this-> logger -> LogInfo("obtenerListaBeneficiarios");

        $listaBeneficiarios = array();

        $sql = "select distinct beneficiario from libromovimientos;";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaBeneficiarios[] = $reg;
        }

        // $this -> logger -> LogInfo ("valor del array de la listaBeneficiarios ".var_export ($listaBeneficiarios, true));

        return $listaBeneficiarios;
    }

    /**
     * Recupera todos los conceptos que se han registrado en movimientos.
     */
    public function obtenerListaConceptos()
    {
        //$this-> logger -> LogInfo("obtenerListaConceptos");

        $listaConceptos = array();

        $sql = "select distinct concepto from libromovimientos;";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaConceptos[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaConceptos ".var_export ($listaConceptos, true));

        return $listaConceptos;
    }

    public function insertaActualizaSaldoInicialProcedure($fecha, $bancoId, $idEmpresa, $saldo, $usuarioCaptura)
    {

        //$this -> logger -> LogInfo ("Ejecutando. insertaActualizaSaldoInicialProcedure en persistencia");

        $sql = "call inserta_actualiza_saldo_inicial_portal('" . mysqli_real_escape_string($this->conn, $fecha) . "'," . mysqli_real_escape_string($this->conn, $bancoId) . "," . mysqli_real_escape_string($this->conn, $idEmpresa) . ",'" . mysqli_real_escape_string($this->conn, $saldo) . "','" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "')";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertaActualizaSaldoInicialProcedure como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    /**
     * Busca si el numero de referencia de un movimiento ya existe.
     */
    public function existeReferenciaMovimiento($referencia)
    {
        //$this-> logger -> LogInfo("existeReferenciaMovimiento");

        $result = false;

        $sql = "select count(*) as existeReferencia from libromovimientos where referencia='" . mysqli_real_escape_string($this->conn, $referencia) . "'
        union 
        select count(*) as existeReferencia from libromovimientoscomprobaciones where referenciaCompro='" . mysqli_real_escape_string($this->conn, $referencia) . "'
        union
        select count(*) as existeReferencia from movimietoscobranza where referenciaMovCobra='" . mysqli_real_escape_string($this->conn, $referencia) . "'
        order by existeReferencia desc";
        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        if ($reg["existeReferencia"] > 0) {
            $result = true;
        }
        return $result;
    }

    /**
     * Obtiene el del tipo de movimiento por Id
     */
    public function getTipoTransaccionById($tipoMovimientoId)
    {
        //$this-> logger -> LogInfo("getTipoTransaccionById");

        $sql = "select * from catalogotipotransacciones where idTipoTransaccion='" . mysqli_real_escape_string($this->conn, $tipoMovimientoId) . "'";

        //$this -> logger -> LogInfo ("Ejecutando getTipoTransaccionById: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        //$this -> logger -> LogInfo ("Valor del tipo de transaccion ".var_export ($reg, true));

        return $reg;
    }

    public function traeListaMovimientosPorDiaGeneralStoreProcedure($fecha, $empresaId)
    {
        $listaMovimientosDiaGeneral = array();

        $sql = "call obtenerListaMovimientosGeneralesFecha('" . mysqli_real_escape_string($this->conn, $fecha) . "'," . mysqli_real_escape_string($this->conn, $empresaId) . ")";

        //$this -> logger -> LogInfo ("Ejecutando SQL traeListaMovimientosPorDiaGeneralStoreProcedure: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaMovimientosDiaGeneral[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la traeListaMovimientosPorDiaGeneralStoreProcedure  ".var_export ($listaMovimientosDiaGeneral, true));
        return $listaMovimientosDiaGeneral;
    }

    public function traeListaMovimientosPorPeriodoGeneralStoreProcedure($fecha1, $fecha2, $empresaId)
    {
        $listaMovimientosPeriodoGeneral = array();

        $sql = "call obtenerListaMovimientosGeneralesPeriodo('" . mysqli_real_escape_string($this->conn, $fecha1) . "', '" . mysqli_real_escape_string($this->conn, $fecha2) . "'," . mysqli_real_escape_string($this->conn, $empresaId) . ")";

        //$this -> logger -> LogInfo ("Ejecutando SQL traeListaMovimientosPorPeriodoGeneralStoreProcedure: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaMovimientosPeriodoGeneral[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la listaMovimientosPeriodoGeneral  ".var_export ($listaMovimientosPeriodoGeneral, true));
        return $listaMovimientosPeriodoGeneral;
    }

    public function crearTablaMovimientosTemp()
    {

        //$this -> logger -> LogInfo ("Ejecutando. crearTablaMovimientosTemp en persistencia");

        $sql = "CREATE TEMPORARY TABLE movimientosBancoTemp LIKE  libromovimientos";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  crearTablaMovimientosTemp como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al crearTablaMovimientosTemp.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function insertarMovimientoArchivoBanco($movimiento)
    {

        //$this -> logger -> LogInfo ("Ejecutando. insertarMovimientoArchivoBanco en persistencia");

        $sql = "INSERT INTO libromovimientosbanco (fechaMovimientoB, idBancoMB, conceptoMB,  referenciaMB, fechaCaptura, idEmpresaMB, montoMB, usuarioCapturaMB, idTipoMovB) values ( " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["fechaMovimiento"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["idBanco"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["concepto"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["referencia"]) . "', " .
        "NOW()," .
        "" . mysqli_real_escape_string($this->conn, $movimiento["idEmpresa"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["monto"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $movimiento["usuario"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $movimiento["idTipoMovimiento"]) . ");";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarMovimientoArchivoBanco como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertarMovimientoArchivoBanco.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }

        return ($res !== true) ? false : true;
    }

    public function insertarMovimientoArchivoBancoStore($movimiento)
    {

        //$this -> logger -> LogInfo ("Ejecutando. insertarMovimientoArchivoBancoStore en persistencia");

        $sql = "call insertarMovimientosArchivoBanco('" . mysqli_real_escape_string($this->conn, $movimiento["fechaMovimiento"]) . "'," .
        mysqli_real_escape_string($this->conn, $movimiento["idBanco"]) . ",'" .
        mysqli_real_escape_string($this->conn, $movimiento["concepto"]) . "','" .
        mysqli_real_escape_string($this->conn, $movimiento["referencia"]) . "'," .
        mysqli_real_escape_string($this->conn, $movimiento["idEmpresa"]) . ",'" .
        mysqli_real_escape_string($this->conn, $movimiento["monto"]) . "','" .
        mysqli_real_escape_string($this->conn, $movimiento["usuario"]) . "'," .
        mysqli_real_escape_string($this->conn, $movimiento["idTipoMovimiento"]) . ")";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarMovimientoArchivoBancoStore como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }

        return ($res !== true) ? false : true;
    }

    public function traeIngresosEgresos($mes, $anio, $empresaId)
    {
        $listaIngesosEgresos = array();

        $sql = "call obtenerIngresosEgresos1(" . mysqli_real_escape_string($this->conn, $mes) . ", " . mysqli_real_escape_string($this->conn, $anio) . "," . mysqli_real_escape_string($this->conn, $empresaId) . ")";

        //$this -> logger -> LogInfo ("Ejecutando SQL obtenerIngresosEgresos: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaIngesosEgresos[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la listaIngesosEgresos  ".var_export ($listaIngesosEgresos, true));
        return $listaIngesosEgresos;
    }

    public function obtenerListaPersonalActivo()
    {
        //$this-> logger -> LogInfo("obtenerListaEmpleadosActivos");

        $listaEmpleadosActivos = array();

        $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId, e.apellidoPaterno,
        e.apellidoMaterno, e.nombreEmpleado, e.fechaIngresoEmpleado ,e.empleadoNumeroSeguroSocial,e.empleadoEstatusId, e.numeroCta, e.numeroCtaClabe, e.empleadoIdPuntoServicio, e.empleadoLineaNegocioId,
        cp.descripcionPuesto, ctp.descripcionCategoria, ct.descripcionTurno ,
        cg.descripcionGenero, cee.descripcionEstatusEmpleado,
        ifnull(concat(dp.empleadoEntidadPersonal,dp.empleadoConsecutivoPersonal,dp.empleadoCategoriaPersonal) ,0) datoPersonal ,
        ifnull(concat(dir.entidadEmpleadoDirectorio,dir.consecutivoEmpleadoDirectorio,dir.categoriaEmpleadoDirectorio) , 0)  directorio,
        count(idDatoFamiliar) datoFamiliar
        from empleados e
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogocategoriastipopuestos ctp on (ctp.idCategoria=cp.puestoIdCategoria)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join catalogogenero cg on (cg.idGenero=e.empleadoIdGenero)
        left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
        left join datospersonales dp on ( e.entidadFederativaId= dp.empleadoEntidadPersonal and e.empleadoConsecutivoId=dp.empleadoConsecutivoPersonal and
        e.empleadoCategoriaId=dp.empleadoCategoriaPersonal)
        left join directorio dir on ( e.entidadFederativaId= dir.entidadEmpleadoDirectorio and e.empleadoConsecutivoId=dir.consecutivoEmpleadoDirectorio and
        e.empleadoCategoriaId=dir.categoriaEmpleadoDirectorio)
        left join datosfamiliares df on ( e.entidadFederativaId= df.idEntidadEmpleadoFamiliar and e.empleadoConsecutivoId=df.idConsecutivoEmpleadoFamiliar and
        e.empleadoCategoriaId=df.idCategoriaEmpleadoFamiliar)
        where
        e.empleadoEstatusId <>0
        group by entidadFederativaId, empleadoConsecutivoId, empleadoCategoriaId";

        //$this -> logger -> LogInfo ("Ejecutando obtenerListaEmpleadosActivos: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleadosActivos[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleadosActivos ".var_export ($listaEmpleadosActivos, true));

        return $listaEmpleadosActivos;
    }

    public function insertarCliente($cliente)
    {
        $sql = "insert into catalogoclientes(razonSocial, nombreComercial, PersonaFoM, rfcCliente, contactoCliente, telefonoFijoCliente, telefonoMovilCliente, correoCliente, claveClienteNomina, estatusCliente, personaCapturaCliente,  CodigoPostalCliente, AsentamientoCliente, EntidadCliente, MunicipioCliente, ColoniaCliente, CallePrincipaCliente, NumeroInterirCliente, NumeroExteriorCliente, PrimerCalleCliente, SegundaCalleCliente, fechaCapturaCliente) " .
        "values ('" . mysqli_real_escape_string($this->conn, $cliente["razonSocial"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["nombreComercial"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["Persona"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["rfcCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["contactoCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["telefonoFijoCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["telefonoMovilCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["correoCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["claveClienteNomina"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["estatusCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["personaCapturaCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["CpContrato"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["ColoniaCliente"]) . "', " . // se ingresa colonia ya que el asentamiento es una concatenacion de la entidad municipio y colonia
        "'" . mysqli_real_escape_string($this->conn, $cliente["EntidadCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["Municipio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["ColoniaCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["CallePrincipal"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["NumeroInteriro"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["NumeroExterior"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["Calle1"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["Calle2"]) . "', " .
        " now())";
        $this -> logger -> LogInfo ("Ejecutando insertarCliente: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar cliente.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
        $IdCLienteInsertado = array();
        $sql3 = "SELECT idCliente FROM catalogoclientes
                where claveClienteNomina='" . mysqli_real_escape_string($this->conn, $cliente["claveClienteNomina"]) . "'";

        $res3 = mysqli_query($this->conn, $sql3);
        while (($reg3 = mysqli_fetch_array($res3, MYSQLI_ASSOC))) {

            $IdCLienteInsertado[] = $reg3;
        }
        $IdClienteIn = $IdCLienteInsertado[0]["idCliente"];
        $sql1 = "insert into ContratosCLientes(IdClienteC, claveClienteNominaCliente, NumeroContrato, AnexoNumCliente, TipoContrato, ObjetoContrato, VigenciaAnios, ViegenciaMeses, FechaInicioC, FechaFinalC, RegistroPatronal, CodigoPostalC, Asentamiento, EntidadC, MunicipioC, ColoniaC, CallePrincipaC, NumeroInterirC, NumeroExteriorC, PrimerCalle, SegundaCalle, MontoContrato, NombreArchivo, RfcContratante, NombreContratante, PrimerApellidoContratante, SegundoApellidoContratante, CorreoContratante, TelefonoMovilContratante, TelefonoFijoContratante, UsuarioInsert, FechaInsert) " .
        "values ('" . mysqli_real_escape_string($this->conn, $IdClienteIn) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["claveClienteNomina"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["NumeroContrato"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["AnexoContrato"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["TipoContrato"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["ObjetoContrato"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["VigenciaAnio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["VigenciaMes"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["FechaInicioC"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["FechafinC"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["RegistroPatronalC"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["CpContrato"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["ColoniaCliente"]) . "', " . // se ingresa colonia ya que el asentamiento es una concatenacion de la entidad municipio y colonia
        "'" . mysqli_real_escape_string($this->conn, $cliente["EntidadCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["Municipio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["ColoniaCliente"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["CallePrincipal"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["NumeroInteriro"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["NumeroExterior"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["Calle1"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["Calle2"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["MontoContrato"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["ArchivoContrato"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["RfcContratante"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["NombreContratante"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["PrimerApellidoContratante"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["SegundoApellidoContratante"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["CorreoContratante"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["TelMovilContratante"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["TelFijoContratante"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $cliente["personaCapturaCliente"]) . "', " .
        " now())";
        $this -> logger -> LogInfo ("Ejecutando insertarContratosCLientes: " . $sql1);
        $res1 = mysqli_query($this->conn, $sql1);
        if ($res1 !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar cliente.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function existeRfcCliente($rfc)
    {
        //$this-> logger -> LogInfo("existeReferenciaMovimiento");

        $result = false;

        $sql = "select count(*) as existeRfc from catalogoclientes where rfcCliente='" . mysqli_real_escape_string($this->conn, $rfc) . "'";

        //$this -> logger -> LogInfo ("Ejecutando existeRfcCliente: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        if ($reg["existeRfc"] > 0) {
            $result = true;
        }

        //$this -> logger -> LogInfo ("El RFC '" . $rfc . "' " . ($result ? "existe" : "no existe"));

        return $result;
    }

    public function traeCatalogoClientesActivos()
    {
        //$this -> logger -> LogInfo ("traeCatalogoClientes en persistencia");
        $listaClientes = array();

        try {

            $sql = "Select idCliente,razonSocial, nombreComercial, claveClienteNomina from catalogoclientes order by razonSocial asc ";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoClientes en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaClientes[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la listaClientes ".var_export ($listaClientes, true));
            return $listaClientes;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }
     public function insertarPuntoServicio($puntoServicio)
    {

        //$this -> logger -> LogInfo ("Ejecutando. insertarPuntoServicio en persistencia");
        $sql = "insert into catalogopuntosservicios(puntoServicio,numeroCentroCosto, idEntidadPunto, esatusPunto, numeroOrden,
        usuarioCapturaPunto, idClientePunto, contactoFacturacion, telefonoFijoFacturacion, telefonoMovilFacturacion, correoFacturacion,
        contactoTesoreria, telefonoFijoTesoreria, telefonoMovilTesoreria, correoTesoreria,
        contactoOperativo, telefonoFijoOperativo, telefonoMovilOperativo, correoOperativo,fechaInicioServicio,terminoFacturacion,
        fechaTerminoServicio,cobraDescansos, cobraDiaFestivo, cobra31,latitudPunto,longitudPunto,nombrePuntoFacturacion,centroCostoFacturacion,turnosFlat,fechaCapturaPunto,idIncrementRegionPuntoServ,idLineaNegocioPunto,visiblerh,CodigoPostalPuntoS, AsentamientoPuntoS, EntidadPuntoS, MunicipioPuntoS, ColoniaPuntoS, CallePrincipaPuntoS, NumeroInterirPuntoS, NumeroExteriorPuntoS, PrimerCallePuntoS, SegundaCallePuntoS,cubredescanso,municipiodelegacion,unidad) 
        values ('" . mysqli_real_escape_string($this->conn, $puntoServicio["puntoServicio"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["numeroCentroCosto"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["idEntidadPunto"]) . "', 
        " . mysqli_real_escape_string($this->conn, $puntoServicio["esatusPunto"]) . ", 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["numeroOrden"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["usuarioCapturaPunto"]) . "', 
        " . mysqli_real_escape_string($this->conn, $puntoServicio["idClientePunto"]) . ", 
       
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["contactoFacturacion"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoFijoFacturacion"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoMovilFacturacion"]) . "',
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["correoFacturacion"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["contactoTesoreria"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoFijoTesoreria"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoMovilTesoreria"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["correoTesoreria"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["contactoOperativo"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoFijoOperativo"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoMovilOperativo"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["correoOperativo"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["fechaInicioServicio"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["terminoFacturacion"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["fechaTerminoServicio"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["cobraDescansos"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["cobraDiaFestivo"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["cobra31"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["latitudPunto"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["longitudPunto"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["puntoServicio"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["numeroCentroCosto"]) . "', 
        " . mysqli_real_escape_string($this->conn, $puntoServicio["turnoFlat"]) . ",
        now(), 
        " . mysqli_real_escape_string($this->conn, $puntoServicio["idRegion"]) . ", 
        " . mysqli_real_escape_string($this->conn, $puntoServicio["selLineaNegocio"]) . ", 
        " . mysqli_real_escape_string($this->conn, $puntoServicio["visiblerh"]) . ", 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["CpContrato"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["ColoniaCliente"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["EntidadCliente"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["Municipio"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["ColoniaCliente"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["CallePrincipal"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["NumeroInteriro"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["NumeroExterior"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["Calle1"]) . "', 
        '" . mysqli_real_escape_string($this->conn, $puntoServicio["Calle2"]) . "', 
        " . mysqli_real_escape_string($this->conn, $puntoServicio["cubredescanso"])    . " "; 
        if($puntoServicio["idClientePunto"]==43){
            $sql.=" ,'" . mysqli_real_escape_string($this->conn, $puntoServicio["selmunicipiowalmrt"]) . "',
            '" . mysqli_real_escape_string($this->conn, $puntoServicio["txtunidad"]) . "'";
        }else{
            $sql.=" ,NULL,
            NULL";
        }

        $sql.= ")";// '" . mysqli_real_escape_string($this->conn, $puntoServicio["direccionPuntoServicio"]) . "',  // se ingresa colonia ya que el asentamiento es una concatenacion de la entidad municipio y colonia

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarPuntoServicio como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertarPuntoServicio.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traerUltimoNumeroOrden()
    {

        //$this-> logger -> LogInfo("traerUltimoNumeroOrden.log");

        try {

            $sql = "select max(numeroOrden)+1 as numeroOrden from catalogopuntosservicios";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoNumeroOrden en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $numeroOrden = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoNumeroOrden ".var_export ($numeroOrden, true));

            return $numeroOrden;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function existeNumeroCentroCostoCliente($clienteId, $numeroCentroCosto)
    {
        //$this-> logger -> LogInfo("existeNumeroCentroCostoCliente");

        $result = false;

        $sql = "select count(idPuntoServicio) as puntoServicio from  catalogopuntosservicios
        WHERE idClientePunto = " . mysqli_real_escape_string($this->conn, $clienteId) . " and numeroCentroCosto='" . mysqli_real_escape_string($this->conn, $numeroCentroCosto) . "'";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        if ($reg["puntoServicio"] > 0) {
            $result = true;
        }

        //$this -> logger -> LogInfo ("numero de centro de costo '" . ($result ? "existe" : "no existe"));

        return $result;
    }

    public function existeNombrePuntoServicio($clienteId, $nombrePunto)
    {
        //$this-> logger -> LogInfo("existeNombrePuntoServicio");

        $result = false;

        $sql = "select count(idPuntoServicio) as puntoServicio from  catalogopuntosservicios
        WHERE idClientePunto = " . mysqli_real_escape_string($this->conn, $clienteId) . " and puntoServicio='" . mysqli_real_escape_string($this->conn, $nombrePunto) . "'";

        //$this -> logger -> LogInfo ("Ejecutando existeNombrePuntoServicio: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        if ($reg["puntoServicio"] > 0) {
            $result = true;
        }

        //$this -> logger -> LogInfo ("existeNombrePuntoServicio'" . ($result ? "existe" : "no existe"));

        return $result;
    }

    public function existeNumeroCliente($numeroCliente)
    {
        //$this-> logger -> LogInfo("existeNumeroCliente");

        $result = false;

        $sql = "select count(*) as existeNumeroCliente from catalogoclientes where claveClienteNomina='" . mysqli_real_escape_string($this->conn, $numeroCliente) . "'";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        if ($reg["existeNumeroCliente"] > 0) {
            $result = true;
        }

        //$this -> logger -> LogInfo ("El existeNumeroCliente'" . $numeroCliente . "' " . ($result ? "existe" : "no existe"));

        return $result;
    }

    public function traeCatalogoEstatusCartilla()
    {
        //$this -> logger -> LogInfo ("traeCatalogoEstatusCartilla en persistencia");
        $listaEstatusCartilla = array();

        try {

            $sql = "select idEstatusCartilla, descripcionEstatusCartilla from catalogoestatuscartilla";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEstatusCartilla en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaEstatusCartilla[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEstatusCartilla ".var_export ($listaEstatusCartilla, true));
            return $listaEstatusCartilla;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }
    public function traeCatalogoGradoEstudios()
    {
        //$this -> logger -> LogInfo ("traeCatalogoGradoEstudios en persistencia");
        $listaGradoEstudios = array();

        try {

            $sql = "select idGradoEstudios, descripcionGradoEstudios from catalogogradoestudios";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoGradoEstudios en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaGradoEstudios[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoGradoEstudios ".var_export ($listaGradoEstudios, true));
            return $listaGradoEstudios;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }
    public function traeCatalogoEstadoCivil()
    {
        //$this -> logger -> LogInfo ("traeCatalogoEstadoCivil en persistencia");
        $listaEstadoCivil = array();

        try {

            $sql = "select idEstadoCivil, descripcionEstadoCivil from catalogoestadocivil";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEstadoCivil en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaEstadoCivil[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEstadoCivil ".var_export ($listaEstadoCivil, true));
            return $listaEstadoCivil;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function traeCatalogoPaises()
    {
        //$this -> logger -> LogInfo ("traeCatalogoPaises en persistencia");
        $listaPaises = array();

        try {

            $sql = "select idPais,nombrePais,nacionalidad from catalogopaises";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoPaises en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaPaises[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoPaises ".var_export ($listaPaises, true));
            return $listaPaises;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function insertarDatosPersonalesEmpleado($datoPersonalEmpleado)
    {

        //$this -> logger -> LogInfo ("Ejecutando. insertarDatosPersonales en persistencia");

        $sql = "insert into datospersonales(empleadoEntidadPersonal,empleadoConsecutivoPersonal,empleadoCategoriaPersonal,
        fechaNacimiento,edadEmp,paisNacimientoId,entidadNacimientoId,municipioNacimientoId,curpEmpleado,rfcEmpleado,estadoCivilId,
        gradoEstudiosId,tipoSangreId,oficioId,estatusCartillaId,numeroCartilla, usuarioCapturaDatoPersonal, fechaCapturaDatoPersonal)
        values ( " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["empleadoEntidadPersonal"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["empleadoConsecutivoPersonal"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["empleadoCategoriaPersonal"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["fechaNacimiento"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["edad"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["paisNacimientoId"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["entidadNacimientoId"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["municipioNacimientoId"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["curpEmpleado"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["rfcEmpleado"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["estadoCivilId"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["gradoEstudiosId"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["tipoSangreId"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["oficioId"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["estatusCartillaId"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["numeroCartilla"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datoPersonalEmpleado["usuarioCapturaDatoPersonal"]) . "', " .

        " now())";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarDatosPersonalesEmpleado como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertarDatosPersonalesEmpleado.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function existeCurpEmpleado($curpEmp)
    {
        //$this-> logger -> LogInfo("existeCurpEmpleado");

        $result = false;

        $sql = "select count(*) as existeCurpEmpleado from datospersonales where curpEmpleado='" . mysqli_real_escape_string($this->conn, $curpEmp) . "'";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        if ($reg["existeCurpEmpleado"] > 0) {
            $result = true;
        }

        //$this -> logger -> LogInfo ("el existeCurpEmpleado '" . $curpEmp . "' " . ($result ? "existe" : "no existe"));

        return $result;
    }

    public function getEmpleadobyCurp($curp)
    {
        //$this-> logger -> LogInfo("getEmpleadobyCurp");

        $sql = "select concat_ws('-', empleadoEntidadPersonal,empleadoConsecutivoPersonal,empleadoCategoriaPersonal) as nmeroEmpleado,
        curpEmpleado from datospersonales where curpEmpleado='" . mysqli_real_escape_string($this->conn, $curp) . "'";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        //$this -> logger -> LogInfo ("Valor del empleado ".var_export ($reg, true));

        return $reg;
    }

    public function existeRfcEmpleado($rfcEmp)
    {
        //$this-> logger -> LogInfo("existeRfcEmpleado");

        $result = false;

        $sql = "select count(*) as existeRfcEmpleado from datospersonales where rfcEmpleado='" . mysqli_real_escape_string($this->conn, $rfcEmp) . "'";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        if ($reg["existeRfcEmpleado"] > 0) {
            $result = true;
        }

        //$this -> logger -> LogInfo ("el existeRfcEmpleado '" . $rfcEmp . "' " . ($result ? "existe" : "no existe"));

        return $result;
    }

    public function getEmpleadobyRfc($rfc)
    {
        //$this-> logger -> LogInfo("getEmpleadobyRfc");

        $sql = "select concat_ws('-', empleadoEntidadPersonal,empleadoConsecutivoPersonal,empleadoCategoriaPersonal) as nmeroEmpleado,
        rfcEmpleado from datospersonales where rfcEmpleado='" . mysqli_real_escape_string($this->conn, $rfc) . "'";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        //$this -> logger -> LogInfo ("Valor del empleado ".var_export ($reg, true));

        return $reg;
    }

    public function obtenerDireccionPorCodigoPostal($codigoPostal)
    {
        //$this-> logger -> LogInfo("obtenerDireccionPorCodigoPostal");

        $listaDirecciones = array();

        $sql = "select*, a. idAsentamiento, a.nombreAsentamiento, a.codigoPostalAsentamiento,
        a.asentamientoTipo, cta.nombreTipoAsentamiento, a.municipioAsentamiento, cm.nombreMunicipio , cm.idEstado, ef.nombreEntidadFederativa
        from asentamientos a
        left join catalogotiposasentamientos cta on (a.asentamientoTipo=cta.idTipoAsentamiento)
        left join catalogomunicipios cm on (a.municipioAsentamiento=cm.idMunicipio)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=cm.idEstado)
        where a.codigoPostalAsentamiento='" . mysqli_real_escape_string($this->conn, $codigoPostal) . "'";

        //$this -> logger -> LogInfo ("Ejecutando listaDirecciones: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaDirecciones[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaDirecciones ".var_export ($listaDirecciones, true));

        return $listaDirecciones;
    }

    public function traeCatalogoClientes()
    {
        //$this -> logger -> LogInfo ("traeCatalogoClientes en persistencia");
        $listaClientes = array();

        try {

            $sql = "SELECT *
                    FROM catalogoclientes cc
                    left join entidadesfederativas ef ON (cc.EntidadCliente = ef.idEntidadFederativa)
                    left join catalogomunicipios cm ON (cc.MunicipioCliente =cm.idMunicipio)
                    left join asentamientos ca ON (cc.ColoniaCliente =ca.idAsentamiento)  order by razonSocial asc";

            //$this -> logger -> LogInfo ("ejecutando traeCatalogoClientes en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaClientes[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la listaClientes ".var_export ($listaClientes, true));
            return $listaClientes;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function obtenerMunicipiosPorEntidad($idEntidad)
    {
        //$this-> logger -> LogInfo("obtenerMunicipiosPorEntidadNacimiento");

        $listaMunicipios = array();

        $sql = "SELECT cm.idMunicipio, cm.idEstado, cm.nombreMunicipio,ef.claveEntidadF
        from catalogomunicipios cm
        left join entidadesfederativas ef
        on cm.idEstado=ef.idEntidadFederativa
        where cm.idEstado='" . mysqli_real_escape_string($this->conn, $idEntidad) . "' order by nombreMunicipio";

        //$this -> logger -> LogInfo ("Ejecutando listaMunicipios: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaMunicipios[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaMunicipios ".var_export ($listaMunicipios, true));

        return $listaMunicipios;
    }

    public function insertarDatosDireccion($datosDireccion)
    {

        //$this -> logger -> LogInfo ("Ejecutando. insertarDatosDireccion en persistencia");

        $sql = "insert into directorio (entidadEmpleadoDirectorio, consecutivoEmpleadoDirectorio, categoriaEmpleadoDirectorio, idAsentamientoDireccion,
        calle, numeroExterior, numeroInterior, telefonoFijoEmpleado, telefonoMovilEmpleado,correoEmpleado,idUnidadMedicaAsignada, usuarioCapturaDireccion, fechaCapturaDireccion)
        values ( " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["entidadEmpleadoDirectorio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["consecutivoEmpleadoDirectorio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["categoriaEmpleadoDirectorio"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $datosDireccion["idAsentamientoDireccion"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["calle"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["numeroExterior"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["numeroInterior"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["telefonoFijoEmpleado"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["telefonoMovilEmpleado"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["correoEmpleado"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["idUnidadMedicaAsignada"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["usuarioCapturaDireccion"]) . "', " .
        " now())";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarDatosDireccion como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertarDatosDireccion.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function insertarDatosDireccionSinUmf($datosDireccion)
    {
        //$this -> logger -> LogInfo ("Ejecutando. insertarDatosDireccionSinUmf en persistencia");
        $sql = "insert into directorio (entidadEmpleadoDirectorio, consecutivoEmpleadoDirectorio, categoriaEmpleadoDirectorio, idAsentamientoDireccion,
        calle, numeroExterior, numeroInterior, telefonoFijoEmpleado, telefonoMovilEmpleado,correoEmpleado,
        usuarioCapturaDireccion, fechaCapturaDireccion)
        values ( " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["entidadEmpleadoDirectorio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["consecutivoEmpleadoDirectorio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["categoriaEmpleadoDirectorio"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $datosDireccion["idAsentamientoDireccion"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["calle"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["numeroExterior"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["numeroInterior"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["telefonoFijoEmpleado"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["telefonoMovilEmpleado"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["correoEmpleado"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosDireccion["usuarioCapturaDireccion"]) . "', " .
        " now())";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarDatosDireccionSinUmf como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertarDatosDireccionSinUmf.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traeCatalogoParentescos()
    {
        //$this -> logger -> LogInfo ("traeCatalogoParentescos en persistencia");
        $listaParentescos = array();

        try {

            $sql = "select idParentesco, descripcionParentesco from catalogoparentescos where mostrarBeneficiario=1";

            //$this -> logger -> LogInfo ("ejecutando traeCatalogoParentescos en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaParentescos[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la listaParentescos ".var_export ($listaParentescos, true));
            return $listaParentescos;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function insertarDatosFamiliares($datosFamiliares)
    {

        //$this -> logger -> LogInfo ("Ejecutando. insertarDatosFamiliares en persistencia");

        $sql = "insert into datosfamiliares(idEntidadEmpleadoFamiliar,idConsecutivoEmpleadoFamiliar,
        idCategoriaEmpleadoFamiliar,nombreFamiliar,idParentescoFamiliar,beneficiario, usuarioCapturaDatoFamiliar, fechaCapturaDatoFamiliar)
        values ( " .
        "'" . mysqli_real_escape_string($this->conn, $datosFamiliares["idEntidadEmpleadoFamiliar"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosFamiliares["idConsecutivoEmpleadoFamiliar"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosFamiliares["idCategoriaEmpleadoFamiliar"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosFamiliares["nombreFamiliar"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $datosFamiliares["idParentescoFamiliar"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $datosFamiliares["beneficiario"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $datosFamiliares["usuarioCapturaDatoFamiliar"]) . "', " .
        " now())";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarDatosFamiliares como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertarDatosFamiliares.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }
// Ya fue modificado
public function obtenerEmpleadoPorId($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo,$usuario) 
    {    
        $empleado = array();
        $sql = "select efn.claveEntidadF,e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId, e.apellidoPaterno, e.empleadoIdTurno,e.empleadoIdGenero,
        e.fotoEmpleado,
        e.apellidoMaterno, e.nombreEmpleado, e.fechaIngresoEmpleado ,e.empleadoNumeroSeguroSocial,e.empleadoEstatusId,di.empleadoEstatusImss, e.numeroCta, e.numeroCtaClabe, e.tesEmpleado, e.estaturaEmpleado, e.tallaCEmpleado, e.tallaPEmpleado, e.numCalzadoEmpleado, e.pesoEmpleado,
        e.idTipoPuesto, e.empleadoIdPuesto, e.idEntidadTrabajo,  e.empleadoIdPuntoServicio, e.empleadoLineaNegocioId,cps.puntoServicio,
        e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia, e.fechaBajaEmpleado,
        cp.descripcionPuesto, ctp.descripcionCategoria, ct.descripcionTurno ,
        cg.descripcionGenero, cee.descripcionEstatusEmpleado,cei.descripcionEstatusImss,
        ifnull(concat(dp.empleadoEntidadPersonal,dp.empleadoConsecutivoPersonal,dp.empleadoCategoriaPersonal) ,0) datoPersonal ,DATEDIFF(e.fechaIngresoEmpleado,dp.fechaNacimiento) as 'diasEdad',
        dp.fechaNacimiento, dp.paisNacimientoId,cpn.nombrePais,cpn.nacionalidad ,dp.entidadNacimientoId,
        efn.nombreEntidadFederativa as 'entidadNacimiento', dp.municipioNacimientoId,cmn.nombreMunicipio as 'municipioNacimiento', dp.curpEmpleado, dp.rfcEmpleado,
        dp.estadoCivilId,cedoc.descripcionEstadoCivil, dp.gradoEstudiosId,cge.descripcionGradoEstudios ,dp.tipoSangreId,cts.tipoSangre, dp.oficioId, co.descripcionOficio,
        dp.estatusCartillaId, dp.numeroCartilla, a.codigoPostalAsentamiento, a.municipioAsentamiento,
        ifnull(concat(dir.entidadEmpleadoDirectorio,dir.consecutivoEmpleadoDirectorio,dir.categoriaEmpleadoDirectorio) , 0)  directorio,
        dir.idAsentamientoDireccion,cta.nombreTipoAsentamiento ,a.nombreAsentamiento, cma.nombreMunicipio, a.codigoPostalAsentamiento, ef.nombreEntidadFederativa,
        dir.calle, dir.numeroExterior, dir.numeroInterior, dir.telefonoFijoEmpleado, dir.telefonoMovilEmpleado, dir.correoEmpleado, dir.idUnidadMedicaAsignada,
        cum.idMunicipioUnidad, cum.nombreUnidad, cum.domicilioUnidad, cum.codigoPostalUnidad,
        count(nombreFamiliar) datoFamiliar
        ,e.tipoPeriodo
        ,e.fotoFirma
        ,cc.idCliente 
        ,cc.razonSocial
        ,e.estatusEmpleadoOperaciones
        ,e.medioInformacionVacanteId
        ,e.reclutadorEntidad 
        ,e.reclutadorConsecutivoId
        ,e.reclutadorTipo
        , concat_ws('-',e.reclutadorEntidad,e.reclutadorConsecutivoId,e.reclutadorTipo) as reclutadorId
        , concat_ws(' ',r.apellidoPaterno,r.apellidoMaterno,r.nombreEmpleado) as nombreReclutador
        , di.fechaImss
        , di.fechaBajaImss
        , di.salarioDiario
        ,di.idTxtImssDatosImss
        ,e.roloperativo
        ,e.foliopreseleccion
        ,e.numlicencia
        ,e.fechavigencialicencia
        ,e.licenciaconducirpermanente,eft.nombreEntidadFederativa as nombreEntidadFederativa1, def.DeudaEmp,p.requisicionId,spp.rolOperativoPlantilla,spp.IdRolOperativoPlantilla,e.IdRolOperativoPlantillaEmp,Des.idIutTarjeta,
        Des.FechaASignacionEmpleado,f.apellidoPaterno as ApellidoPSup,f.apellidoMaterno as ApellidoMSup, f.nombreEmpleado as NombreSup,Des.idEntidadAsignada as EntidadTarjeta,Des.idEntidadAsignada as idEntidadTarjeta,e.empleadoLocalizacion, efContrata.nombreEntidadFederativa as entidadContratacion,dp.edadEmp,be.idCuentaBanco,be.nombreBanco,e.claveINE,e.contactoGif,e.correoGif,di.registroPatronal,spp.servicioPlantillaId,cln.descripcionLineaNegocio,e.idHoario,e.noGerenteRegAsignado
        from empleados e
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogocategoriastipopuestos ctp on (ctp.idCategoria=cp.puestoIdCategoria)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join catalogogenero cg on (cg.idGenero=e.empleadoIdGenero)
        left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
        left join datospersonales dp on ( e.entidadFederativaId= dp.empleadoEntidadPersonal and e.empleadoConsecutivoId=dp.empleadoConsecutivoPersonal and
        e.empleadoCategoriaId=dp.empleadoCategoriaPersonal)
        left join catalogopaises cpn on (cpn.idPais =dp.paisNacimientoId )
        left join entidadesfederativas efn on (efn.idEntidadFederativa =dp.entidadNacimientoId )
        left join catalogomunicipios cmn on (cmn.idMunicipio =dp.municipioNacimientoId )
        left join catalogoestadocivil cedoc on (cedoc.idEstadoCivil=dp.estadoCivilId)
        left join catalogogradoestudios cge on (cge.idGradoEstudios=dp.gradoEstudiosId)
        left join catalogotiposangre cts on (cts.idTipoSangre=dp.tipoSangreId)
        left join catalogooficios co on (co.idOficio=dp.oficioId)
        left join catalogoestatuscartilla cec on (cec.idEstatusCartilla=dp.estatusCartillaId)
        left join directorio dir on ( e.entidadFederativaId= dir.entidadEmpleadoDirectorio and e.empleadoConsecutivoId=dir.consecutivoEmpleadoDirectorio and
        e.empleadoCategoriaId=dir.categoriaEmpleadoDirectorio)
        left join asentamientos a on (dir.idAsentamientoDireccion=a.idAsentamiento)
        left join catalogomunicipios cma on (cma.idMunicipio=a.municipioAsentamiento)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=cma.idEstado)
        left  join catalogotiposasentamientos cta on (cta.idTipoAsentamiento=a.asentamientoTipo)
        left join catalogounidadesmedicas cum on (cum.idUnidadMedica=dir.idUnidadMedicaAsignada)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
        left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
        left join datosfamiliares df on ( e.entidadFederativaId= df.idEntidadEmpleadoFamiliar and e.empleadoConsecutivoId=df.idConsecutivoEmpleadoFamiliar and
        e.empleadoCategoriaId=df.idCategoriaEmpleadoFamiliar)
        left join empleados r on(r.entidadFederativaId=e.reclutadorEntidad and r.empleadoConsecutivoId=e.reclutadorConsecutivoId and r.empleadoCategoriaId=e.reclutadorTipo)
        left join datosimss di on ( e.entidadFederativaId= di.empladoEntidadImss and e.empleadoConsecutivoId=di.empleadoConsecutivoImss and
        e.empleadoCategoriaId=di.empleadoCategoriaImss)
        left join catalogoestatusimss cei on (di.empleadoEstatusImss=cei.idEstatusImss)
        left join entidadesfederativas eft on (eft.idEntidadFederativa =e.idEntidadTrabajo)
        left join deudasempleadosfiniquito def on (e.entidadFederativaId=def.EntEmpD and e.empleadoConsecutivoId= def.ConEmpD and e.empleadoCategoriaId= def.CatEmpD)
        left join plantilla p on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId= p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId= p.empleadoCategoriaPlantilla)
        left join servicios_plantillas spp ON (p.requisicionId=spp.servicioPlantillaId)
        left join TarjetaDespensa Des on (e.IdTarjetaDespensa=Des.IdTarjetaDespensa)
        left join entidadesfederativas eftd on (eftd.idEntidadFederativa =Des.idEntidadAsignada)
        left join entidadesfederativas efContrata on (efContrata.idEntidadFederativa =e.empleadoLocalizacion)
        left join bancos_empresa be on (be.idCuentaBanco =e.idBancoEmp)
        left join empleados f on ((concat_ws('-',f.entidadFederativaId,f.empleadoConsecutivoId,f.empleadoCategoriaId)) = (Des.NumeroFirmaAsignoAElemento))
        left join catalogolineanegocio cln on (cln.idLineaNegocio=e.empleadoLineaNegocioId)
        where (e.entidadFederativaId = '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "') and " .
        "(e.empleadoConsecutivoId = '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "') and " .
        "(e.empleadoCategoriaId = '" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'";
        if($usuario["rol"]=="Lider Unidad" || $usuario["rol"]=="Consulta Rh"){
           $sql.=") and";
           for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
              if(!is_array($usuario['lineaNegocioUsuario'])){
                  $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
              }else{
                  $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
              }  
              for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                  if(!is_array($usuario['entidadFederativaUsuario'])){
                      $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                  }else{
                      $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                  }  
                  if(($i==0) && ($j==0)){
                      $sql.=" ((e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";    
                  }else{
                      $sql.=" or (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";       
                  }
              }
            }  
        }
    $sql.=") group by entidadFederativaId, empleadoConsecutivoId , empleadoCategoriaId";
        $this -> logger -> LogInfo ("Ejecutando obtenerEmpleadoPorId aaaa: " . $sql);

    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $empleado[] = $reg;
    }
    return $empleado;
}

public function obtenerEmpleadoPorNombre($nombre,$usuario)
{
        //$this-> logger -> LogInfo("obtenerEmpleadoPorNombre");

    $listaEmpleados = array();

    $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId, e.apellidoPaterno, e.empleadoIdTurno,e.empleadoIdGenero,
    e.apellidoMaterno, e.nombreEmpleado, e.fechaIngresoEmpleado ,e.empleadoNumeroSeguroSocial,e.empleadoEstatusId,di.empleadoEstatusImss,e.numeroCta, e.numeroCtaClabe, e.tesEmpleado, e.estaturaEmpleado, e.tallaCEmpleado,e.tallaPEmpleado, e.numCalzadoEmpleado, e.pesoEmpleado,
    e.idTipoPuesto, e.empleadoIdPuesto, e.idEntidadTrabajo,  e.empleadoIdPuntoServicio, e.empleadoLineaNegocioId,
    e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia,
    cp.descripcionPuesto, ctp.descripcionCategoria, ct.descripcionTurno ,
    cg.descripcionGenero, cee.descripcionEstatusEmpleado,cei.descripcionEstatusImss,
    ifnull(concat(dp.empleadoEntidadPersonal,dp.empleadoConsecutivoPersonal,dp.empleadoCategoriaPersonal) ,0) datoPersonal ,
    DATEDIFF(e.fechaIngresoEmpleado,dp.fechaNacimiento) as 'diasEdad',
    dp.fechaNacimiento, dp.paisNacimientoId,cpn.nombrePais,cpn.nacionalidad ,dp.entidadNacimientoId,efn.nombreEntidadFederativa as 'entidadNacimiento',
    dp.municipioNacimientoId,cmn.nombreMunicipio as 'municipioNacimiento', dp.curpEmpleado, dp.rfcEmpleado,
    dp.estadoCivilId,cedoc.descripcionEstadoCivil, dp.gradoEstudiosId,cge.descripcionGradoEstudios ,dp.tipoSangreId,cts.tipoSangre, dp.oficioId, co.descripcionOficio,
    dp.estatusCartillaId, dp.numeroCartilla, a.codigoPostalAsentamiento, a.municipioAsentamiento,
    ifnull(concat(dir.entidadEmpleadoDirectorio,dir.consecutivoEmpleadoDirectorio,dir.categoriaEmpleadoDirectorio) , 0)  directorio,
    dir.idAsentamientoDireccion,cta.nombreTipoAsentamiento ,a.nombreAsentamiento, cma.nombreMunicipio, a.codigoPostalAsentamiento, ef.nombreEntidadFederativa,
    dir.calle, dir.numeroExterior, dir.numeroInterior, dir.telefonoFijoEmpleado, dir.telefonoMovilEmpleado, dir.correoEmpleado, dir.idUnidadMedicaAsignada,
    cum.idMunicipioUnidad, cum.nombreUnidad, cum.domicilioUnidad, cum.codigoPostalUnidad,
    count(nombreFamiliar) datoFamiliar,
    e.tipoPeriodo,e.roloperativo,e.foliopreseleccion,eft.nombreEntidadFederativa as nombreEntidadFederativa1, def.DeudaEmp,p.requisicionId
    from empleados e
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogocategoriastipopuestos ctp on (ctp.idCategoria=cp.puestoIdCategoria)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogogenero cg on (cg.idGenero=e.empleadoIdGenero)
    left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
    left join datospersonales dp on ( e.entidadFederativaId= dp.empleadoEntidadPersonal and e.empleadoConsecutivoId=dp.empleadoConsecutivoPersonal and
    e.empleadoCategoriaId=dp.empleadoCategoriaPersonal)
    left join catalogopaises cpn on (cpn.idPais =dp.paisNacimientoId )
    left join entidadesfederativas efn on (efn.idEntidadFederativa =dp.entidadNacimientoId )
    left join catalogomunicipios cmn on (cmn.idMunicipio =dp.entidadNacimientoId )
    left join catalogoestadocivil cedoc on (cedoc.idEstadoCivil=dp.estadoCivilId)
    left join catalogogradoestudios cge on (cge.idGradoEstudios=dp.gradoEstudiosId)
    left join catalogotiposangre cts on (cts.idTipoSangre=dp.tipoSangreId)
    left join catalogooficios co on (co.idOficio=dp.oficioId)
    left join catalogoestatuscartilla cec on (cec.idEstatusCartilla=dp.estatusCartillaId)
    left join directorio dir on ( e.entidadFederativaId= dir.entidadEmpleadoDirectorio and e.empleadoConsecutivoId=dir.consecutivoEmpleadoDirectorio and
    e.empleadoCategoriaId=dir.categoriaEmpleadoDirectorio)
    left join asentamientos a on (dir.idAsentamientoDireccion=a.idAsentamiento)
    left join catalogomunicipios cma on (cma.idMunicipio=a.municipioAsentamiento)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=cma.idEstado)
    left  join catalogotiposasentamientos cta on (cta.idTipoAsentamiento=a.asentamientoTipo)
    left join catalogounidadesmedicas cum on (cum.idUnidadMedica=dir.idUnidadMedicaAsignada)
    left join datosfamiliares df on ( e.entidadFederativaId= df.idEntidadEmpleadoFamiliar and e.empleadoConsecutivoId=df.idConsecutivoEmpleadoFamiliar and
    e.empleadoCategoriaId=df.idCategoriaEmpleadoFamiliar)
    left join datosimss di on ( e.entidadFederativaId= di.empladoEntidadImss and e.empleadoConsecutivoId=di.empleadoConsecutivoImss and
    e.empleadoCategoriaId=di.empleadoCategoriaImss)
    left join catalogoestatusimss cei on (di.empleadoEstatusImss=cei.idEstatusImss)
    left join entidadesfederativas eft on (eft.idEntidadFederativa =e.idEntidadTrabajo)
    left join deudasempleadosfiniquito def on (e.entidadFederativaId=def.EntEmpD and e.empleadoConsecutivoId= def.ConEmpD and e.empleadoCategoriaId= def.CatEmpD)   
    left join plantilla p on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId= p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId= p.empleadoCategoriaPlantilla) 
    where (concat_ws(' ',e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) like '%" . mysqli_real_escape_string($this->conn, $nombre) . "%'";
    if($usuario["rol"]=="Lider Unidad" || $usuario["rol"]=="Consulta Rh"){
//$this -> logger -> LogInfo ("valor del array de la usuario ".var_export (is_array($usuario['entidadFederativaUsuario']), true));  
        $sql.=") and";
        for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
            if(!is_array($usuario['lineaNegocioUsuario'])){
                $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
            }else{
                $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
            } 
            for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                if(!is_array($usuario['entidadFederativaUsuario'])){
                    $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                }else{
                    $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                } 
                if(($i==0) && ($j==0)){
                    $sql.=" ((e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta') ";  
                }else{
                    $sql.=" or (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta') ";       
                }
            }   
        }
    }
    $sql.=" ) group by entidadFederativaId, empleadoConsecutivoId, empleadoCategoriaId ";
//$this -> logger -> LogInfo ("Ejecutando obtenerEmpleadoPorNombre: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $listaEmpleados[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de listaEmpleados ".var_export ($listaEmpleados, true));

    return $listaEmpleados;
}

public function obtenerUmfPorMunicipio($idMunicipio)
{
        //$this-> logger -> LogInfo("obtenerUmfPorMunicipio");

    $listaUmf = array();

    $sql = "select idUnidadMedica,idMunicipioUnidad,nombreUnidad,domicilioUnidad,codigoPostalUnidad from catalogounidadesmedicas
    where idMunicipioUnidad='" . mysqli_real_escape_string($this->conn, $idMunicipio) . "'";

        //$this -> logger -> LogInfo ("Ejecutando listaUmf: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaUmf[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la listaUmf ".var_export ($listaUmf, true));

    return $listaUmf;
}

public function obtenerPuntosServiciosPorEntidad($idEntidad, $estatusPunto,$estatusEmpleadoh)
{
    //$this-> logger -> LogInfo("obtenerEmpleadoPorId");

    $puntosServicios = array();

    $sql = "select idPuntoServicio,puntoServicio,idEntidadPunto,esatusPunto, idClientePunto from catalogopuntosservicios
    where
    idEntidadPunto = '" . mysqli_real_escape_string($this->conn, $idEntidad) . "'";
    if($estatusEmpleadoh != "0"){
        $sql.= " and esatusPunto = '" . mysqli_real_escape_string($this->conn, $estatusPunto) . "' ";
    }
    $sql.= " and visiblerh=1 order by puntoServicio asc";

        //$this -> logger -> LogInfo ("Ejecutando obtenerPuntosServiciosPorEntidad: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $puntosServicios[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la puntosServicios ".var_export ($puntosServicios, true));

    return $puntosServicios;
}

public function insertarDatosFamiliaresStore($datosFamiliares)
{

        //$this -> logger -> LogInfo ("Ejecutando. insertarDatosFamiliares en persistencia");

    $sql = "call inserta_actualiza_dato_familiar('" . mysqli_real_escape_string($this->conn, $datosFamiliares["idEntidadEmpleadoFamiliar"]) . "','" . mysqli_real_escape_string($this->conn, $datosFamiliares["idConsecutivoEmpleadoFamiliar"]) . "','" . mysqli_real_escape_string($this->conn, $datosFamiliares["idCategoriaEmpleadoFamiliar"]) . "','" . mysqli_real_escape_string($this->conn, $datosFamiliares["nombreFamiliar"]) . "'," . mysqli_real_escape_string($this->conn, $datosFamiliares["idParentescoFamiliar"]) . "," . mysqli_real_escape_string($this->conn, $datosFamiliares["beneficiario"]) . ",'" . mysqli_real_escape_string($this->conn, $datosFamiliares["usuarioCapturaDatoFamiliar"]) . "')";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarDatosFamiliaresStore como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertarDatosFamiliaresStore.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function insertarDatosBeneficiarioStore($datosFamiliares)
{

        //$this -> logger -> LogInfo ("Ejecutando. insertarDatosBeneficiarioStore en persistencia");

    $sql = "call inserta_actualiza_dato_beneficiario('" . mysqli_real_escape_string($this->conn, $datosFamiliares["idEntidadEmpleadoFamiliar"]) . "','" . mysqli_real_escape_string($this->conn, $datosFamiliares["idConsecutivoEmpleadoFamiliar"]) . "','" . mysqli_real_escape_string($this->conn, $datosFamiliares["idCategoriaEmpleadoFamiliar"]) . "','" . mysqli_real_escape_string($this->conn, $datosFamiliares["nombreFamiliar"]) . "'," . mysqli_real_escape_string($this->conn, $datosFamiliares["idParentescoFamiliar"]) . "," . mysqli_real_escape_string($this->conn, $datosFamiliares["beneficiario"]) . ",'" . mysqli_real_escape_string($this->conn, $datosFamiliares["usuarioCapturaDatoFamiliar"]) . "')";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarDatosBeneficiarioStore como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertarDatosBeneficiarioStore.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function consultarDocumentoEntregado($idEntidadEmpleado, $cosecutivoEmpleado, $idTipoEmpleado, $idDocumento, $idTipoDocumento, $estatusDocumento)
{
        //$this -> logger -> LogInfo ("verificarDocumentoEmpleado en persistencia");

    $empleadoDoc = array();

    try {

        $sql = "select idEntidadEmpladoDocumento,empleadoConsecutivoDocumento,empleadoTipoDocumento,idDocumento,idTipoDocumento,idEstatusDocumentos,fechaRegistro,
        e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado from empleadosregistrodocumentacion
        left join empleados e on (empleadosregistrodocumentacion.idEntidadEmpladoDocumento=e.entidadFederativaId and
        empleadosregistrodocumentacion.empleadoConsecutivoDocumento=e.empleadoConsecutivoId and
        empleadosregistrodocumentacion.empleadoTipoDocumento=e.empleadoCategoriaId)
        WHERE idEntidadEmpladoDocumento='" . mysqli_real_escape_string($this->conn, $idEntidadEmpleado) . "' and empleadoConsecutivoDocumento='" . mysqli_real_escape_string($this->conn, $cosecutivoEmpleado) . "'
        and empleadoTipoDocumento='" . mysqli_real_escape_string($this->conn, $idTipoEmpleado) . "' and idDocumento=" . mysqli_real_escape_string($this->conn, $idDocumento) . " and
        idTipoDocumento=" . mysqli_real_escape_string($this->conn, $idTipoDocumento) . " and idEstatusDocumentos=" . mysqli_real_escape_string($this->conn, $estatusDocumento) . " ";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarDocumentoEmpleado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $empleadoDoc[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarDocumentoEmpleado ".var_export ($empleadoDoc, true));

        return $empleadoDoc;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function consultarDocumentoPendientePorEntregar($idEntidadEmpleado, $cosecutivoEmpleado, $idTipoEmpleado, $idDocumento, $idTipoDocumento)
{
        //$this -> logger -> LogInfo ("consultarDocumentoPendientePorEntregar en persistencia");

    $empleadoDoc = array();

    try {

        $sql = "select idEntidadEmpladoDocumento,empleadoConsecutivoDocumento,empleadoTipoDocumento,idDocumento,idTipoDocumento,idEstatusDocumentos,fechaRegistro,
        e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado from empleadosregistrodocumentacion
        left join empleados e on (empleadosregistrodocumentacion.idEntidadEmpladoDocumento=e.entidadFederativaId and
        empleadosregistrodocumentacion.empleadoConsecutivoDocumento=e.empleadoConsecutivoId and
        empleadosregistrodocumentacion.empleadoTipoDocumento=e.empleadoCategoriaId)
        WHERE idEntidadEmpladoDocumento='" . mysqli_real_escape_string($this->conn, $idEntidadEmpleado) . "' and empleadoConsecutivoDocumento='" . mysqli_real_escape_string($this->conn, $cosecutivoEmpleado) . "'
        and empleadoTipoDocumento='" . mysqli_real_escape_string($this->conn, $idTipoEmpleado) . "' and idDocumento=" . mysqli_real_escape_string($this->conn, $idDocumento) . " ";

            //$this -> logger -> LogInfo ("Ejecutando SQL: consultarDocumentoPendientePorEntregar " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $empleadoDoc[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la consultarDocumentoPendientePorEntregar ".var_export ($empleadoDoc, true));

        return $empleadoDoc;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function insertarDocumentosDigitalizados($documentacion)
{

        //$this -> logger -> LogInfo ("Ejecutando. inertarDocumentosDigitalizados en persistencia");

    if (!isset($documentacion["nombreArchivoSeleccionado"])) {
        $documentacion["nombreArchivoSeleccionado"] = "";
    }

    if (!isset($documentacion["nombreArchivoGuardado"])) {
        $documentacion["nombreArchivoGuardado"] = "";
    }

    $sql = "INSERT INTO empleadosdocumentos (" .
    "empleadoEntidadFederativaId," .
    "empleadoConsecutivo," .
    "empleadoCategoriaId," .
    "documentoId," .
    "tipoDocumentoId," .
    "documentoEstatusId," .
    "documentoFechaRegistro," .
    "nombreArchivoSeleccionado," .
    "nombreArchivoGuardado" .
    ") VALUES (" .
    "'" . mysqli_real_escape_string($this->conn, $documentacion["empleadoEntidadFederativaId"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $documentacion["empleadoConsecutivo"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $documentacion["empleadoCategoriaId"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $documentacion["documentoId"]) . "," .
    "" . mysqli_real_escape_string($this->conn, $documentacion["tipoDocumentoId"]) . "," .
    "" . mysqli_real_escape_string($this->conn, $documentacion["documentoEstatusId"]) . "," .
    "now()," .
    "'" . mysqli_real_escape_string($this->conn, $documentacion["nombreArchivoSeleccionado"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $documentacion["nombreArchivoGuardado"]) . "'" .
    ")";

       // $this -> logger -> LogInfo ("Se ejecuto consulta  inertarDocumentosDigitalizados como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerDocumentosDigitalizadosEmpleadoPorDocumentoId(
    $empleadoEntidadFederativaId,
    $empleadoConsecutivo,
    $empleadoCategoriaId,
    $documentoId) {
    $documentosDigitalizadosEmpleado = array();

    try {

        $sql = "SELECT
        idDocumentoDigitalizado,
        nombreArchivoSeleccionado,
        nombreArchivoGuardado,documentoId,documentoFechaRegistro
        FROM
        empleadosdocumentos
        WHERE
        empleadoEntidadFederativaId = '" . $this->safeValue($empleadoEntidadFederativaId) . "'
        AND empleadoConsecutivo = '" . $this->safeValue($empleadoConsecutivo) . "'
        AND empleadoCategoriaId = '" . $this->safeValue($empleadoCategoriaId) . "'
        AND documentoId = '" . $this->safeValue($documentoId) . "';";

            //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerDocumentosEmpleadoPorDocumentoId " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $documentosDigitalizadosEmpleado[] = $reg;
        }

            //$this -> logger -> LogInfo ("valor del array de la documentosDigitalizadosEmpleado ".var_export ($documentosDigitalizadosEmpleado, true));
    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

    return $documentosDigitalizadosEmpleado;
}

public function obtenerDocumentoDigitalizadaPorIdExterno($idExterno)
{
    $documentosDigitalizadosEmpleado = array();

    try {

        $sql = "SELECT
        idDocumentoDigitalizado,
        nombreArchivoSeleccionado,
        nombreArchivoGuardado
        FROM
        empleadosdocumentos
        WHERE
        md5(concat_ws('', idDocumentoDigitalizado, nombreArchivoGuardado)) = '" . $this->safeValue($idExterno) . "';";

            //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerDocumentoDigitalizadaPorIdExterno " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $documentosDigitalizadosEmpleado[] = $reg;
        }

            //$this -> logger -> LogInfo ("valor del array de la documentosDigitalizadosEmpleado ".var_export ($documentosDigitalizadosEmpleado, true));
    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

    return $documentosDigitalizadosEmpleado;
}
public function obtenerSupervisoresOperativoselectronica()
{
        //$this-> logger -> LogInfo("obtenerSupervisoresOperativos");

    $supervisoresOperativos = array();

    $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId, concat_ws('-',e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId) as supervisorId , concat( e.nombreEmpleado, \" \", e.apellidoPaterno, \" \", e.apellidoMaterno) AS nombre
    FROM empleados e
    where empleadoIdPuesto=61  and e.empleadoEstatusId<>0 order by e.nombreEmpleado asc";

        //$this -> logger -> LogInfo ("Ejecutando obtenerSupervisoresOperativos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $supervisoresOperativos[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerSupervisoresOperativos ".var_export ($supervisoresOperativos, true));

    return $supervisoresOperativos;

}

public function obtenerSupervisoresOperativosTransporte()
{
        //$this-> logger -> LogInfo("obtenerSupervisoresOperativos");

    $supervisoresOperativos = array();

    $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId, concat_ws('-',e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId) as supervisorId , concat( e.nombreEmpleado, \" \", e.apellidoPaterno, \" \", e.apellidoMaterno) AS nombre
    FROM empleados e
    where empleadoIdPuesto=88  and e.empleadoEstatusId<>0 order by e.nombreEmpleado asc";

        //$this -> logger -> LogInfo ("Ejecutando obtenerSupervisoresOperativos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $supervisoresOperativos[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerSupervisoresOperativos ".var_export ($supervisoresOperativos, true));

    return $supervisoresOperativos;

}

public function obtenerSupervisoresOperativos()
{
        //$this-> logger -> LogInfo("obtenerSupervisoresOperativos");

    $supervisoresOperativos = array();

    $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId, concat_ws('-',e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId) as supervisorId , concat( e.nombreEmpleado, ' ', e.apellidoPaterno, ' ', e.apellidoMaterno) AS nombre
    FROM empleados e
    where (empleadoIdPuesto=6 or empleadoIdPuesto=88 or empleadoIdPuesto=61) and e.empleadoEstatusId<>0 AND  concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId)!='09-0001-02' order by e.nombreEmpleado asc";

        //$this -> logger -> LogInfo ("Ejecutando obtenerSupervisoresOperativos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $supervisoresOperativos[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerSupervisoresOperativos ".var_export ($supervisoresOperativos, true));

    return $supervisoresOperativos;
}

public function traeCatalogoLineaNegocio()
{
        //$this -> logger -> LogInfo ("traeCatalogoLineaNegocio en persistencia");
    $listaLineaNegocio = array();

    try {

        $sql = "select idLineaNegocio, descripcionLineaNegocio from catalogolineanegocio";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaLineaNegocio[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoLineaNegocio ".var_export ($listaLineaNegocio, true));
        return $listaLineaNegocio;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function actualizarDatosPersonales($empleado){
        //$this -> logger -> LogInfo ("Ejecutando. actualizarDatosPersonales en persistencia");
    $sql = "update datospersonales " .
    "set fechaNacimiento='" . mysqli_real_escape_string($this->conn, $empleado["fechaNacimiento"]) . "'," .
    "edadEmp=" . mysqli_real_escape_string($this->conn, $empleado["edad"]) . "," .
    "paisNacimientoId=" . mysqli_real_escape_string($this->conn, $empleado["paisNacimientoId"]) . "," .
    "entidadNacimientoId='" . mysqli_real_escape_string($this->conn, $empleado["entidadNacimientoId"]) . "'," .
    "municipioNacimientoId=" . mysqli_real_escape_string($this->conn, $empleado["municipioNacimientoId"]) . "," .
    "curpEmpleado='" . mysqli_real_escape_string($this->conn, $empleado["curpEmpleado"]) . "', " .
    "rfcEmpleado='" . mysqli_real_escape_string($this->conn, $empleado["rfcEmpleado"]) . "', " .
    "estadoCivilId=" . mysqli_real_escape_string($this->conn, $empleado["estadoCivilId"]) . ", " .
    "gradoEstudiosId=" . mysqli_real_escape_string($this->conn, $empleado["gradoEstudiosId"]) . ", " .
    "tipoSangreId=" . mysqli_real_escape_string($this->conn, $empleado["tipoSangreId"]) . ", " .
    "oficioId=" . mysqli_real_escape_string($this->conn, $empleado["oficioId"]) . ", " .
    "estatusCartillaId=" . mysqli_real_escape_string($this->conn, $empleado["estatusCartillaId"]) . ", " .
    "numeroCartilla='" . mysqli_real_escape_string($this->conn, $empleado["numeroCartilla"]) . "', " .
    "usuarioCapturaDatoPersonal='" . mysqli_real_escape_string($this->conn, $empleado["usuarioCapturaDatoPersonal"]) . "', " .
    "fechaCapturaDatoPersonal=NOW() " .
    "where empleadoEntidadPersonal='" . mysqli_real_escape_string($this->conn, $empleado["empleadoEntidadPersonal"]) .
    "' and empleadoConsecutivoPersonal='" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoPersonal"]) .
    "' and empleadoCategoriaPersonal='" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaPersonal"]) . "' ";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarDatosPersonales como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarDatosPersonales.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerNumeroEmpleadoRfc($rfc)
{
    $numeroEmpleado = array();

    $sql = " select concat( empleadoEntidadPersonal,\"-\", empleadoConsecutivoPersonal,\"-\", empleadoCategoriaPersonal ) AS numeroEmpleado
    FROM datospersonales
    WHERE rfcEmpleado='" . mysqli_real_escape_string($this->conn, $rfc) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoRfc " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $numeroEmpleado[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la consulta obtenerNumeroEmpleadoRfc".var_export ($numeroEmpleado, true));

    return $numeroEmpleado;
}

public function obtenerNumeroEmpleadoCurp($curp)
{
    $numeroEmpleadoCurp = array();

    $sql = " select concat( empleadoEntidadPersonal,\"-\", empleadoConsecutivoPersonal,\"-\", empleadoCategoriaPersonal ) AS numeroEmpleadoCurp
    FROM datospersonales
    WHERE curpEmpleado='" . mysqli_real_escape_string($this->conn, $curp) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoCurp " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $numeroEmpleadoCurp[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la consulta numeroEmpleadoCurp".var_export ($numeroEmpleadoCurp, true));

    return $numeroEmpleadoCurp;
}
public function actualizarDatosDireccion($datosDireccion)
{

        //$this -> logger -> LogInfo ("Ejecutando. actualizarDatosDireccion en persistencia");

    $sql = "update directorio " .
    "set idAsentamientoDireccion=" . mysqli_real_escape_string($this->conn, $datosDireccion["idAsentamientoDireccion"]) . "," .
    "calle='" . mysqli_real_escape_string($this->conn, $datosDireccion["calle"]) . "'," .
    "numeroExterior='" . mysqli_real_escape_string($this->conn, $datosDireccion["numeroExterior"]) . "'," .
    "numeroInterior='" . mysqli_real_escape_string($this->conn, $datosDireccion["numeroInterior"]) . "'," .
    "telefonoFijoEmpleado='" . mysqli_real_escape_string($this->conn, $datosDireccion["telefonoFijoEmpleado"]) . "', " .
    "telefonoMovilEmpleado='" . mysqli_real_escape_string($this->conn, $datosDireccion["telefonoMovilEmpleado"]) . "', " .
    "correoEmpleado='" . mysqli_real_escape_string($this->conn, $datosDireccion["correoEmpleado"]) . "', " .
    "idUnidadMedicaAsignada=" . mysqli_real_escape_string($this->conn, $datosDireccion["idUnidadMedicaAsignada"]) . ", " .
    "usuarioCapturaDireccion='" . mysqli_real_escape_string($this->conn, $datosDireccion["usuarioCapturaDireccion"]) . "', " .
    "fechaCapturaDireccion=NOW() " .
    "where entidadEmpleadoDirectorio='" . mysqli_real_escape_string($this->conn, $datosDireccion["entidadEmpleadoDirectorio"]) .
    "' and consecutivoEmpleadoDirectorio='" . mysqli_real_escape_string($this->conn, $datosDireccion["consecutivoEmpleadoDirectorio"]) .
    "' and categoriaEmpleadoDirectorio='" . mysqli_real_escape_string($this->conn, $datosDireccion["categoriaEmpleadoDirectorio"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarDatosDireccion como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarDatosDireccion.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function actualizarDatosDireccionSinUmf($datosDireccion)
{

        //$this -> logger -> LogInfo ("Ejecutando. actualizarDatosDireccionSinUmf en persistencia");

    $sql = "update directorio " .
    "set idAsentamientoDireccion=" . mysqli_real_escape_string($this->conn, $datosDireccion["idAsentamientoDireccion"]) . "," .
    "calle='" . mysqli_real_escape_string($this->conn, $datosDireccion["calle"]) . "'," .
    "numeroExterior='" . mysqli_real_escape_string($this->conn, $datosDireccion["numeroExterior"]) . "'," .
    "numeroInterior='" . mysqli_real_escape_string($this->conn, $datosDireccion["numeroInterior"]) . "'," .
    "telefonoFijoEmpleado='" . mysqli_real_escape_string($this->conn, $datosDireccion["telefonoFijoEmpleado"]) . "', " .
    "telefonoMovilEmpleado='" . mysqli_real_escape_string($this->conn, $datosDireccion["telefonoMovilEmpleado"]) . "', " .
    "correoEmpleado='" . mysqli_real_escape_string($this->conn, $datosDireccion["correoEmpleado"]) . "', " .
    "usuarioCapturaDireccion='" . mysqli_real_escape_string($this->conn, $datosDireccion["usuarioCapturaDireccion"]) . "', " .
    "fechaCapturaDireccion=NOW() " .
    "where entidadEmpleadoDirectorio='" . mysqli_real_escape_string($this->conn, $datosDireccion["entidadEmpleadoDirectorio"]) .
    "' and consecutivoEmpleadoDirectorio='" . mysqli_real_escape_string($this->conn, $datosDireccion["consecutivoEmpleadoDirectorio"]) .
    "' and categoriaEmpleadoDirectorio='" . mysqli_real_escape_string($this->conn, $datosDireccion["categoriaEmpleadoDirectorio"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarDatosDireccionSinUmf como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarDatosDireccionSinUmf.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
// Ya fue modificado
public function actualizarDatosGenerales($datosGenerales)
{
    if($datosGenerales["selHorarioCons"]=="" || $datosGenerales["selHorarioCons"]==null || $datosGenerales["selHorarioCons"]=="null" || $datosGenerales["selHorarioCons"]==NULL || $datosGenerales["selHorarioCons"]=="NULL"){
        $datosGenerales["selHorarioCons"]="0";
    }
    if($datosGenerales["banderaCambioRP"]=="1"){

       $sql4 = "UPDATE datosimss 
                SET cambioRPxPS='1',rpParaActualizar='" . mysqli_real_escape_string($this->conn, $datosGenerales["rpNuevo"]) . "'
                WHERE empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosGenerales["entidadFederativaId"]) . "'
                AND empleadoConsecutivoImss = '" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoConsecutivoId"]) . "'
                AND empleadoCategoriaImss ='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoCategoriaId"]) . "'";
            $res4 = mysqli_query($this->conn, $sql4);
        // $this -> logger -> LogInfo ("valor del array de la consulta sql4".var_export ($sql4, true));
    }
    
    if($datosGenerales["OpcionTarjetaDeDespensaEdit"]=="1"){
        $estatusEmpleadoTarjeta = "1";
        if($datosGenerales["txtnumeroFirmaempleadoEdit"]!="" && $datosGenerales["ContraseniaFirmaempEdit"]!=""){
            $sql1 = "UPDATE TarjetaDespensa 
                     SET IdEstatusAsignacionEmpleado='" . mysqli_real_escape_string($this->conn, $estatusEmpleadoTarjeta) . "',NumeroFirmaAsignoAElemento='" . mysqli_real_escape_string($this->conn, $datosGenerales["txtnumeroFirmaempleadoEdit"]) . "',ContraseniaFirmaAsignoAlElemento='" . mysqli_real_escape_string($this->conn, $datosGenerales["ContraseniaFirmaempEdit"]) . "',usuarioQueAsignoAlElemento='" . mysqli_real_escape_string($this->conn, $datosGenerales["userEdited"]) . "',FechaASignacionEmpleado=now(),EntidadEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $datosGenerales["entidadFederativaId"]) . "',ConsecutivoEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoConsecutivoId"]) . "',TipoEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoCategoriaId"]) . "'
                     WHERE idIutTarjeta='" . mysqli_real_escape_string($this->conn, $datosGenerales["IutDespensa"]) . "'";
            $res1 = mysqli_query($this->conn, $sql1);
        }
        $IdNumeroTarjetaDespensa = array();
        $sql3 = "SELECT IdTarjetaDespensa FROM TarjetaDespensa
                where EntidadEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $datosGenerales["entidadFederativaId"]) . "'
                and ConsecutivoEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoConsecutivoId"]) . "'
                and TipoEmpleadoTarjeta='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoCategoriaId"]) . "'
                and idIutTarjeta='" . mysqli_real_escape_string($this->conn, $datosGenerales["IutDespensa"]) . "'
                and IdEstatusAsignacionEmpleado='1'";
        $res3 = mysqli_query($this->conn, $sql3);
        while (($reg3 = mysqli_fetch_array($res3, MYSQLI_ASSOC))) {
            $IdNumeroTarjetaDespensa[] = $reg3;
        }
        $idRegistroTarjeta = $IdNumeroTarjetaDespensa[0]["IdTarjetaDespensa"];
    }else{
        $idRegistroTarjeta = "0"; 
    }
    // $this -> logger -> LogInfo ("valor del array de la consulta idRegistroTarjeta".var_export ($idRegistroTarjeta, true));
    $sql = "update empleados " .
    "set apellidoPaterno='" . mysqli_real_escape_string($this->conn, $datosGenerales["apellidoPaterno"]) . "'," .
    "apellidoMaterno='" . mysqli_real_escape_string($this->conn, $datosGenerales["apellidoMaterno"]) . "'," .
    "nombreEmpleado='" . mysqli_real_escape_string($this->conn, $datosGenerales["nombreEmpleado"]) . "'," .
    "contactoGif='" . mysqli_real_escape_string($this->conn, $datosGenerales["ContactoGif"]) . "'," .
    "correoGif='" . mysqli_real_escape_string($this->conn, $datosGenerales["CorreoGif"]) . "'," .
    "fechaIngresoEmpleado='" . mysqli_real_escape_string($this->conn, $datosGenerales["fechaIngresoEmpleado"]) . "'," .
    "empleadoIdPuesto=" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoIdPuesto"]) . ", " .
    "empleadoIdTurno=" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoIdTurno"]) . ", " .
    "tesEmpleado=" . mysqli_real_escape_string($this->conn, $datosGenerales["tesEmpleado"]) . ", " .
    "estaturaEmpleado=" . mysqli_real_escape_string($this->conn, $datosGenerales["estaturaEmpleado"]) . ", " .
    "tallaCEmpleado=" . mysqli_real_escape_string($this->conn, $datosGenerales["tallaCEmpleado"]) . ", " .
    "tallaPEmpleado=" . mysqli_real_escape_string($this->conn, $datosGenerales["tallaPEmpleado"]) . ", " .
    "numCalzadoEmpleado=" . mysqli_real_escape_string($this->conn, $datosGenerales["numCalzadoEmpleado"]) . ", " .
    "pesoEmpleado=" . mysqli_real_escape_string($this->conn, $datosGenerales["pesoEmpleado"]) . ", " .
    "empleadoIdGenero=" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoIdGenero"]) . ", " .
    "claveINE='" . mysqli_real_escape_string($this->conn, $datosGenerales["claveINE"]) . "', " .
    "empleadoNumeroSeguroSocial='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoNumeroSeguroSocial"]) . "', " .
    "idBancoEmp='" . mysqli_real_escape_string($this->conn, $datosGenerales["bancoEdit"]) . "', " .
    "numeroCta='" . mysqli_real_escape_string($this->conn, $datosGenerales["numeroCta"]) . "', " .
    "numeroCtaClabe='" . mysqli_real_escape_string($this->conn, $datosGenerales["numeroCtaClabe"]) . "', " .
    "IdTarjetaDespensa='" . mysqli_real_escape_string($this->conn, $idRegistroTarjeta) . "'";
    if($datosGenerales["fechaBajaEmpleado"]==""){
        $sql .= " , fechaBajaEmpleado= null ,";
    }else{
        $sql .= " , fechaBajaEmpleado='" . mysqli_real_escape_string($this->conn, $datosGenerales["fechaBajaEmpleado"]) . "', ";
    }
    $sql .= " idTipoPuesto='" . mysqli_real_escape_string($this->conn, $datosGenerales["idTipoPuesto"]) . "', " .
    "idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $datosGenerales["idEntidadTrabajo"]) . "', " .
    "empleadoLocalizacion='" . mysqli_real_escape_string($this->conn, $datosGenerales["idEndidadFederativaLocalizacion"]) . "', " .
    "idEntidadResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $datosGenerales["idEntidadResponsableAsistencia"]) . "', " .
    "consecutivoResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $datosGenerales["consecutivoResponsableAsistencia"]) . "', " .
    "tipoResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $datosGenerales["tipoResponsableAsistencia"]) . "', " .
    "empleadoIdPuntoServicio=" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoIdPuntoServicio"]) . ", " .
        //"fotoEmpleado='" . mysqli_real_escape_string ($this -> conn , $datosGenerales["fotoEmpleado"]) . "', " .
    "empleadoLineaNegocioId=" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoLineaNegocioId"]) . ", " .
    "tipoPeriodo=" . mysqli_real_escape_string($this->conn, $datosGenerales["tipoPeriodo"]) . ", " .
    "userEdited='" . mysqli_real_escape_string($this->conn, $datosGenerales["userEdited"]) . "', " .
    "medioInformacionVacanteId='" . mysqli_real_escape_string($this->conn, $datosGenerales["medioInformacionVacanteId"]) . "', " .
    "reclutadorEntidad='" . mysqli_real_escape_string($this->conn, $datosGenerales["reclutadorEntidad"]) . "', " .
    "reclutadorConsecutivoId='" . mysqli_real_escape_string($this->conn, $datosGenerales["reclutadorConsecutivoId"]) . "', " .
    "reclutadorTipo='" . mysqli_real_escape_string($this->conn, $datosGenerales["reclutadorTipo"]) . "', " .
    "lastDateEdited=NOW() ," .
    "roloperativo='" . mysqli_real_escape_string($this->conn, $datosGenerales["plantillaText"]) . "'," .
    "roloperativo='" . mysqli_real_escape_string($this->conn, $datosGenerales["plantillaText"]) . "'," .
    "noGerenteRegAsignado='" . mysqli_real_escape_string($this->conn, $datosGenerales["gerenteRegSupEdit"]) . "'," .
    "idHoario='" . mysqli_real_escape_string($this->conn, $datosGenerales["selHorarioCons"]) . "'";
    if($datosGenerales["licenciaConducirpermanenteEdited"]==""){
        $sql .= " , licenciaconducirpermanente= '0' ,";
    }else{
        $sql .= " , licenciaconducirpermanente='" . mysqli_real_escape_string($this->conn, $datosGenerales["licenciaConducirpermanenteEdited"]) . "', ";
    }
    $sql .= " numlicencia='" . mysqli_real_escape_string($this->conn, $datosGenerales["numerolicenciaEdited"]) . "'";

    if($datosGenerales["inpfehavigencialicenciaEdited"]==""){
        $sql .= " , fechavigencialicencia= null ";
    }else{
        $sql .= " , fechavigencialicencia='" . mysqli_real_escape_string($this->conn, $datosGenerales["inpfehavigencialicenciaEdited"]) . "' ";
    }
    $sql .= " where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $datosGenerales["entidadFederativaId"]) . "'" .
    " and empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoConsecutivoId"]) . "' and " .
    "empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoCategoriaId"]) . "' ";
    $res = mysqli_query($this->conn, $sql);
    $errno = mysqli_errno($this->conn);
    if ($errno != 0) {
        $this->logger->LogInfo("Ocurrio un error al actualizarDatosGenerales.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo($errno);
    }
}
public function obtenerNumeroEmpleadoCuenta($numeroCta)
{
    $numeroEmpleadoCta = array();

    $sql = " select concat( entidadFederativaId,\"-\", empleadoConsecutivoId,\"-\", empleadoCategoriaId ) AS numeroEmpleadoCta
    FROM empleados
    WHERE numeroCta='" . mysqli_real_escape_string($this->conn, $numeroCta) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoCuenta " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $numeroEmpleadoCta[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la consulta obtenerNumeroEmpleadoCuenta".var_export ($numeroEmpleadoCta, true));

    return $numeroEmpleadoCta;
}

public function obtenerNumeroEmpleadoCuentaClabe($numeroCtaClabe)
{
    $numeroEmpleadoCtaClabe = array();

    $sql = " select concat( entidadFederativaId,\"-\", empleadoConsecutivoId,\"-\", empleadoCategoriaId ) AS numeroEmpleadoCtaClabe
    FROM empleados
    WHERE numeroCtaClabe='" . mysqli_real_escape_string($this->conn, $numeroCtaClabe) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoCuentaClabe " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $numeroEmpleadoCtaClabe[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la consulta obtenerNumeroEmpleadoCuentaClabe".var_export ($numeroEmpleadoCtaClabe, true));

    return $numeroEmpleadoCtaClabe;
}

public function obtenerNumeroEmpleadoImss($numeroImss)
{
    $numeroEmpleadoImss = array();

    $sql = " select concat( entidadFederativaId,\"-\", empleadoConsecutivoId,\"-\", empleadoCategoriaId ) AS numeroEmpleadoImss
    FROM empleados
    WHERE empleadoNumeroSeguroSocial='" . mysqli_real_escape_string($this->conn, $numeroImss) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: numeroEmpleadoImss " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $numeroEmpleadoImss[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la consulta obtenerNumeroEmpleadoImss".var_export ($numeroEmpleadoImss, true));

    return $numeroEmpleadoImss;
}

public function consultaDatosFamiliaresEmpleado($idEntidadEmpleado, $cosecutivoEmpleado, $idTipoEmpleado){
    //$this -> logger -> LogInfo ("consultaDatosFamiliaresEmpleado en persistencia");
    $empleadoFamiliares = array();

    try {

        $sql = "select idEntidadEmpleadoFamiliar,idConsecutivoEmpleadoFamiliar,idCategoriaEmpleadoFamiliar,
        nombreFamiliar,idParentescoFamiliar,cp.descripcionParentesco as descripcion1,df.descripcionParentesco as descripcion2,porcentajeBeneficiario,beneficiario
        from datosfamiliares df 
        left join catalogoparentescos cp on cp.idParentesco =df.idParentescoFamiliar
        WHERE idEntidadEmpleadoFamiliar='" . mysqli_real_escape_string($this->conn, $idEntidadEmpleado) . "' 
        and idConsecutivoEmpleadoFamiliar='" . mysqli_real_escape_string($this->conn, $cosecutivoEmpleado) . "'
        and idCategoriaEmpleadoFamiliar='" . mysqli_real_escape_string($this->conn, $idTipoEmpleado) . "'";
            //$this -> logger -> LogInfo ("Ejecutando SQL: consultaDatosFamiliaresEmpleado " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $empleadoFamiliares[] = $reg;
        }
        return $empleadoFamiliares;
    }catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function traeCatalogoTiposBaja()
{
        //$this -> logger -> LogInfo ("traeCatalogoTiposBaja en persistencia");
    $listaTipoBaja = array();
    try {

        $sql = "SELECT idTipoBaja,descripcionTipoBaja FROM catalogotipobajas";
            // $this -> logger -> LogInfo ("ejecutando traeCatalogoTiposBaja en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaTipoBaja[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoTiposBaja ".var_export ($listaTipoBaja, true));
        return $listaTipoBaja;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function traerMotivosBajaPorTipoBaja($tipoBajaId)
{
        //$this-> logger -> LogInfo("traerMotivosBajaPorTipoBaja");

    try {

        $listaMotivosBaja = array();

        $sql = "SELECT idcatalogoMotivosBaja,descripcionMotivoBaja,tipoBajaId from catalogomotivosbaja where
        tipoBajaId= " . mysqli_real_escape_string($this->conn, $tipoBajaId) . " ";

            //$this -> logger -> LogInfo ("ejecutando traerMotivosBajaPorTipoBaja en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaMotivosBaja[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerMotivosBajaPorTipoBaja ".var_export ($listaMotivosBaja, true));

        return $listaMotivosBaja;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function insertarRegistroBajaHistorico($datosBaja)
{

        $this -> logger -> LogInfo ("Ejecutando. insertarRegistroBajaHistorico en persistencia");

    $sql = "INSERT INTO historicobajas (" .
    "empleadoEntidadBaja," .
    "empleadoConsecutivoBaja," .
    "empleadoCategoriaBaja," .
    "idMotivoBaja," .
    "fechaIngreso," .
    "fechaCausaBaja," .
    "comentarioBaja," .
    "usuarioCapturaBaja," .
    "fechaCapturaBaja " .
    ") VALUES (" .
    "'" . mysqli_real_escape_string($this->conn, $datosBaja["empleadoEntidadBaja"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datosBaja["empleadoConsecutivoBaja"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datosBaja["empleadoCategoriaBaja"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $datosBaja["idMotivoBaja"]) . "," .
    "'" . mysqli_real_escape_string($this->conn, $datosBaja["fechaIngreso"]) . "'," .
    "'" . mysqli_real_escape_string($this->conn, $datosBaja["fechaCausaBaja"]) . "'," .
    "'" . mysqli_real_escape_string($this->conn, $datosBaja["comentarioBaja"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datosBaja["usuarioCapturaBaja"]) . "'," .
    "now())";

        $this -> logger -> LogInfo ("Se ejecuto consulta  insertarRegistroBajaHistorico como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertarRegistroBajaHistorico.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerListaEmpleadosPorEstatus($idEstatus)
{
        //$this-> logger -> LogInfo("obtenerListaEmpleadosPorEstatus");

    $listaEmpleados = array();

    $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId, e.apellidoPaterno, e.empleadoIdTurno,e.empleadoIdGenero,
    e.apellidoMaterno, e.nombreEmpleado, e.fechaIngresoEmpleado ,e.empleadoNumeroSeguroSocial,e.empleadoEstatusId, e.numeroCta, e.numeroCtaClabe,
    concat_ws(' ', e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreCompleto,
    e.idTipoPuesto, e.empleadoIdPuesto, e.idEntidadTrabajo,  e.empleadoIdPuntoServicio, e.empleadoLineaNegocioId, concat_ws('-', e.entidadFederativaId,
    e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado,
    e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia, e.fechaBajaEmpleado,
    cp.descripcionPuesto, ctp.descripcionCategoria, ct.descripcionTurno ,
    cg.descripcionGenero, cee.descripcionEstatusEmpleado,
    ifnull(concat(dp.empleadoEntidadPersonal,dp.empleadoConsecutivoPersonal,dp.empleadoCategoriaPersonal) ,0) datoPersonal ,DATEDIFF(e.fechaIngresoEmpleado,dp.fechaNacimiento) as 'diasEdad',
    dp.fechaNacimiento, dp.paisNacimientoId,cpn.nombrePais,cpn.nacionalidad ,dp.entidadNacimientoId,efn.nombreEntidadFederativa as 'entidadNacimiento', dp.municipioNacimientoId,
    cmn.nombreMunicipio as 'municipioNacimiento', dp.curpEmpleado, dp.rfcEmpleado,
    dp.estadoCivilId,cedoc.descripcionEstadoCivil, dp.gradoEstudiosId,cge.descripcionGradoEstudios ,dp.tipoSangreId,cts.tipoSangre, dp.oficioId, co.descripcionOficio,
    dp.estatusCartillaId, dp.numeroCartilla, a.codigoPostalAsentamiento, a.municipioAsentamiento,
    ifnull(concat(dir.entidadEmpleadoDirectorio,dir.consecutivoEmpleadoDirectorio,dir.categoriaEmpleadoDirectorio) , 0)  directorio,
    dir.idAsentamientoDireccion,cta.nombreTipoAsentamiento ,a.nombreAsentamiento, cma.nombreMunicipio, a.codigoPostalAsentamiento, ef.nombreEntidadFederativa,
    dir.calle, dir.numeroExterior, dir.numeroInterior, dir.telefonoFijoEmpleado, dir.telefonoMovilEmpleado, dir.correoEmpleado, dir.idUnidadMedicaAsignada,
    cum.idMunicipioUnidad, cum.nombreUnidad, cum.domicilioUnidad, cum.codigoPostalUnidad,
    count(nombreFamiliar) datoFamiliar
    from empleados e
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogocategoriastipopuestos ctp on (ctp.idCategoria=cp.puestoIdCategoria)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogogenero cg on (cg.idGenero=e.empleadoIdGenero)
    left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
    left join datospersonales dp on ( e.entidadFederativaId= dp.empleadoEntidadPersonal and e.empleadoConsecutivoId=dp.empleadoConsecutivoPersonal and
    e.empleadoCategoriaId=dp.empleadoCategoriaPersonal)
    left join catalogopaises cpn on (cpn.idPais =dp.paisNacimientoId )
    left join entidadesfederativas efn on (efn.idEntidadFederativa =dp.entidadNacimientoId )
    left join catalogomunicipios cmn on (cmn.idMunicipio =dp.entidadNacimientoId )
    left join catalogoestadocivil cedoc on (cedoc.idEstadoCivil=dp.estadoCivilId)
    left join catalogogradoestudios cge on (cge.idGradoEstudios=dp.gradoEstudiosId)
    left join catalogotiposangre cts on (cts.idTipoSangre=dp.tipoSangreId)
    left join catalogooficios co on (co.idOficio=dp.oficioId)
    left join catalogoestatuscartilla cec on (cec.idEstatusCartilla=dp.estatusCartillaId)
    left join directorio dir on ( e.entidadFederativaId= dir.entidadEmpleadoDirectorio and e.empleadoConsecutivoId=dir.consecutivoEmpleadoDirectorio and
    e.empleadoCategoriaId=dir.categoriaEmpleadoDirectorio)
    left join asentamientos a on (dir.idAsentamientoDireccion=a.idAsentamiento)
    left join catalogomunicipios cma on (cma.idMunicipio=a.municipioAsentamiento)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=cma.idEstado)
    left  join catalogotiposasentamientos cta on (cta.idTipoAsentamiento=a.asentamientoTipo)
    left join catalogounidadesmedicas cum on (cum.idUnidadMedica=dir.idUnidadMedicaAsignada)
    left join datosfamiliares df on ( e.entidadFederativaId= df.idEntidadEmpleadoFamiliar and e.empleadoConsecutivoId=df.idConsecutivoEmpleadoFamiliar and
    e.empleadoCategoriaId=df.idCategoriaEmpleadoFamiliar) where
    e.empleadoEstatusId = '" . mysqli_real_escape_string($this->conn, $idEstatus) . "' group by entidadFederativaId, empleadoConsecutivoId , empleadoCategoriaId ";

        //$this -> logger -> LogInfo ("Ejecutando obtenerListaEmpleadosPorEstatus: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaEmpleados[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleados ".var_export ($listaEmpleados, true));

    return $listaEmpleados;
}

public function insertarActualizarDatosImss($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria, $salarioDiario, $fechaImss, $numeroLote, $usuarioCapturaImss, $registroPatronal, $tipoTrabajador)
{

        //$this -> logger -> LogInfo ("Ejecutando. insertarActualizarDatosImss en persistencia");

    $sql = "call inserta_actualiza_datos_imss('" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "', '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "','" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'," . mysqli_real_escape_string($this->conn, $salarioDiario) . ", '" . mysqli_real_escape_string($this->conn, $fechaImss) . "','" . mysqli_real_escape_string($this->conn, $numeroLote) . "','" . mysqli_real_escape_string($this->conn, $usuarioCapturaImss) . "', '" . mysqli_real_escape_string($this->conn, $registroPatronal) . "', " . mysqli_real_escape_string($this->conn, $tipoTrabajador) . ")";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarActualizarDatosImss como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar datos Imss.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function actualizarEstatusEmpleado($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria, $estatusEmpleado, $usuarioCaptura, $plantillaTexto)
{
    $datosidroloperativo = array();
    $sql1 = "SELECT idRolOperativo
            FROM catalogoroleoperativo
            where DescripcioRolOP='" . mysqli_real_escape_string($this->conn, $plantillaTexto) . "'";
        $res1 = mysqli_query($this->conn, $sql1);
        while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
            $datosidroloperativo[] = $reg1;
        }
            $idRolOperativo=$datosidroloperativo[0]["idRolOperativo"];
    $sql = "update empleados " .
    "set empleadoEstatusId=" . mysqli_real_escape_string($this->conn, $estatusEmpleado) . " ,
    userEdited='" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "',
    lastDateEdited=now(),roloperativo='" . mysqli_real_escape_string($this->conn, $plantillaTexto) . "',IdRolOperativoPlantillaEmp='" . mysqli_real_escape_string($this->conn, $idRolOperativo) . "'
    where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
    and empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
    and empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "' ";
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarEstatusEmpleado.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
// ya se modifico
public function actualizarFechaReingreso($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria, $fechaReingreso, $fechaBaja, $usuarioCaptura, $datos)
{
    if($datos["horarioReingreso"]=="" || $datos["horarioReingreso"]==null || $datos["horarioReingreso"]=="null" || $datos["horarioReingreso"]==NULL || $datos["horarioReingreso"]=="NULL"){
        $datos["horarioReingreso"]="0";
    }
     // $this -> logger -> LogInfo ("Ejecutando. actualizarFechaReingreso en persistencia");
    if($datos["AntiguedadVacacionesReingresoSi"] ==="1"){
            $estatusRevisionVacReingreso = "0";
         }else if($datos["AntiguedadVacacionesReingresoNo"] ==="1"){
            $estatusRevisionVacReingreso = "1";
         }
    $sql1 = "INSERT INTO Datos_Baja_De_Reingresos (entidadFedReingreso, ConsecutivoReingreso, CategoriaReingreso, apellidoPaternoR, apellidoMaternoR, nombreEmpleadoR, empleadoLineaNegocioIdR, fechaIngresoEmpleadoR, empleadoIdPuestoR, empleadoIdPuntoServicioR, empleadoEstatusIdR, fechaBajaEmpleadoR, idTipoPuestoR, idEntidadTrabajoR, fechaOperacionReingreso)
        SELECT entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId,apellidoPaterno,apellidoMaterno,nombreEmpleado,empleadoLineaNegocioId,fechaIngresoEmpleado,empleadoIdPuesto,
                empleadoIdPuntoServicio,empleadoEstatusId,fechaBajaEmpleado,idTipoPuesto,idEntidadTrabajo,now() 
        FROM empleados
        where entidadFederativaId='$empleadoEntidad'
        and empleadoConsecutivoId='$empleadoConsecutivo'
        and empleadoCategoriaId='$empleadoCategoria'";
       // $this->logger->LogInfo("Ejecutando actualizarFechaReingreso: " . $sql1);

         $res1 = mysqli_query($this->conn, $sql1);

    $sql = "update empleados " .
    "set fechaIngresoEmpleado='" . mysqli_real_escape_string($this->conn, $fechaReingreso) . "' ,";
    if($fechaBaja == ""){
        $sql .= " fechaBajaEmpleado=null ,";
    }else{
        $sql .= " fechaBajaEmpleado='" . mysqli_real_escape_string($this->conn, $fechaBaja) . "' ,";
    }
    $sql .= " idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $datos["idEntidadTrabajo"]) . "' ,
    empleadoLineaNegocioId=" . mysqli_real_escape_string($this->conn, $datos["empleadoLineaNegocioId"]) . " ,
    idTipoPuesto='" . mysqli_real_escape_string($this->conn, $datos["idTipoPuesto"]) . "' ,
    IdTarjetaDespensa='0' ,
    empleadoIdPuesto=" . mysqli_real_escape_string($this->conn, $datos["empleadoIdPuesto"]) . " ,
    idEntidadResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $datos["idEntidadResponsableAsistencia"]) . "' ,
    consecutivoResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $datos["consecutivoResponsableAsistencia"]) . "' ,
    tipoResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $datos["tipoResponsableAsistencia"]) . "' ,
    empleadoIdPuntoServicio=" . mysqli_real_escape_string($this->conn, $datos["empleadoIdPuntoServicio"]) . ",
    empleadoIdTurno=" . mysqli_real_escape_string($this->conn, $datos["empleadoIdTurno"]) . ",
    tipoPeriodo=" . mysqli_real_escape_string($this->conn, $datos["tipoPeriodo"]) . ",
    userEdited='" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "',
    numeroCta='" . mysqli_real_escape_string($this->conn, $datos["nocuentareingreso"]) . "',
    numeroCtaClabe='" . mysqli_real_escape_string($this->conn, $datos["cunetaclabereingreso"]) . "', 
    idHoario='" . mysqli_real_escape_string($this->conn, $datos["horarioReingreso"]) . "',
    NumEmpleadoFirmaAltaEMp='" . mysqli_real_escape_string($this->conn, $datos["NumeroFirmReingreso"]) . "', 
    ContraseniaEmpleadoFirmaAltaEMp='" . mysqli_real_escape_string($this->conn, $datos["contraseniaFirmReingreso"]) . "', 
    noGerenteRegAsignado='" . mysqli_real_escape_string($this->conn, $datos["gerenteReingreso"]) . "', 
    lastDateEdited=now()
    ,numlicencia='" . mysqli_real_escape_string($this->conn, $datos["numLicencia"]) . "'";
     if($datos["fechavigenciaLicencia"] == ""){
        $sql .= " ,fechavigencialicencia=null ";
    }else{
        $sql .= " ,fechavigencialicencia='" . mysqli_real_escape_string($this->conn, $datos["fechavigenciaLicencia"]) . "'";
    }
    $sql .= " ,EstatusRevisionVacaciones='" . mysqli_real_escape_string($this->conn, $estatusRevisionVacReingreso) . "'
    where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
    and empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
    and empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "' ";

  //  $this -> logger -> LogInfo ("Se ejecuto consulta  actualizarFechaReingreso como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarFechaReingreso.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerDatosCuadroAntig($fechaPeriodo1, $fechaPeriodo2)
{
        //$this-> logger -> LogInfo("obtenerDatosCuadroAntig");
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo1: " . $fechaPeriodo1);
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo2: " . $fechaPeriodo2);

    $listaEmpleados = array();

    $sql = "SELECT concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleadoC,
    concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreCompletoC,
    di.fechaImss, di.salarioDiario ,datediff(now(), di.fechaImss) as diasTranscurridos, e.empleadoNumeroSeguroSocial,
    di.salarioDiario, di.registroPatronal, cee.descripcionEstatusEmpleado,   hmi.fechaBaja,hmi.fechaAlta,cm.descMovimientoImss, hmi.fechaMovimiento,hmi.registroMovimiento,hmi.sdiMovimiento
    ,hmi.FIntegracionMovimiento,hmi.SBCMovimiento,hmi.usuarioEdicion,di.empleadoEstatusImss,cc.razonSocial,hmi.loteImss
    from datosimss di
    left join empleados e on (di.empladoEntidadImss=e.entidadFederativaId and
    di.empleadoConsecutivoImss=e.empleadoConsecutivoId
    and di.empleadoCategoriaImss=e.empleadoCategoriaId)
    left join catalogoestatusempleados cee on  (cee.estatusEmpleadoId=e.empleadoEstatusId)
    LEFT JOIN historicomovimientosimss hmi
    ON(e.entidadFederativaId=hmi.empEntidadMovimiento and e.empleadoConsecutivoId=hmi.EmpConsecutivoMovimiento And e.empleadoCategoriaId=hmi.empCategoriaMovimiento)
    left join catalogo_movimientosimss cm
    on(hmi.tipoMovimiento=cm.idTipoMovimiento)
    left join catalogopuntosservicios cps
    on(e.empleadoIdPuntoServicio=cps.idPuntoServicio)
    left join catalogoclientes cc
    on(cps.idClientePunto=cc.idCliente)
    where di.fechaImss between '" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' and '" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "'
    AND hmi.estatusmov=1 order by numeroEmpleadoC";

        //$this->logger->LogInfo("Ejecutando obtenerDatosCuadroAntig: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaEmpleados[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

    return $listaEmpleados;
}

public function traeCatalogoRegistrosPatronales()
{
        // $this -> logger -> LogInfo ("traeCatalogoRegistrosPatronales en persistencia");
    $listaRegistrosPatronales = array();
    try {

        $sql = "SELECT  idcatalogoRegistrosPatronales, entidadRegistro, nombreEntidadFederativa
        FROM catalogoregistrospatronales
        left join entidadesfederativas on (idEntidadFederativa=entidadRegistro)";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoRegistrosPatronales en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaRegistrosPatronales[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de listaRegistrosPatronales ".var_export ($listaRegistrosPatronales, true));
        return $listaRegistrosPatronales;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function actualizarDatosImssCuadro($datosImss)
{
        //$this->logger->LogInfo("Ejecutando. actualizarDatosImssCuadro en persistencia");
    $tipomovimiento = mysqli_real_escape_string($this->conn, $datosImss["tipomovimiento"]);
    $sql            = "update datosimss
    set salarioDiario='" . mysqli_real_escape_string($this->conn, $datosImss["salarioDiario"]) . "'";
    if ($tipomovimiento == 4) {
            $estatusimss = 1; //sin imss
            $sql .= ",registroPatronal='" . mysqli_real_escape_string($this->conn, $datosImss["registroPatronal"]) . "'";
        } else if ($tipomovimiento == 5 || $tipomovimiento == 6) {
            $estatusimss = 5;

        }
        $sql .= " ,idMotivoBajaImss='B',empleadoEstatusImss='$estatusimss'
        where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) . "'
        and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) . "'
        and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "'";
        //$this->logger->LogInfo("Se ejecuto consulta  actualizarDatosImssCuadro como" . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizarDatosImssCuadro.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traeCatalogorTipoTrabajadorImss()
    {
        //$this -> logger -> LogInfo ("traeCatalogorTipoTrabajadorImss en persistencia");
        $listaTiposTrabajador = array();
        try {

            $sql = "SELECT idTipoTrabajadorImss, descripcionTipoTrabajadorImss from catalogotipotrabajadorimss";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogorTipoTrabajadorImss en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaTiposTrabajador[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de traeCatalogorTipoTrabajadorImss ".var_export ($listaTiposTrabajador, true));
            return $listaTiposTrabajador;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function actualizarFotoEmpleado($datosGenerales)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarFotoEmpleado en persistencia");

        $sql = "update empleados " .
        "set fotoEmpleado='" . mysqli_real_escape_string($this->conn, $datosGenerales["fotoEmpleado"]) . "'" .
        "where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $datosGenerales["entidadFederativaId"]) . "'" .
        " and empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoConsecutivoId"]) . "' and " .
        "empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $datosGenerales["empleadoCategoriaId"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarFotoEmpleado como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        $errno = mysqli_errno($this->conn);
        if ($errno != 0) {
            $this->logger->LogInfo("Ocurrio un error al actualizarFotoEmpleado.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo($errno);
        }
    }

    public function consultaGeneral()
    {
        // $this-> logger -> LogInfo("consultaGeneral");

        $listaEmpleados = array();

        $sql = "select
        concat_ws('-',
        e.entidadFederativaId,
        e.empleadoConsecutivoId,
        e.empleadoCategoriaId) as numeroEmpleado,
        e.apellidoPaterno,
        e.apellidoMaterno,
        e.nombreEmpleado,
        e.fechaIngresoEmpleado as fechaIngreso,
        e.fechaBajaEmpleado as fechaBaja,
        ifnull(dp.rfcEmpleado, '') as Rfc,
        ifnull(dp.curpEmpleado, '') as Curp,
        e.empleadoNumeroSeguroSocial as NumeroIMSS,
        e.numeroCta,
        e.numeroCtaClabe,
        e.tesEmpleado,
        e.estaturaEmpleado,
        e.tallaCEmpleado,
        e.tallaPEmpleado,
        e.numCalzadoEmpleado,
        e.pesoEmpleado,
        ctip.descripcionTipoPeriodo as tipoPeriodo,
        cp.descripcionPuesto as Puesto,
        ctp.descripcionCategoria as TipoPuesto,
        ct.descripcionTurno as TipoTurno,
        el.nombreEntidadFederativa as entidadLaboral,
        cps.puntoServicio,
        cac.razonSocial as cliente,
        cg.descripcionGenero as Sexo,
        cee.descripcionEstatusEmpleado as EstatusEmpleado,
        cecc.descripcionEstadoCivil as EdoCivil,
        dp.fechaNacimiento,
        cpn.nombrePais,
        cpn.nacionalidad,
        efn.nombreEntidadFederativa as entidadFederativaNac,
        cmn.nombreMunicipio as municipioNacimiento,
        cge.descripcionGradoEstudios as GradoEstudios,
        cec.descripcionEstatusCartilla as estatusCartilla,
        dp.numeroCartilla,
        co.descripcionOficio as oficio,
        cts.tipoSangre,
        dir.calle,
        dir.numeroExterior,
        dir.numeroInterior,
        concat_ws(' ',
        cta.nombreTipoAsentamiento,
        av.nombreAsentamiento) as Colonia,
        cmv.nombreMunicipio,
        efv.nombreEntidadFederativa as entidadFederativa,
        av.codigoPostalAsentamiento as CP ,
        dir.idAsentamientoDireccion,
        dir.telefonoFijoEmpleado,
        dir.telefonoMovilEmpleado,
        dir.correoEmpleado,
        umf.nombreUnidad,
        domicilioUnidad,
        codigoPostalUnidad
        ,cmb.descripcionMotivoBaja as motivoBaja
        ,hb.comentarioBaja
        ,ctb.descripcionTipoBaja as tipoBaja
        ,e.medioInformacionVacanteId
        ,ifnull(cmi.nombreMedio,'') as nombreMedio
        ,e.reclutadorEntidad
        ,e.reclutadorConsecutivoId
        ,e.reclutadorTipo
        , concat_ws('-',e.reclutadorEntidad,e.reclutadorConsecutivoId,e.reclutadorTipo) as reclutadorId
        , concat_ws(' ',r.apellidoPaterno,r.apellidoMaterno,r.nombreEmpleado) as nombreReclutador
        ,df.CodigoPostalDF
        ,df.ColoniaDF
        ,df.VialidadDF
        ,df.NumeroExternoDF
        ,df.NumeroInternoDF
        ,efdf.nombreEntidadFederativa as EntidadFiscal
        from
        empleados e
        left join historicobajas hb ON(e.entidadFederativaId=hb.empleadoEntidadBaja AND e.empleadoConsecutivoId=hb.empleadoConsecutivoBaja AND e.empleadoCategoriaId=hb.empleadoCategoriaBaja)
        left join catalogomotivosbaja cmb ON (hb.idMotivoBaja=cmb.idcatalogoMotivosBaja)
        left join catalogotipobajas ctb ON (cmb.tipoBajaId=ctb.idTipoBaja)
        left join catalogotipoperiodo ctip ON (e.tipoPeriodo = ctip.tipoPeriodoId)
        left join datospersonales dp ON (e.entidadFederativaId = dp.empleadoEntidadPersonal
        and e.empleadoConsecutivoId = dp.empleadoConsecutivoPersonal
        and e.empleadoCategoriaId = dp.empleadoCategoriaPersonal)
        join catalogopuestos cp ON (e.empleadoIdPuesto = cp.idPuesto)
        left join catalogocategoriastipopuestos ctp ON (e.idTipoPuesto = ctp.idCategoria)
        left join catalogoturnos ct ON (e.empleadoIdTurno = ct.idTipoTurno)
        left join catalogogenero cg ON (e.empleadoIdGenero = cg.idGenero)
        left join catalogopaises cpn ON (dp.paisNacimientoId = cpn.idPais)
        left join entidadesfederativas efn ON (dp.entidadNacimientoId = efn.idEntidadFederativa)
        left join entidadesfederativas el ON (e.idEntidadTrabajo = el.idEntidadFederativa)
        left join catalogomunicipios cmn ON (dp.municipioNacimientoId = cmn.idMunicipio)
        left join catalogogradoestudios cge ON (dp.gradoEstudiosId = cge.idGradoEstudios)
        left join catalogoestatuscartilla cec ON (dp.estatusCartillaId = cec.idEstatusCartilla)
        left join catalogooficios co ON (dp.oficioId = co.idOficio)
        left join catalogotiposangre cts ON (dp.tipoSangreId = cts.idTipoSangre)
        left join catalogoestadocivil cecc ON (dp.estadoCivilId = cecc.idEstadoCivil)
        left join catalogoestatusempleados cee ON (e.empleadoEstatusId = cee.estatusEmpleadoId)
        left join directorio dir ON (e.entidadFederativaId = dir.entidadEmpleadoDirectorio
        and e.empleadoConsecutivoId = dir.consecutivoEmpleadoDirectorio
        and e.empleadoCategoriaId = dir.categoriaEmpleadoDirectorio)
        left join asentamientos av ON (dir.idAsentamientoDireccion = av.idAsentamiento)
        left join catalogotiposasentamientos cta ON (av.asentamientoTipo = cta.idTipoAsentamiento)
        left join catalogomunicipios cmv ON (cmv.idMunicipio = av.municipioAsentamiento)
        left join entidadesfederativas efv ON (cmv.idEstado = efv.idEntidadFederativa)
        left join catalogounidadesmedicas umf ON (dir.idUnidadMedicaAsignada = umf.idUnidadMedica)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
        left join catalogoclientes cac on (cps.idClientePunto=cac.idCliente)
        left join empleados r on (r.entidadFederativaId=e.reclutadorEntidad and r.empleadoConsecutivoId=e.reclutadorConsecutivoId and r.empleadoCategoriaId=e.reclutadorTipo)
        left join datosfiscales df on (df.EntidadEMpDF=e.entidadFederativaId and df.ConsecutivoEmpDF=e.empleadoConsecutivoId and df.CategoriaEmpDF=e.empleadoCategoriaId)
        left join entidadesfederativas efdf ON (df.EntidadFedDF = efdf.idEntidadFederativa)
        left join catalogomedioinformacion cmi on(cmi.idMedio=e.medioInformacionVacanteId) GROUP BY numeroEmpleado";

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consultaGeneral ".var_export ($listaEmpleados, true));
        return $listaEmpleados;
    }

    public function actualizarDatosImss($campo, $valor, $entidadFederativaId, $empleadoConsecutivoId, $empleadoCategoriaId)
    {
        $this -> logger -> LogInfo ("Ejecutando. actualizarDatosImss en persistencia");
        $datoshistorico = array();
        $fechaempleadodatosimss = array();
        $fechaempleadodatosimss2 = array();
        $sql1 = "SELECT tipoMovimiento as TipoMovimientoImss, registroMovimiento as RegistroPatronalHistorico 
                    FROM historicomovimientosimss
                    where idhmi=(SELECT max(idhmi) 
                    FROM historicomovimientosimss
                    where empEntidadMovimiento='" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "'
                    and EmpConsecutivoMovimiento='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                    and empCategoriaMovimiento='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "')";
        $this -> logger -> LogInfo ("Se ejecuto consulta  sql1 como" . $sql1);
        
        $res1 = mysqli_query($this->conn, $sql1);

        while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {

            $datoshistorico[] = $reg1;
        }
        if(count($datoshistorico)!="0"){
            $TipoMovimientoImss=$datoshistorico[0]["TipoMovimientoImss"];
            $RegistroPatronalHistorico=$datoshistorico[0]["RegistroPatronalHistorico"];
        }else{
            $TipoMovimientoImss="Nada";
            $RegistroPatronalHistorico="Nada";
        }

        if($TipoMovimientoImss =="4" || $TipoMovimientoImss =="5" || $TipoMovimientoImss =="6")
        {
            $sql2 = "select fechaImss from datosimss where
                    empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  sql2 como" . $sql2);

            $res2 = mysqli_query($this->conn, $sql2);
            while (($reg2 = mysqli_fetch_array($res2, MYSQLI_ASSOC))) {
                $fechaempleadodatosimss[] = $reg2;
            }
            $fechaImssa=$fechaempleadodatosimss[0]["fechaImss"];
            $sql3 = "update datosimss set fechaaltacambioRP ='$fechaImssa',estatusCambioRP='1' where
                    empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'  ";// se coloca el estatus en 1 indicando que aun no se ha cambiado la fecha al terminar le proceso
        //$this -> logger -> LogInfo ("Se ejecuto consulta  sql3 como" . $sql3);

            $res3 = mysqli_query($this->conn, $sql3);
            $errno3 = mysqli_errno($this->conn);
            if ($errno3 != 0) {
                $this->logger->LogInfo("Ocurrio un error al actualizarDatosImss.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                $this->throwExceptionFromErrNo($errno3);
            }
        }
        if($campo == "fechaImss"){

            $sql2 = "select fechaImss,EstatusFechaAltaTemp,FechaAltaTemp,idTxtImssDatosImss from datosimss where
                    empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  sql2 como" . $sql2);

            $res2 = mysqli_query($this->conn, $sql2);
            while (($reg2 = mysqli_fetch_array($res2, MYSQLI_ASSOC))) {
                $fechaempleadodatosimss2[] = $reg2;
            }
            $fechaImssOriginal=$fechaempleadodatosimss2[0]["fechaImss"];
            $EstatusFechaAltaTemp=$fechaempleadodatosimss2[0]["EstatusFechaAltaTemp"];
            $FechaAltaTemp=$fechaempleadodatosimss2[0]["FechaAltaTemp"];
            $idTxtImssDatosImss=$fechaempleadodatosimss2[0]["idTxtImssDatosImss"];

            if(($EstatusFechaAltaTemp =="0" || $EstatusFechaAltaTemp ==0) && ($idTxtImssDatosImss=="7" || $idTxtImssDatosImss==7)){

                $sql = "update datosimss set " . mysqli_real_escape_string($this->conn, $campo) . "='" . mysqli_real_escape_string($this->conn, $valor) . "', EstatusFechaAltaTemp='1',FechaAltaTemp='" . mysqli_real_escape_string($this->conn, $fechaImssOriginal) . "'
                        where  empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "' 
                        and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "' 
                        and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'  ";
            }else{

                $sql = "update datosimss set " . mysqli_real_escape_string($this->conn, $campo) . "='" . mysqli_real_escape_string($this->conn, $valor) . "' 
                where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "' 
                and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "' 
                and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'  ";
            }            
        }else{
            $sql = "update datosimss set " . mysqli_real_escape_string($this->conn, $campo) . "='" . mysqli_real_escape_string($this->conn, $valor) . "' 
                    where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "' 
                    and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "' 
                    and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'  ";    
        }
        
        $res = mysqli_query($this->conn, $sql);
        $errno = mysqli_errno($this->conn);
        if ($errno != 0) {
            $this->logger->LogInfo("Ocurrio un error al actualizarDatosImss.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo($errno);
        }
    }

    public function insertaDatosImss($datosImss)
    {

        // $this -> logger -> LogInfo ("Ejecutando. insertaDatosImss en persistencia");

        $sql = "INSERT INTO datosimss (" .
        "empladoEntidadImss," .
        "empleadoConsecutivoImss," .
        "empleadoCategoriaImss," .
        "fechaImss," .
        "salarioDiario," .
        "registroPatronal," .
        "tipoTrabajador," .
        "idTxtImssDatosImss," .
        "empleadoEstatusImss," .
        "origenSalarioDiario," .
        "fechaCapturaImss" .
        ") VALUES (" .
        "'" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datosImss["fechaImss"]) . "'," .
        "'" . mysqli_real_escape_string($this->conn, $datosImss["salarioDiario"]) . "'," .
        "'" . mysqli_real_escape_string($this->conn, $datosImss["registroPatronal"]) . "'," .
        "" . mysqli_real_escape_string($this->conn, $datosImss["tipoTrabajador"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $datosImss["Origen"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $datosImss["Origen"]) . ", " .
        "now())";

        // $this -> logger -> LogInfo ("Se ejecuto consulta  insertaDatosImss como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertaDatosImss.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function obtenerListaEmpleadosSinImss()
    {
       // $this-> logger -> LogInfo("obtenerListaEmpleadosSinImss");

        $listaEmpleados = array();

        $sql = "SELECT concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleado,e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado,di.fechaImss, di.salarioDiario ,datediff(now(), di.fechaImss) as diasTranscurridos, e.empleadoNumeroSeguroSocial,ifnull(dp.curpEmpleado,'SIN INFO') as curpEmpleado,di.salarioDiario, di.registroPatronal, cee.descripcionEstatusEmpleado, di.tipoTrabajador,ctti.descripcionTipoTrabajadorImss, datediff(now(), di.fechaImss) as diasTranscurridos,ef.nombreEntidadFederativa as EntidadALaborar,ctp.descripcionCategoria,ifnull(cp.idPuntoServicio,'SIN ID PUNTO') AS idPinto,ifnull(cp.puntoServicio,'SIN PUNTO SERVICIO') as PuntoServ,ifnull(cos.DescripcionSDImss,'SIN ORIGEN') as Origen
            from datosimss di
            left join empleados e on (di.empladoEntidadImss=e.entidadFederativaId and di.empleadoConsecutivoImss=e.empleadoConsecutivoId and di.empleadoCategoriaImss=e.empleadoCategoriaId)
            left join datospersonales dp on (dp.empleadoEntidadPersonal=di.empladoEntidadImss and dp.empleadoConsecutivoPersonal=di.empleadoConsecutivoImss and dp.empleadoCategoriaPersonal=di.empleadoCategoriaImss)
            left join catalogoestatusempleados cee on  (cee.estatusEmpleadoId=e.empleadoEstatusId)
            left join catalogotipotrabajadorimss ctti on (ctti.idTipoTrabajadorImss=di.tipoTrabajador)
            left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
            left join catalogocategoriastipopuestos ctp on (ctp.idCategoria=e.idTipoPuesto)
            left join plantilla p on (di.empladoEntidadImss=p.empleadoEntidadPlantilla and di.empleadoConsecutivoImss=p.empleadoConsecutivoPlantilla and di.empleadoCategoriaImss=p.empleadoCategoriaPlantilla)
            left join servicios_plantillas sp on (p.requisicionId=sp.servicioPlantillaId)
            left join catalogopuntosservicios cp on (cp.idPuntoServicio=sp.puntoServicioPlantillaId)
            left join CatalogoOrigenSalarioDiarioImss cos on (cos.idOrigenSDImss=di.origenSalarioDiario)
            where (e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and di.empleadoEstatusImss=1";
        //$this -> logger -> LogInfo ("Ejecutando obtenerListaEmpleadosSinImss: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaEmpleados[] = $reg;
        }
//       $this -> logger -> LogInfo ("valor del array de la listaEmpleados ".var_export ($listaEmpleados, true));
        return $listaEmpleados;
    }

    public function obtenerListaEmpleadosSinImssPorRegistroPatronal($registroPatronal)
    {
        //$this-> logger -> LogInfo("obtenerListaEmpleadosSinImssPorRegistroPatronal");

        $listaEmpleados = array();

        $sql = "SELECT concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleado,  e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado,
        di.fechaImss, di.salarioDiario ,datediff(now(), di.fechaImss) as diasTranscurridos, e.empleadoNumeroSeguroSocial, ifnull(dp.curpEmpleado,'SIN INFO') as curpEmpleado,
        di.salarioDiario, di.registroPatronal, cee.descripcionEstatusEmpleado, di.tipoTrabajador, ctti.descripcionTipoTrabajadorImss, datediff(now(), di.fechaImss) as diasTranscurridos,emisionAltaImssConfirmada,ef.nombreEntidadFederativa as EntidadALaborar,ctp.descripcionCategoria,ifnull(cp.idPuntoServicio,'SIN ID PUNTO') AS idPinto,ifnull(cp.puntoServicio,'SIN PUNTO SERVICIO') as PuntoServ ,ifnull(cos.DescripcionSDImss,'SIN ORIGEN') as Origen,di.idTxtImssDatosImss
        from datosimss di
        left join empleados e on (di.empladoEntidadImss=e.entidadFederativaId and
        di.empleadoConsecutivoImss=e.empleadoConsecutivoId
        and di.empleadoCategoriaImss=e.empleadoCategoriaId)
        left join datospersonales dp on (dp.empleadoEntidadPersonal=di.empladoEntidadImss and dp.empleadoConsecutivoPersonal=di.empleadoConsecutivoImss and
        dp.empleadoCategoriaPersonal=di.empleadoCategoriaImss)
        left join catalogoestatusempleados cee on  (cee.estatusEmpleadoId=e.empleadoEstatusId)
        left join catalogotipotrabajadorimss ctti on (ctti.idTipoTrabajadorImss=di.tipoTrabajador)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
        left join catalogocategoriastipopuestos ctp on (ctp.idCategoria=e.idTipoPuesto)
            left join plantilla p on (di.empladoEntidadImss=p.empleadoEntidadPlantilla and di.empleadoConsecutivoImss=p.empleadoConsecutivoPlantilla and di.empleadoCategoriaImss=p.empleadoCategoriaPlantilla)
        left join servicios_plantillas sp on (p.requisicionId=sp.servicioPlantillaId)
        left join catalogopuntosservicios cp on (cp.idPuntoServicio=sp.puntoServicioPlantillaId)
        left join CatalogoOrigenSalarioDiarioImss cos on (cos.idOrigenSDImss=di.origenSalarioDiario)
            where (e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and di.empleadoEstatusImss=1 and di.registroPatronal='" . mysqli_real_escape_string($this->conn, $registroPatronal) . "' ";

        //$this -> logger -> LogInfo ("Ejecutando obtenerListaEmpleadosSinImss: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleados ".var_export ($listaEmpleados, true));

        return $listaEmpleados;
    }

    public function actualizarEstatusImss($datosImss)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarEstatusImss en persistencia");

        $sql = "update datosimss " .
        "set empleadoEstatusImss=" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . "," .
        "folioTxt='" . mysqli_real_escape_string($this->conn, $datosImss["folioTxt"]) . "'" .
        " where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) .
        "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) .
        "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusImss como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizarEstatusImss.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function obtenerListaEmpleadosEnProcesoImss()
    {
        //$this-> logger -> LogInfo("obtenerListaEmpleadosEnProcesoImss");

        $listaEmpleados = array();

        $sql = "select concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleado,
        e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado,
        di.fechaImss, di.salarioDiario ,datediff(now(), di.fechaImss) as diasTranscurridos, e.empleadoNumeroSeguroSocial, ifnull(dp.curpEmpleado,'SIN INFO') as curpEmpleado,
        di.salarioDiario, di.registroPatronal, cee.descripcionEstatusEmpleado, di.tipoTrabajador, ctti.descripcionTipoTrabajadorImss, datediff(now(), di.fechaImss) as diasTranscurridos, di.folioTxt
        from datosimss di
        left join empleados e on (di.empladoEntidadImss=e.entidadFederativaId and
        di.empleadoConsecutivoImss=e.empleadoConsecutivoId
        and di.empleadoCategoriaImss=e.empleadoCategoriaId)
        left join datospersonales dp on (dp.empleadoEntidadPersonal=di.empladoEntidadImss and dp.empleadoConsecutivoPersonal=di.empleadoConsecutivoImss and
        dp.empleadoCategoriaPersonal=di.empleadoCategoriaImss)
        left join catalogoestatusempleados cee on  (cee.estatusEmpleadoId=e.empleadoEstatusId)
        left join catalogotipotrabajadorimss ctti on (ctti.idTipoTrabajadorImss=di.tipoTrabajador)
        where (e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and di.empleadoEstatusImss=2";

        //$this -> logger -> LogInfo ("Ejecutando obtenerListaEmpleadosEnProcesoImss: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleados ".var_export ($listaEmpleados, true));

        return $listaEmpleados;
    }

    public function rechazarEmpleadoImss($datosImss)
    {

        //$this -> logger -> LogInfo ("Ejecutando. rechazarEmpleadoImss en persistencia");

        $sql = "update datosimss " .
        "set empleadoEstatusImss=" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . ", " .
        "folioTxt='" . mysqli_real_escape_string($this->conn, $datosImss["folioTxt"]) . "' " .
        " where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  rechazarEmpleadoImss como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al rechazarEmpleadoImss.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traerUltimoFolioTxt()
    {

        //$this-> logger -> LogInfo("traerUltimoFolioTxt");

        try {

            // $sql = "select  LPAD(IF(MAX( folioTxt ) IS NULL , 1, MAX( folioTxt ) + 1 ), 4, 0)  AS 'ultimoFolio' from datosImss";
            $sql = "select MAX(convert(folioTxt , unsigned ) +1 ) AS 'ultimoFolio' from datosImss";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoFolioTxt en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $numeroFolio = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolioTxt ".var_export ($numeroFolio, true));

            return $numeroFolio;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function traerUltimoFolioTxtBaja()
    {

        //$this-> logger -> LogInfo("traerUltimoFolioTxtBaja");

        try {

            // $sql = "select  LPAD(IF(MAX( folioTxtBaja ) IS NULL , 1, MAX( folioTxtBaja ) + 1 ), 4, 0)  AS 'ultimoFolio' from datosImss";
            $sql = "select MAX(convert(folioTxtBaja , unsigned ) +1 ) AS 'ultimoFolio' from datosImss";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoFolioTxtBaja en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $numeroFolio = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolioTxtBaja ".var_export ($numeroFolio, true));

            return $numeroFolio;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function confirmaAltaImss($datosImss)
    {
        // $this -> logger -> LogInfo ("Ejecutando. confirmarLoteImss en persistencia");
        $totalnumempleados= array();
        $sql2 = "select * from datosimss
                where folioTxt='" . mysqli_real_escape_string($this->conn, $datosImss["folioTxt"]) . "'";
        $res2 = mysqli_query($this->conn, $sql2);
        while (($reg2 = mysqli_fetch_array($res2, MYSQLI_ASSOC))) {
            $totalnumempleados[] = $reg2;
        }
        for($i=0;$i<count($totalnumempleados);$i++){
            $empladoEntidadImss=$totalnumempleados[$i]["empladoEntidadImss"];
            $empleadoConsecutivoImss=$totalnumempleados[$i]["empleadoConsecutivoImss"];
            $empleadoCategoriaImss=$totalnumempleados[$i]["empleadoCategoriaImss"];
            $fechaaltacambioRP=$totalnumempleados[$i]["fechaaltacambioRP"];
            $estatusCambioRP=$totalnumempleados[$i]["estatusCambioRP"];
            $EstatusFechaAltaTemp=$totalnumempleados[$i]["EstatusFechaAltaTemp"];
            $FechaAltaTemp=$totalnumempleados[$i]["FechaAltaTemp"];
            if($estatusCambioRP=='1'){
                $sql3 = "update datosimss set fechaaltacambioRP = NULL, estatusCambioRP = '2', fechaImss = '$fechaaltacambioRP' where
                empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $empladoEntidadImss) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoImss) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaImss) . "'  ";// se coloca el estatus en 2 indicando que ya se ha cambiado la fecha al terminar le proceso de cambo de registroP
                $res3 = mysqli_query($this->conn, $sql3);
                $errno3 = mysqli_errno($this->conn);
                if ($errno3 != 0) {
                    $this->logger->LogInfo("Ocurrio un error al actualizarDatosImss.");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo($errno3);
                }
            }

            if($EstatusFechaAltaTemp=='1' || $EstatusFechaAltaTemp==1){
                $sql4 = "update datosimss set FechaAltaTemp = NULL, EstatusFechaAltaTemp = '0', fechaImss = '$FechaAltaTemp' where
                empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $empladoEntidadImss) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoImss) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaImss) . "'  ";// se coloca el estatus en 0 indicando que ya se ha cambiado la fecha al terminar le proceso de cambo de MSD
                $this -> logger -> LogInfo ("valor del array de la totalnumempleados ".var_export ($totalnumempleados, true));
                $this -> logger -> LogInfo ("Se ejecuto consulta  Cambio de fecha Temporal como" . $sql4);
                $res4 = mysqli_query($this->conn, $sql4);
                $errno4 = mysqli_errno($this->conn);
                if ($errno4 != 0) {
                    $this->logger->LogInfo("Ocurrio un error al actualizarDatosImss.");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo($errno3);
                }
            }
        }            
        $sql = "update datosimss " .
        "set numeroLote='" . mysqli_real_escape_string($this->conn, $datosImss["numeroLote"]) . "',
        fechaBajaImss=NULL,empleadoEstatusImss=" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . "" .
        " where folioTxt='" . mysqli_real_escape_string($this->conn, $datosImss["folioTxt"]) . "' ";

        // $this -> logger -> LogInfo ("Se ejecuto consulta  confirmaAltaImss como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al confirmarLoteImss.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function reingresarEmpleadoImss($datosImss)
    {
 
        $sql = " update datosimss set empleadoEstatusImss=" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . ", fechaImss='" . mysqli_real_escape_string($this->conn, $datosImss["fechaImss"]) . "', numeroLote='" . mysqli_real_escape_string($this->conn, $datosImss["numeroLote"]) . "',origenSalarioDiario='2', salarioDiario='" . mysqli_real_escape_string($this->conn, $datosImss["salario"]) . "', folioTxt='" . mysqli_real_escape_string($this->conn, $datosImss["folioTxt"]) . "' where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "' ";
    // $this -> logger -> LogInfo ("Se ejecuto consulta  reingresarEmpleadoImss como" . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al reingresarEmpleadoImss.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function solicitarBajaImss($datosImss)
    {

        //$this -> logger -> LogInfo ("Ejecutando. solicitarBajaImss en persistencia");

        $sql = "update datosimss " .
        "set empleadoEstatusImss=" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . ", " .

        "fechaBajaImss='" . mysqli_real_escape_string($this->conn, $datosImss["fechaBajaImss"]) . "', " .
        "idMotivoBajaImss=" . mysqli_real_escape_string($this->conn, $datosImss["idMotivoBajaImss"]) . " " .
        " where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) .
        "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) .
        "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "' ";

       // $this -> logger -> LogInfo ("Se ejecuto consulta solicitarBajaImss como" . $sql);
        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al solicitarBajaImss.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function obtenerListaEmpleadosSinBajaImss()
    {
        //$this-> logger -> LogInfo("obtenerListaEmpleadosSinBajaImss");

        $listaEmpleados = array();

        $sql = "select concat_ws('-', e.entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado,
        e.fechaIngresoEmpleado,e.empleadoEstatusId, e.fechaBajaEmpleado ,  di.empleadoEstatusImss,
        di.fechaBajaImss, idMotivoBajaImss, mbi.descripcionMotivoBajaImss, di.registroPatronal, di.fechaImss,di.numeroLote
        from empleados e
        left join datosimss di on (e.entidadFederativaId=di.empladoEntidadImss and e.empleadoConsecutivoId=di.empleadoConsecutivoImss and
        e.empleadoCategoriaId=di.empleadoCategoriaImss)
        left join catalogomotivosbajasimss  mbi on (di.idMotivoBajaImss=mbi.motivoBajaImssId)
        where di.empleadoEstatusImss=5
        group by numeroEmpleado";

        //$this -> logger -> LogInfo ("Ejecutando obtenerListaEmpleadosSinBajaImss: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleados ".var_export ($listaEmpleados, true));

        return $listaEmpleados;
    }

    public function traeCatalogorMotivoBajaImss()
    {
        //$this -> logger -> LogInfo ("traeCatalogorMotivoBajaImss en persistencia");
        $lista = array();
        try {

            $sql = "select motivoBajaImssId, descripcionMotivoBajaImss from catalogomotivosbajasimss where motivoBajaImssId <> 'B'";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogorMotivoBajaImss en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de traeCatalogorMotivoBajaImss ".var_export ($lista, true));
            return $lista;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

    public function obtenerListaEmpleadosSinBajaImssPorRegistroPatronal($registroPatronal)
    {
        //$this-> logger -> LogInfo("obtenerListaEmpleadosSinBajaImssPorRegistroPatronal");

        $listaEmpleados = array();

        $sql = "select di.empladoEntidadImss,di.empleadoConsecutivoImss,di.empleadoCategoriaImss,
        concat_ws('-', e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado,
        e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado,
        e.fechaIngresoEmpleado, mb.descripcionMotivoBaja,  e.empleadoEstatusId, e.fechaBajaEmpleado , hb.fechaCausaBaja, di.empleadoEstatusImss,
        di.fechaBajaImss, idMotivoBajaImss, mbi.descripcionMotivoBajaImss, di.registroPatronal, e.empleadoNumeroSeguroSocial, di.fechaImss,di.emisionBajaConfirmada,di.numeroLote
        from empleados e
        left join historicobajas hb on (e.entidadFederativaId=hb.empleadoEntidadBaja and e.empleadoConsecutivoId=hb.empleadoConsecutivoBaja and
        e.empleadoCategoriaId=hb.empleadoCategoriaBaja)
        left join datosimss di on (e.entidadFederativaId=di.empladoEntidadImss and e.empleadoConsecutivoId=di.empleadoConsecutivoImss and
        e.empleadoCategoriaId=di.empleadoCategoriaImss)
        left join catalogomotivosbaja mb on (hb.idMotivoBaja=mb.idcatalogoMotivosBaja)
        left join catalogomotivosbajasimss  mbi on (di.idMotivoBajaImss=mbi.motivoBajaImssId)
        where di.empleadoEstatusImss=5
        and di.registroPatronal='" . mysqli_real_escape_string($this->conn, $registroPatronal) . "' group by numeroEmpleado ";

        //$this -> logger -> LogInfo ("Ejecutando obtenerListaEmpleadosSinBajaImssPorRegistroPatronal: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleados ".var_export ($listaEmpleados, true));

        return $listaEmpleados;
    }

    public function cambiarEstatusImssProcesoBaja($datosImss)
    {

        //$this -> logger -> LogInfo ("Ejecutando. cambiarEstatusImssProcesoBaja en persistencia");

        $sql = "update datosimss " .
        "set empleadoEstatusImss=" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . ", " .
        "folioTxtBaja='" . mysqli_real_escape_string($this->conn, $datosImss["folioTxtBaja"]) . "' " .
        " where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) .
        "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) .
        "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta cambiarEstatusImssProcesoBaja como" . $sql);
        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al cambiarEstatusImssProcesoBaja.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function obtenerListaEmpleadosEnProcesoBaja()
    {
        //$this-> logger -> LogInfo("obtenerListaEmpleadosSinBajaImss");

        $listaEmpleados = array();

        $sql = "select concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleado,
        e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado,
        di.fechaBajaImss, di.registroPatronal, di.folioTxtBaja
        from datosimss di
        left join empleados e on (di.empladoEntidadImss=e.entidadFederativaId and
        di.empleadoConsecutivoImss=e.empleadoConsecutivoId
        and di.empleadoCategoriaImss=e.empleadoCategoriaId)
        left join datospersonales dp on (dp.empleadoEntidadPersonal=di.empladoEntidadImss and dp.empleadoConsecutivoPersonal=di.empleadoConsecutivoImss and
        dp.empleadoCategoriaPersonal=di.empleadoCategoriaImss)
        left join catalogoestatusempleados cee on  (cee.estatusEmpleadoId=e.empleadoEstatusId)
        left join catalogotipotrabajadorimss ctti on (ctti.idTipoTrabajadorImss=di.tipoTrabajador)
        where di.empleadoEstatusImss=6";

        // $this -> logger -> LogInfo ("Ejecutando obtenerListaEmpleadosSinBajaImss: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleados ".var_export ($listaEmpleados, true));

        return $listaEmpleados;
    }

    public function confirmaBajaImss($datosImss)
    {
        //$this -> logger -> LogInfo ("Ejecutando. confirmaBajaImss en persistencia");
        $ListaempleadosParaBajaTarjetas = array();
        $sql1 = "SELECT IdTarjetaDespensa FROM datosimss 
        left join TarjetaDespensa ON (datosimss.empladoEntidadImss=TarjetaDespensa.EntidadEmpleadoTarjeta and datosimss.empleadoConsecutivoImss=TarjetaDespensa.ConsecutivoEmpleadoTarjeta and datosimss.empleadoCategoriaImss=TarjetaDespensa.TipoEmpleadoTarjeta)
        where datosimss.folioTxtBaja='" . mysqli_real_escape_string($this->conn, $datosImss["folioTxtBaja"]) . "'
        and TarjetaDespensa.idEstatusTarjeta='4'";
        $res1 = mysqli_query($this->conn, $sql1);
        while ($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC)) {
            $ListaempleadosParaBajaTarjetas[] = $reg1;
        }
        for ($i=0; $i < count($ListaempleadosParaBajaTarjetas); $i++) {
            $IdTarjetaADarDeBaja = $ListaempleadosParaBajaTarjetas[$i]["IdTarjetaDespensa"];
            $EstatusTarjeta = "5";// Es 5 ya que indica que es por baja de empleado en el catalogo
            $sql2 = "update TarjetaDespensa set idEstatusTarjeta='" . mysqli_real_escape_string($this->conn, $EstatusTarjeta) . "'
                    where IdTarjetaDespensa='" . mysqli_real_escape_string($this->conn, $IdTarjetaADarDeBaja) . "'";
            $res2 = mysqli_query($this->conn, $sql2);
            if ($res2 !== true) {
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }
        }

      $sql = "update datosimss " .
        "set numeroLoteBaja='" . mysqli_real_escape_string($this->conn, $datosImss["numeroLoteBaja"]) . "', " .
        "empleadoEstatusImss=" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . "" .
        " where folioTxtBaja='" . mysqli_real_escape_string($this->conn, $datosImss["folioTxtBaja"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  confirmaBajaImss como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al confirmaBajaImss.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traeCatalogoPuntosServicios()
    {
        $listaPuestos = array();

        $sql = "select IdPuesto, descripcionPuesto, puestoLineaNegocioId from catalogoPuestos where puestoIdCategoria='" . mysqli_real_escape_string($this->conn, $tipoPuesto) . "' and puestoLineaNegocioId=" . mysqli_real_escape_string($this->conn, $lineaNegocio) . " order by descripcionPuesto";
        //$this -> logger -> LogInfo ("Ejecutando SQL: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaPuestos[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $listaPuestos;
    }

    public function traerCatalogoPuntosServicios()
    {
        //$this-> logger -> LogInfo("traerCatalogoPuntosServicios"); RangoAsistencia

        try {

            $sql = "select  idPuntoServicio,
            numeroCentroCosto,
            numeroOrden,
            puntoServicio,
            cc.razonSocial,
            ef.nombreEntidadFederativa,
            direccionPuntoServicio,
            esatusPunto,
            fechaInicioServicio,
            fechaTerminoServicio,
            contactoFacturacion,
            telefonoFijoFacturacion,
            telefonoMovilFacturacion,
            correoFacturacion,
            contactoTesoreria,
            telefonoFijoTesoreria,
            telefonoMovilTesoreria,
            correoTesoreria,
            contactoOperativo,
            telefonoFijoOperativo,
            telefonoMovilOperativo,
            correoOperativo,
            terminoFacturacion,
            idClientePunto,
            idEntidadPunto,
            cobraDescansos,
            cobraDiaFestivo,
            cobra31,
            latitudPunto,
            longitudPunto,
            nombrePuntoFacturacion,
            centroCostoFacturacion,
            turnosFlat,
            visiblerh,cubredescanso,
            cps.idLineaNegocioPunto,
            cln.descripcionLineaNegocio,
            cps.idIncrementRegionPuntoServ,
            ir.idRegionI,ir.DescripcionI,
            cps.municipiodelegacion,
            cps.unidad,
            cps.EntidadPuntoS,
            cps.MunicipioPuntoS,
            cps.ColoniaPuntoS,
            cps.AsentamientoPuntoS, 
            cps.CallePrincipaPuntoS, 
            cps.NumeroInterirPuntoS, 
            cps.NumeroExteriorPuntoS, 
            cps.PrimerCallePuntoS, 
            cps.SegundaCallePuntoS,
            cps.CodigoPostalPuntoS,
            cps.RangoAsistencia,
            efe.nombreEntidadFederativa,
            cm.nombreMunicipio,
            ca.nombreAsentamiento
            from catalogopuntosservicios cps
            left join catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
            left join entidadesfederativas ef ON (ef.idEntidadFederativa = cps.idEntidadPunto)
            left join index_regiones ir on(cps.idIncrementRegionPuntoServ=ir.idIncrementI)
            left join catalogolineanegocio cln on (cps.idLineaNegocioPunto=cln.idLineaNegocio)
            left join entidadesfederativas efe ON (cps.EntidadPuntoS = efe.idEntidadFederativa)
            left join catalogomunicipios cm ON (cps.MunicipioPuntoS =cm.idMunicipio)
            left join asentamientos ca ON (cps.ColoniaPuntoS =ca.idAsentamiento)
            where idPuntoServicio!= '1747'
            order by puntoServicio";
            //$this -> logger -> LogInfo ("ejecutando traerCatalogoPuntosServicios en persistencia ". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

            return $lista;

        } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }

    }

    public function actualizaEstatusPuntoServicio($idPuntoServicio, $esatusPunto, $fechaTerminoServicio)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizaEstatusPuntoServicio en persistencia");

        //$this -> logger -> LogInfo ("valor del array de la idPuntoServicio ".var_export ($idPuntoServicio, true));
        //$this -> logger -> LogInfo ("valor del array de la esatusPunto ".var_export ($esatusPunto, true));
        //$this -> logger -> LogInfo ("valor del array de la fechaTerminoServicio ".var_export ($fechaTerminoServicio, true));

        $sql = "update catalogopuntosservicios " .
        "set fechaTerminoServicio='" . mysqli_real_escape_string($this->conn, $fechaTerminoServicio) . "', " .
        "esatusPunto=" . mysqli_real_escape_string($this->conn, $esatusPunto) . "" .
        " where idPuntoServicio=" . mysqli_real_escape_string($this->conn, $idPuntoServicio) . " ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizaEstatusPuntoServicio como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizaEstatusPuntoServicio.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }
    public function actualizaEstatusPuntoServicioReactivacion($idPuntoServicio, $esatusPunto, $fechaInicioServicio)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizaEstatusPuntoServicioReactivacion en persistencia");

        //$this -> logger -> LogInfo ("valor del array de la idPuntoServicio ".var_export ($idPuntoServicio, true));
        //$this -> logger -> LogInfo ("valor del array de la esatusPunto ".var_export ($esatusPunto, true));
        //$this -> logger -> LogInfo ("valor del array de la fechaInicioServicio ".var_export ($fechaInicioServicio, true));

        $sql = "update catalogopuntosservicios " .
        "set fechaInicioServicio='" . mysqli_real_escape_string($this->conn, $fechaInicioServicio) . "', " .
        "esatusPunto=" . mysqli_real_escape_string($this->conn, $esatusPunto) . "" .
        " where idPuntoServicio=" . mysqli_real_escape_string($this->conn, $idPuntoServicio) . " ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizaEstatusPuntoServicioReactivacion como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizaEstatusPuntoServicioReactivacion.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function consultaAsentamientos()
    {
        //$this-> logger -> LogInfo("asentamientos");

        $listaEmpleados = array();

        $sql = "select * from asentamientos";

        //$this -> logger -> LogInfo ("Ejecutando asentamientos: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la asentamientos ".var_export ($listaEmpleados, true));

        return $listaEmpleados;
    }

    public function obtenerListaEmpleadosPorFechaCaptura($dia, $mes, $anio)
    {
       // $this-> logger -> LogInfo("obtenerListaEmpleadosPorFechaCaptura");

        $listaEmpleados = array();

        $sql = "select concat_ws('-', e.entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado,
        e.fechaIngresoEmpleado , e.usuarioCapturaEmpleado,concat_ws(' ', u.apellidoPaterno, u.apellidoMaterno,u.nombre) as nombreUsuarioCaptura,concat_ws(' ', us.apellidoPaterno, us.apellidoMaterno,us.nombre) as nombreUsuarioCaptura1, e.empleadoFechaCaptura, ctp.descripcionTipoPeriodo as Periodo,e.userEdited,e.empleadoEstatusId
        from empleados e
        left join usuarios u on(e.usuarioCapturaEmpleado=u.usuario)
        left join usuarios us on(e.userEdited=us.usuario)
        left join catalogotipoperiodo ctp on (e.tipoPeriodo=ctp.tipoPeriodoId)
        where
        day(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $dia) . "' and
        month(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $mes) . "' and
        year(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $anio) . "' ";

        //$this -> logger -> LogInfo ("Ejecutando obtenerListaEmpleadosPorFechaCaptura: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleados ".var_export ($listaEmpleados, true));

        return $listaEmpleados;
    }

    public function traerCatalogoPuntosServiciosByCliente($clienteId)
    {
        //$this-> logger -> LogInfo("traerCatalogoPuntosServiciosByCliente");

        try {

            $sql = "select idPuntoServicio,numeroCentroCosto,numeroOrden, puntoServicio, cc.razonSocial, ef.nombreEntidadFederativa,
            direccionPuntoServicio, esatusPunto
            from catalogopuntosservicios cps
            left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
            left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
            where esatusPunto=1 and idClientePunto=" . mysqli_real_escape_string($this->conn, $clienteId) . " order by puntoServicio asc ";

            //$this -> logger -> LogInfo ("ejecutando traerCatalogoPuntosServiciosByCliente en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

            return $lista;

        } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }

    }

    public function traerCatalogoPuntosServiciosByName($nombrePunto)
    {
        //$this-> logger -> LogInfo("traerCatalogoPuntosServiciosByCliente");
        $lista = array();

        try {

            $sql = "select idPuntoServicio,numeroCentroCosto,numeroOrden, puntoServicio, cc.razonSocial,cc.rfcCliente, cc.contactoCliente, cc.telefonoFijoCliente, cc.telefonoMovilCliente,cc.correoCliente, cc.direccionFiscalCliente,ef.nombreEntidadFederativa,direccionPuntoServicio, esatusPunto, cobraDescansos, cobraDiaFestivo, cobra31,cps.cubredescanso,cps.idLineaNegocioPunto,cln.descripcionLineaNegocio,cps.idClientePunto
            from catalogopuntosservicios cps
            left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
            left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
            left join catalogolineanegocio cln on (cps.idLineaNegocioPunto=cln.idLineaNegocio)
            where esatusPunto=1 and puntoServicio='" . mysqli_real_escape_string($this->conn, $nombrePunto) . "' order by puntoServicio asc";

            //$this -> logger -> LogInfo ("ejecutando traerCatalogoPuntosServiciosByCliente en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

            return $lista;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }
//Ya fue modificado

    public function registroDatosPlantilla($datos)
    {

        // $this -> logger -> LogInfo ("Ejecutando. registroDatosPlantilla en persistencia");

        $sql = "insert into servicios_plantillas (puntoServicioPlantillaId,
        puestoPlantillaId,
        tipoTurnoPlantillaId,
        folio,
        fechaInicio,
        numeroElementos,
        turnosPorDia,
        costoPorTurno,
        cobraDescanso,
        cobraFestivos,
        cobraDia31,
        usuarioCapturaPlantilla,
        estatusPlantilla,
        tipoRequisicion,
        comentarioRequisicion,
        lineaNegocioRequisicion,
        costoNetoFactura,
        recursosMateriales,
        fechaTerminoPlantilla,
        IdRolOperativoPlantilla,
        rolOperativoPlantilla,
        fechaRegistroPlantilla
    ) VALUES (" .   
    "'" . mysqli_real_escape_string($this->conn, $datos["puntoServicioPlantillaId"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $datos["puestoPlantillaId"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $datos["tipoTurnoPlantillaId"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $datos["folio"]) . "'," .
    "'" . mysqli_real_escape_string($this->conn, $datos["fechaInicio"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $datos["numeroElementos"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $datos["turnosPorDia"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $datos["costoPorTurno"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $datos["cobraDescanso"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $datos["cobraFestivos"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $datos["cobraDia31"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $datos["usuarioCapturaPlantilla"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $datos["estatusPlantilla"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $datos["tipoRequisicion"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $datos["comentarioRequisicion"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $datos["lineaNegocioRequisicion"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $datos["costoNetoFactura"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["recursosMateriales"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["fechaTerminoPlantilla"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["selectRolOpA"]) . "', " .
    "'" . $datos["rolOperativo"] . "', " .
    "now())";

     // $this -> logger -> LogInfo ("Se ejecuto consulta  registroDatosPlantilla como " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al registroDatosPlantillaaaaaa.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
        //////// obtenemos el id de la plantilla ingresada //////////////////
    $idpuntos = $datos["puntoServicioPlantillaId"];
    $DatosConsulta = array();
    $sql1 = "SELECT max(servicioPlantillaId) as idPlantilla
    FROM servicios_plantillas
    WHERE puntoServicioPlantillaId='$idpuntos'";
    // $this -> logger -> LogInfo ("Se ejecuto consulta  registroDatosPlantillaaaaa como " . $sql1);
    $res1 = mysqli_query($this->conn, $sql1);
    while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
        $DatosConsulta[] = $reg1;
    }
        // $this -> logger -> LogInfo ("valor del array de la DatosConsulta ".var_export ($DatosConsulta, true));

        //////////// insertamos en la tabla de DiasDeTrabajoPlantilla////////////////

    $sql3 = "insert into DiasDeTrabajoPlantilla (servicioPlantillaId, DescansoMismoDia, LunesTurnoDia, LunesTurnoNoche, MartesTurnoDia, MartesTurnoNoche, MiercolesTurnoDia, MiercolesTurnoNoche, JuevesTurnoDia, JuevesTurnoNoche, ViernesTurnoDia, ViernesTurnoNoche, SabadoTurnoDia, SabadoTurnoNoche, DomingoTurnoDia, DomingoTurnoNoche
) VALUES (" .   
"'" . mysqli_real_escape_string($this->conn, $DatosConsulta[0]["idPlantilla"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["checkElementos0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TDiaLunes0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TNocheLunes0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TDiaMartes0"]) . "'," .
"'" . mysqli_real_escape_string($this->conn, $datos["TNochesMartes0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TDiaMiercoles0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TNocheMiercoles0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TDiaJueves0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TNocheJueves0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TDiaViernes0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TNocheViernes0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TDiaSabado0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TNocheSabado0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TDiaDomingo0"]) . "', " .
"'" . mysqli_real_escape_string($this->conn, $datos["TNocheDomingo0"]) . "')";

        // $this -> logger -> LogInfo ("Se ejecuto consulta  registroDatosPlantilla como " . $sql3);

$res3 = mysqli_query($this->conn, $sql3);

if ($res3 !== true) {
    $this->logger->LogInfo("Ocurrio un error al registrar datos DiasDeTrabajoPlantilla.");
    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
}

//////////// insertamos en la tabla de HorariosPlantillas////////////////
for ($i=0; $i < $datos["LargotablaHorarios"] ; $i++) { 
 
    $sql4 = "insert into Horarios_Plantillas (idHorarioPlantillas, idPlantilla, idHorario) VALUES (null,'" . mysqli_real_escape_string($this->conn, $DatosConsulta[0]["idPlantilla"]) . "','" . mysqli_real_escape_string($this->conn, $datos["idHorario".$i]) . "')";

    // $this -> logger -> LogInfo ("Se ejecuto consulta  registroDatosPlantilla como " . $sql4);
    $res4 = mysqli_query($this->conn, $sql4);
    if ($res4 !== true) {
        $this->logger->LogInfo("Ocurrio un error al registrar datos HORARIO DE LA PLANTILLAS.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
    
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
/////////////////////////////////////////////////////////////////////////////////

}
// Ya fue modificado
public function selectPlantillaRequisicion($puntoServicio)
{
        //$this-> logger -> LogInfo("selectPlantillaRequisicion");
    $lista = array();

    try {

        $sql = "SELECT sp.servicioPlantillaId as idPlantilla, sp.puntoServicioPlantillaId,
        sp.puestoPlantillaId, cp.descripcionPuesto, sp.tipoTurnoPlantillaId,sp.costoNetoFactura,sp.rolOperativoPlantilla,
        ct.descripcionTurno,
        sp.folio,fechaRegistroPlantilla,
        sp.fechaInicio,sp.fechaTerminoPlantilla,sp.numeroElementos,
        sp.turnosPorDia,sp.costoPorTurno,
        sp.cobraDescanso,sp.cobraFestivos,sp.cobraDia31,
        sp.usuarioCapturaPlantilla,sp.lastEdited, sp.estatusPlantilla, sp.comentarioRequisicion,sp.recursosMateriales,
        cps.puntoservicio, cc.razonSocial, cps.cobraDescansos, cps.cobraDiaFestivo, cps.cobra31,
        cps.fechaInicioServicio, cps.fechaTerminoServicio,
        dt.idDiasATrabajar,dt.servicioPlantillaId,dt.DescansoMismoDia,dt.LunesTurnoDia,dt.LunesTurnoNoche,dt.MartesTurnoDia, 
        dt.MartesTurnoNoche,dt.MiercolesTurnoDia,dt.MiercolesTurnoNoche,dt.JuevesTurnoDia,dt.JuevesTurnoNoche, 
        dt.ViernesTurnoDia,dt.ViernesTurnoNoche,dt.SabadoTurnoDia,dt.SabadoTurnoNoche,dt.DomingoTurnoDia,dt.DomingoTurnoNoche,
        cps.idClientePunto,cps.idLineaNegocioPunto,cln.descripcionLineaNegocio,sp.IdRolOperativoPlantilla
        from servicios_plantillas sp
        left join catalogopuestos cp on (cp.idPuesto=sp.puestoPlantillaId)
        left join catalogoturnos ct on (ct.idTipoTurno=sp.tipoTurnoPlantillaId)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        left join DiasDeTrabajoPlantilla dt on (dt.servicioPlantillaId=sp.servicioPlantillaId)
        left join catalogolineanegocio cln on (cps.idLineaNegocioPunto=cln.idLineaNegocio)
        
        where sp.estatusPlantilla='1'
        and puntoServicioPlantillaId='" . mysqli_real_escape_string($this->conn, $puntoServicio) . "' and sp.numeroElementos > 0";

            //$this -> logger -> LogInfo ("ejecutando selectPlantillaRequisicion en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}
public function selectTipoRequisicion()
{
        // $this-> logger -> LogInfo("traerCatalogoPuntosServiciosByCliente");

    try {

        $sql = "select * from  catalogotiporequsicion;";

            //$this -> logger -> LogInfo ("ejecutando traerCatalogoPuntosServiciosByCliente en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }

}

public function selectFolioRequisicion()
{

        //$this-> logger -> LogInfo("traerUltimoFolioTxtRequisicion");

    try {

        // $sql = "select  LPAD(IF(MAX( folio ) IS NULL , 1, MAX( folio ) + 1 ), 4, 0)  AS 'folioRequisicion' from servicios_plantillas";
        $sql = "select MAX(convert(folio , unsigned ) +1 ) AS 'folioRequisicion' from servicios_plantillas";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoFolioTxtRequisicion en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $numeroFolio = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolioTxtRequisicion ".var_export ($numeroFolio, true));

        return $numeroFolio;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function selectBajasEmpleadosPorFechaCaptura($dia, $mes, $anio)
{
        //$this-> logger -> LogInfo("selectBajasEmpleadosPorFechaCaptura");

    $listaEmpleados = array();

    $sql = "select concat_ws('-', e.entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
    e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado,
    e.fechaIngresoEmpleado, ctb.descripcionTipoBaja,mb.descripcionMotivoBaja,  e.empleadoEstatusId, e.fechaBajaEmpleado ,
    hb.fechaCausaBaja, hb.comentarioBaja,hb.fechaCapturaBaja, hb.usuarioCapturaBaja,
    concat_ws(' ', u.nombre,u.apellidoPaterno,u.apellidoMaterno) as usuarioRegistroBaja, ctp.descripcionTipoPeriodo as Periodo
    from empleados e
    left join historicobajas hb on (e.entidadFederativaId=hb.empleadoEntidadBaja
    and e.empleadoConsecutivoId=hb.empleadoConsecutivoBaja and
    e.empleadoCategoriaId=hb.empleadoCategoriaBaja)
    left join catalogomotivosbaja mb on (hb.idMotivoBaja=mb.idcatalogoMotivosBaja)
    left join usuarios u on (u.usuario=hb.usuarioCapturaBaja)
    left join catalogotipobajas ctb on (ctb.idTipoBaja=mb.tipoBajaId)
    left join catalogotipoperiodo ctp on (e.tipoPeriodo=ctp.tipoPeriodoId)
    where e.empleadoEstatusId=0  and
    e.fechaBajaEmpleado=hb.fechaCausaBaja and
    day(fechaCapturaBaja)=" . mysqli_real_escape_string($this->conn, $dia) . " and
    month(fechaCapturaBaja)=" . mysqli_real_escape_string($this->conn, $mes) . " and
    year(fechaCapturaBaja)=" . mysqli_real_escape_string($this->conn, $anio) . " group by numeroEmpleado order by numeroEmpleado";

        //$this -> logger -> LogInfo ("Ejecutando selectBajasEmpleadosPorFechaCaptura: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaEmpleados[] = $reg;
    }

        // $this -> logger -> LogInfo ("valor del array de la listaEmpleados ".var_export ($listaEmpleados, true));

    return $listaEmpleados;
}

public function selectDatosPuntoServicio($puntoServicio)
{
        //$this-> logger -> LogInfo("selectDatosPuntoServicio");
    $lista = array();

    try {

        $sql = "select cps.idPuntoServicio,cps.numeroCentroCosto, cps.puntoServicio,cps.idEntidadPunto,cps.esatusPunto,cps.numeroOrden,
        cps.idClientePunto, cc.razonSocial, cc.nombreComercial, cc.rfcCliente, cc.contactoCliente, cc.telefonoFijoCliente, cc.telefonoMovilCliente, cc.correoCliente,
        cc.claveClienteNomina, cc.direccionFiscalCliente,cps.terminoFacturacion,
        cps.direccionPuntoServicio,cps.contactoFacturacion,cps.telefonoFijoFacturacion,cps.telefonoMovilFacturacion,cps.correoFacturacion,
        cps.contactoTesoreria,cps.telefonoFijoTesoreria,cps.telefonoMovilTesoreria,cps.correoTesoreria,
        cps.contactoOperativo,cps.telefonoFijoOperativo,cps.telefonoMovilOperativo,cps.correoOperativo,
        cps.fechaInicioServicio,cps.fechaTerminoServicio, cps.usuarioCapturaPunto,cps.fechaCapturaPunto,
        ifnull(cps.cobraDescansos,0) as cobraDescansos , ifnull(cps.cobraDiaFestivo,0) as cobraDiaFestivo, ifnull(cps.cobra31,0) as cobra31
        from catalogopuntosservicios cps
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        where idPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicio) . "";

            //$this -> logger -> LogInfo ("ejecutando selectDatosPuntoServicio en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function selectEmpleadosByEntidad($empleadoEntidad)
{
        //$this-> logger -> LogInfo("selectEmpleadosByEntidad");

    $empleado = array();

    $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId,concat_ws('-', e.entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado, e.apellidoPaterno, e.empleadoIdTurno,e.empleadoIdGenero,
    ifnull(e.fotoEmpleado,'') fotoEmpleado,
    e.apellidoMaterno, e.nombreEmpleado, e.fechaIngresoEmpleado ,e.empleadoNumeroSeguroSocial,e.empleadoEstatusId, e.numeroCta, e.numeroCtaClabe,
    e.idTipoPuesto, e.empleadoIdPuesto, e.idEntidadTrabajo,  e.empleadoIdPuntoServicio, e.empleadoLineaNegocioId,
    e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia, e.fechaBajaEmpleado,
    cp.descripcionPuesto, ctp.descripcionCategoria, ct.descripcionTurno ,
    cg.descripcionGenero, cee.descripcionEstatusEmpleado,
    ifnull(concat(dp.empleadoEntidadPersonal,dp.empleadoConsecutivoPersonal,dp.empleadoCategoriaPersonal) ,0) datoPersonal ,DATEDIFF(e.fechaIngresoEmpleado,dp.fechaNacimiento) as 'diasEdad',
    dp.fechaNacimiento, dp.paisNacimientoId,cpn.nombrePais,cpn.nacionalidad ,dp.entidadNacimientoId,
    efn.nombreEntidadFederativa as 'entidadNacimiento', dp.municipioNacimientoId,cmn.nombreMunicipio as 'municipioNacimiento', dp.curpEmpleado, dp.rfcEmpleado,
    dp.estadoCivilId,cedoc.descripcionEstadoCivil, dp.gradoEstudiosId,cge.descripcionGradoEstudios ,dp.tipoSangreId,cts.tipoSangre, dp.oficioId, co.descripcionOficio,
    dp.estatusCartillaId, dp.numeroCartilla, a.codigoPostalAsentamiento, a.municipioAsentamiento,
    ifnull(concat(dir.entidadEmpleadoDirectorio,dir.consecutivoEmpleadoDirectorio,dir.categoriaEmpleadoDirectorio) , 0)  directorio,
    dir.idAsentamientoDireccion,cta.nombreTipoAsentamiento ,a.nombreAsentamiento, cma.nombreMunicipio, a.codigoPostalAsentamiento, ef.nombreEntidadFederativa,
    dir.calle, dir.numeroExterior, dir.numeroInterior, dir.telefonoFijoEmpleado, dir.telefonoMovilEmpleado, dir.correoEmpleado, dir.idUnidadMedicaAsignada,
    cum.idMunicipioUnidad, cum.nombreUnidad, cum.domicilioUnidad, cum.codigoPostalUnidad,
    count(nombreFamiliar) datoFamiliar
    ,e.fotoFirma
    from empleados e
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogocategoriastipopuestos ctp on (ctp.idCategoria=cp.puestoIdCategoria)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogogenero cg on (cg.idGenero=e.empleadoIdGenero)
    left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
    left join datospersonales dp on ( e.entidadFederativaId= dp.empleadoEntidadPersonal and e.empleadoConsecutivoId=dp.empleadoConsecutivoPersonal and
    e.empleadoCategoriaId=dp.empleadoCategoriaPersonal)
    left join catalogopaises cpn on (cpn.idPais =dp.paisNacimientoId )
    left join entidadesfederativas efn on (efn.idEntidadFederativa =dp.entidadNacimientoId )
    left join catalogomunicipios cmn on (cmn.idMunicipio =dp.municipioNacimientoId )
    left join catalogoestadocivil cedoc on (cedoc.idEstadoCivil=dp.estadoCivilId)
    left join catalogogradoestudios cge on (cge.idGradoEstudios=dp.gradoEstudiosId)
    left join catalogotiposangre cts on (cts.idTipoSangre=dp.tipoSangreId)
    left join catalogooficios co on (co.idOficio=dp.oficioId)
    left join catalogoestatuscartilla cec on (cec.idEstatusCartilla=dp.estatusCartillaId)
    left join directorio dir on ( e.entidadFederativaId= dir.entidadEmpleadoDirectorio and e.empleadoConsecutivoId=dir.consecutivoEmpleadoDirectorio and
    e.empleadoCategoriaId=dir.categoriaEmpleadoDirectorio)
    left join asentamientos a on (dir.idAsentamientoDireccion=a.idAsentamiento)
    left join catalogomunicipios cma on (cma.idMunicipio=a.municipioAsentamiento)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=cma.idEstado)
    left  join catalogotiposasentamientos cta on (cta.idTipoAsentamiento=a.asentamientoTipo)
    left join catalogounidadesmedicas cum on (cum.idUnidadMedica=dir.idUnidadMedicaAsignada)
    left join datosfamiliares df on ( e.entidadFederativaId= df.idEntidadEmpleadoFamiliar and e.empleadoConsecutivoId=df.idConsecutivoEmpleadoFamiliar and
    e.empleadoCategoriaId=df.idCategoriaEmpleadoFamiliar) where
    e.entidadFederativaId = '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "' and e.empleadoEstatusId<>0   group by entidadFederativaId, empleadoConsecutivoId , empleadoCategoriaId order by numeroEmpleado asc ";

        //$this -> logger -> LogInfo ("Ejecutando selectEmpleadosByEntidad: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $empleado[] = $reg;
    }

        // $this -> logger -> LogInfo ("valor del array de la selectEmpleadosByEntidad ".var_export ($empleado, true));

    return $empleado;
}

public function actualizarPlantillaAumento($datosPlantilla)
{

        //$this -> logger -> LogInfo ("Ejecutando. actualizarPlantillaAumento en persistencia");
        //$this -> logger -> LogInfo ("valor del array de la datosPlantilla ".var_export ($datosPlantilla, true));

    $sql = "update servicios_plantillas " .
    "set numeroElementos=" . mysqli_real_escape_string($this->conn, $datosPlantilla["numeroElementos"]) . ", " .
    "turnosPorDia=" . mysqli_real_escape_string($this->conn, $datosPlantilla["turnosPorDia"]) . ", " .
    "costoNetoFactura='" . mysqli_real_escape_string($this->conn, $datosPlantilla["costoNetoFactura"]) . "', " .
    "lastEdited=now()" .
    " where servicioPlantillaId=" . mysqli_real_escape_string($this->conn, $datosPlantilla["servicioPlantillaId"]) . " ";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarPlantillaAumento como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarPlantillaAumento.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
    $sql1 = "update DiasDeTrabajoPlantilla " .
    "set LunesTurnoDia='" . mysqli_real_escape_string($this->conn, $datosPlantilla["LunesDia"]) . "',
    " . "LunesTurnoNoche='" . mysqli_real_escape_string($this->conn, $datosPlantilla["LunesNoche"]) . "',
    " . "MartesTurnoDia='" . mysqli_real_escape_string($this->conn, $datosPlantilla["MartesDia"]) . "',
    " . "MartesTurnoNoche='" . mysqli_real_escape_string($this->conn, $datosPlantilla["MartesNoche"]) . "',
    " . "MiercolesTurnoDia='" . mysqli_real_escape_string($this->conn, $datosPlantilla["MiercolesDia"]) . "',
    " . "MiercolesTurnoNoche='" . mysqli_real_escape_string($this->conn, $datosPlantilla["MiercolesNoche"]) . "',
    " . "JuevesTurnoDia='" . mysqli_real_escape_string($this->conn, $datosPlantilla["JuevesDia"]) . "',
    " . "JuevesTurnoNoche='" . mysqli_real_escape_string($this->conn, $datosPlantilla["JuevesNoche"]) . "',
    " . "ViernesTurnoDia='" . mysqli_real_escape_string($this->conn, $datosPlantilla["VienesDia"]) . "',
    " . "ViernesTurnoNoche='" . mysqli_real_escape_string($this->conn, $datosPlantilla["ViernesNoche"]) . "',
    " . "SabadoTurnoDia='" . mysqli_real_escape_string($this->conn, $datosPlantilla["SabadoDia"]) . "',
    " . "SabadoTurnoNoche='" . mysqli_real_escape_string($this->conn, $datosPlantilla["SabadoNoche"]) . "',
    " . "DomingoTurnoDia='" . mysqli_real_escape_string($this->conn, $datosPlantilla["DomingoDia"]) . "',
    " . "DomingoTurnoNoche='" . mysqli_real_escape_string($this->conn, $datosPlantilla["DomingoNoche"]) . "'" . 
    " where servicioPlantillaId=" . mysqli_real_escape_string($this->conn, $datosPlantilla["servicioPlantillaId"]) . " ";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarPlantillaAumento como" . $sql1);
    $res1 = mysqli_query($this->conn, $sql1);
    if ($res1 !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarPlantillaAumento (DiasDeTrabajoPlantilla).");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
    if($datosPlantilla["numeroElementos"] < "1"){
        $sql2 = "update servicios_plantillas " .
        "set numeroElementos='0', " .
        "estatusPlantilla='0'" .
        " where servicioPlantillaId=" . mysqli_real_escape_string($this->conn, $datosPlantilla["servicioPlantillaId"]) . " ";
           // $this -> logger -> LogInfo ("Se ejecuto consulta  actualizarPlantillaAumento estatus" . $sql2);
        $res2 = mysqli_query($this->conn, $sql2);
        if ($res2 !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizarPlantillaAumento.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }
}

public function getServicioPlantillaById($servicioPlantillaId)
{
        //$this-> logger -> LogInfo("getServicioPlantillaById");
    $lista = array();

    try {

        $sql = "select sp.servicioPlantillaId, sp.puntoServicioPlantillaId, cps.puntoServicio,
        sp.puestoPlantillaId, cp.descripcionPuesto, sp.tipoTurnoPlantillaId,sp.costoNetoFactura,
        ct.descripcionTurno,
        sp.folio,fechaRegistroPlantilla,
        sp.fechaInicio,sp.numeroElementos,
        sp.turnosPorDia,sp.costoPorTurno,
        sp.cobraDescanso,sp.cobraFestivos,sp.cobraDia31,
        sp.usuarioCapturaPlantilla,sp.lastEdited, sp.estatusPlantilla, sp.comentarioRequisicion,sp.recursosMateriales,
        ct.factorcrecimiento, dtp.LunesTurnoDia, dtp.LunesTurnoNoche, MartesTurnoDia, dtp.MartesTurnoNoche, dtp.MiercolesTurnoDia, 
        dtp.MiercolesTurnoNoche, dtp.JuevesTurnoDia, dtp.JuevesTurnoNoche, dtp.ViernesTurnoDia, dtp.ViernesTurnoNoche, dtp.SabadoTurnoDia, 
        dtp.SabadoTurnoNoche, dtp.DomingoTurnoDia, dtp.DomingoTurnoNoche,ct.factorturnos,cps.idClientePunto,cps.idLineaNegocioPunto
        from servicios_plantillas sp
        left join catalogopuestos cp on (cp.idPuesto=sp.puestoPlantillaId)
        left join catalogoturnos ct on (ct.idTipoTurno=sp.tipoTurnoPlantillaId)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
        left join DiasDeTrabajoPlantilla dtp on (dtp.servicioPlantillaId=sp.servicioPlantillaId)
        where sp.servicioPlantillaId=" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "";

            //$this -> logger -> LogInfo ("ejecutando getServicioPlantillaById en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        if (count($lista) == 1) {
            return $lista[0];
        } else {
            return null;
        }

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function getServicioPlantilla()
{

        //$this-> logger -> LogInfo("getServicioPlantilla");

    $lista = array();

    $sql = "select
    cps.idPuntoServicio
    , cps.puntoServicio
    , e.empleadoIdPuesto
    , e.empleadoIdTurno
    , e.empleadoIdGenero
    , ifnull(sp.numeroElementos,0) as ElementosSolicitados
    , ifnull(p.ElementosAsignadosPlantilla, 0) as ElementosAsignados
    , ifnull(e.conteoElementos,0) as ElementosEnPuntoServicio
    ,e.descripcionTurno
    ,e.descripcionPuesto
    ,cps.idEntidadPunto
    ,ef.nombreEntidadFederativa
    ,cps.direccionPuntoServicio
    ,sp.comentarioRequisicion
    ,sp.fechaInicio
    ,abs(ifnull(sp.numeroElementos,0)-ifnull(ElementosAsignadosPlantilla,0)) as diferencia
    ,cps.idClientePunto
    ,c.razonSocial
    from
    catalogopuntosservicios cps
    left join catalogoclientes c on (cps.idClientePunto=c.idCliente)
    left join
    (
    select
    e.empleadoIdPuntoServicio
    , e.empleadoIdPuesto
    , e.empleadoIdTurno
    , e.empleadoIdGenero
    , count(*) as conteoElementos
    , ct.descripcionTurno
    , cp.descripcionPuesto
    , cg.descripcionGenero
    from empleados e
    left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
    left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
    left join catalogogenero cg on (e.empleadoIdGenero=cg.idGenero)

    where
    (e.empleadoEstatusId = 1 or e.empleadoEstatusId=2)
    and e.IdTipoPuesto = '03'
    group by
    e.empleadoIdPuntoServicio
    , e.empleadoIdPuesto
    , e.empleadoIdTurno
    , e.empleadoIdGenero
    ) e on
    cps.idPuntoServicio = e.empleadoIdPuntoServicio
    left join
    servicios_plantillas sp on cps.IdPuntoServicio = sp.puntoServicioPlantillaId
    and sp.puestoPlantillaId = e.empleadoIdPuesto
    and sp.tipoTurnoPlantillaId = e.empleadoIdTurno
    left join
    entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
    left join
    (
    select
    sp.servicioPlantillaId
    , count(p.requisicionId) as ElementosAsignadosPlantilla
    from
    servicios_plantillas sp
    left join
    plantilla p on sp.servicioPlantillaId = p.requisicionId

    inner join
    empleados e on
    p.empleadoEntidadPlantilla = e.entidadFederativaId
    and p.empleadoConsecutivoPlantilla = e.empleadoConsecutivoId
    and p.empleadoCategoriaPlantilla = e.empleadoCategoriaId
    where
    (e.empleadoEstatusId = 1 or e.empleadoEstatusId=2)
    group by p.requisicionId
    ) p on
    sp.servicioPlantillaId = p.servicioPlantillaId
    where cps.esatusPunto = 1 ";

        //$this -> logger -> LogInfo ("Ejecutando getServicioPlantilla: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getServicioPlantillaPerfil($puestoPlantillaId, $tipoTurnoPlantillaId, $puntoServicioPlantillaId)
{

        //$this->logger->LogInfo("getServicioPlantillaPerfil");

    $lista = array();

    $sql = "select
    sp.servicioPlantillaId,
    sp.puntoServicioPlantillaId,
    sp.puestoPlantillaId,
    sp.tipoTurnoPlantillaId,
    sp.fechaInicio,
    ifnull(sp.numeroElementos, 0) as ElementosSolicitados,
    ifnull(pp.elementosAsignados, 0) as ElementosAsignados,
    ifnull(eps.elementosContratados, 0) as ElementosEnPuntoServicio,
    cps.puntoServicio,
    cps.numeroCentroCosto,
    cps.numeroOrden,
    cps.direccionPuntoServicio,
    ef.nombreEntidadFederativa,
    abs(elementosSolicitados - elementosAsignados) as diferencia,
    cpuestos.descripcionPuesto,
    ctt.descripcionTurno,
    cc.razonSocial,
    sp.comentarioRequisicion,
    cps.esatusPunto,
    sp.estatusPlantilla
    from
    servicios_plantillas sp
    left join
    catalogopuntosservicios cps ON (cps.idPuntoServicio = sp.puntoServicioPlantillaId)
    left join
    entidadesfederativas ef ON (ef.idEntidadFederativa = cps.idEntidadPunto)
    left join
    catalogopuestos cpuestos ON (cpuestos.idPuesto = sp.puestoPlantillaId)
    left join
    catalogoturnos ctt ON (ctt.idTipoTurno = sp.tipoTurnoPlantillaId)
    left join
    catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
    left join
    (select
    spp.servicioPlantillaId,
    spp.puntoServicioPlantillaId,
    spp.puestoPlantillaId,
    spp.tipoTurnoPlantillaId,
    spp.fechaInicio,
    spp.numeroElementos AS elementosSolicitados,
    count(p.plantillaId) as elementosAsignados
    from
    servicios_plantillas spp
    left join plantilla p ON (spp.servicioPlantillaId = p.requisicionId)
    left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    where (e.empleadoEstatusId=1 or empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)
    group by puestoPlantillaId , tipoTurnoPlantillaId , puntoServicioPlantillaId) pp ON pp.servicioPlantillaId = sp.servicioPlantillaId
    left join
    (select
    cps.idPuntoServicio,
    cps.puntoServicio,
    cps.esatusPunto,
    cps.idEntidadPunto,
    e.empleadoIdTurno,
    e.empleadoIdGenero,
    e.empleadoIdPuesto,
    count(e.empleadoConsecutivoId) as elementosContratados
    from
    catalogopuntosservicios cps
    left join empleados e ON (e.empleadoIdPuntoServicio = cps.idPuntoServicio)
    where
    e.idTipoPuesto = '03'
    and (e.empleadoEstatusId = 1
    or e.empleadoEstatusId = 2)
    group by cps.idPuntoServicio , e.empleadoIdTurno , e.empleadoIdGenero , e.empleadoIdPuesto) eps ON eps.idPuntoServicio = sp.puntoServicioPlantillaId
    and eps.empleadoIdTurno = sp.tipoTurnoPlantillaId
    and eps.empleadoIdPuesto = sp.puestoPlantillaId
    where sp.numeroElementos>0
    and sp.estatusPlantilla='1'
    and sp.puestoPlantillaId='" . mysqli_real_escape_string($this->conn, $puestoPlantillaId) . "'
    and sp.tipoTurnoPlantillaId='" . mysqli_real_escape_string($this->conn, $tipoTurnoPlantillaId) . "'
    and sp.puntoServicioPlantillaId='" . mysqli_real_escape_string($this->conn, $puntoServicioPlantillaId) . "' order by sp.fechaInicio asc";

       // $this->logger->LogInfo("Ejecutando getServicioPlantillaPerfil: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function insertEmpleadoPlantilla($datos)
{

      //  $this -> logger -> LogInfo ("Ejecutando. insertEmpleadoPlantilla en persistencia");
      //  $this -> logger -> LogInfo("Valor de la variable \$datos: " . var_export ($datos, true));

    $sql = "insert into plantilla(
    requisicionId
    ,empleadoEntidadPlantilla
    ,empleadoConsecutivoPlantilla
    ,empleadoCategoriaPlantilla
    ) VALUES (
    " . mysqli_real_escape_string($this->conn, $datos["requisicionId"]) . ", 
    '". mysqli_real_escape_string($this->conn, $datos["empleadoEntidadPlantilla"]) . "', 
    '" . mysqli_real_escape_string($this->conn, $datos["empleadoConsecutivoPlantilla"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["empleadoCategoriaPlantilla"]) . "')";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertEmpleadoPlantilla como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertEmpleadoPlantilla.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getPlantillas()
{

        //$this-> logger -> LogInfo("obtenerPlantillasIncompletas");

    $lista = array();

    $sql = "select
    sp.servicioPlantillaId,
    sp.puntoServicioPlantillaId,
    sp.puestoPlantillaId,
    sp.tipoTurnoPlantillaId,
    sp.fechaInicio,
    ifnull(sp.numeroElementos, 0) as ElementosSolicitados,
    ifnull(pp.elementosAsignados, 0) as ElementosAsignados,
    ifnull(eps.elementosContratados, 0) as ElementosEnPuntoServicio,
    cps.puntoServicio,
    cps.idPuntoServicio,
    cps.numeroCentroCosto,
    cps.numeroOrden,
    cps.direccionPuntoServicio,
    ef.nombreEntidadFederativa,
    abs(elementosSolicitados - elementosAsignados) as diferencia,
    cpuestos.descripcionPuesto,
    ctt.descripcionTurno,
    cc.razonSocial,
    sp.comentarioRequisicion,
    cps.esatusPunto
    from
    servicios_plantillas sp
    left join
    catalogopuntosservicios cps ON (cps.idPuntoServicio = sp.puntoServicioPlantillaId)
    left join
    entidadesfederativas ef ON (ef.idEntidadFederativa = cps.idEntidadPunto)
    left join
    catalogopuestos cpuestos ON (cpuestos.idPuesto = sp.puestoPlantillaId)
    left join
    catalogoturnos ctt ON (ctt.idTipoTurno = sp.tipoTurnoPlantillaId)
    left join
    catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
    left join
    (select
    spp.servicioPlantillaId,
    spp.puntoServicioPlantillaId,
    spp.puestoPlantillaId,
    spp.tipoTurnoPlantillaId,
    spp.fechaInicio,
    spp.numeroElementos AS elementosSolicitados,
    count(p.plantillaId) as elementosAsignados
    from
    servicios_plantillas spp
    left join plantilla p ON (spp.servicioPlantillaId = p.requisicionId)
    group by puestoPlantillaId , tipoTurnoPlantillaId , puntoServicioPlantillaId) pp ON pp.servicioPlantillaId = sp.servicioPlantillaId
    left join
    (select
    cps.idPuntoServicio,
    cps.puntoServicio,
    cps.esatusPunto,
    cps.idEntidadPunto,
    e.empleadoIdTurno,
    e.empleadoIdGenero,
    e.empleadoIdPuesto,
    count(e.empleadoConsecutivoId) as elementosContratados
    from
    catalogopuntosservicios cps
    left join empleados e ON (e.empleadoIdPuntoServicio = cps.idPuntoServicio)
    where
    e.idTipoPuesto = '03'
    and (e.empleadoEstatusId = 1
    or e.empleadoEstatusId = 2)
    group by cps.idPuntoServicio , e.empleadoIdTurno , e.empleadoIdGenero , e.empleadoIdPuesto) eps ON eps.idPuntoServicio = sp.puntoServicioPlantillaId
    and eps.empleadoIdTurno = sp.tipoTurnoPlantillaId
    and eps.empleadoIdPuesto = sp.puestoPlantillaId
    where
    cps.esatusPunto = 1
    order by sp.fechaInicio asc";

        //$this -> logger -> LogInfo ("Ejecutando obtenerPlantillasIncompletas: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function deleteElementFromPlantilla(
    $empleadoEntidadId,
    $empleadoConsecutivoId,
    $empleadoCategoriaId) {
    $sql = "DELETE FROM plantilla WHERE " .
    "empleadoEntidadPlantilla='" . $this->safeValue($empleadoEntidadId) . "'" .
    " and empleadoConsecutivoPlantilla='" . $this->safeValue($empleadoConsecutivoId) . "'" .
    " and empleadoCategoriaPlantilla='" . $this->safeValue($empleadoCategoriaId) . "';";

        //$this -> logger -> LogInfo ("Ejecutando deleteElementFromPlantilla: " . $sql);

    mysqli_query($this->conn, $sql);
}

public function getTiposPeriodos()
{
        //$this-> logger -> LogInfo("getTiposPeriodos");

    $lista = array();

    $sql = "select tipoPeriodoId, descripcionTipoPeriodo from catalogotipoperiodo;";

        //$this -> logger -> LogInfo ("Ejecutando getTiposPeriodos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getAllDataFromResultQuery($result)
{
    $data = array();

    while (($reg = mysqli_fetch_array($result, MYSQLI_ASSOC))) {
        $data[] = $reg;
    }

    return $data;
}

public function getSupervisorIdByUsuarioId($usuarioId)
{

      //  $this-> logger -> LogInfo("getSupervisorIdByUsuarioId");

    $sql = "select concat_ws('-', entidadEmpleadoUsuario,consecutivoEmpleadoUsuario, categoriaEmpleadoUsuario) as idEmpleado from usuario_empleado where usuario='" . $this->safeValue($usuarioId) . "'";

        //$this -> logger -> LogInfo ("Ejecutando getSupervisorIdByUsuarioId: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    $data = $this->getAllDataFromResultQuery($res);

        //$this -> logger -> LogInfo ("valor del array de la data ".var_export ($data, true));

    if (count($data) == 1) {
        return $data[0]["idEmpleado"];
    } else {
        throw new Exception("No se puede recuperar el clienteId para el usuario: " . $usuarioId);
    }

}

public function getListaEmpleadosBySupervisorPeriodo($fecha1, $fecha2, $supervisorEntidad, $supervisorConsecutivo, $supervisorTipo, $periodoId)
{

        //$this-> logger -> LogInfo("getListaEmpleadosBySupervisor");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join(
    select a.empleadoEntidad
    , a.empleadoConsecutivo
    , a.empleadoTipo
    , a.fechaAsistencia
    from asistencia a
    ) asis on (asis.empleadoEntidad=entidadFederativaId and asis.empleadoConsecutivo=empleadoConsecutivoId and asis.empleadoTipo=empleadoCategoriaId)
    where
    e.idTipoPuesto='03'
    and fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
    order by nombreEmpleado asc;";

        //$this -> logger -> LogInfo ("Ejecutando getListaEmpleadosBySupervisor: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getCatalogoIncidencias()
{

        //$this-> logger -> LogInfo("getCatalogoIncidencias");

    $lista = array();

    $sql = "select * from catalogoincidencias where vistaCatalogoOperaciones=1 ";

        //$this -> logger -> LogInfo ("Ejecutando getCatalogoIncidencias: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function registrarAsistencia(
    $empleado,
    $supervisor,
    $incidenciaId,
    $asistenciaFecha,
    $usuarioCapturaAsistencia,
    $comentariIncidencia, $tipoPeriodo, $puestoCubiertoId, $plantilladeservicio,$conteobaja,$idPlantillaServicio) {
        // Buscamos si existe un registro de asistencia previo.
    $asistencia = $this->getAsistenciaByEmpleadoFecha($asistenciaFecha,
        $empleado["entidadId"],
        $empleado["consecutivoId"],
        $empleado["tipoId"]);
        //$this -> logger -> LogInfo ("valor de conteo" . var_export ($conteobaja, true));

    if (count($asistencia) == 0) {

        $sql = "INSERT INTO asistencia (empleadoEntidad, empleadoConsecutivo, empleadoTipo, puntoServicioAsistenciaId, idPlantillaAsis, supervisorEntidad, supervisorConsecutivo, supervisorTipo, incidenciaAsistenciaId, fechaAsistencia, fechaRegistroAsistencia, usuarioCapturaAsistencia,comentarioIncidencia, puestoCubiertoId,roloperativo,conteoPrimerDiaBaja) VALUES (";
        $sql .= "'" . $this->safeValue($empleado["entidadId"]) . "',";
        $sql .= "'" . $this->safeValue($empleado["consecutivoId"]) . "',";
        $sql .= "'" . $this->safeValue($empleado["tipoId"]) . "',";
        $sql .= "'" . $this->safeValue($empleado["puntoServicioId"]) . "',";
        $sql .= "'" . $this->safeValue($idPlantillaServicio) . "',";
        $sql .= "'" . $this->safeValue($supervisor["entidadId"]) . "',";
        $sql .= "'" . $this->safeValue($supervisor["consecutivoId"]) . "',";
        $sql .= "'" . $this->safeValue($supervisor["tipoId"]) . "',";
        $sql .= "'" . $this->safeValue($incidenciaId) . "',";
        $sql .= "'" . $this->safeValue($asistenciaFecha) . "',";
        $sql .= "NOW(),";
        $sql .= "'" . $this->safeValue($usuarioCapturaAsistencia) . "',";
        $sql .= "'" . $this->safeValue($comentariIncidencia) . "',";
        $sql .= "" . $this->safeValue($puestoCubiertoId) . ",";
        $sql .= "'" . $this->safeValue($plantilladeservicio) . "',";
        $sql .= "'" . $this->safeValue($conteobaja) . "');";

        $res = mysqli_query($this->conn, $sql);

        if (mysqli_errno($this->conn) == 0) {
            return true;
        }

        return false;
    } else {
        return $this->updateAsistencia($empleado,
            $supervisor,
            $incidenciaId,
            $asistenciaFecha,
            $usuarioCapturaAsistencia,
            $comentariIncidencia,
            $tipoPeriodo, $puestoCubiertoId, $plantilladeservicio,$conteobaja,$idPlantillaServicio);
    }
}
public function actualizaFirmaEmpleado($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $firma)
{

        //$this -> logger -> LogInfo ("Ejecutando. actualizaFirmaEmpleado en persistencia");

    $sql = "update empleados " .
    "set fotoFirma='" . mysqli_real_escape_string($this->conn, $firma) . "' " .
    "where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "' and " .
    "empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "' and  " .
    " empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarPlantillaAumento como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizaFirmaEmpleado.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getDatosPorCliente($idCliente)
{
//$this -> logger -> LogInfo (" getDatosPorCliente: " . $idCliente);

    $lista = array();

    $sql = "select cl.idCliente, cl.razonSocial , ifnull(c1.elementosContratados,0) elementosContratados, ifnull(elementosSolicitados,0) elementosSolicitados
    -- ,ifnull(totalPuntosServicios, 0) totalPuntosServicios
    , ifnull(elementosAsignados,0) elementosAsignados, ifnull(totalPuntosServicios,0) totalPuntosServicios
    from catalogoclientes cl
    left join (
    select cc.idCliente, cc.razonSocial,count(e.empleadoNumeroSeguroSocial) as elementosContratados
    -- e.entidadFederativaId
    -- , e.empleadoConsecutivoId
    -- , e.empleadoCategoriaId
    -- , e.empleadoIdPuntoServicio
    -- , e.empleadoIdPuntoServicio
    -- , cps.puntoServicio
    -- , cc.idCliente
    -- , cc.razonSocial
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    where (e.empleadoEstatusId= 2 or e.empleadoEstatusId=1) and e.idTipoPuesto='03'
    group by cc.idCliente
    ) c1 on c1.idCliente=cl.idCliente
    left join (
    select
    -- sp.servicioPlantillaId
    -- , puntoServicioPlantillaId
    -- , cps.puntoServicio
    cc.razonSocial
    , cc.idCliente
    -- , sp.numeroElementos
    ,sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    left join catalogopuntosservicios cps  on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    where cps.esatusPunto=1
    and sp.estatusPlantilla=1
    group by cc.idCliente
    ) c2 on (cl.idCliente=c2.idcliente)
    left join(
    select p.plantillaId
    ,p.requisicionId
    ,p.empleadoEntidadPlantilla
    , p.empleadoConsecutivoPlantilla
    , p.empleadoCategoriaPlantilla
    ,sp.puntoServicioPlantillaId
    ,cps.puntoServicio
    ,cc.razonSocial
    ,cc.idcliente
    ,count(plantillaId) elementosAsignados
    from plantilla p
    left join servicios_plantillas sp on (sp.servicioPlantillaId=requisicionId)
    left join catalogopuntosservicios cps on ( cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    where (e.empleadoEstatusId= 2 or e.empleadoEstatusId=1) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)
    group by cc.razonsocial) c4 on (c4.idcliente=cl.idCliente)
    left join(
    select
    cc.razonSocial
    , cc.idCliente
    ,count(cps.puntoServicio) as totalPuntosServicios
    -- , idPuntoServicio
    ,puntoServicio
    -- from catalogopuntosservicios cps
    -- left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    from catalogoclientes cc
    left join catalogopuntosservicios cps on (cc.idCliente=cps.idClientePunto)
    where esatusPunto=1
    group by cc.idCliente
    ) c5 on c5.idCliente=cl.idCliente
    where cl.idCliente=" . mysqli_real_escape_string($this->conn, $idCliente) . "";

//$this -> logger -> LogInfo ("Ejecutando getDatosPorCliente: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getPlantillasByPuntoServiciosCliente($idCliente)
{

        //$this -> logger -> LogInfo (" getPlantillasByPuntoServiciosCliente: " . $idCliente);

    $lista = array();

    $sql = "select
    cps.idPuntoServicio
    , cps.puntoServicio
    , cps.idEntidadPunto
    , ef.nombreEntidadFederativa
    , ifnull(efe.nombreEntidadFederativa,'Sin Informacion') as nombreEntidadFederativa1
    ,cps.numeroCentroCosto
    , cps.idClientePunto
    , ifnull(c1.elementosContratados,0) elementosContratados
    , ifnull(c2.elementosSolicitados,0 ) elementosSolicitados
    ,cc.razonsocial
    , ifnull(c3.elementosAsignados,0) elementosAsignados
    from catalogopuntosservicios cps
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
    left join entidadesfederativas efe on (efe.idEntidadFederativa=cps.EntidadPuntoS)
    left join (
    -- consulta elementos contratados en el punto de servicio
    select count(e.empleadoNumeroSeguroSocial) as elementosContratados, e.empleadoIdPuntoServicio,cps.idPuntoServicio, cps.puntoservicio, cc.razonSocial
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    where (e.empleadoEstatusId= 2 or e.empleadoEstatusId=1) and e.idTipoPuesto='03'
    group by cps.puntoservicio
    ) c1 on (c1.idPuntoServicio=cps.idPuntoServicio)
    left join (
    -- consulta elementos soliitados en requisiciones por ventas
    select
    sp.servicioPlantillaId
    , sp.puntoServicioPlantillaId
    , sp.numeroElementos
    , sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    where sp.estatusPlantilla='1'
    group by puntoServicioPlantillaId
    ) c2 on puntoServicioPlantillaId=cps.idPuntoServicio
    left join (
    select p.plantillaId
    , p.requisicionId
    , p.empleadoEntidadPlantilla
    , p.empleadoConsecutivoPlantilla
    , p.empleadoCategoriaPlantilla
    , sp.puntoServicioPlantillaId
    , cps.puntoServicio
    , cps.idPuntoServicio
    , cc.idCliente
    , cc.razonSocial
    , count(p.plantillaId) elementosAsignados
    from plantilla p
    left join servicios_plantillas sp on (sp.servicioPlantillaId=p.requisicionId)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    where (e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4 )
    group by idCliente, sp.puntoServicioPlantillaId
    )c3 on (c3.puntoServicioPlantillaId=cps.idPuntoServicio)
    where cps.esatusPunto=1
    and cc.idCliente=" . mysqli_real_escape_string($this->conn, $idCliente) . " order by cps.puntoServicio asc ";

        //$this -> logger -> LogInfo ("Ejecutando getPlantillasByPuntoServiciosCliente: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getEmpleadosByPuntoServicio($puntoServicioId)
{

        //$this -> logger -> LogInfo (" getEmpleadosByPuntoServicio: " . $puntoServicioId);

    $lista = array();

    $sql = "select concat_ws('-', e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) numeroEmpleado,
    concat_ws( ' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) nombreEmpleado
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno,
    ct.descripcionTurno
    , concat_ws(' ',s.nombreEmpleado,s.apellidoPaterno,s.apellidoMaterno) as supervisor
    ,ce.sueldoEmpleado,ce.cuotaDiariaEmpleado,ce.bonoAsistenciaEmpleado, ce.bonoPuntualidadEmpleado
    ,ceo.descripcionEstatusOperaciones,ceo.estatusOperacionesId,e.roloperativo,p.requisicionId
    from empleados e
    left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join cuotas_empleados ce on (e.entidadFederativaId=ce.empleadoEntidadCuota and e.empleadoConsecutivoId=ce.empleadoConsecutivoCuota and e.empleadoCategoriaId=ce.empleadoCategoriaCuota)
    left join empleados s on (s.entidadFederativaId=e.idEntidadResponsableAsistencia and s.empleadoConsecutivoId=e.consecutivoResponsableAsistencia and s.empleadoCategoriaId=e.tipoResponsableAsistencia)
    left join catalogoestatusoperaciones ceo on(e.estatusEmpleadoOperaciones=ceo.estatusOperacionesId)
    left join plantilla p on (p.empleadoEntidadPlantilla=e.entidadFederativaId and p.empleadoConsecutivoPlantilla=e.empleadoConsecutivoId and p.empleadoCategoriaPlantilla = e.empleadoCategoriaId)
    where (e.empleadoEstatusId=1 or  e.empleadoEstatusId=2) and e.idTipoPuesto='03'
    and e.empleadoIdPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . " order by nombreEmpleado asc ";

   // $this -> logger -> LogInfo ("Ejecutando getEmpleadosByPuntoServicio: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getDetalleRequisicionesByPuntoServicioId($puntoServicioId,$idPlantillaServicio,$caso)
{
    $lista = array();
    $sql = "select  
    sp.servicioPlantillaId
    , sp.puntoServicioPlantillaId
    , cps.puntoServicio
    , numeroElementos
    , sp.puntoServicioPlantillaId
    , sp.numeroElementos
    , puestoPlantillaId
    , cp.descripcionPuesto
    , tipoTurnoPlantillaId
    , ct.descripcionTurno
    , sp.turnosPorDia
    , sp.fechaInicio
    ,sp.rolOperativoPlantilla
    -- , sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    left join catalogopuestos cp on cp.idPuesto=sp.puestoPlantillaId
    left join catalogoturnos ct on ct.idTipoTurno=sp.tipoTurnoPlantillaId
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    where sp.estatusPlantilla='1'";
    if($caso=="2"){
        $sql.=" and sp.servicioPlantillaId=" . mysqli_real_escape_string($this->conn, $idPlantillaServicio) . "";
    }else{
        $sql.=" and  sp.puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "";
    }
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}

public function getElementosAsignadosPlantillaByPuntoServicio($puntoServicioId)
{

        //$this -> logger -> LogInfo (" getElementosAsignadosPlantillaByPuntoServicio: " . $puntoServicioId);

    $lista = array();

    $sql = "select p.plantillaId
    ,p.requisicionId
    ,p.empleadoEntidadPlantilla
    , p.empleadoConsecutivoPlantilla
    , p.empleadoCategoriaPlantilla
    ,sp.puntoServicioPlantillaId
    ,sp.rolOperativoPlantilla
    ,cps.puntoServicio
    ,cc.razonSocial
    ,cc.idcliente
    , concat_ws('-',p.empleadoEntidadPlantilla,p.empleadoConsecutivoPlantilla, p.empleadoCategoriaPlantilla ) numeroEmpleado
    , concat_ws(' ', e.apellidoPaterno, apellidoMaterno, nombreEmpleado) nombreEmpleado
    , cp.descripcionPuesto
    , ct.descripcionTurno
    ,cg.nomenclaturaGenero
    from plantilla p
    left join servicios_plantillas sp on (sp.servicioPlantillaId=requisicionId)
    left join catalogopuntosservicios cps on ( cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogogenero cg on (cg.idGenero=e.empleadoIdGenero)
    where (e.empleadoEstatusId= 2 or e.empleadoEstatusId=1) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4 )
    and sp.estatusPlantilla='1'
    and puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . " order by descripcionPuesto, nombreEmpleado asc";

    //$this -> logger -> LogInfo ("Ejecutando getElementosAsignadosPlantillaByPuntoServicio: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function updateCatalogopuntosservicios($puntoServicio)
{
    if($puntoServicio["DelMunEdited"] ==="" || $puntoServicio["DelMunEdited"] ==="null" || $puntoServicio["DelMunEdited"] ==="NULL" || $puntoServicio["DelMunEdited"] ===null || $puntoServicio["DelMunEdited"] ===NULL || $puntoServicio["DelMunEdited"] ==="0"){
        $DelMunEdited = "NULL";
       // $this -> logger -> LogInfo ("Ejecutando entre en la candicion donde el municipio no puede ir vacio");
    }else{
        $DelMunEdited = $puntoServicio["DelMunEdited"];
    }
   // $this -> logger -> LogInfo ("Ejecutando. updateCatalogopuntosserviciosssss en persistencia");

    $sql = "update catalogopuntosservicios " .
    "set numeroCentroCosto='" . mysqli_real_escape_string($this->conn, $puntoServicio["numeroCentroCosto"]) . "'," .
    "puntoServicio='" . mysqli_real_escape_string($this->conn, $puntoServicio["puntoServicio"]) . "'," .
    "idClientePunto=" . mysqli_real_escape_string($this->conn, $puntoServicio["idClientePunto"]) . "," .
    "idEntidadPunto='" . mysqli_real_escape_string($this->conn, $puntoServicio["idEntidadPunto"]) . "'," .
    "CodigoPostalPuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["CpContratoPuntoServicioEdit"]) . "', " .
    "AsentamientoPuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["ColoniaClientePuntoServicioEdit"]) . "', " .
    "EntidadPuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["EntidadClientePuntoServicioEdit"]) . "', " .
    "MunicipioPuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["MunicipioPuntoServicioEdit"]) . "', " .
    "ColoniaPuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["ColoniaClientePuntoServicioEdit"]) . "', " .
    "CallePrincipaPuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["CallePrincipalPuntoServicioEdit"]) . "', " .
    "NumeroInterirPuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["NumeroInteriroPuntoServicioEdit"]) . "', " .
    "NumeroExteriorPuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["NumeroExteriorPuntoServicioEdit"]) . "', " .
    "PrimerCallePuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["Calle1PuntoServicioEdit"]) . "', " .
    "SegundaCallePuntoS='" . mysqli_real_escape_string($this->conn, $puntoServicio["Calle2PuntoServicioEdit"]) . "', " .
    "fechaInicioServicio='" . mysqli_real_escape_string($this->conn, $puntoServicio["fechaInicioServicio"]) . "', " .
    "fechaTerminoServicio='" . mysqli_real_escape_string($this->conn, $puntoServicio["fechaTerminoServicio"]) . "', " .
    "contactoFacturacion='" . mysqli_real_escape_string($this->conn, $puntoServicio["contactoFacturacion"]) . "', " .
    "telefonoFijoFacturacion='" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoFijoFacturacion"]) . "', " .
    "telefonoMovilFacturacion='" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoMovilFacturacion"]) . "', " .
    "correoFacturacion='" . mysqli_real_escape_string($this->conn, $puntoServicio["correoFacturacion"]) . "', " .
    "terminoFacturacion='" . mysqli_real_escape_string($this->conn, $puntoServicio["terminoFacturacion"]) . "', " .
    "contactoTesoreria='" . mysqli_real_escape_string($this->conn, $puntoServicio["contactoTesoreria"]) . "', " .
    "telefonoFijoTesoreria='" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoFijoTesoreria"]) . "', " .
    "telefonoMovilTesoreria='" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoMovilTesoreria"]) . "', " .
    "correoTesoreria='" . mysqli_real_escape_string($this->conn, $puntoServicio["correoTesoreria"]) . "', " .
    "contactoOperativo='" . mysqli_real_escape_string($this->conn, $puntoServicio["contactoOperativo"]) . "', " .
    "telefonoFijoOperativo='" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoFijoOperativo"]) . "', " .
    "telefonoMovilOperativo='" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoMovilOperativo"]) . "', " .
    "correoOperativo='" . mysqli_real_escape_string($this->conn, $puntoServicio["correoOperativo"]) . "', " .
    "cobraDescansos='" . mysqli_real_escape_string($this->conn, $puntoServicio["cobraDescansos"]) . "', " .
    "cobraDiaFestivo='" . mysqli_real_escape_string($this->conn, $puntoServicio["cobraDiaFestivo"]) . "', " .
    "cobra31='" . mysqli_real_escape_string($this->conn, $puntoServicio["cobra31"]) . "', " .
    "latitudPunto='" . mysqli_real_escape_string($this->conn, $puntoServicio["latitudPunto"]) . "', " .
    "longitudPunto='" . mysqli_real_escape_string($this->conn, $puntoServicio["longitudPunto"]) . "', " .
    "RangoAsistencia='" . mysqli_real_escape_string($this->conn, $puntoServicio["RangoAsisEdit"]) . "', " .
    "turnosFlat=" . mysqli_real_escape_string($this->conn, $puntoServicio["turnoFlat"]) . " ," .
    "idIncrementRegionPuntoServ=" . mysqli_real_escape_string($this->conn, $puntoServicio["idtxtRegionEdited"]) . " ," .
    "idLineaNegocioPunto=" . mysqli_real_escape_string($this->conn, $puntoServicio["selLineaNegocioEdited"]) . " ," .
    "visiblerh=" . mysqli_real_escape_string($this->conn, $puntoServicio["visiblerhEdited"]) . ", " .
    "municipiodelegacion=" . $DelMunEdited . ", " .
    "unidad='" . mysqli_real_escape_string($this->conn, $puntoServicio["UnidadEdited"]) . "', " .
    "cubredescanso=" . mysqli_real_escape_string($this->conn, $puntoServicio["cubredescansoEdited"]) . " " .
    "where idPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicio["idPuntoServicio"]) . "";
   // $this -> logger -> LogInfo ("Se ejecuto consulta  updateCatalogopuntosservicios como" . $sql);
    //"direccionPuntoServicio='" . mysqli_real_escape_string($this->conn, $puntoServicio["direccionPuntoServicio"]) . "', " .
    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al updateCatalogopuntosservicios.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function updateRequisicion($requisicion)
{

        // $this -> logger -> LogInfo ("Ejecutando. updateRequisicion en persistencia");
        // $this -> logger -> LogInfo ("valor del array de la requisicion ".var_export ($requisicion, true));
    $sql = "update servicios_plantillas  " .
    "set puestoPlantillaId=" . mysqli_real_escape_string($this->conn, $requisicion["puestoPlantillaId"]) . "," .
    "tipoTurnoPlantillaId=" . mysqli_real_escape_string($this->conn, $requisicion["tipoTurnoPlantillaId"]) . "," .
    "fechaInicio='" . mysqli_real_escape_string($this->conn, $requisicion["fechaInicio"]) . "'," .
    "numeroElementos='" . mysqli_real_escape_string($this->conn, $requisicion["numeroElementos"]) . "', " .
    "turnosPorDia='" . mysqli_real_escape_string($this->conn, $requisicion["turnosPorDia"]) . "', " .
    "costoPorTurno='" . mysqli_real_escape_string($this->conn, $requisicion["costoPorTurno"]) . "', " .
    "cobraDescanso='" . mysqli_real_escape_string($this->conn, $requisicion["cobraDescanso"]) . "', " .
    "cobraFestivos='" . mysqli_real_escape_string($this->conn, $requisicion["cobraFestivos"]) . "', " .
    "cobraDia31='" . mysqli_real_escape_string($this->conn, $requisicion["cobraDia31"]) . "', " .
    "comentarioRequisicion='" . mysqli_real_escape_string($this->conn, $requisicion["comentarioRequisicion"]) . "', " .
    "costoNetoFactura='" . mysqli_real_escape_string($this->conn, $requisicion["costoNetoFactura"]) . "', " .
    "recursosMateriales='" . mysqli_real_escape_string($this->conn, $requisicion["recursosMateriales"]) . "', " .
    "fechaTerminoPlantilla='" . mysqli_real_escape_string($this->conn, $requisicion["fechaTerminoPlantilla"]) . "', " .
    "lineaNegocioRequisicion='" . mysqli_real_escape_string($this->conn, $requisicion["LineaNegocioPlantilla0"]) . "', " .
    "IdRolOperativoPlantilla='" . mysqli_real_escape_string($this->conn, $requisicion["IdrolOperativo"]) . "', " .
    "rolOperativoPlantilla='" . $requisicion["rolOperativo"] . "', " .
    "lastEdited=now() " .
    "where servicioPlantillaId=" . mysqli_real_escape_string($this->conn, $requisicion["puntoServicioPlantillaId"]) . "";

        // $this -> logger -> LogInfo ("Se ejecuto consulta  updateRequisicion como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al updateRequisicion.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

    //////// obtenemos el id de la plantilla Actualizada //////////////////
    $IdExistente = array();

    $sql1 = "SELECT max(idDiasATrabajar) as idDiasATrabajar from DiasDeTrabajoPlantilla
    where servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $requisicion["puntoServicioPlantillaId"]) . "'";
    $res1 = mysqli_query($this->conn, $sql1);
    while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
        $IdExistente[] = $reg1;
    }
    $idExist = $IdExistente[0]["idDiasATrabajar"];
    //$this -> logger -> LogInfo ("valor del array de la sql1 ".var_export ($sql1, true));
    //$this -> logger -> LogInfo ("valor del array de la idExist ".var_export ($idExist, true));

    if($idExist != "" && $idExist != "NULL" && $idExist != NULL && $idExist != "null" && $idExist != null){
        //////////// Actualizamos en la tabla de DiasDeTrabajoPlantilla////////////////

        $sql4 = "update DiasDeTrabajoPlantilla  " .
        "set DescansoMismoDia='" . mysqli_real_escape_string($this->conn, $requisicion["checkElementos0"]) . "'," .
        "LunesTurnoDia='" . mysqli_real_escape_string($this->conn, $requisicion["TDiaLunes0"]) . "'," .
        "LunesTurnoNoche='" . mysqli_real_escape_string($this->conn, $requisicion["TNocheLunes0"]) . "'," .
        "MartesTurnoDia='" . mysqli_real_escape_string($this->conn, $requisicion["TDiaMartes0"]) . "'," .
        "MartesTurnoNoche='" . mysqli_real_escape_string($this->conn, $requisicion["TNochesMartes0"]) . "', " .
        "MiercolesTurnoDia='" . mysqli_real_escape_string($this->conn, $requisicion["TDiaMiercoles0"]) . "', " .
        "MiercolesTurnoNoche='" . mysqli_real_escape_string($this->conn, $requisicion["TNocheMiercoles0"]) . "', " .
        "JuevesTurnoDia='" . mysqli_real_escape_string($this->conn, $requisicion["TDiaJueves0"]) . "', " .
        "JuevesTurnoNoche='" . mysqli_real_escape_string($this->conn, $requisicion["TNocheJueves0"]) . "', " .
        "ViernesTurnoDia='" . mysqli_real_escape_string($this->conn, $requisicion["TDiaViernes0"]) . "', " .
        "ViernesTurnoNoche='" . mysqli_real_escape_string($this->conn, $requisicion["TNocheViernes0"]) . "', " .
        "SabadoTurnoDia='" . mysqli_real_escape_string($this->conn, $requisicion["TDiaSabado0"]) . "', " .
        "SabadoTurnoNoche='" . mysqli_real_escape_string($this->conn, $requisicion["TNocheSabado0"]) . "', " .
        "DomingoTurnoDia='" . mysqli_real_escape_string($this->conn, $requisicion["TDiaDomingo0"]) . "', " .
        "DomingoTurnoNoche='" . mysqli_real_escape_string($this->conn, $requisicion["TNocheDomingo0"]) . "'" .
        "where servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $requisicion["puntoServicioPlantillaId"]) . "'";

     //   $this -> logger -> LogInfo ("Se ejecuto consulta  updateRequisicion como" . $sql4);

        $res4 = mysqli_query($this->conn, $sql4);

        if ($res4 !== true) {
            $this->logger->LogInfo("Ocurrio un error al updateRequisicion.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }else{
        //////////// Insertamos si es que los datos el DiasDeTrabajoPlantilla la plantilla aun no existe debido a los comabios realizados ////////

        $sql3 = "insert into DiasDeTrabajoPlantilla (servicioPlantillaId, DescansoMismoDia, LunesTurnoDia, LunesTurnoNoche, MartesTurnoDia, MartesTurnoNoche, MiercolesTurnoDia, MiercolesTurnoNoche, JuevesTurnoDia, JuevesTurnoNoche, ViernesTurnoDia, ViernesTurnoNoche, SabadoTurnoDia, SabadoTurnoNoche, DomingoTurnoDia, DomingoTurnoNoche
    ) VALUES (" .   
    "'" . mysqli_real_escape_string($this->conn, $requisicion["puntoServicioPlantillaId"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["checkElementos0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TDiaLunes0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TNocheLunes0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TDiaMartes0"]) . "'," .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TNochesMartes0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TDiaMiercoles0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TNocheMiercoles0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TDiaJueves0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TNocheJueves0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TDiaViernes0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TNocheViernes0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TDiaSabado0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TNocheSabado0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TDiaDomingo0"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $requisicion["TNocheDomingo0"]) . "')";

    //    $this -> logger -> LogInfo ("Se ejecuto consulta  registroDatosPlantilla como " . $sql3);

    $res3 = mysqli_query($this->conn, $sql3);

    if ($res3 !== true) {
        $this->logger->LogInfo("Ocurrio un error al registrar datos DiasDeTrabajoPlantilla.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
} 
}

public function getPuntosServiciosSupervisor($entidadSupervisor, $consecutivoSupervisor, $tipoSupervisor)
{

    $lista = array();

    $sql = "select sp.supervisorEntidad, sp.supervisorConsecutivo, sp.supervisorTipo, sp.puntoServicioId,
    cps.puntoServicio, ifnull(cps.cobraDescansos,0) as cobraDescansos , ifnull(cps.cobraDiaFestivo,0) as cobraDiaFestivo, ifnull(cps.cobra31,0) as cobra31
    ,cps.idClientePunto, cc.razonSocial,cps.idLineaNegocioPunto
    from supervisor_puntoservicio sp
    left join catalogopuntosservicios cps on (sp.puntoServicioId=cps.idPuntoServicio)
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    where sp.supervisorEntidad='" . mysqli_real_escape_string($this->conn, $entidadSupervisor) . "'
    and  sp.supervisorConsecutivo='" . mysqli_real_escape_string($this->conn, $consecutivoSupervisor) . "'and sp.supervisorTipo='" . mysqli_real_escape_string($this->conn, $tipoSupervisor) . "'
    and cps.esatusPunto=1 order by puntoServicio";

        //$this -> logger -> LogInfo ("Ejecutando getPuntosServiciosSupervisor: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getListaEmpleadosBySupervisorPeriodoPuntoServicio($fecha1, $fecha2, $supervisorEntidad, $supervisorConsecutivo, $supervisorTipo, $periodoId, $puntoServicio)
{

        //$this-> logger -> LogInfo("getListaEmpleadosBySupervisorPeriodoPuntoServicio");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.nombreComercial
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    ,e.roloperativo
    ,cps.idLineaNegocioPunto
    ,pl.requisicionId as IdPlantillaServ
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join plantilla pl on (e.entidadFederativaId=pl.empleadoEntidadPlantilla and e.empleadoConsecutivoId=pl.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=pl.empleadoCategoriaPlantilla)
    where
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
    and e.empleadoIdPuntoServicio=" . $this->safeValue($puntoServicio) . "
    and (((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)) or (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE))  or ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=3) and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)))
    order by e.empleadoIdTurno, nombreEmpleado asc;";

    $this -> logger -> LogInfo ("Ejecutando getListaEmpleadosBySupervisorPeriodoPuntoServicio: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getParametroConfiguracionById($id)
{
    $sql = "SELECT valor from configuracion where id='" . $this->safeValue($id) . "'";

    $res = mysqli_query($this->conn, $sql);

    $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

    $valor = null;

    if ($reg != null) {
        $valor = $reg["valor"];
    }

    return $valor;
}

public function saveParametroConfiguracion($id, $valor, $comentarios)
{
    $valorobtenido = $this->getParametroConfiguracionById($id);

    $sql = "INSERT INTO configuracion (id, valor, comentarios) values (";
    $sql .= "'" . $this->safeValue($id) . "',";
    $sql .= "'" . $this->safeValue($valor) . "',";
    $sql .= "'" . $this->safeValue($comentarios) . "');";

    if ($valorobtenido != null) {
        $sql = "UPDATE configuracion SET ";
        $sql .= "valor='" . $this->safeValue($valor) . "', ";
        $sql .= "comentarios='" . $this->safeValue($comentarios) . "' ";
        $sql .= "WHERE id='" . $this->safeValue($id) . "';";
    }

    mysqli_query($this->conn, $sql);
}

public function getListaEmpleadosBySupervisorPeriodoNombre($fecha1, $fecha2, $supervisorEntidad, $supervisorConsecutivo, $supervisorTipo, $periodoId, $nombre)
{

        //$this-> logger -> LogInfo("getListaEmpleadosBySupervisorPeriodoNombre");
    $PuntosServicios = array();
    $PuntosServicios = $this->getPuntosServiciosSupervisor($supervisorEntidad, $supervisorConsecutivo, $supervisorTipo);
    $lista = array();

    $sql = "SELECT
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.nombreComercial
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    ,e.roloperativo
    ,cps.idLineaNegocioPunto
    ,p.requisicionId
    from empleados e
    left join plantilla p on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    where
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
    and concat_ws(' ',e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) like '%" . $this->safeValue($nombre) . "%'";
    for ($i=0; $i < count($PuntosServicios); $i++) { 
        $idPunto = $PuntosServicios[$i]["puntoServicioId"];
        if($i==0){
            $sql.=" and ( e.empleadoIdPuntoServicio='" . $this->safeValue($idPunto) . "'";
        }else{
            $sql.=" or e.empleadoIdPuntoServicio='" . $this->safeValue($idPunto) . "'";
        }
        if($i == (count($PuntosServicios))-1){
            $sql.=" )";
        }
    }
    $sql.=" and ( ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)) or
           (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)) or
          ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.estatusEmpleadoOperaciones=3 and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)) )
    order by e.empleadoIdTurno, nombreEmpleado asc";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $lista;
}

public function getAsistenciaByEmpleadoFecha($fecha, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{

        //$this-> logger -> LogInfo("getAsistenciaByEmpleadoFecha");

    $lista = array();

    $sql = "select a. empleadoEntidad
    , a.empleadoConsecutivo
    , a.empleadoTipo
    , a.puntoServicioAsistenciaId
    , a.incidenciaAsistenciaId
    , ci.nomenclaturaIncidencia
    , ci.descripcionIncidencia
    , a.fechaAsistencia
    , cps.puntoServicio
    from asistencia a
    left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
    where
    a.fechaAsistencia=CAST('" . $this->safeValue($fecha) . "' AS DATE)
    and a.empleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and a.empleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and a.empleadoTipo='" . $this->safeValue($empleadoTipo) . "'";

        //$this -> logger -> LogInfo ("Ejecutando getAsistenciaByEmpleadoFecha: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getAsistenciaByEmpleadoPeriodo($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{

        //$this-> logger -> LogInfo("getAsistenciaByEmpleadoPeriodo");

    $lista = array();

    $sql = "select a. empleadoEntidad
    , a.empleadoConsecutivo
    , a.empleadoTipo
    , a.puntoServicioAsistenciaId
    , a.incidenciaAsistenciaId
    , a.comentarioIncidencia
    , ci.nomenclaturaIncidencia
    , ci.descripcionIncidencia
    ,ci.valorAsistencia
    , a.fechaAsistencia
    , cps.puntoServicio
    ,a.puestoCubiertoId
    ,cp.descripcionPuesto
    ,a.roloperativo
    ,a.folioIncapacidad
    ,a.Capacitacion
    from asistencia a
    left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
    left join catalogopuestos cp on (cp.idPuesto=a.puestoCubiertoId)
    where
    a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and a.empleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and a.empleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and a.empleadoTipo='" . $this->safeValue($empleadoTipo) . "'";

        //$this -> logger -> LogInfo ("Ejecutando getAsistenciaByEmpleadoPeriodo: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[$reg["fechaAsistencia"]] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function updateAsistencia($empleado, $supervisor, $incidenciaId, $asistenciaFecha, $usuarioCapturaAsistencia, $comentarioIncidencia, $tipoPeriodo, $puestoCubiertoId, $plantilladeservicio,$conteobaja,$idPlantillaServicio)
{

    //$this->logger->LogInfo("updateAsistencia");

    $sql = "update asistencia " .
    "set puntoServicioAsistenciaId='" . $this->safeValue($empleado["puntoServicioId"]) . "'," .
    "supervisorEntidad='" . $this->safeValue($supervisor["entidadId"]) . "', " .
    "supervisorConsecutivo='" . $this->safeValue($supervisor["consecutivoId"]) . "', " .
    "supervisorTipo='" . $this->safeValue($supervisor["tipoId"]) . "', " .
    "incidenciaAsistenciaId=" . $this->safeValue($incidenciaId) . ", " .
    "idPlantillaAsis='" . $this->safeValue($idPlantillaServicio) . "', " .
    "fechaAsistencia='" . $this->safeValue($asistenciaFecha) . "', " .
    "lastEditedIncidencia=NOW(), " .
    "usuarioEditedAsistencia='" . $this->safeValue($usuarioCapturaAsistencia) . "',  " .
    "comentarioIncidencia='" . $this->safeValue($comentarioIncidencia) . "', " .
    "puestoCubiertoId='" . $this->safeValue($puestoCubiertoId) . "', " .
    "roloperativo='" . $this->safeValue($plantilladeservicio) . "'," .
    "conteoPrimerDiaBaja='" . $this->safeValue($conteobaja) . "' " .
    "where empleadoEntidad='" . $this->safeValue($empleado["entidadId"]) . "'" .
    "and  empleadoConsecutivo='" . $this->safeValue($empleado["consecutivoId"]) . "'" .
    "and  empleadoTipo='" . $this->safeValue($empleado["tipoId"]) . "'" .
    "and  fechaAsistencia='" . $this->safeValue($asistenciaFecha) . "'";

   // $this->logger->LogInfo("Ejecutando updateAsistencia: " . $sql);

    $res = mysqli_query($this->conn, $sql);
    //$this->logger->LogInfo("Ejecutando errrrr: " . mysqli_errno($this->conn));
    if (mysqli_errno($this->conn) == 0) {
        return true;
    }

    return false;
}

public function getListaEmpleadosBySupervisorPeriodoEmpleadoId($fecha1, $fecha2, $supervisorEntidad, $supervisorConsecutivo, $supervisorTipo, $periodoId, $empleado)
{
    // $this-> logger -> LogInfo("getListaEmpleadosBySupervisorPeriodoEmpleadoId");
    $PuntosServicios = array();
    $PuntosServicios = $this->getPuntosServiciosSupervisor($supervisorEntidad, $supervisorConsecutivo, $supervisorTipo);
    $lista = array();
      $sql = "SELECT
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoLineaNegocioId
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.nombreComercial
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    ,e.roloperativo   
    ,cps.idLineaNegocioPunto
    ,p.requisicionId
    from empleados e
    left join plantilla p on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
    where
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and e.tipoPeriodo=" . $this->safeValue($periodoId) . "";
    for ($i=0; $i < count($PuntosServicios); $i++) { 
        $idPunto = $PuntosServicios[$i]["puntoServicioId"];
        if($i==0){
            $sql.=" and ( e.empleadoIdPuntoServicio='" . $this->safeValue($idPunto) . "'";
        }else{
            $sql.=" or e.empleadoIdPuntoServicio='" . $this->safeValue($idPunto) . "'";
        }
        if($i == (count($PuntosServicios))-1){
            $sql.=" )";
        }
    }
    $sql.=" and ( ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)) or
          (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)) or
          (e.estatusEmpleadoOperaciones=3 and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)) )
    order by e.empleadoIdTurno, nombreEmpleado asc";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}

public function updateEstatusEmpleadoOperaciones($empleado, $estatusId, $asistenciaFecha)
    { 

        //$this-> logger -> LogInfo("updateEstatusEmpleadoOperaciones");

    $sql = "update empleados " .
    "set estatusEmpleadoOperaciones=" . $this->safeValue($estatusId) . ",fechaBajaOperaciones='" . $this->safeValue($asistenciaFecha) . "' " .
    "where entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'" .
    " and  empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'" .
    " and  empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "';";

   // $this->logger->LogInfo("Ejecutando updateEstatusEmpleadoOperaciones: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (mysqli_errno($this->conn) == 0) {
        return true;
    }
    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

    return false;
}

public function getEmpleadosEstatusOperaciones($estatusEmpleadoOperaciones,$usuario)
{
        // $this-> logger -> LogInfo("getEmpleadosEstatusOperacioness");
        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($usuario, true));
    $lista = array();
    $sql = "select concat_ws('-', e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado,
    concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombre,
    e.fechaBajaOperaciones, e.fechaIngresoEmpleado, e.empleadoEstatusId, e.estatusEmpleadoOperaciones,di.empleadoEstatusImss, e.empleadoIdPuesto,
    concat_ws('-', e.idEntidadResponsableAsistencia, e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia) as responsableAsistencia,
    e.tipoPeriodo, e.empleadoIdPuntoServicio, e.idTipoPuesto, concat_ws(' ', s.apellidoPaterno, s.apellidoMaterno, s.nombreEmpleado) as supervisor, ctp.descripcionTipoPeriodo,e.roloperativo,cru.descripcionRolUsuario as RolUsuario,fe.NombreArchivoBaja,fe.ComentarioEmpBaja,e.EstatusReingreso,e.MotivoReingreso, p.requisicionId as IdPlantilla,di.origenSalarioDiario as OrigenEstatusImss ,di.fechaImss,e.idHoario
    from  empleados e
    left join empleados s on (e.idEntidadResponsableAsistencia=s.entidadFederativaId
    and e.consecutivoResponsableAsistencia=s.empleadoConsecutivoId and e.tipoResponsableAsistencia=s.empleadoCategoriaId)
    left join folosbajaemplados fe on (e.entidadFederativaId=fe.EntidadEmpBaja
    and e.empleadoConsecutivoId=fe.ConsecutivoEmpBaja and e.empleadoCategoriaId=fe.CaegoriaEmpBaja)
    left join usuarios u on(fe.UsuarioCapturaBaja=u.usuario)
    left join catalogorolesusuarios cru on (u.usuarioRolId=cru.idRolUsuario)
    left join catalogotipoperiodo ctp on (e.tipoPeriodo=ctp.tipoPeriodoId)
    left join datosimss di on ( e.entidadFederativaId= di.empladoEntidadImss and e.empleadoConsecutivoId=di.empleadoConsecutivoImss and
    e.empleadoCategoriaId=di.empleadoCategoriaImss)
    left join plantilla p on ( e.entidadFederativaId= p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and
    e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    where ((e.estatusEmpleadoOperaciones=" . $this->safeValue($estatusEmpleadoOperaciones) . ")";
    if($usuario["rol"]=="Lider Unidad"){
        $sql.=") and";
        for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
            if(!is_array($usuario['lineaNegocioUsuario'])){
                $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
            }else{
                $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
            } 
            for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                if(!is_array($usuario['entidadFederativaUsuario'])){
                    $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                }else{
                    $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                }
                if(($i==0) && ($j==0)){
                    $sql.=" ((e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";  
                }else{
                    $sql.=" or (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";       
                }
            }
        }
    }else if($usuario["rol"]=="Supervisor" || $usuario["rol"] == "Consulta Supervisor"){
        $numempleadosupervisor=$usuario["empleadoId"];
        $empleadoidsupervisor = explode("-", $numempleadosupervisor);
        $empleadoEntidadSup=$empleadoidsupervisor[0];
        $empleadoConsecutivoSup=$empleadoidsupervisor[1];
        $empleadoCategoriaSup=$empleadoidsupervisor[2];
        //explode 
        $sql.=") and ((e.idEntidadResponsableAsistencia='$empleadoEntidadSup') and (e.consecutivoResponsableAsistencia='$empleadoConsecutivoSup')  and (e.tipoResponsableAsistencia='$empleadoCategoriaSup')";   
    }
    $sql.=") group by  numeroEmpleado order by numeroEmpleado";   
// $this -> logger -> LogInfo ("Ejecutando getEmpleadosEstatusOperacionesaaaaaaaaaaaaaa: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    // $this -> logger -> LogInfo ("valor del array de la listaaaaa ".var_export ($lista, true));
    return $lista;
}

public function updateEstatusEmpleadoOperacionesActivo($empleado, $estatusId)// se quito  , empleadoEstatusId=1 debido a que actualiza en 1 cuando es reingreso 
{

        //$this-> logger -> LogInfo("updateEstatusEmpleadoOperacionesActivo");

    $sql = "update empleados 
    set estatusEmpleadoOperaciones=" . $this->safeValue($estatusId) . " ,EstatusReingreso='1' ,MotivoReingreso=null 
    where entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and  empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and  empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'";

        //$this -> logger -> LogInfo ("Ejecutando updateEstatusEmpleadoOperacionesActivo: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (mysqli_errno($this->conn) == 0) {
        return true;
    }
    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

    return false;
}
public function deleteAsistenciaFromAsistencia($incidencia)
{
    $sql = "DELETE  FROM asistencia WHERE " .
    "empleadoEntidad='" . $this->safeValue($incidencia["empleadoEntidad"]) . "'" .
    " and empleadoConsecutivo='" . $this->safeValue($incidencia["empleadoConsecutivo"]) . "'" .
    " and empleadoTipo='" . $this->safeValue($incidencia["empleadoTipo"]) . "'" .
    " and fechaAsistencia=CAST('" . $this->safeValue($incidencia["fechaAsistencia"]) . "' AS DATE) ; ";
        //$this -> logger -> LogInfo ("Ejecutando deleteAsistenciaFromAsistencia: " . $sql);
    mysqli_query($this->conn, $sql);

    if (mysqli_errno($this->conn) == 0) {
        return true;
    }

    return false;
}

public function registrarIncidenciaEspecial(
    $empleado,
    $supervisor,
    $incidenciaId,
    $asistenciaFecha,
    $usuarioCapturaAsistencia,
    $comentariIncidencia, $tipoPeriodo,
    $incidenciaPuesto, $plantilladeservicio,$idPlantillaServicio,$selectMotivoIncidenciaEspecial) {

        $this -> logger -> LogInfo ("Ejecutando. registrarIncidenciaEspecial en persistencia");

        // Buscamos si existe un registro de incidencia previo.
    $incidencia = $this->getIncidenciaByEmpleadoFecha($asistenciaFecha,
        $empleado["entidadId"],
        $empleado["consecutivoId"],
        $empleado["tipoId"], $incidenciaId);

        $this -> logger -> LogInfo ("Se ejecuto consulta registrarIncidenciaEspecial como" . var_export ($incidencia, true));

    if (count($incidencia) == 0) {

        $sql = "INSERT INTO incidenciasespeciales (incidenciaEmpleadoEntidad
        , incidenciaEmpleadoConsecutivo
        , incidenciaEmpleadoTipo
        , incidenciaPuntoServicio
        , incidenciaIdPlantilla
        , idMotivoIncidencia
        , incidenciaSupervisorEntidad
        , incidenciaSupervisorConsecutivo
        , incidenciaSupervisorTipo
        , incidenciaId
        , incidenciaFecha
        , incidenciaFechaRegistro
        , incidenciaUsuarioCaptura
        ,incidenciaComentario
        ,incidenciaPuesto,rolOperativo ) VALUES (";
        $sql .= "'" . $this->safeValue($empleado["entidadId"]) . "',";
        $sql .= "'" . $this->safeValue($empleado["consecutivoId"]) . "',";
        $sql .= "'" . $this->safeValue($empleado["tipoId"]) . "',";
        $sql .= "'" . $this->safeValue($empleado["puntoServicioId"]) . "',";
        $sql .= "'" . $this->safeValue($idPlantillaServicio) . "',";
        $sql .= "'" . $this->safeValue($selectMotivoIncidenciaEspecial) . "',";
        $sql .= "'" . $this->safeValue($supervisor["entidadId"]) . "',";
        $sql .= "'" . $this->safeValue($supervisor["consecutivoId"]) . "',";
        $sql .= "'" . $this->safeValue($supervisor["tipoId"]) . "',";
        $sql .= "'" . $this->safeValue($incidenciaId) . "',";
        $sql .= "'" . $this->safeValue($asistenciaFecha) . "',";
        $sql .= "NOW(),";
        $sql .= "'" . $this->safeValue($usuarioCapturaAsistencia) . "',";
        $sql .= "'" . $this->safeValue($comentariIncidencia) . "',";
        $sql .= "" . $this->safeValue($incidenciaPuesto) . ",";
        $sql .= "'" . $this->safeValue($plantilladeservicio) . "')";

        $this -> logger -> LogInfo ("Se ejecuto consulta  registrarIncidenciaEspecial como" . $sql);
        $res = mysqli_query($this->conn, $sql);

        if (mysqli_errno($this->conn) == 0) {
            return true;
        }

        return false;

    } else {
        return $this->updateIncidencia($empleado,
            $supervisor,
            $incidenciaId,
            $asistenciaFecha,
            $usuarioCapturaAsistencia,
            $comentariIncidencia,
            $tipoPeriodo, $incidenciaPuesto,$selectMotivoIncidenciaEspecial);
    }

}

public function updateIncidencia($empleado, $supervisor, $incidenciaId, $asistenciaFecha, $usuarioCapturaAsistencia, $comentarioIncidencia, $tipoPeriodo, $incidenciaPuesto,$selectMotivoIncidenciaEspecial)
{

        //$this-> logger -> LogInfo("updateIncidencia");

    $sql = "update incidenciasespeciales  " .
    "set incidenciaPuntoServicio='" . $this->safeValue($empleado["puntoServicioId"]) . "'," .
    "incidenciaSupervisorEntidad='" . $this->safeValue($supervisor["entidadId"]) . "', " .
    "incidenciaSupervisorConsecutivo='" . $this->safeValue($supervisor["consecutivoId"]) . "', " .
    "incidenciaSupervisorTipo='" . $this->safeValue($supervisor["tipoId"]) . "', " .
    "incidenciaId=" . $this->safeValue($incidenciaId) . ", " .
    "incidenciaFecha='" . $this->safeValue($asistenciaFecha) . "', " .
    "incidenciaLastEdited=NOW(), " .
    "incidenciaUsuarioEdited='" . $this->safeValue($usuarioCapturaAsistencia) . "',  " .
    "idMotivoIncidencia='" . $this->safeValue($selectMotivoIncidenciaEspecial) . "', " .
    "incidenciaComentario='" . $this->safeValue($comentarioIncidencia) . "', " .
    "incidenciaPuesto=" . $this->safeValue($incidenciaPuesto) . " " .
    "where incidenciaEmpleadoEntidad='" . $this->safeValue($empleado["entidadId"]) . "'" .
    "and  incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleado["consecutivoId"]) . "'" .
    "and  incidenciaEmpleadoTipo='" . $this->safeValue($empleado["tipoId"]) . "'" .
    "and  incidenciaId='" . $this->safeValue($incidenciaId) . "'" .
    "and  incidenciaFecha='" . $this->safeValue($asistenciaFecha) . "'";

        $this -> logger -> LogInfo ("Ejecutando updateIncidencia: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (mysqli_errno($this->conn) == 0) {
        return true;
    }

    return false;
}

public function getIncidenciaByEmpleadoFecha($fecha, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $incidenciaId)
{

        //$this-> logger -> LogInfo("getIncidenciaByEmpleadoFecha");

    $lista = array();

    $sql = "select ie.incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ci.nomenclaturaIncidenciaEspecial
    , ci.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    from  incidenciasespeciales ie
    left join   catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha=CAST('" . $this->safeValue($fecha) . "' AS DATE)
    and ie.incidenciaId='" . $this->safeValue($incidenciaId) . "'
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and aplicoDiferencia!=1";

        //$this -> logger -> LogInfo ("Ejecutando getIncidenciaByEmpleadoFecha: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getCatalogoIncidenciasEspeciales()
{

        //$this-> logger -> LogInfo("getCatalogoIncidenciasEspeciales");

    $lista = array();

    $sql = "select * from catalogoincidenciasespeciales where incidenciaEspecialId <>5 order by FIELD (incidenciaEspecialId,'7','2','6','1') DESC;";

        //$this -> logger -> LogInfo ("Ejecutando getCatalogoIncidenciasEspeciales: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getTurnosCubiertosByPeriodoFechasAndPuntoServicio(
    $fechaInicial,
    $fechaFinal,
    $puntoServicioId) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    $sql = "select fechaAsistencia, sum(ci.valorCobertura) as cantidadTurnos 
    from asistencia a 
    inner join catalogoincidencias ci on a.incidenciaAsistenciaId=ci.incidenciaId 
    where fechaAsistencia  between CAST('" . $this->safeValue($fechaInicial) . "' AS DATE) and CAST('" . $this->safeValue($fechaFinal) . "' AS DATE)
    and PuntoServicioAsistenciaId = '" . $this->safeValue($puntoServicioId) . "'
    group by fechaAsistencia";

    $rs = mysqli_query($this->conn, $sql);
     //   $this -> logger -> LogInfo ("Ejecutando getTurnosCubiertosByPeriodoFechasAndPuntoServicio: " . $sql);

    $result = array();
    if (!is_bool($rs)) {
        while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {

              //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($reg, true));
           $result[$reg["fechaAsistencia"]]["cantidadTurnos"] = $reg["cantidadTurnos"];
                //$result[$reg["fechaAsistencia"]]["nomenclaturaIncidencia"] = $reg["nomenclaturaIncidencia"];
       }
   }
   return $result;
}

public function getSumaTurnosExtras($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{

        //$this-> logger -> LogInfo("getSumaTurnosExtras");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    ,ie.rolOperativo
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , sum(cie.valorIncidenciaEspecial) as sumaTurnosExtras
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and ie.incidenciaId=1
    or ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and ie.incidenciaId=6";

        //$this -> logger -> LogInfo ("Ejecutando getSumaTurnosExtras: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["sumaTurnosExtras"] = $reg["sumaTurnosExtras"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}
public function getSumDescuentos($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{

        //$this-> logger -> LogInfo("getSumDescuentos");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , sum(cie.valorIncidenciaEspecial) as descuentos
    ,ie.rolOperativo
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and ie.incidenciaId=4";

        //$this -> logger -> LogInfo ("Ejecutando getSumDescuentos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["descuentos"] = $reg["descuentos"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getSumaIncidenciasEspeciales($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{

        //$this-> logger -> LogInfo("getSumaIncidenciasEspeciales");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , count(cie.valorIncidenciaEspecial) as incidenciasEspeciales
    ,ie.rolOperativo
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and ie.incidenciaId<>4 and ie.incidenciaId<>1 and ie.incidenciaId<>5 and ie.incidenciaId<>6";
       // $this -> logger -> LogInfo ("Ejecutando getSumaIncidenciasEspeciales: " . $sql);
    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["incidenciasEspeciales"] = $reg["incidenciasEspeciales"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getSumaDiasFestivos($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{

        //$this-> logger -> LogInfo("getSumaDiasFestivos");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , count(cie.valorIncidenciaEspecial) as diasFestivos
    ,ie.rolOperativo
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and ie.incidenciaId=5";

        //$this -> logger -> LogInfo ("Ejecutando getSumaDiasFestivos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["diasFestivos"] = $reg["diasFestivos"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getSumaDiasFestivosFatiga($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $puntoServicioI)
{

        //$this-> logger -> LogInfo("getSumaDiasFestivos");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , count(cie.valorIncidenciaEspecial) as diasFestivos
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "' and ie.incidenciaPuntoServicio=" . $puntoServicioI . "
    and ie.incidenciaId=5";

        //$this -> logger -> LogInfo ("Ejecutando getSumaDiasFestivos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["diasFestivos"] = $reg["diasFestivos"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}
public function getTurnosExtras($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{

        //$this-> logger -> LogInfo("getTurnosExtras");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and (ie.incidenciaId=1 or ie.incidenciaId=6)";

        //$this -> logger -> LogInfo ("Ejecutando getTurnosExtras: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getDescuentos($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{

        //$this-> logger -> LogInfo("getDescuentos");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFechaRegistro  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and ie.incidenciaId=4";

        //$this -> logger -> LogInfo ("Ejecutando getDescuentos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getIncidenciasEspeciales($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{

        //$this-> logger -> LogInfo("getIncidenciasEspeciales");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFechaRegistro  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and ie.incidenciaId<>4 and ie.incidenciaId<>1 and ie.incidenciaId<>5  ";

        //$this -> logger -> LogInfo ("Ejecutando getIncidenciasEspeciales: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getListaEmpleadosPeriodoEmpleadoId($fecha1, $fecha2, $periodoId, $empleado)
{

        //$this-> logger -> LogInfo("getListaEmpleadosPeriodoEmpleadoId");

    $lista = array();

    $sql = "SELECT
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.nombreComercial
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    ,e.roloperativo
    ,cps.idLineaNegocioPunto
    ,p.requisicionId
    from empleados e
    left join plantilla p on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    where
    e.idTipoPuesto='03'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
    and ( ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)) or
          (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)) or
          (e.estatusEmpleadoOperaciones=3 and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)) )
    order by e.empleadoIdTurno, nombreEmpleado asc";

//$this -> logger -> LogInfo ("Ejecutando getListaEmpleadosPeriodoEmpleadoId: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getListaEmpleadosByPeriodoNombre($fecha1, $fecha2, $periodoId, $nombre)
{

        //$this-> logger -> LogInfo("getListaEmpleadosByPeriodoNombre");

    $lista = array();

    $sql = "SELECT
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.nombreComercial
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    ,e.roloperativo
    ,cps.idLineaNegocioPunto
    ,p.requisicionId
    from empleados e
    left join plantilla p on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    where
    e.idTipoPuesto='03'
    and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
    and concat_ws(' ',e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) like '%" . $this->safeValue($nombre) . "%'
    and ( ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)) or
           (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)) or
          ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.estatusEmpleadoOperaciones=3 and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)) )
    order by e.empleadoIdTurno, nombreEmpleado asc";

        //$this -> logger -> LogInfo ("Ejecutando getListaEmpleadosByPeriodoNombre: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function traerCatalogoPuntosServiciosActivos()
{
        //$this-> logger -> LogInfo("traerCatalogoPuntosServiciosActivos");

    try {

        $sql = "select
        idPuntoServicio,
        numeroCentroCosto,
        numeroOrden,
        puntoServicio,
        cc.razonSocial,
        ef.nombreEntidadFederativa,
        esatusPunto,
        fechaInicioServicio,
        fechaTerminoServicio,
        idClientePunto,
        idEntidadPunto, ifnull(cobraDescansos,0) as cobraDescansos, ifnull(cobraDiaFestivo,0) as cobraDiaFestivo , ifnull(cobra31,0) as cobra31
        ,cps.idLineaNegocioPunto
        from
        catalogopuntosservicios cps
        left join
        catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
        left join
        entidadesfederativas ef ON (ef.idEntidadFederativa = cps.idEntidadPunto)
        where esatusPunto=1
        order by puntoServicio ";

            //$this -> logger -> LogInfo ("ejecutando traerCatalogoPuntosServiciosActivos en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }

}

public function getListaGeneralEmpleadosBySupervisor($fecha1, $fecha2, $supervisorEntidad, $supervisorConsecutivo, $supervisorTipo, $periodoId)
{

    //$this-> logger -> LogInfo("getListaGeneralEmpleadosBySupervisor");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,e.idEntidadTrabajo
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,e.numeroCta
    ,e.numeroCtaClabe
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    ,cc.razonSocial
    ,e.idEntidadTrabajo
    ,ef.nombreEntidadFederativa as entidadTrabajo
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    ,concat_ws(' ',s.nombreEmpleado,s.apellidoPaterno,s.apellidoMaterno) as supervisor
    ,e.roloperativo,cln.descripcionLineaNegocio
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados s on (s.entidadFederativaId=e.idEntidadResponsableAsistencia and s.empleadoConsecutivoId=e.consecutivoResponsableAsistencia and s.empleadoCategoriaId=e.tipoResponsableAsistencia)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
    left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
    where
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
    and e.empleadoEstatusId=0
    and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=3)
    and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    order by cps.puntoservicio, e.empleadoIdTurno, nombreEmpleado asc;";

   // $this -> logger -> LogInfo ("Ejecutando getListaGeneralEmpleadosBySupervisor: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getListaGeneralEmpleados($fecha1, $fecha2, $periodoId,$tipopuesto)
{

 //$this-> logger -> LogInfo("getListaGeneralEmpleados");

   $lista = array();

   $sql = "select
   e.entidadFederativaId
   ,e.empleadoConsecutivoId
   ,e.empleadoCategoriaId
   ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
   ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
   ,e.fechaIngresoEmpleado
   ,e.empleadoIdPuntoServicio
   ,cps.puntoServicio
   ,e.empleadoIdPuesto
   ,cp.descripcionPuesto
   ,e.empleadoIdTurno
   ,e.numeroCta
   ,e.numeroCtaClabe
   ,ct.descripcionTurno
   ,e.tipoPeriodo
   ,ctp.descripcionTipoPeriodo
   ,e.empleadoEstatusId
   ,e.estatusEmpleadoOperaciones
   ,e.fechaBajaEmpleado
   ,cc.razonSocial
   ,e.idEntidadTrabajo
   ,ef.nombreEntidadFederativa as entidadTrabajo
   ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
   , concat_ws(' ',s.nombreEmpleado,s.apellidoPaterno,s.apellidoMaterno) as supervisor
   ,ifnull(ce.sueldoEmpleado,0) as sueldoEmpleado
   ,ifnull(ce.cuotaDiariaEmpleado,0) as cuotaDiariaEmpleado
   ,ifnull(ce.bonoAsistenciaEmpleado,0) as bonoAsistenciaEmpleado
   ,ifnull(ce.bonoPuntualidadEmpleado,0) as bonoPuntualidadEmpleado
   ,e.roloperativo,cln.descripcionLineaNegocio
   from empleados e
   left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
   left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
   left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
   left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
   left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
   left join empleados s on (s.entidadFederativaId=e.idEntidadResponsableAsistencia and s.empleadoConsecutivoId=e.consecutivoResponsableAsistencia and s.empleadoCategoriaId=e.tipoResponsableAsistencia)
   left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
   left join cuotas_empleados ce on (ce.empleadoEntidadCuota=e.entidadFederativaId and ce.empleadoConsecutivoCuota=e.empleadoConsecutivoId and ce.empleadoCategoriaCuota=e.empleadoCategoriaId)
   left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
   where
   e.idTipoPuesto='".$this->safeValue($tipopuesto)  ."' and (e.empleadoLineaNegocioId=1 or e.empleadoLineaNegocioId=2 or e.empleadoLineaNegocioId=3 or e.empleadoLineaNegocioId=4 )
   and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
   and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
   or
   (
   e.idTipoPuesto='".$this->safeValue($tipopuesto)  ."' and (e.empleadoLineaNegocioId=1 or e.empleadoLineaNegocioId=2 or e.empleadoLineaNegocioId=3 or e.empleadoLineaNegocioId=4 )
   and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
   and e.empleadoEstatusId=0
   and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
   )
   order by supervisor,cps.puntoservicio, e.empleadoIdTurno, nombreEmpleado asc;";

 //$this -> logger -> LogInfo ("Ejecutando getListaGeneralEmpleados: " . $sql);

   $res = mysqli_query($this->conn, $sql);

   if (!is_bool($res)) {
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $lista[] = $reg;
    }
}

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

return $lista;

}

public function getEmpleadosByRangoFechaSupervisor($fecha1, $fecha2, $supervisorEntidad, $supervisorConsecutivo, $supervisorTipo)
{

        //$this-> logger -> LogInfo("getEmpleadosByRangoFechaSupervisorrrr");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,e.numeroCta
    ,e.numeroCtaClabe
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.razonSocial
    ,e.idEntidadTrabajo
    ,ef.nombreEntidadFederativa as entidadTrabajo
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    ,concat_ws(' ',s.nombreEmpleado,s.apellidoPaterno,s.apellidoMaterno) as supervisor
    ,e.roloperativo,cln.descripcionLineaNegocio
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados s on (s.entidadFederativaId=e.idEntidadResponsableAsistencia and s.empleadoConsecutivoId=e.consecutivoResponsableAsistencia and s.empleadoCategoriaId=e.tipoResponsableAsistencia)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
    left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
    where
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.empleadoEstatusId=0
    and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=3)
    and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    order by cps.puntoservicio, e.empleadoIdTurno, nombreEmpleado asc;";

        // $this -> logger -> LogInfo ("Ejecutando getEmpleadosByRangoFechaSupervisor: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}
public function getEmpleadosByRangoFecha($fecha1, $fecha2)
{

    //$this->logger->LogInfo("getEmpleadosByRangoFecha");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,e.numeroCta
    ,e.numeroCtaClabe
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.razonSocial
    ,e.idEntidadTrabajo
    ,ef.nombreEntidadFederativa as entidadTrabajo
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    , concat_ws(' ',s.nombreEmpleado,s.apellidoPaterno,s.apellidoMaterno) as supervisor
    ,e.roloperativo,cln.descripcionLineaNegocio
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados s on (s.entidadFederativaId=e.idEntidadResponsableAsistencia and s.empleadoConsecutivoId=e.consecutivoResponsableAsistencia and s.empleadoCategoriaId=e.tipoResponsableAsistencia)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
    left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
    where
    e.idTipoPuesto='03'
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and e.fechaIngresoEmpleado <= CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    or
    (
    e.idTipoPuesto='03'
    and e.empleadoEstatusId=0
    and e.fechaBajaEmpleado >= CAST('" . $this->safeValue($fecha1) . "' AS DATE)
    and e.fechaIngresoEmpleado <= CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    order by supervisor,cps.puntoservicio, e.empleadoIdTurno, nombreEmpleado asc;";


    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getListaEmpleadosBySupervisorPuntoServicioRangoFecha($fecha1, $fecha2, $supervisorEntidad, $supervisorConsecutivo, $supervisorTipo, $puntoServicio)
{

        //$this-> logger -> LogInfo("getListaEmpleadosBySupervisorPuntoServicioRangoFecha");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,e.numeroCta
    ,e.numeroCtaClabe
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    ,cc.razonSocial
    ,e.idEntidadTrabajo
    ,ef.nombreEntidadFederativa as entidadTrabajo
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    ,e.roloperativo,cln.descripcionLineaNegocio
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
    left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
    where
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.empleadoIdPuntoServicio=" . $this->safeValue($puntoServicio) . "
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.empleadoIdPuntoServicio=" . $this->safeValue($puntoServicio) . "
    and e.empleadoEstatusId=0
    and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.empleadoIdPuntoServicio=" . $this->safeValue($puntoServicio) . "
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=3)
    and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    order by e.empleadoIdTurno, nombreEmpleado asc;";

        //$this -> logger -> LogInfo ("Ejecutando getListaEmpleadosBySupervisorPuntoServicioRangoFecha: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getListaEmpleadosPuntoServicioRangoFecha($fecha1, $fecha2, $puntoServicio)
{

        //$this-> logger -> LogInfo("getListaEmpleadosPuntoServicioRangoFecha");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,e.numeroCta
    ,e.numeroCtaClabe
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    ,cc.razonSocial
    ,e.idEntidadTrabajo
    ,ef.nombreEntidadFederativa as entidadTrabajo
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    , concat_ws(' ',s.nombreEmpleado,s.apellidoPaterno,s.apellidoMaterno) as supervisor
    ,e.roloperativo,cln.descripcionLineaNegocio
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados s on (s.entidadFederativaId=e.idEntidadResponsableAsistencia and s.empleadoConsecutivoId=e.consecutivoResponsableAsistencia and s.empleadoCategoriaId=e.tipoResponsableAsistencia)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
    left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
    where
    e.idTipoPuesto='03'
    and e.empleadoIdPuntoServicio=" . $this->safeValue($puntoServicio) . "
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)
    or
    (
    e.idTipoPuesto='03'
    and e.empleadoIdPuntoServicio=" . $this->safeValue($puntoServicio) . "
    and e.empleadoEstatusId=0
    and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    or
    (
    e.idTipoPuesto='03'
    and e.empleadoIdPuntoServicio=" . $this->safeValue($puntoServicio) . "
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=3)
    and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    order by supervisor, e.empleadoIdTurno, nombreEmpleado asc;";

        //$this -> logger -> LogInfo ("Ejecutando getListaEmpleadosPuntoServicioRangoFecha: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getEmpleadoByIdSupervisRangoFecha($fecha1, $fecha2, $supervisorEntidad, $supervisorConsecutivo, $supervisorTipo, $empleado)
{

        //$this-> logger -> LogInfo("getEmpleadoByIdSupervisRangoFecha");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.numeroCta
    ,e.numeroCtaClabe
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.razonSocial
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    where
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and e.empleadoEstatusId=0
    and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and (e.estatusEmpleadoOperaciones=3)
    and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    order by e.empleadoIdTurno, nombreEmpleado asc;";

        //$this -> logger -> LogInfo ("Ejecutando getEmpleadoByIdSupervisRangoFecha: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getEmpleadoByIdSupervisorRangoFecha($fecha1, $fecha2, $supervisorEntidad, $supervisorConsecutivo, $supervisorTipo, $empleado)
{

        // $this-> logger -> LogInfo("getEmpleadoByIdSupervisorRangoFecha");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.numeroCta
    ,e.numeroCtaClabe
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.razonSocial
    ,e.idEntidadTrabajo
    ,ef.nombreEntidadFederativa as entidadTrabajo
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    ,e.roloperativo,cln.descripcionLineaNegocio
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
    left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
    where
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and e.empleadoEstatusId=0
    and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    or
    (
    e.idTipoPuesto='03'
    and e.idEntidadResponsableAsistencia='" . $this->safeValue($supervisorEntidad) . "'
    and e.consecutivoResponsableAsistencia='" . $this->safeValue($supervisorConsecutivo) . "'
    and e.tipoResponsableAsistencia='" . $this->safeValue($supervisorTipo) . "'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and (e.estatusEmpleadoOperaciones=3)
    and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    order by e.empleadoIdTurno, nombreEmpleado asc;";


    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getEmpleadoByIdRangoFecha($fecha1, $fecha2, $empleado)
{

 //       $this-> logger -> LogInfo("getEmpleadoByIdRangoFecha");

    $lista = array();

    $sql = "select
    e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
    ,e.fechaIngresoEmpleado
    ,e.empleadoIdPuntoServicio
    ,cps.puntoServicio
    ,e.empleadoIdPuesto
    ,cp.descripcionPuesto
    ,e.numeroCta
    ,e.numeroCtaClabe
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,e.tipoPeriodo
    ,ctp.descripcionTipoPeriodo
    ,e.empleadoEstatusId
    ,e.fechaBajaEmpleado
    , cc.razonSocial
    ,e.idEntidadTrabajo
    ,ef.nombreEntidadFederativa as entidadTrabajo
    ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
    , concat_ws(' ',s.nombreEmpleado,s.apellidoPaterno,s.apellidoMaterno) as supervisor
    ,e.roloperativo,cln.descripcionLineaNegocio
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados s on (s.entidadFederativaId=e.idEntidadResponsableAsistencia and s.empleadoConsecutivoId=e.consecutivoResponsableAsistencia and s.empleadoCategoriaId=e.tipoResponsableAsistencia)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=e.idEntidadTrabajo)
    left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
    where
    e.idTipoPuesto='03'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
    and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4)
    or
    (
    e.idTipoPuesto='03'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and e.empleadoEstatusId=0
    and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    or
    (
    e.idTipoPuesto='03'
    and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
    and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
    and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
    and (e.estatusEmpleadoOperaciones=3)
    and e.fechaBajaOperaciones between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    )
    order by e.empleadoIdTurno, nombreEmpleado asc;";

//$this -> logger -> LogInfo ("Ejecutando getEmpleadoByIdRangoFecha: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}
public function getEmpleadoForFatiga($fecha1, $fecha2, $puntoservicio)
{

        //$this-> logger -> LogInfo("getEmpleadoForFatiga");

    $lista = array();

      /*  $sql = "select DISTINCT a.empleadoEntidad, a.empleadoConsecutivo, a.empleadoTipo
                ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
                ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
                ,ct.descripcionTurno
                , cp.descripcionPuesto
                ,e.entidadFederativaId
                ,e.empleadoConsecutivoId
                ,e.empleadoCategoriaId,e.roloperativo, concat_ws(' ', em.apellidoPaterno, em.apellidoMaterno, em.nombreEmpleado) as nombresupervisor,cps.puntoServicio,ef.nombreEntidadFederativa as entidadpunto ,e.roloperativo
                from asistencia a
                left join empleados e on(a.empleadoEntidad=e.entidadFederativaId and a.empleadoConsecutivo=e.empleadoConsecutivoId and a.empleadoTipo=e.empleadoCategoriaId)
                left join empleados em on(  a.supervisorEntidad=em.entidadFederativaId and a.supervisorConsecutivo=em.empleadoConsecutivoId and a.supervisorTipo=em.empleadoCategoriaId)
                left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
                left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
                left join catalogopuntosservicios cps on(e.empleadoIdPuntoServicio=cps.idPuntoServicio)
                left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
                where
                a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
                and a.puntoServicioAsistenciaId='" . $this->safeValue($puntoservicio) . "'
                order by nombreEmpleado asc;";
*/

                $sql="select DISTINCT a.empleadoEntidad, a.empleadoConsecutivo, a.empleadoTipo
                ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
                ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
                ,ct.descripcionTurno
                , cp.descripcionPuesto
                ,e.entidadFederativaId
                ,e.empleadoConsecutivoId
                ,e.empleadoCategoriaId,e.roloperativo, 
                concat_ws(' ', em.apellidoPaterno, em.apellidoMaterno, em.nombreEmpleado) as nombresupervisor,cps.puntoServicio,ef.nombreEntidadFederativa as entidadpunto ,e.roloperativo
                from asistencia a
                left join empleados e on(a.empleadoEntidad=e.entidadFederativaId and a.empleadoConsecutivo=e.empleadoConsecutivoId and a.empleadoTipo=e.empleadoCategoriaId)
                left join empleados em on(  e.idEntidadResponsableAsistencia=em.entidadFederativaId and e.consecutivoResponsableAsistencia=em.empleadoConsecutivoId and e.tipoResponsableAsistencia=em.empleadoCategoriaId)
                left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
                left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
                left join catalogopuntosservicios cps on(e.empleadoIdPuntoServicio=cps.idPuntoServicio)
                left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
                where
                a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
                and a.puntoServicioAsistenciaId='" . $this->safeValue($puntoservicio) . "'
                order by nombreEmpleado asc;";
//$this -> logger -> LogInfo ("Ejecutando getEmpleadoForFatiga: " . $sql);

                $res = mysqli_query($this->conn, $sql);

                if (!is_bool($res)) {
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $lista[] = $reg;
                    }
                }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

                return $lista;

            }

            public function getAsistenciaByEmpleadoPuntoServicioFatiga($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $puntoServicio)
            {
        //$this-> logger -> LogInfo("getAsistenciaByEmpleadoPuntoServicioFatiga");
                $lista = array();
                $sql = "select a. empleadoEntidad
                , a.empleadoConsecutivo
                , a.empleadoTipo
                , a.puntoServicioAsistenciaId
                , a.incidenciaAsistenciaId
                , a.comentarioIncidencia
                , ci.nomenclaturaIncidencia
                , ci.descripcionIncidencia
                ,ci.valorAsistencia
                ,ci.valorCobertura
                , a.fechaAsistencia
                , cps.puntoServicio
                from asistencia a
                left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
                left join  catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
                where
                a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
                and a.puntoServicioAsistenciaId='" . $this->safeValue($puntoServicio) . "'
                and a.empleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
                and a.empleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
                and a.empleadoTipo='" . $this->safeValue($empleadoTipo) . "'
                and a.Capacitacion is null";
        //$this -> logger -> LogInfo ("Ejecutando getAsistenciaByEmpleadoPuntoServicioFatiga: " . $sql);
                $res = mysqli_query($this->conn, $sql);
                if (!is_bool($res)) {
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $lista[$reg["fechaAsistencia"]] = $reg;
                    }
                }
        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
                return $lista;
            }

            public function getTurnosExtrasFatiga($fecha1, $fecha2, $puntoservicio)
            {
       //$this-> logger -> LogInfo("getTurnosExtrasFatiga");
                $lista = array();
                $sql = "select ie. incidenciaEmpleadoEntidad
                , ie.incidenciaEmpleadoConsecutivo
                , ie.incidenciaEmpleadoTipo
                , ie.incidenciaPuntoServicio
                , ie.incidenciaId
                , ie.incidenciaComentario
                , ie.incidenciaFechaRegistro
                , cie.nomenclaturaIncidenciaEspecial
                , cie.descripcionIncidenciaEspecial
                , ie.incidenciaFecha
                , cps.puntoServicio
                , cie.valorIncidenciaEspecial
                , concat_ws('-', ie.incidenciaEmpleadoEntidad
                , ie.incidenciaEmpleadoConsecutivo
                , ie.incidenciaEmpleadoTipo) as numeroEmpleado
                , concat_ws(' ',e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
                , ie.incidenciaComentario,ie.incidenciaIdPlantilla
                ,cpPlant.descripcionPuesto AS PuestoPlantilla,croloppla.DescripcioRolOP as RolPlantilla
                from incidenciasespeciales ie
                left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
                left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
                left join empleados e on (e.entidadFederativaId=ie.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=ie.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=ie.incidenciaEmpleadoTipo)
                left join catalogopuestos cp on(ie.incidenciaPuesto=cp.idPuesto)
                left join servicios_plantillas servp on (ie.incidenciaIdPlantilla = servp.servicioPlantillaId)
                left join catalogopuestos cpPlant on(servp.puestoPlantillaId = cpPlant.idPuesto)
                left join catalogoroleoperativo croloppla on (servp.IdRolOperativoPlantilla = croloppla.idRolOperativo)
                where
                ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
                and ie.incidenciaPuntoServicio='" . $this->safeValue($puntoservicio) . "'
                and (ie.incidenciaId=1 or ie.incidenciaId=6)
                order by incidenciaFecha";
       // $this -> logger -> LogInfo ("Ejecutando getTurnosExtrasFatiga: " . $sql);
                $res = mysqli_query($this->conn, $sql);

                if (!is_bool($res)) {
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $lista[] = $reg;
                    }
                }
        // $this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));
                return $lista;
            }

            public function getIncrementosPlantillaFatiga($fecha1, $fecha2, $puntoservicio)
            {

        //$this-> logger -> LogInfo("getIncrementosPlantillaFatiga");

                $lista = array();

                $sql = "select sp.servicioPlantillaId, puntoServicioPlantillaId,tipoTurnoPlantillaId,
                sum(numeroElementos) as numeroElementos,tipoTurnoPlantillaId,fechaInicio
                FROM servicios_plantillas sp
                where sp.puntoServicioPlantillaId=" . $this->safeValue($puntoservicio) . "
                and fechaInicio between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
                group by fechaInicio";

        //$this -> logger -> LogInfo ("Ejecutando getIncrementosPlantillaFatiga: " . $sql);

                $res = mysqli_query($this->conn, $sql);

                if (!is_bool($res)) {
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $lista[] = $reg;
                    }
                }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

                return $lista;

            }

            public function getPlantillasByPuntoServiciosClienteNamePoint($idCliente, $puntoservicio)
            {

      //  $this -> logger -> LogInfo (" getPlantillasByPuntoServiciosClienteNamePoint: " . $idCliente);

                $lista = array();

                $sql = "select
    cps.idPuntoServicio
    , cps.puntoServicio
    , cps.idEntidadPunto
    , ef.nombreEntidadFederativa
    , ifnull(efe.nombreEntidadFederativa,'Sin Informacion') as nombreEntidadFederativa1
    ,cps.numeroCentroCosto
    , cps.idClientePunto
    , ifnull(c1.elementosContratados,0) elementosContratados
    , ifnull(c2.elementosSolicitados,0 ) elementosSolicitados
    ,cc.razonsocial
    , ifnull(c3.elementosAsignados,0) elementosAsignados
    from catalogopuntosservicios cps
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
    left join entidadesfederativas efe on (efe.idEntidadFederativa=cps.EntidadPuntoS)
    left join (
    -- consulta elementos contratados en el punto de servicio
    select count(e.empleadoNumeroSeguroSocial) as elementosContratados, e.empleadoIdPuntoServicio,cps.idPuntoServicio, cps.puntoservicio, cc.razonSocial
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    where (e.empleadoEstatusId= 2 or e.empleadoEstatusId=1) and e.idTipoPuesto='03'
    group by cps.puntoservicio
    ) c1 on (c1.idPuntoServicio=cps.idPuntoServicio)
    left join (
    -- consulta elementos soliitados en requisiciones por ventas
    select
    sp.servicioPlantillaId
    , sp.puntoServicioPlantillaId
    , sp.numeroElementos
    , sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    where sp.estatusPlantilla='1'
    group by puntoServicioPlantillaId
    ) c2 on puntoServicioPlantillaId=cps.idPuntoServicio
    left join (
    select p.plantillaId
    , p.requisicionId
    , p.empleadoEntidadPlantilla
    , p.empleadoConsecutivoPlantilla
    , p.empleadoCategoriaPlantilla
    , sp.puntoServicioPlantillaId
    , cps.puntoServicio
    , cps.idPuntoServicio
    , cc.idCliente
    , cc.razonSocial
    , count(p.plantillaId) elementosAsignados
    from plantilla p
    left join servicios_plantillas sp on (sp.servicioPlantillaId=p.requisicionId)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    where (e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4 )
    group by idCliente, sp.puntoServicioPlantillaId
    )c3 on (c3.puntoServicioPlantillaId=cps.idPuntoServicio)
    where cps.esatusPunto=1
    and cc.idCliente=" . mysqli_real_escape_string($this->conn, $idCliente) . " order by cps.puntoServicio asc ";

       // $this -> logger -> LogInfo ("Ejecutando getPlantillasByPuntoServiciosClienteNamePoint: " . $sql);

                $res = mysqli_query($this->conn, $sql);

                if (!is_bool($res)) {
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $lista[] = $reg;
                    }
                }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

                return $lista;

            }

            public function getRequisicionesFromVentas($tipoBusquedaPlantilla)
            {
        //$this -> logger -> LogInfo ("getRequisicionesFromVentas en persistencia");

                $lista = array();

                try {

                    $sql = "select
                    sp.servicioPlantillaId,
                    cps.puntoServicio,
                    cps.numeroCentroCosto,
                    sp.puntoServicioPlantillaId,
                    cps.fechaInicioServicio,
                    cps.fechaTerminoServicio,
                    cps.esatusPunto,
                    cef.nombreEntidadFederativa,
                    cc.razonSocial,
                    sp.numeroElementos,
                    cp.descripcionPuesto,
                    ct.descripcionTurno,
                    sp.fechaInicio,
                    sp.costoPorTurno,
                    turnosPorDia,
                    usuarioCapturaPlantilla,
                    fechaRegistroPlantilla,
                    lastEdited,
                    fechaTerminoPlantilla,
                    estatusPlantilla,
                    cro.DescripcioRolOP as rolOperativoPlantilla,
                    cl.descripcionLineaNegocio,
                    tb.sueldo
                    from servicios_plantillas sp
                    left join catalogopuestos cp on cp.idPuesto=sp.puestoPlantillaId
                    left join catalogoturnos ct on ct.idTipoTurno=sp.tipoTurnoPlantillaId
                    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
                    left join entidadesfederativas cef on (cef.idEntidadFederativa=cps.idEntidadPunto)
                    left join  catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
                    left join  catalogolineanegocio cl on (cl.idLineaNegocio=sp.lineaNegocioRequisicion)
                    left join catalogoroleoperativo cro on cro.idRolOperativo=sp.IdRolOperativoPlantilla
                    left join tabulador tb on (tb.puntoServicio=sp.puntoServicioPlantillaId and tb.puestoId=sp.puestoPlantillaId and tb.rolId=sp.tipoTurnoPlantillaId)
                    where sp.numeroElementos > 0
                    and cp.puestoIdCategoria=03";

                    if($tipoBusquedaPlantilla=='1') {
                       $sql.=" and estatusPlantilla='1'";
                    }

                    if($tipoBusquedaPlantilla=='2') {
                       $sql.=" and estatusPlantilla='0'";
                    }            

                    $sql.=" order by razonSocial, puntoServicio asc";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getRequisicionesFromVentas " . $sql);

                    $res = mysqli_query($this->conn, $sql);

                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                        $lista[] = $reg;
                    }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

                    return $lista;

                } catch (Exception $e) {

                    $this->logger->LogInfo("getRequisicionesFromVentas ERROR:" . $e->getMessage());
                }
            }

            public function getPuntosServicios($fecha1, $fecha2)
            {
        //$this -> logger -> LogInfo ("getPuntosServicios en persistencia");

                $lista = array();

                try {

                    $sql = "select
                    cps.idPuntoServicio
                    ,cps.puntoServicio
                    ,cps.idEntidadPunto
                    ,ef.nombreEntidadFederativa
                    ,cps.esatusPunto
                    ,cps.idClientePunto
                    ,cc.razonSocial
                    ,cps.numeroCentroCosto
                    ,cps.fechaInicioServicio
                    ,cps.fechaTerminoServicio
                    ,ifnull(cps.cobraDescansos,0) cobraDescansos
                    ,ifnull(cps.cobraDiaFestivo, 0) cobraDiaFestivo
                    ,ifnull(cps.cobra31,0) cobra31
                    from catalogopuntosservicios cps
                    left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
                    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
                    where
                    (cps.esatusPunto=1
                    and fechaInicioServicio < CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
                    or ( cps.esatusPunto=0 and fechaInicioServicio < CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE) and fechaTerminoServicio between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
                    or ( cps.esatusPunto=0 and fechaInicioServicio < CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE) and fechaTerminoServicio >CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE))
                    order by cps.puntoServicio";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getPuntosServicios " . $sql);

                    $res = mysqli_query($this->conn, $sql);

                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                        $lista[] = $reg;
                    }
            //$this -> logger -> LogInfo ("valor del array de la getPuntosServicios ".var_export ($lista, true));

                    return $lista;

                } catch (Exception $e) {

                    $this->logger->LogInfo(" getPuntosServicios ERROR:" . $e->getMessage());
                }
            }

            public function getDetallesRequisiciones($puntoServicioId, $fecha1, $fecha2)
            {
        //$this -> logger -> LogInfo ("getDetallesRequisiciones en persistencia");

                $lista = array();

                try {

                    $sql = "Select
                    sp.servicioPlantillaId,
                    cps.puntoServicio,
                    cps.numeroCentroCosto,
                    cps.esatusPunto,
                    sp.puntoServicioPlantillaId,
                    sp.numeroElementos,
                    sp.puestoPlantillaId,
                    cp.descripcionPuesto,
                    ct.descripcionTurno,
                    -- g.descripcionGenero,
                    sp.fechaInicio,
                    sp.fechaTerminoPlantilla,
                    sp.costoPorTurno,
                    turnosPorDia,
                    usuarioCapturaPlantilla,
                    fechaRegistroPlantilla,
                    lastEdited
                    ,sum(numeroElementos) as totalElementos
                    ,sum(turnosPorDia) as turnosTotalesDiarios
                    , turnosPorDia
                    , costoPorTurno
                    ,cef.nombreEntidadFederativa
                    ,cc.razonSocial
                    ,sp.estatusPlantilla
                    from
                    servicios_plantillas sp
                    LEFT JOIN
                    catalogopuestos cp ON cp.idPuesto = sp.puestoPlantillaId
                    LEFT JOIN
                    catalogoturnos ct ON ct.idTipoTurno = sp.tipoTurnoPlantillaId
                    LEFT JOIN
                    catalogopuntosservicios cps ON (cps.idPuntoServicio = sp.puntoServicioPlantillaId)
                    LEFT JOIN
                    entidadesfederativas cef ON (cef.idEntidadFederativa = cps.idEntidadPunto)
                    LEFT JOIN
                    catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
                    where
                    (cps.esatusPunto = 1 and sp.puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . " and sp.fechaInicio < CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE) and sp.estatusPlantilla=1 )
                    or ( cps.esatusPunto=0 and sp.estatusPlantilla=0 and sp.puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . " and sp.fechaTerminoPlantilla > CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE))
                    or ( cps.esatusPunto=0 and sp.estatusPlantilla=0 and sp.fechaTerminoPlantilla between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
                    and sp.puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . ")
                    group by sp.puestoPlantillaId , sp.fechaInicio , sp.costoPorTurno
                    ORDER BY fechaInicio, descripcionPuesto ASC";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getDetallesRequisiciones ID-".$puntoServicioId." " . $sql);

                    $res = mysqli_query($this->conn, $sql);

                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                        $lista[] = $reg;
                    }
            //$this -> logger -> LogInfo ("valor del array de la getDetallesRequisiciones ".var_export ($lista, true));

                    return $lista;

                } catch (Exception $e) {

                    $this->logger->LogInfo("ERROR:" . $e->getMessage());
                }
            }

            public function getTurnosCubiertosRequisicion($fecha1, $fecha2, $puntoServicioId, $puestoId)
            {

        //$this-> logger -> LogInfo("getTurnosCubiertosRequisicion");

        //$lista = array ();

                $sql = "select ifnull(sum(turnosCubiertos),0) as totalTurnosCubiertos
                from
                (
                SELECT
                sum(ci.valorCobertura ) turnosCubiertos
                FROM asistencia a
                left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
                left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
                left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
                where
                fechaAsistencia between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
                and puntoServicioAsistenciaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "
                and e.empleadoIdPuesto=" . mysqli_real_escape_string($this->conn, $puestoId) . "
                UNION
                select
                sum(cie.valorIncidenciaEspecial) as turnosCubiertos
                from incidenciasespeciales ie
                left join catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
                left join empleados e on (e.entidadFederativaId=ie.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=ie.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=ie.incidenciaEmpleadoTipo)
                left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
                where
                incidenciaFecha between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
                and incidenciaPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "
                and e.empleadoIdPuesto=" . mysqli_real_escape_string($this->conn, $puestoId) . "
                and (ie.incidenciaId=1 or ie.incidenciaId=6)
            ) as totalTurnos";

        //$this -> logger -> LogInfo ("Ejecutando getSumaIncidenciasEspeciales: " . $sql);

            $res = mysqli_query($this->conn, $sql);

            if (!is_bool($res)) {

                $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

                $turnosCubiertos = $reg;

            }

        //$this -> logger -> LogInfo ("Se ejecuto consulta getTurnosCubiertosRequisicion sql como" . var_export ($sql, true));
        //$this -> logger -> LogInfo ("turnosCubiertos:" . var_export ($turnosCubiertos, true));

            return $turnosCubiertos;

        }

        public function getCoberturaByPuntoServicioIdAndRangoFecha($fecha1, $fecha2, $puntoServicioId, $puestoId)
        {

        //$this-> logger -> LogInfo("getCoberturaByPuntoServicioIdAndRangoFecha");

        //$lista = array ();

            $sql = "select ifnull(sum(turnosCubiertos),0) as totalTurnosCubiertos
            from
            (
            SELECT
            sum(ci.valorCobertura ) turnosCubiertos
            FROM asistencia a
            left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
            left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
            left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
            where
            fechaAsistencia between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
            and puntoServicioAsistenciaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "
            UNION
            select
            sum(cie.valorIncidenciaEspecial) as turnosCubiertos
            from incidenciasespeciales ie
            left join catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
            left join empleados e on (e.entidadFederativaId=ie.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=ie.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=ie.incidenciaEmpleadoTipo)
            left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
            where
            incidenciaFecha between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
            and incidenciaPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "
            and (ie.incidenciaId=1 or ie.incidenciaId=6)
        ) as totalTurnos";

        //$this -> logger -> LogInfo ("Ejecutando getCoberturaByPuntoServicioIdAndRangoFecha: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {

            $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

            $turnosCubiertos = $reg;

        }

        //$this -> logger -> LogInfo ("Se ejecuto consulta getCoberturaByPuntoServicioIdAndRangoFecha sql como" . var_export ($sql, true));
        //$this -> logger -> LogInfo ("turnosCubiertos:" . var_export ($turnosCubiertos, true));

        return $turnosCubiertos;

    }

    public function getDiasFestivos()
    {

        $lista = array();

        try {

            $sql = "SELECT * FROM diasfestivos;";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getDiasFestivos " . $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la getDiasFestivos ".var_export ($lista, true));

            return $lista;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function getTurnosDiaFestivos($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
    {

        //$this-> logger -> LogInfo("getTurnosDiaFestivos");

        $lista = array();

        $sql = "select ie. incidenciaEmpleadoEntidad
        , ie.incidenciaEmpleadoConsecutivo
        , ie.incidenciaEmpleadoTipo
        , ie.incidenciaPuntoServicio
        , ie.incidenciaId
        , ie.incidenciaComentario
        , ie.incidenciaFechaRegistro
        , cie.nomenclaturaIncidenciaEspecial
        , cie.descripcionIncidenciaEspecial
        , ie.incidenciaFecha
        , cps.puntoServicio
        , cie.valorIncidenciaEspecial
        from incidenciasespeciales ie
        left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
        left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
        where
        ie.incidenciaFechaRegistro  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
        and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
        and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'
        and ie.incidenciaId=5";

        //$this -> logger -> LogInfo ("Ejecutando getTurnosDiaFestivos: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

        return $lista;

    }

    public function deleteTurnoDiaFestivo($empleado, $asistenciaFecha)
    {
        $sql = "DELETE  FROM incidenciasespeciales WHERE " .
        "incidenciaEmpleadoEntidad='" . $this->safeValue($empleado["entidadId"]) . "'" .
        " and incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleado["consecutivoId"]) . "'" .
        " and incidenciaEmpleadoTipo='" . $this->safeValue($empleado["tipoId"]) . "'" .
        " and incidenciaId=5" .
        " and incidenciaFecha=CAST('" . $this->safeValue($asistenciaFecha) . "' AS DATE) ; ";

        //$this -> logger -> LogInfo ("Ejecutando deleteTurnoDiaFestivo: " . $sql);

        mysqli_query($this->conn, $sql);

        if (mysqli_errno($this->conn) == 0) {
            return true;
        }

        return false;
    }

    public function deleteIncidenciasEspecialesByEmpleadoAndFecha($incidencia)
    {
        $sql = "DELETE  FROM incidenciasespeciales WHERE " .
        "incidenciaEmpleadoEntidad='" . $this->safeValue($incidencia["empleadoEntidad"]) . "'" .
        " and incidenciaEmpleadoConsecutivo='" . $this->safeValue($incidencia["empleadoConsecutivo"]) . "'" .
        " and incidenciaEmpleadoTipo='" . $this->safeValue($incidencia["empleadoTipo"]) . "'" .
        " and incidenciaFecha=CAST('" . $this->safeValue($incidencia["fechaAsistencia"]) . "' AS DATE) 
        and aplicoDiferencia!=1";

        $sql1 = "update peticionesincidenciasespeciales
                    SET EstatusBorradoSup='1',FechaBorradoSup=now(),UsuarioEliminate='" . $this->safeValue($incidencia["usuario"]) . "'
                    WHERE PincidenciaEmpleadoEntidad='" . $this->safeValue($incidencia["empleadoEntidad"]) . "' 
                    AND PincidenciaEmpleadoConsecutivo='" . $this->safeValue($incidencia["empleadoConsecutivo"]) . "'
                    AND PincidenciaEmpleadoTipo='" . $this->safeValue($incidencia["empleadoTipo"]) . "' 
                    AND PincidenciaFecha=CAST('" . $this->safeValue($incidencia["fechaAsistencia"]) . "' AS DATE)";//  Actualiza a 1 por que la peticion habia sido aceptada por direccion general y despues fue borrada por el supervisor
        
        mysqli_query($this->conn, $sql);
         mysqli_query($this->conn, $sql1);
        if (mysqli_errno($this->conn) == 0) {
            return true;
        }
        return false;
    }
    public function deletePuntoServicioSupervisor($supervisor)
    {
        $sql = "DELETE  FROM supervisor_puntoservicio WHERE " .
        "supervisorEntidad='" . $this->safeValue($supervisor["supervisorEntidad"]) . "'" .
        " and supervisorConsecutivo='" . $this->safeValue($supervisor["supervisorConsecutivo"]) . "'" .
        " and supervisorTipo='" . $this->safeValue($supervisor["supervisorTipo"]) . "'" .
        " and puntoServicioId='" . $this->safeValue($supervisor["puntoServicioId"]) . "' ";

        //$this -> logger -> LogInfo ("Ejecutando deletePuntoServicioSupervisor: " . $sql);

        mysqli_query($this->conn, $sql);

        if (mysqli_errno($this->conn) == 0) {
            return true;
        }

        return false;
    }

    public function getPuntosServiciosSupervisorByNamePunto($entidadSupervisor, $consecutivoSupervisor, $tipoSupervisor, $nombre)
    {

        $lista = array();

        $sql = "select sp.supervisorEntidad, sp.supervisorConsecutivo, sp.supervisorTipo, sp.puntoServicioId,
        cps.puntoServicio, ifnull(cps.cobraDescansos,0) as cobraDescansos , ifnull(cps.cobraDiaFestivo,0) as cobraDiaFestivo, ifnull(cps.cobra31,0) as cobra31
        from supervisor_puntoservicio sp
        left join catalogopuntosservicios cps on (sp.puntoServicioId=cps.idPuntoServicio)
        where sp.supervisorEntidad='" . mysqli_real_escape_string($this->conn, $entidadSupervisor) . "'
        and  sp.supervisorConsecutivo='" . mysqli_real_escape_string($this->conn, $consecutivoSupervisor) . "'and sp.supervisorTipo='" . mysqli_real_escape_string($this->conn, $tipoSupervisor) . "'
        and  cps.puntoServicio like '%" . mysqli_real_escape_string($this->conn, $nombre) . "%'
        and cps.esatusPunto=1 order by puntoServicio";

        //$this -> logger -> LogInfo ("Ejecutando getPuntosServiciosSupervisorByNamePunto: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;
    }

    public function getPuntosServiciosByNamePunto($nombre)
    {

        $lista = array();

        $sql = "select cps.idPuntoServicio,
        cps.puntoServicio, ifnull(cps.cobraDescansos,0) as cobraDescansos , ifnull(cps.cobraDiaFestivo,0) as cobraDiaFestivo, ifnull(cps.cobra31,0) as cobra31
        from catalogopuntosservicios cps
        where cps.puntoServicio like '%" . mysqli_real_escape_string($this->conn, $nombre) . "%'
        and cps.esatusPunto=1 order by puntoServicio";

        //$this -> logger -> LogInfo ("Ejecutando getPuntosServiciosByNamePunto: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;
    }
    public function asignacionPuntoServicioASupervisor($datos)
    {

        //$this -> logger -> LogInfo ("Ejecutando. asignacionPuntoServicioASupervisor en persistencia");

        $sql = "insert into supervisor_puntoservicio (supervisorEntidad, supervisorConsecutivo, supervisorTipo, puntoServicioId, usuarioAsigna, fechaAsignacion) " .
        "values ('" . mysqli_real_escape_string($this->conn, $datos["supervisorEntidad"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datos["supervisorConsecutivo"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datos["supervisorTipo"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datos["puntoServicioId"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $datos["usuarioAsigna"]) . "', " .
        "now());";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  asignacionPuntoServicioASupervisor como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function getDetalleAsistencia($fecha1, $fecha2,$usuario)
    {

        $lista = array();

        $sql = "select concat_ws('-',a.empleadoEntidad,empleadoConsecutivo,empleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,cp.descripcionPuesto
        ,a.fechaAsistencia
        ,a.puntoServicioAsistenciaId
        ,cps.puntoServicio
        -- ,a.incidenciaAsistenciaId
        ,ci.nomenclaturaIncidencia
        ,cita.DesacripcionIncidencia as DescincTurnoASistencia
        ,a.*
        ,u.nombre as nombreUsuarioCaptura,cr.DescripcioRolOP
        from asistencia a
        left join turnoasistencia t ON (t.entidadEmpTurno=a.empleadoEntidad and t.consecutivoEmpTurno=a.empleadoConsecutivo and t.categoriaEmpTurno=a.empleadoTipo and t.fechaTurno=a.fechaAsistencia)
        left join catalogoincidenciasturnoasistencia cita ON (cita.IdIncidencia = t.tipoTurno)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
        left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join usuarios u on (a.usuarioCapturaAsistencia=u.usuario)
        left join servicios_plantillas sp on (sp.servicioPlantillaId = a.roloperativo)
        left join catalogoroleoperativo cr on (cr.idRolOperativo = sp.IdRolOperativoPlantilla)
        where
        fechaAsistencia between cast('" . mysqli_real_escape_string($this->conn, $fecha1) . "' as date ) and cast('" . mysqli_real_escape_string($this->conn, $fecha2) . "' as date )";
        if($usuario["rol"]=="Supervisor" || $usuario["rol"] == "Consulta Supervisor"){
            $numempleadosupervisor=$usuario["empleadoId"];
            $empleadoidsupervisor = explode("-", $numempleadosupervisor);
            $empleadoEntidadSup=$empleadoidsupervisor[0];
            $empleadoConsecutivoSup=$empleadoidsupervisor[1];
            $empleadoCategoriaSup=$empleadoidsupervisor[2];
            $sql.=" and supervisorEntidad='$empleadoEntidadSup'
            and supervisorConsecutivo='$empleadoConsecutivoSup'
            and supervisorTipo='$empleadoCategoriaSup'";
        }
        $sql.=" order by numeroEmpleado, fechaAsistencia;";
        //$this -> logger -> LogInfo ("Ejecutando getDetalleAsistencia: " . $sql); 
        $res = mysqli_query($this->conn, $sql);
        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }
        return $lista;
    }

    public function getDetalleIncidenciasEspeciales($fecha1, $fecha2,$usuario)
    {

        $lista = array();

        $sql = "select concat_ws('-',a.incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,cp.descripcionPuesto
        ,a.incidenciaFecha
        ,a.incidenciaPuntoServicio
        ,cps.puntoServicio
        -- ,a.incidenciaAsistenciaId
        ,ci.descripcionIncidenciaEspecial as nomenclaturaIncidenciaEspecial
        ,ifnull(cmi.descripcionMotivoIncidenciaEsp,'Sin Datos') as MotivoIncidencia
        ,a.*
        from incidenciasespeciales a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.incidenciaPuntoServicio)
        left join catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=a.incidenciaId)
        left join empleados e on (e.entidadFederativaId=a.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=a.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=a.incidenciaEmpleadoTipo)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join catalogoMotivoIncidenciasEspeciales cmi on (a.idMotivoIncidencia=cmi.idMotivoIncidenciaEsp)
        where
        incidenciaFecha between cast('" . mysqli_real_escape_string($this->conn, $fecha1) . "' as date ) and cast('" . mysqli_real_escape_string($this->conn, $fecha2) . "' as date )";

        if($usuario["rol"]=="Supervisor" || $usuario["rol"] == "Consulta Supervisor"){
            $numempleadosupervisor=$usuario["empleadoId"];
            $empleadoidsupervisor = explode("-", $numempleadosupervisor);
            $empleadoEntidadSup=$empleadoidsupervisor[0];
            $empleadoConsecutivoSup=$empleadoidsupervisor[1];
            $empleadoCategoriaSup=$empleadoidsupervisor[2];
            $sql.=" and incidenciaSupervisorEntidad='$empleadoEntidadSup'
            and incidenciaSupervisorConsecutivo='$empleadoConsecutivoSup'
            and incidenciaSupervisorTipo='$empleadoCategoriaSup'";
        }

        $sql.=" order by numeroEmpleado, incidenciaFecha";
        // $this -> logger -> LogInfo ("Ejecutando getDetalleIncidenciasEspeciales: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;
    }

    public function getSupervisoresForTransferencia()
    {

        $lista = array();

        $sql = "select concat_ws('-', sp.supervisorEntidad, sp.supervisorConsecutivo, sp.supervisorTipo) numeroEmpleado
        , sp.puntoServicioId
        , cps.esatusPunto
        , concat_ws(' ', e.nombreEmpleado,e.apellidoPaterno, e.apellidoMaterno) as nombresupervisor
        , e.empleadoEstatusId
        , e.fechaBajaEmpleado
        from supervisor_puntoservicio sp
        left join empleados e on (e.entidadFederativaId=sp.supervisorEntidad and e.empleadoConsecutivoId=sp.supervisorConsecutivo and e.empleadoCategoriaId=sp.supervisorTipo)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioId)
        where e.empleadoEstatusId=0 and esatusPunto=1
        group by numeroEmpleado union
        select concat_ws('-', sp.supervisorEntidad, sp.supervisorConsecutivo, sp.supervisorTipo) numeroEmpleado
        , sp.puntoServicioId
        , cps.esatusPunto
        , concat_ws(' ',  e.nombreEmpleado, e.apellidoPaterno, e.apellidoMaterno) as nombresupervisor
        , e.empleadoEstatusId
        , e.fechaBajaEmpleado
        from supervisor_puntoservicio sp
        left join empleados e on (e.entidadFederativaId=sp.supervisorEntidad and e.empleadoConsecutivoId=sp.supervisorConsecutivo and e.empleadoCategoriaId=sp.supervisorTipo)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioId)
        where (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)  and esatusPunto=1
        group by numeroEmpleado order by nombresupervisor ;";

        //$this -> logger -> LogInfo ("Ejecutando getSupervisoresForTransferencia: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;
    }

    public function actualizarSupervisor($supervisor1, $supervisor2)
    {
        $sql = "update empleados set idEntidadResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $supervisor2["idEntidadResponsableAsistencia"]) . "' ,
        consecutivoResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $supervisor2["consecutivoResponsableAsistencia"]) . "',
        tipoResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $supervisor2["tipoResponsableAsistencia"]) . "'
        where
        idEntidadResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $supervisor1["idEntidadResponsableAsistencia"]) . "' and
        consecutivoResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $supervisor1["consecutivoResponsableAsistencia"]) . "' and
        tipoResponsableAsistencia='" . mysqli_real_escape_string($this->conn, $supervisor1["tipoResponsableAsistencia"]) . "'
        and empleadoEstatusId<>0";

        //$this -> logger -> LogInfo ("Ejecutando actualizarSupervisor: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Error de actualización de supervisor");
            throw new Exception("Error de actualización");
        }
    }

  public function updateEstatusRequisicionesByPunto($puntoSerivicioId, $estatus,$MotivoBaja,$fechaTerminoServicio,$usuario)
    {
        $sql = "update servicios_plantillas set estatusPlantilla=" . mysqli_real_escape_string($this->conn, $estatus) . ",fechaTerminoPlantilla='" . mysqli_real_escape_string($this->conn, $fechaTerminoServicio) . "',UsuariobajaPlant='" . mysqli_real_escape_string($this->conn, $usuario) . "',motivoBajaForzada=" . mysqli_real_escape_string($this->conn, $MotivoBaja) . "
        where
        puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $puntoSerivicioId) . "
        and estatusPlantilla=1";

        //$this -> logger -> LogInfo ("Ejecutando updateEstatusRequisicionesByPunto: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Error de actualización del estatus de la requisicion");
            throw new Exception("Error de actualización");
        }
    }

    public function getPuntosByFechaVencimiento()
    {

        $lista = array();

        $sql = "select cps.idPuntoServicio
        , cps.puntoServicio
        ,numeroCentroCosto
        ,cps.esatusPunto
        ,cps.idEntidadPunto
        ,ef.nombreEntidadFederativa
        ,cps.direccionPuntoServicio
        ,cps.fechaInicioServicio
        ,cps.fechaTerminoServicio
        from catalogopuntosservicios cps
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        where cps.fechaTerminoServicio<=CAST(now() AS DATE)
        and cps.esatusPunto=1";

        //$this -> logger -> LogInfo ("Ejecutando getPuntosByFechaVencimiento: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;
    }

    public function actualizarDatosPuntoServicioByCampo($campo, $valor, $idPuntoServicio)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarDatosPuntoServicioByCampo en persistencia");

        $sql = "update catalogopuntosservicios set " . mysqli_real_escape_string($this->conn, $campo) . "='" . mysqli_real_escape_string($this->conn, $valor) . "' where idPuntoServicio=" . mysqli_real_escape_string($this->conn, $idPuntoServicio) . "";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarDatosPuntoServicioByCampo como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        $errno = mysqli_errno($this->conn);
        if ($errno != 0) {
            $this->logger->LogInfo("Ocurrio un error al actualizar datos del punto de servicio.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo($errno);
        }
    }

    public function updateFechaTerminoRequisiciones($idPuntoServicio, $fechaVencida, $nuevaFecha)
    {
        $sql = "update servicios_plantillas set fechaTerminoPlantilla='" . mysqli_real_escape_string($this->conn, $nuevaFecha) . "'
        where puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $idPuntoServicio) . " and fechaTerminoPlantilla='" . mysqli_real_escape_string($this->conn, $fechaVencida) . "' and
        estatusPlantilla=1";

        //$this -> logger -> LogInfo ("Ejecutando updateFechaTerminoRequisiciones: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Error de actualización de fecha de termino de requisicion");
            throw new Exception("Error de actualización");
        }
    }

    public function getRequisicionesByFechaVencimiento($lineanegociooact11,$lineanegociooact22)
    {
        //$this-> logger -> LogInfo("getRequisicionesByFechaVencimiento");
        $lista = array();

        try {

            $sql = "select sp.servicioPlantillaId, sp.puntoServicioPlantillaId,
            sp.puestoPlantillaId, cp.descripcionPuesto, sp.tipoTurnoPlantillaId,sp.costoNetoFactura,
            ct.descripcionTurno,sp.folio,fechaRegistroPlantilla,
            sp.fechaInicio,sp.fechaTerminoPlantilla,sp.numeroElementos,
            sp.turnosPorDia,sp.costoPorTurno,
            sp.cobraDescanso,sp.cobraFestivos,sp.cobraDia31,
            sp.usuarioCapturaPlantilla,sp.lastEdited, sp.estatusPlantilla, sp.comentarioRequisicion,sp.recursosMateriales,
            cps.puntoservicio,
            cps.fechaInicioServicio
            ,cps.fechaTerminoServicio
            ,cc.razonSocial, cps.cobraDescansos, cps.cobraDiaFestivo, cps.cobra31
            ,cps.idLineaNegocioPunto
            from servicios_plantillas sp
            left join catalogopuestos cp on (cp.idPuesto=sp.puestoPlantillaId)
            left join catalogoturnos ct on (ct.idTipoTurno=sp.tipoTurnoPlantillaId)
            left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
            left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
            where estatusPlantilla=1  and (cps.idLineaNegocioPunto='$lineanegociooact22' or cps.idLineaNegocioPunto='$lineanegociooact11') and fechaTerminoPlantilla<=  CAST(now() AS DATE)";

            //$this -> logger -> LogInfo ("ejecutando getRequisicionesByFechaVencimiento en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

            return $lista;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }

    public function actualizarDatosRequisicionByCampo($campo, $valor, $servicioPlantillaId)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarDatosRequisicionByCampo en persistencia");

        $sql = "update servicios_plantillas set " . mysqli_real_escape_string($this->conn, $campo) . "='" . mysqli_real_escape_string($this->conn, $valor) . "' where servicioPlantillaId=" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarDatosRequisicionByCampo como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        $errno = mysqli_errno($this->conn);
        if ($errno != 0) {
            $this->logger->LogInfo("Ocurrio un error al actualizar datos de la requisicion.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo($errno);
        }
    }

    public function getPuntosServiciosByClienteId($fecha1, $fecha2, $idClientePunto)//,$LineaNegocioRF
    {
   //   $this->logger->LogInfo("getPuntosServiciosByClienteId en persistencia");

       $lista = array();

       try {

        $sql = "select sp.fechaInicio as fechaInicioPlantilla,
                       sp.fechaTerminoPlantilla as fechaFinPlantilla,
                       ef.nombreEntidadFederativa,
                       cps.esatusPunto,
                       sp.servicioPlantillaId,
                       sp.puntoServicioPlantillaId,
                       re.DescripcionI as region,
                       cps.numeroCentroCosto,
                       sp.rolOperativoPlantilla,
                       sp.puestoPlantillaId,
                       sp.numeroElementos,
                       sum(sp.numeroElementos) as numEle,
                       sp.costoPorTurno,
                       cp.descripcionPuesto,
                       ct.descripcionTurno,
                       ef.nombreEntidadFederativa,
                       sp.tipoTurnoPlantillaId,
                       sp.costoNetoFactura,
                       sp.folio,
                       sp.fechaRegistroPlantilla,
                       cps.fechaInicioServicio as fechaInicio,
                       cps.fechaTerminoServicio as fechaTerminoPlantilla,
                       sp.turnosPorDia,
                       sp.cobraDescanso,
                       sp.cobraFestivos,
                       sp.cobraDia31,
                       sp.usuarioCapturaPlantilla,
                       sp.lastEdited,
                       sp.estatusPlantilla,
                       sp.comentarioRequisicion,
                       sp.recursosMateriales,
                       cps.idPuntoServicio,
                       cps.puntoservicio,
                       ifnull(cps.cobraDescansos,0) as cobraDescansos,
                       ifnull(cps.cobraDiaFestivo,0) as cobraDiaFestivo,
                       ifnull(cps.cobra31,0) as cobra31,
                       cps.turnosFlat,
                       cps.idEntidadPunto,
                       cps.idClientePunto,
                       cc.razonSocial,
                       cps.cobraDescansos,
                       cps.cobraDiaFestivo,
                       cps.cobra31,
                       cc.claveClienteNomina,
                       cln.descripcionLineaNegocio,
                       ifnull(sp.replicada,0) as replicada
        from servicios_plantillas sp
        left join catalogopuestos cp on (cp.idPuesto=sp.puestoPlantillaId)
        left join catalogoturnos ct on (ct.idTipoTurno=sp.tipoTurnoPlantillaId)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
        left join index_regiones re on (re.idLineaNegI=cps.idLineaNegocioPunto and re.idEntidadI=cps.idEntidadPunto)
        left join catalogoroleoperativo cro on cro.idRolOperativo=sp.IdRolOperativoPlantilla
        left join catalogolineanegocio cln on (cln.idLineaNegocio=sp.lineaNegocioRequisicion)
        where sp.numeroElementos>0
        and ((cps.idClientePunto=" . mysqli_real_escape_string($this->conn, $idClientePunto) . " and sp.estatusPlantilla=1 and sp.fechaInicio<=cast('" . mysqli_real_escape_string($this->conn, $fecha2) . "' as date ) )
            or(cps.idClientePunto=" . mysqli_real_escape_string($this->conn, $idClientePunto) . " and sp.estatusPlantilla=0 and sp.fechaInicio<=cast('" . mysqli_real_escape_string($this->conn, $fecha2) . "' as date ) and sp.fechaTerminoPlantilla>=cast('" . mysqli_real_escape_string($this->conn, $fecha1) . "' as date ) ))
        and sp.lineaNegocioRequisicion='1'
        group by sp.puestoPlantillaId, sp.costoPorTurno, sp.fechaInicio, sp.tipoTurnoPlantillaId , cps.idEntidadPunto, sp.puntoServicioPlantillaId, sp.IdRolOperativoPlantilla
        order by ef.nombreEntidadFederativa, cps.puntoservicio,sp.fechaTerminoPlantilla";

        /*$sql = "select sp.servicioPlantillaId, sp.puntoServicioPlantillaId,re.DescripcionI as region,cps.numeroCentroCosto,sp.rolOperativoPlantilla,
        sp.puestoPlantillaId,sp.numeroElementos,sum(sp.numeroElementos) as numEle,sp.costoPorTurno, sum(turnosPorDia) as turnosTotalesDiarios
        ,cp.descripcionPuesto,ct.descripcionTurno,ef.nombreEntidadFederativa,sp.tipoTurnoPlantillaId,sp.costoNetoFactura
        ,sp.folio,fechaRegistroPlantilla,cps.fechaInicioServicio as fechaInicio,cps.fechaTerminoServicio as fechaTerminoPlantilla,
        sp.turnosPorDia,
        sp.cobraDescanso,sp.cobraFestivos,sp.cobraDia31,
        sp.usuarioCapturaPlantilla,sp.lastEdited, sp.estatusPlantilla, sp.comentarioRequisicion,sp.recursosMateriales,cps.idPuntoServicio,
        cps.puntoservicio,ifnull(cps.cobraDescansos,0) as cobraDescansos, ifnull(cps.cobraDiaFestivo,0) as cobraDiaFestivo, ifnull(cps.cobra31,0) as cobra31,cps.turnosFlat
        ,cps.idEntidadPunto,cps.idClientePunto , cc.razonSocial, cps.cobraDescansos, cps.cobraDiaFestivo, cps.cobra31,cc.claveClienteNomina,cln.descripcionLineaNegocio
        from servicios_plantillas sp
        left join catalogopuestos cp on (cp.idPuesto=sp.puestoPlantillaId)
        left join catalogoturnos ct on (ct.idTipoTurno=sp.tipoTurnoPlantillaId)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
        left join index_regiones re on (re.idLineaNegI=cps.idLineaNegocioPunto and re.idEntidadI=cps.idEntidadPunto)
        left join catalogoroleoperativo cro on cro.idRolOperativo=sp.IdRolOperativoPlantilla
        left join catalogolineanegocio cln on (cln.idLineaNegocio=sp.lineaNegocioRequisicion)
        where sp.numeroElementos>0
        and ((cps.idClientePunto=" . mysqli_real_escape_string($this->conn, $idClientePunto) . " and sp.estatusPlantilla=1 and fechaInicio<=cast('" . mysqli_real_escape_string($this->conn, $fecha2) . "' as date ) )
            or(cps.idClientePunto=" . mysqli_real_escape_string($this->conn, $idClientePunto) . " and sp.estatusPlantilla=0 and fechaInicio<=cast('" . mysqli_real_escape_string($this->conn, $fecha2) . "' as date ) and fechaTerminoPlantilla>=cast('" . mysqli_real_escape_string($this->conn, $fecha1) . "' as date ) ))
        and lineaNegocioRequisicion='1'
        group by sp.puestoPlantillaId, sp.costoPorTurno, sp.fechaInicio, sp.tipoTurnoPlantillaId , cps.idEntidadPunto, sp.puntoServicioPlantillaId
        order by nombreEntidadFederativa, puntoservicio,fechaInicio";//" . mysqli_real_escape_string($this->conn, $LineaNegocioRF) . "*/

       // $this->logger->LogInfo("Ejecutando SQL: getPuntosServiciosByClienteId " . $sql);

        $res   = mysqli_query($this->conn, $sql);
        $errno = mysqli_errno($this->conn);
        if ($errno != 0) {
            $this->logger->LogInfo("Ocurrio un error al consultar getPuntosServiciosByClienteId.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo($errno);
        }

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getPuntosServiciosByClienteId ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("Ocurrio un error getPuntosServiciosByClienteId.");

        $this->logger->LogInfo(" getPuntosServicios ERROR:" . $e->getMessage());

        $this->throwExceptionFromErrNo($errno);
    }
}

public function getTurnosCubiertosByPlantilla($fecha1, $fecha2, $servicioPlantillaId, $incidenciaPuntoServicio)
{
        //$this -> logger -> LogInfo ("getTurnosCubiertosByPlantilla en persistencia");

    $lista = array();

    try {

        $sql = "select ifnull(sum(turnosCubiertos),0) turnosCubiertos from (
        select
        concat_ws('-', a.empleadoEntidad, a.empleadoConsecutivo, a.empleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoPaterno, e.nombreEmpleado) as nombreEmpleado
        ,p.plantillaId
        ,sum(valorCobertura) as turnosCubiertos
        ,e.empleadoIdPuesto
        ,cp.descripcionPuesto
        ,e.empleadoIdTurno
        ,ct.descripcionTurno
        ,e.empleadoIdGenero
        ,cg.descripcionGenero
        ,a.puntoServicioAsistenciaId
        ,cps.puntoServicio
        ,a.fechaAsistencia
        ,a.incidenciaAsistenciaId
        ,ci.nomenclaturaIncidencia
        ,ci.valorCobertura
        from asistencia a
        left join catalogopuntosservicios cps on (a.puntoServicioAsistenciaId=cps.idPuntoServicio)
        left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
        left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join catalogogenero cg on (cg.idGenero=e.empleadoIdGenero)
        left join plantilla p on (p.empleadoEntidadPlantilla=e.entidadFederativaId and p.empleadoConsecutivoPlantilla=e.empleadoConsecutivoId and p.empleadoCategoriaPlantilla=e.empleadoCategoriaId)
        left join servicios_plantillas sp on (sp.servicioPlantillaId=p.requisicionId)
        where
        a.fechaAsistencia between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
        -- and e.empleadoIdPuesto=1 and e.empleadoIdTurno=1
        and a.puntoServicioAsistenciaId=" . mysqli_real_escape_string($this->conn, $incidenciaPuntoServicio) . "
        and
        sp.servicioPlantillaId=" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "
        union
        select
        concat_ws('-', a.incidenciaEmpleadoEntidad, a.incidenciaEmpleadoConsecutivo, a.incidenciaEmpleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoPaterno, e.nombreEmpleado) as nombreEmpleado
        ,p.plantillaId
        ,sum(valorIncidenciaEspecial) as turnosCubiertos
        ,e.empleadoIdPuesto
        ,cp.descripcionPuesto
        ,e.empleadoIdTurno
        ,ct.descripcionTurno
        ,e.empleadoIdGenero
        ,cg.descripcionGenero
        ,a.incidenciaPuntoServicio
        ,cps.puntoServicio
        ,a.incidenciaFecha
        ,a.incidenciaId
        ,ci.nomenclaturaIncidenciaEspecial
        ,ci.valorIncidenciaEspecial
        from  incidenciasespeciales a
        left join catalogopuntosservicios cps on (a.incidenciaPuntoServicio=cps.idPuntoServicio)
        left join empleados e on (e.entidadFederativaId=a.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=a.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=a.incidenciaEmpleadoTipo)
        left join catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=a.incidenciaId)
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join catalogogenero cg on (cg.idGenero=e.empleadoIdGenero)
        left join plantilla p on (p.empleadoEntidadPlantilla=e.entidadFederativaId and p.empleadoConsecutivoPlantilla=e.empleadoConsecutivoId and p.empleadoCategoriaPlantilla=e.empleadoCategoriaId)
        left join servicios_plantillas sp on (sp.servicioPlantillaId=p.requisicionId)
        where
        a.incidenciaFecha between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
        -- and e.empleadoIdPuesto=1 and e.empleadoIdTurno=1
        -- and a.puntoServicioAsistenciaId=673
        and
        a.incidenciaPuntoServicio=" . mysqli_real_escape_string($this->conn, $incidenciaPuntoServicio) . "
    ) as d";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getTurnosCubiertosByPlantilla " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["turnosCubiertos"] = $reg["turnosCubiertos"];
        }
    }

            //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

} catch (Exception $e) {

    $this->logger->LogInfo("ERROR:" . $e->getMessage());

}

}

public function getPlantillasByPuntoServiciosNamePoint($puntoservicio)
{

     //   $this -> logger -> LogInfo (" getPlantillasByPuntoServiciosNamePoint: " . $idCliente);

    $lista = array();

    $sql = "select
    cps.idPuntoServicio
    , cps.puntoServicio
    , cps.idEntidadPunto
    , ef.nombreEntidadFederativa
    , ifnull(efe.nombreEntidadFederativa,'Sin Informacion') as nombreEntidadFederativa1
    ,cps.numeroCentroCosto
    , cps.idClientePunto
    , ifnull(c1.elementosContratados,0) elementosContratados
    , ifnull(c2.elementosSolicitados,0 ) elementosSolicitados
    ,cc.razonsocial
    , ifnull(c3.elementosAsignados,0) elementosAsignados
    from catalogopuntosservicios cps
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
    left join entidadesfederativas efe on (efe.idEntidadFederativa=cps.EntidadPuntoS)
    left join (
    -- consulta elementos contratados en el punto de servicio
    select count(e.empleadoNumeroSeguroSocial) as elementosContratados, e.empleadoIdPuntoServicio,cps.idPuntoServicio, cps.puntoservicio, cc.razonSocial
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    where (e.empleadoEstatusId= 2 or e.empleadoEstatusId=1) and e.idTipoPuesto='03'
    group by cps.puntoservicio
    ) c1 on (c1.idPuntoServicio=cps.idPuntoServicio)
    left join (
    -- consulta elementos soliitados en requisiciones por ventas
    select
    sp.servicioPlantillaId
    , sp.puntoServicioPlantillaId
    , sp.numeroElementos
    , sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    where sp.estatusPlantilla='1'
    group by puntoServicioPlantillaId
    ) c2 on puntoServicioPlantillaId=cps.idPuntoServicio
    left join (
    select p.plantillaId
    , p.requisicionId
    , p.empleadoEntidadPlantilla
    , p.empleadoConsecutivoPlantilla
    , p.empleadoCategoriaPlantilla
    , sp.puntoServicioPlantillaId
    , cps.puntoServicio
    , cps.idPuntoServicio
    , cc.idCliente
    , cc.razonSocial
    , count(p.plantillaId) elementosAsignados
    from plantilla p
    left join servicios_plantillas sp on (sp.servicioPlantillaId=p.requisicionId)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    where (e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4 )
    group by idCliente, sp.puntoServicioPlantillaId
    )c3 on (c3.puntoServicioPlantillaId=cps.idPuntoServicio)
    where cps.esatusPunto=1
    and cps.puntoServicio like '%" . mysqli_real_escape_string($this->conn, $puntoservicio) . "%' order by cps.puntoServicio asc ";

       // $this -> logger -> LogInfo ("Ejecutando getPlantillasByPuntoServiciosNamePoint: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getTurnosPagados($fecha1, $fecha2, $idPuntoServicio)
{

        //$this-> logger -> LogInfo("getTurnosPagados");

    $lista = array();

    $sql = "select ifnull(sum(sumaTurnos),0) as turnosPagados from (
    select
    a. empleadoEntidad
    , a.empleadoConsecutivo
    , a.empleadoTipo
    , a.puntoServicioAsistenciaId
    , a.incidenciaAsistenciaId
    , ci.nomenclaturaIncidencia
    , ci.descripcionIncidencia
    , a.fechaAsistencia
    , cps.puntoServicio
    , ci.valorAsistencia
    ,sum(ci.valorAsistencia) as sumaTurnos
    from asistencia a
    left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
    where
    a.fechaAsistencia between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
    and a.puntoServicioAsistenciaId=" . mysqli_real_escape_string($this->conn, $idPuntoServicio) . "
    union
    select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    ,cie.valorIncidenciaEspecial
    -- , cie.valorIncidenciaEspecial
    , sum(cie.valorIncidenciaEspecial) as sumaTurnos
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
    and (ie.incidenciaId=1 or ie.incidenciaId=6)
    and ie.incidenciaPuntoServicio=" . mysqli_real_escape_string($this->conn, $idPuntoServicio) . "
    union
    select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    ,cie.valorIncidenciaEspecial
    -- , cie.valorIncidenciaEspecial
    , sum(cie.valorIncidenciaEspecial) as sumaTurnos
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
    and ie.incidenciaId=4 and ie.incidenciaPuntoServicio=" . mysqli_real_escape_string($this->conn, $idPuntoServicio) . "
    union
    select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    ,cie.valorIncidenciaEspecial
    -- , cie.valorIncidenciaEspecial
    , sum(cie.valorIncidenciaEspecial) as sumaTurnos
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
    and ie.incidenciaId=5 and ie.incidenciaPuntoServicio=" . mysqli_real_escape_string($this->conn, $idPuntoServicio) . "
) as suma";

        //$this -> logger -> LogInfo ("Ejecutando getTurnosPagados: " . $sql);

$res = mysqli_query($this->conn, $sql);

if (!is_bool($res)) {
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $lista["turnosPagados"] = $reg["turnosPagados"];
    }
}

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

return $lista;

}

public function getAsistenciaByFechaAndPuntoServicio($fecha1, $fecha2, $puntoServicioId)
{

    $lista = array();

    $sql = "select
    ie. incidenciaEmpleadoEntidad as empleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo as empleadoConsecutivo
    , ie.incidenciaEmpleadoTipo as empleadoTipo
    , ie.incidenciaPuntoServicio as puntoServicioAsistenciaId
    , ie.incidenciaId as incidenciaAsistenciaId
    , cie.nomenclaturaIncidenciaEspecial as nomenclaturaIncidencia
    , cie.descripcionIncidenciaEspecial as descripcionIncidencia
    , ie.incidenciaFecha as fechaAsistencia
    , cps.puntoServicio as puntoServicio
    , cie.valorIncidenciaEspecial as valorCobertura
    -- , count(cie.valorIncidenciaEspecial) as diasFestivos
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
    and ie.incidenciaPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "
    and (ie.incidenciaId=1 or ie.incidenciaId=6)
    union
    select
    ie. incidenciaEmpleadoEntidad as empleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo as empleadoConsecutivo
    , ie.incidenciaEmpleadoTipo as empleadoTipo
    , ie.incidenciaPuntoServicio as puntoServicioAsistenciaId
    , ie.incidenciaId as incidenciaAsistenciaId
    , cie.nomenclaturaIncidenciaEspecial as nomenclaturaIncidencia
    , cie.descripcionIncidenciaEspecial as descripcionIncidencia
    , ie.incidenciaFecha as fechaAsistencia
    , cps.puntoServicio as puntoServicio
    , cie.valorIncidenciaEspecial as valorCobertura
    -- , count(cie.valorIncidenciaEspecial) as diasFestivos
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
    and ie.incidenciaPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "
    and ie.incidenciaId=4
    UNION
    select
    a. empleadoEntidad
    , a.empleadoConsecutivo
    , a.empleadoTipo
    , a.puntoServicioAsistenciaId
    , a.incidenciaAsistenciaId
    , ci.nomenclaturaIncidencia
    , ci.descripcionIncidencia
    , a.fechaAsistencia
    , cps.puntoServicio
    ,ci.valorCobertura
    -- ,sum(ci.valorCobertura) as sumaTurnos
    from asistencia a
    left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
    where
    a.fechaAsistencia between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
    and a.puntoServicioAsistenciaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "";

        //$this -> logger -> LogInfo ("Ejecutando getAsistenciaByFechaAndPuntoServicio: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;
}

public function getSumaDiasFestivosByFechaAndPuntoServicio($fecha1, $fecha2, $puntoServicioId)
{

        //$this-> logger -> LogInfo("getSumaDiasFestivosByFechaAndPuntoServicio");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , count(cie.valorIncidenciaEspecial) as diasFestivos
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaPuntoServicio=" . $this->safeValue($puntoServicioId) . "
    and ie.incidenciaId=5";

        //$this -> logger -> LogInfo ("Ejecutando getSumaDiasFestivosByFechaAndPuntoServicio: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["diasFestivos"] = $reg["diasFestivos"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getTurnosCubiertosByPerfil($fecha1, $fecha2, $puntoServicioId, $puestoId, $rolOperativo)
{
       // $this -> logger -> LogInfo ("getTurnosCubiertosByPerfil en persistencia");

    $lista = array();

    try {

        $sql = "select
        a. empleadoEntidad
        , a.empleadoConsecutivo
        , a.empleadoTipo
        , a.incidenciaAsistenciaId
        , ci.nomenclaturaIncidencia
        , ci.descripcionIncidencia
        ,ci.valorCobertura
        , a.fechaAsistencia
        , a.puntoServicioAsistenciaId
        , cps.puntoServicio
        ,a.puestoCubiertoId
        ,cp.descripcionPuesto
        ,a.roloperativo
        from asistencia a
        left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join  catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
        left join catalogopuestos cp on (cp.idPuesto=a.puestoCubiertoId)
        where
        a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and a.puntoServicioAsistenciaId=" . $this->safeValue($puntoServicioId) . "
        and puestoCubiertoId=" . $this->safeValue($puestoId) . "
        and a.roloperativo='" . $this->safeValue($rolOperativo) . "'
        union
        select
        ie. incidenciaEmpleadoEntidad
        , ie.incidenciaEmpleadoConsecutivo
        , ie.incidenciaEmpleadoTipo
        , ie.incidenciaId
        , ci.nomenclaturaIncidenciaEspecial
        , ci.descripcionIncidenciaEspecial
        ,ci.valorIncidenciaEspecial
        , ie.incidenciaFecha
        , ie.incidenciaPuntoServicio
        , cps.puntoServicio
        ,ie.incidenciaPuesto
        ,cp.descripcionPuesto
        ,ie.roloperativo
        from incidenciasespeciales ie
        left join  catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=ie.incidenciaId)
        left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
        left join catalogopuestos cp on (cp.idPuesto=ie.incidenciaPuesto)
        where
        (ie.incidenciaId=1 or ie.incidenciaId=6)
        and ie.incidenciaFecha between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and ie.incidenciaPuntoServicio=" . $this->safeValue($puntoServicioId) . "
        and ie.incidenciaPuesto=" . $this->safeValue($puestoId) . "
        and ie.roloperativo='" . $this->safeValue($rolOperativo) . "'
        union
        select
        ie. incidenciaEmpleadoEntidad
        , ie.incidenciaEmpleadoConsecutivo
        , ie.incidenciaEmpleadoTipo
        , ie.incidenciaId
        , ci.nomenclaturaIncidenciaEspecial
        , ci.descripcionIncidenciaEspecial
        ,ci.valorIncidenciaEspecial
        , ie.incidenciaFecha
        , ie.incidenciaPuntoServicio
        , cps.puntoServicio
        ,ie.incidenciaPuesto
        ,cp.descripcionPuesto
        ,ie.roloperativo
        from incidenciasespeciales ie
        left join  catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=ie.incidenciaId)
        left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
        left join catalogopuestos cp on (cp.idPuesto=ie.incidenciaPuesto)
        where
        ie.incidenciaId=4
        and ie.incidenciaFecha between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and ie.incidenciaPuntoServicio=" . $this->safeValue($puntoServicioId) . "
        and ie.incidenciaPuesto=" . $this->safeValue($puestoId) . "
        and ie.roloperativo='" . $this->safeValue($rolOperativo) . "'
        union
        select
        ie. incidenciaEmpleadoEntidad
        , ie.incidenciaEmpleadoConsecutivo
        , ie.incidenciaEmpleadoTipo
        , ie.incidenciaId
        , ci.nomenclaturaIncidenciaEspecial
        , ci.descripcionIncidenciaEspecial
        ,ci.valorIncidenciaEspecial
        , ie.incidenciaFecha
        , ie.incidenciaPuntoServicio
        , cps.puntoServicio
        ,ie.incidenciaPuesto
        ,cp.descripcionPuesto
        ,ie.roloperativo
        from incidenciasespeciales ie
        left join  catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=ie.incidenciaId)
        left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
        left join catalogopuestos cp on (cp.idPuesto=ie.incidenciaPuesto)
        where
        ie.incidenciaId=5
        and ie.incidenciaFecha between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and ie.incidenciaPuntoServicio=" . $this->safeValue($puntoServicioId) . "
        and ie.incidenciaPuesto=" . $this->safeValue($puestoId) . "
        and ie.roloperativo='" . $this->safeValue($rolOperativo) . "'";

           // $this -> logger -> LogInfo ("Ejecutando SQL: getTurnosCubiertosByPerfil " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;
    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());

    }

}

public function getPuntosServiciosForFatigaForSupervisor($supervisorEntidad, $supervisorConsecutivo, $supervisorTipo, $fecha1, $fecha2)
{
        //$this -> logger -> LogInfo ("getPuntosServiciosForFatigaForSupervisor en persistencia");

    $lista = array();

    try {

        $sql = "select sp.supervisorEntidad, sp.supervisorConsecutivo, sp.supervisorTipo, sp.puntoServicioId,
        cps.puntoServicio, ifnull(cps.cobraDescansos,0) as cobraDescansos , ifnull(cps.cobraDiaFestivo,0) as cobraDiaFestivo, ifnull(cps.cobra31,0) as cobra31
        ,cps.idClientePunto, cps.fechaInicioServicio, cps.fechaTerminoServicio, cc.razonSocial
        from supervisor_puntoservicio sp
        left join catalogopuntosservicios cps on (sp.puntoServicioId=cps.idPuntoServicio)
        left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
        where sp.supervisorEntidad='" . $this->safeValue($supervisorEntidad) . "'
        and  sp.supervisorConsecutivo='" . $this->safeValue($supervisorConsecutivo) . "'
        and sp.supervisorTipo='" . $this->safeValue($supervisorTipo) . "'
        and ( (cps.esatusPunto=1)
           or (cps.esatusPunto=0
              and ((cps.fechaTerminoServicio between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE))
                  or (fechaTerminoServicio > CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)))))
        order by puntoServicio";

            //$this->logger->LogInfo("Ejecutando SQL: getPuntosServiciosForFatigaForSupervisor " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getPuntosServicios ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo(" getPuntosServiciosForFatigaForSupervisor ERROR:" . $e->getMessage());
    }
}

public function getPuntosForFatigaByEntidad($idEntidad, $fecha1, $fecha2)
{
    $puntosServicios = array();
    $sql = "select
    cps.idPuntoServicio
    ,cps.idPuntoServicio as puntoServicioId
    ,cps.puntoServicio
    ,cps.idEntidadPunto
    ,ef.nombreEntidadFederativa
    ,cps.esatusPunto
    ,cps.idClientePunto
    ,cc.razonSocial
    ,cps.numeroCentroCosto
    ,cps.fechaInicioServicio
    ,cps.fechaTerminoServicio
    ,ifnull(cps.cobraDescansos,0) cobraDescansos
    ,ifnull(cps.cobraDiaFestivo, 0) cobraDiaFestivo
    ,ifnull(cps.cobra31,0) cobra31
    from catalogopuntosservicios cps
    left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    where idEntidadPunto='" . $this->safeValue($idEntidad) . "'
    and ((esatusPunto = 1) or (esatusPunto = 0 and ((fechaTerminoServicio between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE))
    OR (fechaTerminoServicio > CAST('" . $this->safeValue($fecha2) . "' AS DATE)))))
    order by puntoServicio";
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $puntosServicios[] = $reg;
    }
    return $puntosServicios;
}

public function registroEnvioFatiga(
    $puntoServicioFatigaId,
    $fechaFatiga1,
    $fechaFatiga2,
    $quincenaFatigaId,
    $usuarioEnvioFatiga) {

        //$this -> logger -> LogInfo ("Ejecutando. registroEnvioFatiga en persistencia");

        // Buscamos si existe un registro de asistencia previo.
    $fatigaEnviada = $this->getFatigaEnviada($fechaFatiga1, $fechaFatiga2, $puntoServicioFatigaId);

        //$this -> logger -> LogInfo ("Se ejecuto consulta  fatigaEnviada como" . var_export ($fatigaEnviada, true));

    if (count($fatigaEnviada) == 0) {

        $sql = "insert into fatigasenviadas (puntoServicioFatigaId, fechaFatiga1, fechaFatiga2, quincenaFatigaId, usuarioEnvioFatiga, fechaEnvioFatiga,estatusFatiga) values (";
        $sql .= "'" . $this->safeValue($puntoServicioFatigaId) . "',";
        $sql .= "'" . $this->safeValue($fechaFatiga1) . "',";
        $sql .= "'" . $this->safeValue($fechaFatiga2) . "',";
        $sql .= "'" . $this->safeValue($quincenaFatigaId) . "',";
        $sql .= "'" . $this->safeValue($usuarioEnvioFatiga) . "',";
        $sql .= "NOW(),";
        $sql .= "1);";

            //$this -> logger -> LogInfo ("Se ejecuto consulta  registroEnvioFatiga como" . $sql);
        $res = mysqli_query($this->conn, $sql);

        if (mysqli_errno($this->conn) == 0) {
            return true;
        }

        return false;
    } else {
        return $this->updateEnvioFatiga($puntoServicioFatigaId,
            $fechaFatiga1,
            $fechaFatiga2,
            $usuarioEnvioFatiga);

    }
}

public function getFatigaEnviada($fechaFatiga1, $fechaFatiga2, $puntoServicioFatigaId)
{

        //$this-> logger -> LogInfo("getFatigaEnviada");

    $lista = array();

    $sql = "select *
    from fatigasenviadas
    where
    fechaFatiga1=CAST('" . $this->safeValue($fechaFatiga1) . "' AS DATE)
    and fechaFatiga2=CAST('" . $this->safeValue($fechaFatiga2) . "' AS DATE)
    and puntoServicioFatigaId=" . $this->safeValue($puntoServicioFatigaId) . "";

        //$this -> logger -> LogInfo ("Ejecutando getFatigaEnviada: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function updateEnvioFatiga($puntoServicioFatigaId,
    $fechaFatiga1,
    $fechaFatiga2,
    $usuarioEnvioFatiga) {

        //$this-> logger -> LogInfo("updateEnvioFatiga");

    $sql = "update fatigasenviadas " .
    "set usuarioReenvioFatiga='" . $this->safeValue($usuarioEnvioFatiga) . "'," .
    "fechaReenvioFatiga=NOW(), " .
    "estatusFatiga=2 " .
    "where puntoServicioFatigaId='" . $this->safeValue($puntoServicioFatigaId) . "'" .
    "and  fechaFatiga1='" . $this->safeValue($fechaFatiga1) . "'" .
    "and  fechaFatiga2='" . $this->safeValue($fechaFatiga2) . "'";

        //$this -> logger -> LogInfo ("Ejecutando updateEnvioFatiga: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (mysqli_errno($this->conn) == 0) {
        return true;
    }

    return false;
}
public function getPuntosServiciosAndResponsables($fecha1, $fecha2)
{
        //$this-> logger -> LogInfo("getPuntosServiciosAndResponsables");

    $lista = array();

    $sql = " select * from (select
    cps.idPuntoServicio
    ,cps.puntoServicio
    ,cps.idEntidadPunto
    ,ef.nombreEntidadFederativa
    ,cps.esatusPunto
    ,cps.idClientePunto
    ,cc.razonSocial
    ,cps.numeroCentroCosto
    ,cps.fechaInicioServicio
    ,cps.fechaTerminoServicio
    ,ifnull(cps.cobraDescansos,0) cobraDescansos
    ,ifnull(cps.cobraDiaFestivo, 0) cobraDiaFestivo
    ,ifnull(cps.cobra31,0) cobra31
    ,concat_ws('-', sp.supervisorEntidad, sp.supervisorConsecutivo, sp.supervisorTipo) as supervisor
    ,usuario
    ,concat_ws(' ',e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado ) as nombreSupervisor
    from catalogopuntosservicios cps
    left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join supervisor_puntoservicio sp on (cps.idPuntoServicio=sp.puntoServicioId)
    left join usuario_empleado ue on (ue.entidadEmpleadoUsuario=sp.supervisorEntidad and ue.consecutivoEmpleadoUsuario=sp.supervisorConsecutivo and ue.categoriaEmpleadoUsuario=sp.supervisorTipo)
    left join empleados e on (ue.entidadEmpleadoUsuario=e.entidadFederativaId and ue.consecutivoEmpleadoUsuario=e.empleadoConsecutivoId and ue.categoriaEmpleadoUsuario=e.empleadoCategoriaId)
    where
    (cps.esatusPunto=1
    and fechaInicioServicio <= CAST('" . $this->safeValue($fecha2) . "' AS DATE) and cps.idClientePunto<>2)
    or ( cps.esatusPunto=0 and fechaInicioServicio <= CAST('" . $this->safeValue($fecha2) . "' AS DATE) and
    fechaTerminoServicio >= CAST('" . $this->safeValue($fecha1) . "' AS DATE) and cps.idClientePunto<>2)
    order by cps.puntoServicio asc ,fechaAsignacion desc) b group by idPuntoServicio ";

        //$this -> logger -> LogInfo ("ejecutando getPuntosServiciosAndResponsables en persistencia". $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

        //$this -> logger -> LogInfo ("ejecutando getPuntosServiciosAndResponsables en persistencia". $sql);

}

public function getFatigasEnviadas($puntoServicioFatigaId, $month, $year, $quincena)
{
        //$this-> logger -> LogInfo("getFatigasEnviadas");

    $lista = array();

    $sql = "select puntoServicioFatigaId
    , fechaFatiga1
    , fechaFatiga2
    , quincenaFatigaId
    , q.descripcionQuincena
    , usuarioEnvioFatiga
    , ifnull(fechaEnvioFatiga,'') as fechaEnvioFatiga
    , usuarioReenvioFatiga
    , concat_ws(' ', u.apellidoPaterno,u.apellidoMaterno,u.nombre) as responsableEnvio
    , ifnull(fechaReenvioFatiga,'') as fechaReenvioFatiga
    , estatusFatiga
    , concat_ws(' ', u1.apellidoPaterno,u1.apellidoMaterno,u1.nombre) as responsableReenvio
    , ef.descripcionEstatusFatiga
    ,ifnull(fe.fechaFatigaRecibida,'') as fechaFatigaRecibida
    ,ifnull(fe.fechaFatigaFacturada,'') as fechaFatigaFacturada
    ,ifnull(fe.fechaContrarecibo,'') as fechaContrarecibo
    from fatigasenviadas fe
    left join estatusfatigas ef on (ef.idEstatusFatiga=fe.estatusFatiga)
    left join quincenas q on (q.idQuincena=fe.quincenaFatigaId)
    left join usuarios u on (u.usuario=fe.usuarioEnvioFatiga)
    left join usuarios u1 on (u1.usuario=fe.usuarioReenvioFatiga)
    where
    puntoServicioFatigaId=" . $this->safeValue($puntoServicioFatigaId) . "
    and quincenaFatigaId=" . $this->safeValue($quincena) . "
    and month(fechaFatiga1)='" . $this->safeValue($month) . "'
    and year(fechaFatiga1)  ='" . $this->safeValue($year) . "' ";

        //$this -> logger -> LogInfo ("ejecutando getFatigasEnviadas en persistencia". $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getRolesUsuario()
{
        //$this-> logger -> LogInfo("getRolesUsuario");

    $lista = array();

    $sql = "select idRolUsuario, descripcionRolUsuario from catalogorolesusuarios where vista=1 order by descripcionRolUsuario ";

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

        //$this -> logger -> LogInfo ("ejecutando getRolesUsuario en persistencia". $sql);

}

public function newUser($datos)
{
    $arreglo= explode( ',',$datos["idsEntidades"]); 
    $arreglo1= explode( ',',$datos["idslineasnegocio"]); 
    $sql = "INSERT INTO usuarios (usuario, contrasenia, usuarioRolId, apellidoPaterno,
    apellidoMaterno, nombre, correoElectronico, usuarioCreacion, fechaCreacion) VALUES (
    '" . mysqli_real_escape_string($this->conn, $datos["usuario"]) . "', " .
    "MD5('" . mysqli_real_escape_string($this->conn, $datos["contrasenia"]) . "'), " .
    "'" . mysqli_real_escape_string($this->conn, $datos["usuarioRolId"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["apellidoPaterno"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["apellidoMaterno"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["nombre"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["correoElectronico"]) . "'," .
    "'" . mysqli_real_escape_string($this->conn, $datos["usuarioCreacion"]) . "'," .
    " now())";

        //$this -> logger -> LogInfo ("Se ejecuto consulta newUser como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
    $idmaxuser = array();
    $sql1="select max(usuarioId) usuarioId
    from usuarios";
    $res1 = mysqli_query($this->conn, $sql1);

    while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
        $idmaxuser[] = $reg1;
    }
    $idmaxuseer= $idmaxuser[0]["usuarioId"];
    for($i=0;$i<count($arreglo);$i++){
        $sql2="INSERT INTO entidadesUsuario(idUsuarioEnt, idEntidadEnt)VALUES($idmaxuseer,'$arreglo[$i]')";
        $res2 = mysqli_query($this->conn, $sql2);
        if ($res2 !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar id entidades ussuario");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            

        }

    }
    for($i=0;$i<count($arreglo1);$i++){
        $sql2="INSERT INTO lineasNegocioUsuario(idUsuariolineaneg, idlineaNegocio)VALUES($idmaxuseer,'$arreglo1[$i]')";
        $res2 = mysqli_query($this->conn, $sql2);
        if ($res2 !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar id entidades ussuario");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }
}

public function asignacionEmpleadoSupervisor($datos)
{

    $sql = "INSERT INTO usuario_empleado (usuario ,entidadEmpleadoUsuario, consecutivoEmpleadoUsuario, categoriaEmpleadoUsuario) VALUES (
    '" . mysqli_real_escape_string($this->conn, $datos["usuario"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["entidadEmpleadoUsuario"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["consecutivoEmpleadoUsuario"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["categoriaEmpleadoUsuario"]) . "')";
    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getUsuariosByName($nombre)
{
    $lista = array();

    $sql = "Select concat_ws(' ',nombre, apellidoPaterno, apellidoMaterno ) as nombre
    , u.usuario
    , u.usuarioRolId
    , u.usuarioId
    , cru.descripcionRolUsuario
    from usuarios u
    left join catalogorolesusuarios cru on (cru.idRolUsuario=u.usuarioRolId)
    where
    contrasenia <> 'BLOQUEO'
    and concat_ws(' ',nombre, apellidoPaterno, apellidoMaterno) like '%" . mysqli_real_escape_string($this->conn, $nombre) . "%'";
        //$this -> logger -> LogInfo ("Se ejecuto consulta getUsuariosByName como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}

public function bloqueoUsuario($usuarioId)
{
    $sql = "update usuarios set contrasenia='BLOQUEO' where usuarioId='" . mysqli_real_escape_string($this->conn, $usuarioId) . "'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta bloqueoUsuario como" . $sql);
    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getTabuladorSueldos()
{
        //$this -> logger -> LogInfo ("getTabuladorSueldos en persistencia");
    $lista = array();

    try {

        $sql = "Select
        sp.servicioPlantillaId,
        cps.puntoServicio,
        ef.nombreEntidadFederativa,
        cc.razonSocial,
        cps.numeroCentroCosto,
        cps.fechaInicioServicio as fechaInicioPuntoServicio,
        cps.fechaTerminoServicio as fechaTerminoPuntoServicio,
        sp.puntoServicioPlantillaId,
        cps.esatusPunto,
        sp.estatusPlantilla,
        sp.fechaInicio as fechaMontaje,
        sp.fechaTerminoPlantilla as fechaTerminoPlantilla,
        sp.numeroElementos,
        sp.puestoPlantillaId,
        sp.tipoTurnoPlantillaId,
        cp.descripcionPuesto,
        ct.descripcionTurno,
        -- usuarioCapturaPlantilla,
        -- fechaRegistroPlantilla,
        -- lastEdited
        sum(numeroElementos) as totalElementos
        , costoPorTurno
        ,cef.nombreEntidadFederativa
        ,t.cuotaDiaria
        ,t.sueldo
        ,sp.rolOperativoPlantilla
        from
        servicios_plantillas sp
        LEFT JOIN
        catalogopuestos cp ON cp.idPuesto = sp.puestoPlantillaId
        LEFT JOIN
        catalogoturnos ct ON ct.idTipoTurno = sp.tipoTurnoPlantillaId
        LEFT JOIN
        catalogopuntosservicios cps ON (cps.idPuntoServicio = sp.puntoServicioPlantillaId)
        LEFT JOIN
        entidadesfederativas cef ON (cef.idEntidadFederativa = cps.idEntidadPunto)
        LEFT JOIN
        catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
        LEFT JOIN
        tabulador t ON (t.puntoServicio =sp.puntoServicioPlantillaId and t.puestoId=sp.puestoPlantillaId and t.rolId=sp.tipoTurnoPlantillaId )
        LEFT JOIN
        entidadesfederativas ef ON (ef.idEntidadFederativa=cps.idEntidadPunto)
        where
        (cps.esatusPunto = 1 and sp.estatusPlantilla=1 and sp.numeroElementos>0)
        or ( cps.esatusPunto=0 and sp.estatusPlantilla=0 and sp.fechaTerminoPlantilla > DATE(DATE_SUB(NOW(), INTERVAL 1 month)) )
        group by sp.servicioPlantillaId 
        ORDER BY cps.puntoServicio ,cc.razonSocial ASC";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getTabuladorSueldos " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getTabuladorSueldos ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getTabuladorSueldos ERROR:" . $e->getMessage());
    }
}

public function getDatosTabuladdorByPuntoPuestoRol($datos)
{
        //$this-> logger -> LogInfo("getDatosTabuladdorByPuntoPuestoRol");

    $result = false;

    $sql = "select count(*) as existeRegistro from tabulador where puntoServicio=" . $this->safeValue($datos["puntoServicio"]) . "
    and puestoId='" . $this->safeValue($datos["puestoId"]) . "'
    and rolId='" . $this->safeValue($datos["rolId"]) . "'";

        //$this -> logger -> LogInfo ("Ejecutando: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

    if ($reg["existeRegistro"] > 0) {
        $result = true;
    }

        //$this -> logger -> LogInfo ("La referencia '" . $referencia . "' " . ($result ? "existe" : "no existe"));

    return $result;
}

public function insertSueldoAndCuota($datos)
{
        //$this -> logger -> LogInfo ("valor del array de la variable datos ".var_export ($datos, true));

    $sql = "INSERT INTO tabulador (puntoServicio ,puestoId, rolId, sueldo,cuotaDiaria,usuarioRegistro,fechaResgistro ) VALUES (
    " . mysqli_real_escape_string($this->conn, $datos["puntoServicio"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $datos["puestoId"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $datos["rolId"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $datos["sueldo"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["cuotaDiaria"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["usuario"]) . "', " .
    "NOW())";

        //$this -> logger -> LogInfo ("Se ejecuto  insertSueldoAndCuota como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function updateSueldoAndCuota($datos)
{

    $sql = "update tabulador " .
    "set sueldo='" . mysqli_real_escape_string($this->conn, $datos["sueldo"]) . "'," .
    "cuotaDiaria='" . mysqli_real_escape_string($this->conn, $datos["cuotaDiaria"]) . "'," .
    "usuarioEdicion='" . mysqli_real_escape_string($this->conn, $datos["usuario"]) . "'," .
    "fechaEdicion=NOW()" .
    "where puntoServicio=" . $this->safeValue($datos["puntoServicio"]) . "
    and puestoId='" . $this->safeValue($datos["puestoId"]) . "'
    and rolId='" . $this->safeValue($datos["rolId"]) . "'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta updateSueldoAndCuota como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar SueldoAndCuota.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getCuotaDiariaByPerfil($datos)
{

   // $this->logger->LogInfo("getCuotaDiariaByPerfil.log");
    $cuotaDiaria = "";

    try {

        $sql = "select  puntoServicio,puestoId,rolId,sueldo, cuotaDiaria
        from tabulador
        left join servicios_plantillas ON(tabulador.puntoServicio=servicios_plantillas.puntoServicioPlantillaId)
        where tabulador.puntoServicio=" . $this->safeValue($datos["puntoServicio"]) . " and
        tabulador.puestoId=" . $this->safeValue($datos["puestoId"]) . " and
        servicios_plantillas.puestoPlantillaId=" . $this->safeValue($datos["puestoId"]) . " and
        rolId=" . $this->safeValue($datos["rolId"]) . "
        group by servicios_plantillas.servicioPlantillaId;";

     //   $this->logger->LogInfo("ejecutando getCuotaDiariaByPerfil en persistencia" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $cuotaDiaria = $reg;
        }
       // $this->logger->LogInfo("valor del array de la getCuotaDiariaByPerfil " . var_export($cuotaDiaria, true));

        return $cuotaDiaria;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function insertSueldoEmpleado($datos)
{

    $sql = "INSERT INTO cuotas_empleados (empleadoEntidadCuota ,empleadoConsecutivoCuota, empleadoCategoriaCuota, sueldoEmpleado,
    cuotaDiariaEmpleado,bonoAsistenciaEmpleado,bonoPuntualidadEmpleado,usuarioCapturaCuota, fechaCapturaCuota  ) VALUES (
    '" . mysqli_real_escape_string($this->conn, $datos["empleadoEntidadCuota"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["empleadoConsecutivoCuota"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["empleadoCategoriaCuota"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["sueldoEmpleado"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["cuotaDiariaEmpleado"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["bonoAsistenciaEmpleado"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["bonoPuntualidadEmpleado"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["usuarioCapturaCuota"]) . "', " .
    "NOW())";

        //$this -> logger -> LogInfo ("Se ejecuto  insertSueldoEmpleado como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getSueldosEmpleados()
{
        //$this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");

    $lista = array();

    try {

        $sql = "select  e.idTipoPuesto,concat_ws('-', e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado
        , concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,e.entidadFederativaId
        ,e.empleadoConsecutivoId
        ,e.empleadoCategoriaId
        , e.fechaIngresoEmpleado
        ,empleadoIdPuesto
        ,cp.descripcionPuesto
        ,e.empleadoIdTurno
        ,ct.descripcionTurno
        ,e.empleadoIdPuntoServicio
        ,cps.puntoServicio
        ,cps.idEntidadPunto
        ,ef.nombreEntidadFederativa
        ,ifnull(ce.sueldoEmpleado,0) as sueldoEmpleado
        ,ifnull(ce.cuotaDiariaEmpleado,0) as cuotaDiaria
        ,ifnull(ce.bonoAsistenciaEmpleado,0) as bonoAsistencia
        ,ifnull(ce.bonoPuntualidadEmpleado,0) as bonoPuntualidad
        ,e.empleadoEstatusId
        ,cee.descripcionEstatusEmpleado,e.empleadoLineaNegocioId
        from empleados e
        left join cuotas_empleados ce on (e.entidadFederativaId=ce.empleadoEntidadCuota and e.empleadoConsecutivoId=ce.empleadoConsecutivoCuota and e.empleadoCategoriaId=ce.empleadoCategoriaCuota)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
        left join catalogopuntosservicios cps on (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
        left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
        where (((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.idTipoPuesto='03' 
        and (e.empleadoLineaNegocioId=1 or e.empleadoLineaNegocioId=2 or e.empleadoLineaNegocioId=3 or e.empleadoLineaNegocioId=4))
        or((e.empleadoEstatusId=0 and  e.fechaIngresoEmpleado > DATE(DATE_SUB(NOW(), INTERVAL 1 month))) and e.idTipoPuesto='03' 
        and (e.empleadoLineaNegocioId=1  or e.empleadoLineaNegocioId=2 or e.empleadoLineaNegocioId=3 or e.empleadoLineaNegocioId=4)))
        order by apellidoPaterno, apellidoMaterno, nombreEmpleado ";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getSueldosEmpleados " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getSueldosEmpleados ERROR:" . $e->getMessage());
    }
}

public function updateSueldoEmpleado($datos)
{

    $sql = "update cuotas_empleados " .
    "set sueldoEmpleado='" . mysqli_real_escape_string($this->conn, $datos["sueldoEmpleado"]) . "'," .
    "cuotaDiariaEmpleado='" . mysqli_real_escape_string($this->conn, $datos["cuotaDiariaEmpleado"]) . "'," .
    "bonoAsistenciaEmpleado='" . mysqli_real_escape_string($this->conn, $datos["bonoAsistenciaEmpleado"]) . "'," .
    "bonoPuntualidadEmpleado='" . mysqli_real_escape_string($this->conn, $datos["bonoPuntualidadEmpleado"]) . "'," .
    "lastUserEditedCuota='" . mysqli_real_escape_string($this->conn, $datos["lastUserEditedCuota"]) . "'," .
    "lastDatetimeUserEdited=NOW()" .
    "where empleadoEntidadCuota='" . $this->safeValue($datos["empleadoEntidadCuota"]) . "'
    and empleadoConsecutivoCuota='" . $this->safeValue($datos["empleadoConsecutivoCuota"]) . "'
    and empleadoCategoriaCuota='" . $this->safeValue($datos["empleadoCategoriaCuota"]) . "'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta updateSueldoEmpleado como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar updateSueldoEmpleado.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function verificarSueldoEmpleado($datos)
{

    $sueldoEmpleado = "";

    try {

        $sql = "select
        empleadoEntidadCuota
        ,empleadoConsecutivoCuota
        ,empleadoCategoriaCuota
        ,sueldoEmpleado
        ,cuotaDiariaEmpleado
        ,bonoAsistenciaEmpleado
        ,bonoPuntualidadEmpleado
        ,usuarioCapturaCuota
        ,fechaCapturaCuota
        ,lastUserEditedCuota
        ,lastDatetimeUserEdited
        from cuotas_empleados
        where
        empleadoEntidadCuota='" . $this->safeValue($datos["empleadoEntidadCuota"]) . "' and
        empleadoConsecutivoCuota='" . $this->safeValue($datos["empleadoConsecutivoCuota"]) . "' and
        empleadoCategoriaCuota='" . $this->safeValue($datos["empleadoCategoriaCuota"]) . "'";

            //$this -> logger -> LogInfo ("ejecutando verificarSueldoEmpleado en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        if (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $sueldoEmpleado = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarSueldoEmpleado ".var_export ($sueldoEmpleado, true));

        return $sueldoEmpleado;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function getTabuladorSueldosByPuntoServicio($puntoServicioName)
{
    $lista = array();

    try {

        $sql = "Select
        sp.servicioPlantillaId,
        cps.puntoServicio,
        ef.nombreEntidadFederativa,
        cc.razonSocial,
        cps.numeroCentroCosto,
        cps.fechaInicioServicio as fechaInicioPuntoServicio,
        cps.fechaTerminoServicio as fechaTerminoPuntoServicio,
        sp.puntoServicioPlantillaId,
        cps.esatusPunto,
        sp.estatusPlantilla,
        sp.fechaInicio as fechaMontaje,
        sp.fechaTerminoPlantilla as fechaTerminoPlantilla,
        sp.numeroElementos,
        sp.puestoPlantillaId,
        sp.tipoTurnoPlantillaId,
        cp.descripcionPuesto,
        ct.descripcionTurno,
        -- usuarioCapturaPlantilla,
        -- fechaRegistroPlantilla,
        -- lastEdited
        sum(numeroElementos) as totalElementos
        , costoPorTurno
        ,cef.nombreEntidadFederativa
        ,t.cuotaDiaria
        ,t.sueldo
        ,sp.rolOperativoPlantilla
        from
        servicios_plantillas sp
        LEFT JOIN
        catalogopuestos cp ON cp.idPuesto = sp.puestoPlantillaId
        LEFT JOIN
        catalogoturnos ct ON ct.idTipoTurno = sp.tipoTurnoPlantillaId
        LEFT JOIN
        catalogopuntosservicios cps ON (cps.idPuntoServicio = sp.puntoServicioPlantillaId)
        LEFT JOIN
        entidadesfederativas cef ON (cef.idEntidadFederativa = cps.idEntidadPunto)
        LEFT JOIN
        catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
        LEFT JOIN
        tabulador t ON (t.puntoServicio =sp.puntoServicioPlantillaId and t.puestoId=sp.puestoPlantillaId and t.rolId=sp.tipoTurnoPlantillaId )
        LEFT JOIN
        entidadesfederativas ef ON (ef.idEntidadFederativa=cps.idEntidadPunto)
        where
        (cps.esatusPunto = 1 and sp.estatusPlantilla=1 and sp.numeroElementos>0 and cps.puntoServicio like '%" . $this->safeValue($puntoServicioName) . "%')
        or ( cps.esatusPunto=0 and sp.estatusPlantilla=0 and sp.fechaTerminoPlantilla > DATE(DATE_SUB(NOW(), INTERVAL 1 month)) and cps.puntoServicio like '%" . $this->safeValue($puntoServicioName) . "%' )
        group by sp.puestoPlantillaId , sp.puntoServicioPlantillaId, sp.tipoTurnoPlantillaId
        ORDER BY cps.puntoServicio ,cc.razonSocial ASC";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getTabuladorSueldosByPuntoServicio " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getTabuladorSueldosByPuntoServicio ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getTabuladorSueldos ERROR:" . $e->getMessage());
    }
}

public function getCoberturaRangoFecha($fecha1, $fecha2)
{
        //$this -> logger -> LogInfo ("getCoberturaRangoFecha en persistencia");

    $lista = array();

    try {

        $sql = "select
        concat_ws('-',a.empleadoEntidad,empleadoConsecutivo,empleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.puestoCubiertoId
        ,cp.descripcionPuesto
        ,a.fechaAsistencia
        ,a.puntoServicioAsistenciaId
        ,cps.puntoServicio
        ,ef.nombreEntidadFederativa
        ,cc.razonSocial
        ,a.incidenciaAsistenciaId
        ,ci.valorAsistencia
        ,ci.nomenclaturaIncidencia
        ,ce.cuotaDiariaEmpleado
        from asistencia a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
        left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
        left join catalogopuestos cp on (a.puestoCubiertoId=cp.idPuesto)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join cuotas_empleados ce on (a.empleadoEntidad=ce.empleadoEntidadCuota and a.empleadoConsecutivo=ce.empleadoConsecutivoCuota and a.empleadoTipo=ce.empleadoCategoriaCuota)
        where
        fechaAsistencia between cast('" . $this->safeValue($fecha1) . "' as date ) and cast('" . $this->safeValue($fecha2) . "' as date )
        union
        select concat_ws('-',a.incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.incidenciaPuesto
        ,cp.descripcionPuesto
        ,a.incidenciaFecha
        ,a.incidenciaPuntoServicio
        ,cps.puntoServicio
        ,ef.nombreEntidadFederativa
        ,cc.razonSocial
        ,ci.incidenciaEspecialId
        ,ci.valorIncidenciaEspecial
        ,ci.descripcionIncidenciaEspecial as nomenclaturaIncidenciaEspecial
        ,ce.cuotaDiariaEmpleado
        from incidenciasespeciales a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.incidenciaPuntoServicio)
        left join catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=a.incidenciaId)
        left join empleados e on (e.entidadFederativaId=a.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=a.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=a.incidenciaEmpleadoTipo)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join cuotas_empleados ce on (a.incidenciaEmpleadoEntidad=ce.empleadoEntidadCuota and a.incidenciaEmpleadoConsecutivo=ce.empleadoConsecutivoCuota and a.incidenciaEmpleadoTipo=ce.empleadoCategoriaCuota)
        where
        incidenciaFecha between cast('" . $this->safeValue($fecha1) . "' as date ) and cast('" . $this->safeValue($fecha2) . "' as date )";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getCoberturaRangoFecha " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getCoberturaRangoFecha ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getTabuladorSueldos ERROR:" . $e->getMessage());
    }
}
public function getCostoTurnoByPuntoIdAndPuestoId($puntoServicioAsistenciaId, $puestoCubiertoId)
{

    $costoTurno = "";

    try {

        $sql = "select sp.servicioPlantillaId, sp.puntoServicioPlantillaId,
        sp.puestoPlantillaId, cp.descripcionPuesto, sp.tipoTurnoPlantillaId,sp.costoNetoFactura,
        ct.descripcionTurno,
        sp.generoElementoId, cg.nomenclaturaGenero,cg.descripcionGenero ,sp.folio,fechaRegistroPlantilla,
        sp.fechaInicio,sp.fechaTerminoPlantilla,sp.numeroElementos,
        sp.turnosPorDia,sp.costoPorTurno,
        sp.cobraDescanso,sp.cobraFestivos,sp.cobraDia31,
        sp.usuarioCapturaPlantilla,sp.lastEdited, sp.estatusPlantilla, sp.comentarioRequisicion,sp.recursosMateriales,
        cps.puntoservicio, cc.razonSocial, cps.cobraDescansos, cps.cobraDiaFestivo, cps.cobra31
        from servicios_plantillas sp
        left join catalogopuestos cp on (cp.idPuesto=sp.puestoPlantillaId)
        left join catalogoturnos ct on (ct.idTipoTurno=sp.tipoTurnoPlantillaId)
        left join catalogogenero cg on (cg.idGenero=sp.generoElementoId)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        where puntoServicioPlantillaId=" . $this->safeValue($puntoServicioAsistenciaId) . "
        and puestoPlantillaId=" . $this->safeValue($puestoCubiertoId) . "
        group by puestoPlantillaId";

            //$this -> logger -> LogInfo ("ejecutando getCostoTurnoByPuntoIdAndPuestoId en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        if (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $costoTurno = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getCostoTurnoByPuntoIdAndPuestoId ".var_export ($costoTurno, true));

        return $costoTurno;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function getEntidadesCobertura($month, $year)
{
        //$this -> logger -> LogInfo ("getEntidadesCobertura en persistencia");

    $lista = array();

    try {

        $sql = "select distinct idEntidadFederativa, nombreEntidadFederativa from (
        select
        concat_ws('-',a.empleadoEntidad,empleadoConsecutivo,empleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.puestoCubiertoId
        ,cp.descripcionPuesto
        ,a.fechaAsistencia
        ,a.puntoServicioAsistenciaId
        ,cps.puntoServicio
        ,ef.idEntidadFederativa
        ,ef.nombreEntidadFederativa
        ,cc.razonSocial
        ,a.incidenciaAsistenciaId
        ,ci.valorAsistencia
        ,ci.nomenclaturaIncidencia
        ,ce.cuotaDiariaEmpleado
        from asistencia a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
        left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
        left join catalogopuestos cp on (a.puestoCubiertoId=cp.idPuesto)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join cuotas_empleados ce on (a.empleadoEntidad=ce.empleadoEntidadCuota and a.empleadoConsecutivo=ce.empleadoConsecutivoCuota and a.empleadoTipo=ce.empleadoCategoriaCuota)
        where
        month(fechaAsistencia)='" . $this->safeValue($month) . "'and year(fechaAsistencia)='" . $this->safeValue($year) . "'
        union
        select concat_ws('-',a.incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.incidenciaPuesto
        ,cp.descripcionPuesto
        ,a.incidenciaFecha
        ,a.incidenciaPuntoServicio
        ,cps.puntoServicio
        ,ef.idEntidadFederativa
        ,ef.nombreEntidadFederativa
        ,cc.razonSocial
        ,ci.incidenciaEspecialId
        ,ci.valorIncidenciaEspecial
        ,ci.descripcionIncidenciaEspecial as nomenclaturaIncidenciaEspecial
        ,ce.cuotaDiariaEmpleado
        from incidenciasespeciales a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.incidenciaPuntoServicio)
        left join catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=a.incidenciaId)
        left join empleados e on (e.entidadFederativaId=a.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=a.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=a.incidenciaEmpleadoTipo)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join cuotas_empleados ce on (a.incidenciaEmpleadoEntidad=ce.empleadoEntidadCuota and a.incidenciaEmpleadoConsecutivo=ce.empleadoConsecutivoCuota and a.incidenciaEmpleadoTipo=ce.empleadoCategoriaCuota)
        where
        month(incidenciaFecha)='" . $this->safeValue($month) . "'and year(incidenciaFecha)='" . $this->safeValue($year) . "'
    ) as b order by nombreEntidadFederativa asc";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getEntidadesCobertura " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
    }
            //$this -> logger -> LogInfo ("valor del array de la getEntidadesCobertura ".var_export ($lista, true));

    return $lista;

} catch (Exception $e) {

    $this->logger->LogInfo("getEntidadesCobertura ERROR:" . $e->getMessage());
}
}

public function getClientesCoberturaByEntidad($month, $year, $entidad)
{
        //$this -> logger -> LogInfo ("getClientesCoberturaByEntidad en persistencia");

    $lista = array();

    try {

        $sql = "select distinct idCliente, razonSocial,claveClienteNomina from (
        select
        concat_ws('-',a.empleadoEntidad,empleadoConsecutivo,empleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.puestoCubiertoId
        ,cp.descripcionPuesto
        ,a.fechaAsistencia
        ,a.puntoServicioAsistenciaId
        ,cps.puntoServicio
        ,ef.idEntidadFederativa
        ,ef.nombreEntidadFederativa
        ,cc.idCliente
        ,cc.razonSocial
        ,cc.claveClienteNomina
        ,a.incidenciaAsistenciaId
        ,ci.valorAsistencia
        ,ci.nomenclaturaIncidencia
        ,ce.cuotaDiariaEmpleado
        from asistencia a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
        left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
        left join catalogopuestos cp on (a.puestoCubiertoId=cp.idPuesto)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join cuotas_empleados ce on (a.empleadoEntidad=ce.empleadoEntidadCuota and a.empleadoConsecutivo=ce.empleadoConsecutivoCuota and a.empleadoTipo=ce.empleadoCategoriaCuota)
        where
        month(fechaAsistencia)='" . $this->safeValue($month) . "' and year(fechaAsistencia)='" . $this->safeValue($year) . "' and idEntidadFederativa='" . $this->safeValue($entidad) . "'
        union
        select concat_ws('-',a.incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.incidenciaPuesto
        ,cp.descripcionPuesto
        ,a.incidenciaFecha
        ,a.incidenciaPuntoServicio
        ,cps.puntoServicio
        ,ef.idEntidadFederativa
        ,ef.nombreEntidadFederativa
        ,cc.idCliente
        ,cc.razonSocial
        ,cc.claveClienteNomina
        ,ci.incidenciaEspecialId
        ,ci.valorIncidenciaEspecial
        ,ci.descripcionIncidenciaEspecial as nomenclaturaIncidenciaEspecial
        ,ce.cuotaDiariaEmpleado
        from incidenciasespeciales a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.incidenciaPuntoServicio)
        left join catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=a.incidenciaId)
        left join empleados e on (e.entidadFederativaId=a.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=a.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=a.incidenciaEmpleadoTipo)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join cuotas_empleados ce on (a.incidenciaEmpleadoEntidad=ce.empleadoEntidadCuota and a.incidenciaEmpleadoConsecutivo=ce.empleadoConsecutivoCuota and a.incidenciaEmpleadoTipo=ce.empleadoCategoriaCuota)
        where
        month(incidenciaFecha)='" . $this->safeValue($month) . "'and year(incidenciaFecha)='" . $this->safeValue($year) . "' and idEntidadFederativa='" . $this->safeValue($entidad) . "'
    ) as b order by nombreEntidadFederativa asc";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getClientesCoberturaByEntidad " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
    }
            //$this -> logger -> LogInfo ("valor del array de la getClientesCoberturaByEntidad ".var_export ($lista, true));

    return $lista;

} catch (Exception $e) {

    $this->logger->LogInfo("getClientesCoberturaByEntidad ERROR:" . $e->getMessage());
}
}

public function getPuntosCoberturaByCliente($month, $year, $idCliente, $idEntidadFederativa)
{
        //$this -> logger -> LogInfo ("getPuntosCoberturaByCliente en persistencia");

    $lista = array();

    try {

        $sql = "select distinct puntoServicioAsistenciaId, puntoServicio,idEntidadFederativa  from (
        select
        concat_ws('-',a.empleadoEntidad,empleadoConsecutivo,empleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.puestoCubiertoId
        ,cp.descripcionPuesto
        ,a.fechaAsistencia
        ,a.puntoServicioAsistenciaId
        ,cps.puntoServicio
        ,ef.idEntidadFederativa
        ,ef.nombreEntidadFederativa
        ,cc.idCliente
        ,cc.razonSocial
        ,a.incidenciaAsistenciaId
        ,ci.valorAsistencia
        ,ci.nomenclaturaIncidencia
        ,ce.cuotaDiariaEmpleado
        from asistencia a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
        left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
        left join catalogopuestos cp on (a.puestoCubiertoId=cp.idPuesto)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join cuotas_empleados ce on (a.empleadoEntidad=ce.empleadoEntidadCuota and a.empleadoConsecutivo=ce.empleadoConsecutivoCuota and a.empleadoTipo=ce.empleadoCategoriaCuota)
        where
        month(fechaAsistencia)='" . $this->safeValue($month) . "' and year(fechaAsistencia)='" . $this->safeValue($year) . "' and idCliente='" . $this->safeValue($idCliente) . "' and idEntidadFederativa='" . $this->safeValue($idEntidadFederativa) . "'
        union
        select concat_ws('-',a.incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.incidenciaPuesto
        ,cp.descripcionPuesto
        ,a.incidenciaFecha
        ,a.incidenciaPuntoServicio
        ,cps.puntoServicio
        ,ef.idEntidadFederativa
        ,ef.nombreEntidadFederativa
        ,cc.idCliente
        ,cc.razonSocial
        ,ci.incidenciaEspecialId
        ,ci.valorIncidenciaEspecial
        ,ci.descripcionIncidenciaEspecial as nomenclaturaIncidenciaEspecial
        ,ce.cuotaDiariaEmpleado
        from incidenciasespeciales a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.incidenciaPuntoServicio)
        left join catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=a.incidenciaId)
        left join empleados e on (e.entidadFederativaId=a.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=a.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=a.incidenciaEmpleadoTipo)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join cuotas_empleados ce on (a.incidenciaEmpleadoEntidad=ce.empleadoEntidadCuota and a.incidenciaEmpleadoConsecutivo=ce.empleadoConsecutivoCuota and a.incidenciaEmpleadoTipo=ce.empleadoCategoriaCuota)
        where
        month(incidenciaFecha)='" . $this->safeValue($month) . "'and year(incidenciaFecha)='" . $this->safeValue($year) . "' and idCliente='" . $this->safeValue($idCliente) . "' and idEntidadFederativa='" . $this->safeValue($idEntidadFederativa) . "'
    ) as b order by nombreEntidadFederativa asc";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getPuntosCoberturaByCliente " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
    }
            //$this -> logger -> LogInfo ("valor del array de la getPuntosCoberturaByCliente ".var_export ($lista, true));

    return $lista;

} catch (Exception $e) {

    $this->logger->LogInfo("getPuntosCoberturaByCliente ERROR:" . $e->getMessage());
}
}
public function getPuestosCoberturaByPunto($month, $year, $idPuntoServicio)
{
        //$this -> logger -> LogInfo ("getPuestosCoberturaByPunto en persistencia");

    $lista = array();

    try {

        $sql = "select distinct puestoCubiertoId,descripcionPuesto from (
        select
        concat_ws('-',a.empleadoEntidad,empleadoConsecutivo,empleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.puestoCubiertoId
        ,cp.descripcionPuesto
        ,a.fechaAsistencia
        ,a.puntoServicioAsistenciaId
        ,cps.puntoServicio
        ,ef.idEntidadFederativa
        ,ef.nombreEntidadFederativa
        ,cc.idCliente
        ,cc.razonSocial
        ,a.incidenciaAsistenciaId
        ,ci.valorAsistencia
        ,ci.nomenclaturaIncidencia
        ,ce.cuotaDiariaEmpleado
        from asistencia a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
        left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
        left join catalogopuestos cp on (a.puestoCubiertoId=cp.idPuesto)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join cuotas_empleados ce on (a.empleadoEntidad=ce.empleadoEntidadCuota and a.empleadoConsecutivo=ce.empleadoConsecutivoCuota and a.empleadoTipo=ce.empleadoCategoriaCuota)
        where
        month(fechaAsistencia)='" . $this->safeValue($month) . "' and year(fechaAsistencia)='" . $this->safeValue($year) . "' and puntoServicioAsistenciaId=" . $this->safeValue($idPuntoServicio) . "
        union
        select concat_ws('-',a.incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.incidenciaPuesto
        ,cp.descripcionPuesto
        ,a.incidenciaFecha
        ,a.incidenciaPuntoServicio
        ,cps.puntoServicio
        ,ef.idEntidadFederativa
        ,ef.nombreEntidadFederativa
        ,cc.idCliente
        ,cc.razonSocial
        ,ci.incidenciaEspecialId
        ,ci.valorIncidenciaEspecial
        ,ci.descripcionIncidenciaEspecial as nomenclaturaIncidenciaEspecial
        ,ce.cuotaDiariaEmpleado
        from incidenciasespeciales a
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.incidenciaPuntoServicio)
        left join catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=a.incidenciaId)
        left join empleados e on (e.entidadFederativaId=a.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=a.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=a.incidenciaEmpleadoTipo)
        left join catalogopuestos cp on (a.incidenciaPuesto=cp.idPuesto)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        left join catalogoclientes cc on(cc.idCliente=cps.idClientePunto)
        left join cuotas_empleados ce on (a.incidenciaEmpleadoEntidad=ce.empleadoEntidadCuota and a.incidenciaEmpleadoConsecutivo=ce.empleadoConsecutivoCuota and a.incidenciaEmpleadoTipo=ce.empleadoCategoriaCuota)
        where
        month(incidenciaFecha)='" . $this->safeValue($month) . "'and year(incidenciaFecha)='" . $this->safeValue($year) . "' and incidenciaPuntoServicio=" . $this->safeValue($idPuntoServicio) . "
    ) as b order by descripcionPuesto asc ";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getPuestosCoberturaByPunto " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
    }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

    return $lista;

} catch (Exception $e) {

    $this->logger->LogInfo("getPuestosCoberturaByPunto ERROR:" . $e->getMessage());
}
}

public function getDetallesRequisicionByPuntoServicioIdAndPuesto($puntoServicioId, $puestoId, $fecha1, $fecha2)
{
        //$this -> logger -> LogInfo ("getDetallesRequisicionByPuntoServicioIdAndPuesto en persistencia");

    $lista = array();

    try {

        $sql = "select sp.servicioPlantillaId, sp.puntoServicioPlantillaId,cps.idEntidadPunto,
        sp.puestoPlantillaId
        , cp.descripcionPuesto, sp.tipoTurnoPlantillaId,sp.costoNetoFactura,
        ct.descripcionTurno,
        sp.generoElementoId, cg.nomenclaturaGenero,cg.descripcionGenero ,sp.folio,fechaRegistroPlantilla,
        sp.fechaInicio,sp.fechaTerminoPlantilla
        ,sum(sp.numeroElementos) as elementosSolicitados
        ,sum(sp.turnosPorDia) as turnosPorDia
        ,sp.costoPorTurno,
        sp.cobraDescanso,sp.cobraFestivos,sp.cobraDia31,
        sp.usuarioCapturaPlantilla,sp.lastEdited, sp.estatusPlantilla, sp.comentarioRequisicion,sp.recursosMateriales,
        cps.puntoservicio, cc.razonSocial, cps.cobraDescansos, cps.cobraDiaFestivo, cps.cobra31, t.cuotaDiaria
        from servicios_plantillas sp
        left join catalogopuestos cp on (cp.idPuesto=sp.puestoPlantillaId)
        left join catalogoturnos ct on (ct.idTipoTurno=sp.tipoTurnoPlantillaId)
        left join catalogogenero cg on (cg.idGenero=sp.generoElementoId)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
        left join tabulador t on (t.puntoServicio=sp.puntoServicioPlantillaId and t.puestoId=sp.puestoPlantillaId)
        where (puntoServicioPlantillaId=" . $this->safeValue($puntoServicioId) . " and puestoPlantillaId=" . $this->safeValue($puestoId) . " and estatusPlantilla=1) or
        (puntoServicioPlantillaId=" . $this->safeValue($puntoServicioId) . " and puestoPlantillaId=" . $this->safeValue($puestoId) . " and estatusPlantilla=0
        and sp.fechaTerminoPlantilla between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)) or
        (puntoServicioPlantillaId=" . $this->safeValue($puntoServicioId) . " and puestoPlantillaId=" . $this->safeValue($puestoId) . " and estatusPlantilla=0
        and sp.fechaTerminoPlantilla >=CAST(now() AS DATE))
        group by  tipoTurnoPlantillaId, fechaInicio
        order by descripcionTurno";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getDetallesRequisicionByPuntoServicioIdAndPuesto ID-".$puntoServicioId." " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getDetallesRequisicionByPuntoServicioIdAndPuesto ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getDetallesRequisicionByPuntoServicioIdAndPuesto ERROR:" . $e->getMessage());
    }
}

public function getTurnosPagadosNomina($puntoServicioId, $puestoId, $fecha1, $fecha2)
{
        //$this -> logger -> LogInfo ("getTurnosPagadosNomina en persistencia");

    try {

        $sql = "select sum(valorAsistencia) as turnosPagadosNomina from
        (
        select concat_ws('-', a.empleadoEntidad, a.empleadoConsecutivo, a.empleadoTipo) as numeroEmpleado, a.fechaAsistencia, a.incidenciaAsistenciaId
        ,a.puntoServicioAsistenciaId
        ,a.puestoCubiertoId
        ,ci.nomenclaturaIncidencia
        ,ci.valorAsistencia as valorAsistencia
        FROM asistencia a
        left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        where a.fechaAsistencia between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
        and a.puntoServicioAsistenciaId=" . $this->safeValue($puntoServicioId) . "
        and a.puestoCubiertoId=" . $this->safeValue($puestoId) . "
        union
        select concat_ws('-', ie.incidenciaEmpleadoEntidad, ie.incidenciaEmpleadoConsecutivo, ie.incidenciaEmpleadoTipo) as numeroEmpleado, ie.incidenciaFecha, ie.incidenciaId
        , ie.incidenciaPuntoServicio, ie.incidenciaPuesto
        ,cie.nomenclaturaIncidenciaEspecial, cie.valorIncidenciaEspecial as valorAsistencia
        from incidenciasespeciales ie
        left join catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
        where ie.incidenciaFecha  between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
        and ie.incidenciaPuntoServicio=" . $this->safeValue($puntoServicioId) . "
        and ie.incidenciaPuesto=" . $this->safeValue($puestoId) . "
    ) as b";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getTurnosPagadosNomina " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $turnosPagadosNomina = $reg;
    }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolioTxtBaja ".var_export ($numeroFolio, true));

    return $turnosPagadosNomina;

} catch (Exception $e) {

    $this->logger->LogInfo("getTurnosPagadosNomina ERROR:" . $e->getMessage());
}
}

public function registroNomina($datos)
{

        $this -> logger -> LogInfo ("Ejecutando. registroNomina en persistencia");

        // Buscamos si existe un registro de asistencia previo.
        $this -> logger -> LogInfo ("Se ejecuto datos como" . var_export ($datos, true));
    $nomina = $this->getRegistroNominaByEmpleado($datos);
    $this -> logger -> LogInfo ("Se ejecuto countnomina como" . var_export (count($nomina), true));
    if (count($nomina) == 0) {

        $sql = "insert into nomina(
        idEntidadEmpleadoNomina
        ,consecutivoEmpleadoNomina
        ,tipoEmpleadoNomina
        ,peridoNomina
        ,fechaPeriodo1
        ,fechaPeriodo2
        ,puestoEmpleadoNomina
        ,puntoServicioEmpleadoNomina
        ,turnosTotales
        ,cuotaPagadaTurno
        ,bonoAsistenciaPagado
        ,bonoPuntualidadPagado
        ,bonoAplicado
        ,montoVacacionesPagadas
        ,primaVacacional
        ,sueldoBruto
        ,fonacot
        ,infonavit
        ,pension
        ,prestamo
        ,alimentos
        ,netoalpago
        ,usuarioRegistroNomina
        ,fechaRegistroNomina
    ) values(";
    $sql .= "'" . $this->safeValue($datos["idEntidadEmpleadoNomina"]) . "',";
    $sql .= "'" . $this->safeValue($datos["consecutivoEmpleadoNomina"]) . "',";
    $sql .= "'" . $this->safeValue($datos["tipoEmpleadoNomina"]) . "',";
    $sql .= "" . $this->safeValue($datos["peridoNomina"]) . ",";
    $sql .= "'" . $this->safeValue($datos["fechaPeriodo1"]) . "',";
    $sql .= "'" . $this->safeValue($datos["fechaPeriodo2"]) . "',";
    $sql .= "" . $this->safeValue($datos["puestoEmpleadoNomina"]) . ",";
    $sql .= "" . $this->safeValue($datos["puntoServicioEmpleadoNomina"]) . ",";
    $sql .= "'" . $this->safeValue($datos["turnosTotales"]) . "',";
    $sql .= "'" . $this->safeValue($datos["cuotaPagadaTurno"]) . "',";
    $sql .= "'" . $this->safeValue($datos["bonoAsistenciaPagado"]) . "',";
    $sql .= "'" . $this->safeValue($datos["bonoPuntualidadPagado"]) . "',";
    $sql .= "'" . $this->safeValue($datos["bonoAplicado"]) . "',";
    $sql .= "'" . $this->safeValue($datos["montoVacacionesPagadas"]) . "',";
    $sql .= "'" . $this->safeValue($datos["primaVacacional"]) . "',";
    $sql .= "'" . $this->safeValue($datos["sueldoBruto"]) . "',";
    $sql .= "" . $this->safeValue($datos["montofonacot"]) . ",";
    $sql .= "" . $this->safeValue($datos["montoinfonavit"]) . ",";
    $sql .= "" . $this->safeValue($datos["montopension"]) . ",";
    $sql .= "" . $this->safeValue($datos["montoprestamo"]) . ",";
    $sql .= "" . $this->safeValue($datos["montoalimentos"]) . ",";
    $sql .= "" . $this->safeValue($datos["netoalpago"]) . ",";
    $sql .= "'" . $this->safeValue($datos["usuarioRegistroNomina"]) . "',";
    $sql .= "NOW())";

            $this -> logger -> LogInfo ("Se ejecuto consulta registroNomina como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
    if (mysqli_errno($this->conn) == 0) {
        return true;
    }

    return false;
} else {
    return $this->updateRegistroNomina($datos);
}
}

public function getRegistroNominaByEmpleado($datos)
{

    $this-> logger -> LogInfo("getRegistroNominaByEmpleado");

    $lista = array();

    $sql = "select * from nomina where
    fechaPeriodo1=CAST('" . $this->safeValue($datos["fechaPeriodo1"]) . "' AS DATE)
    and idEntidadEmpleadoNomina='" . $this->safeValue($datos["idEntidadEmpleadoNomina"]) . "'
    and consecutivoEmpleadoNomina='" . $this->safeValue($datos["consecutivoEmpleadoNomina"]) . "'
    and tipoEmpleadoNomina='" . $this->safeValue($datos["tipoEmpleadoNomina"]) . "'";

    //$this -> logger -> LogInfo ("Ejecutando getRegistroNominaByEmpleado: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function updateRegistroNomina($datos)
{

    $this-> logger -> LogInfo("updateRegistroNomina");
    $sql = "update nomina " .
    "set turnosTotales='" . $this->safeValue($datos["turnosTotales"]) . "'," .
    "cuotaPagadaTurno='" . $this->safeValue($datos["cuotaPagadaTurno"]) . "', " .
    "bonoAsistenciaPagado='" . $this->safeValue($datos["bonoAsistenciaPagado"]) . "', " .
    "bonoPuntualidadPagado='" . $this->safeValue($datos["bonoPuntualidadPagado"]) . "', " .
    "bonoAplicado='" . $this->safeValue($datos["bonoAplicado"]) . "', " .
    "montoVacacionesPagadas='" . $this->safeValue($datos["montoVacacionesPagadas"]) . "', " .
    "primaVacacional='" . $this->safeValue($datos["primaVacacional"]) . "', " .
    "sueldoBruto='" . $this->safeValue($datos["sueldoBruto"]) . "', " .
    "fonacot='" . $this->safeValue($datos["montofonacot"]) . "', " .
    "infonavit='" . $this->safeValue($datos["montoinfonavit"]) . "', " .
    "pension='" . $this->safeValue($datos["montopension"]) . "', " .
    "prestamo='" . $this->safeValue($datos["montoprestamo"]) . "', " .
    "alimentos='" . $this->safeValue($datos["montoalimentos"]) . "', " .
    "netoalpago='" . $this->safeValue($datos["netoalpago"]) . "', " .
    "usuarioEdicionNomina='" . $this->safeValue($datos["usuarioEdicionNomina"]) . "', " .
    "fechaEdicion=now() " .
    "where idEntidadEmpleadoNomina='" . $this->safeValue($datos["idEntidadEmpleadoNomina"]) . "'" .
    "and  consecutivoEmpleadoNomina='" . $this->safeValue($datos["consecutivoEmpleadoNomina"]) . "'" .
    "and  tipoEmpleadoNomina='" . $this->safeValue($datos["tipoEmpleadoNomina"]) . "'" .
    "and  fechaPeriodo1='" . $this->safeValue($datos["fechaPeriodo1"]) . "'" .
    "and  fechaPeriodo2='" . $this->safeValue($datos["fechaPeriodo2"]) . "'";

        $this -> logger -> LogInfo ("Ejecutando updateRegistroNomina: " . $sql);
    $res = mysqli_query($this->conn, $sql);

    if (mysqli_errno($this->conn) == 0) {
        return true;
    }
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

    return false;
}

public function getMontoPagadoByPuntoPuestoFecha($puntoServicioId, $puestoId, $fecha1, $fecha2)
{
        //$this -> logger -> LogInfo ("getMontoPagadoByPuntoPuestoFecha en persistencia");
    try {

        $sql = "SELECT
        ifnull(sum(sueldoBruto),0) as montoPagado
        FROM nomina n
        where
        puntoServicioEmpleadoNomina=" . $this->safeValue($puntoServicioId) . " and
        puestoEmpleadoNomina=" . $this->safeValue($puestoId) . " and
        (fechaPeriodo1 between cast('" . $this->safeValue($fecha1) . "' as date) and cast('" . $this->safeValue($fecha2) . "' as date)
        or fechaPeriodo2 between cast('" . $this->safeValue($fecha1) . "' as date) and cast('" . $this->safeValue($fecha2) . "' as date))";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getMontoPagadoByPuntoPuestoFecha " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $montoPagado = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getMontoPagadoByPuntoPuestoFecha ".var_export ($numeroFolio, true));

        return $montoPagado;

    } catch (Exception $e) {

        $this->logger->LogInfo("getMontoPagadoByPuntoPuestoFecha ERROR:" . $e->getMessage());
    }
}
public function getEmpleadoByCorreo($correo)
{
        //$this-> logger -> LogInfo("getEmpleadoByCorreo");

    $empleado = array();

    $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId, concat_ws('-',e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado
    , e.empleadoIdTurno,e.empleadoIdGenero,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado , e.fechaIngresoEmpleado,e.empleadoEstatusId,
    e.idTipoPuesto, e.empleadoIdPuesto, e.idEntidadTrabajo,  e.empleadoIdPuntoServicio,cps.puntoServicio, e.empleadoLineaNegocioId,
    e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia, e.fechaBajaEmpleado,
    cp.descripcionPuesto, ctp.descripcionCategoria, ct.descripcionTurno
    ,cg.descripcionGenero, cee.descripcionEstatusEmpleado, dir.correoEmpleado
    ,e.tipoPeriodo
    ,cc.idCliente
    ,e.estatusEmpleadoOperaciones
    ,ctperiodo.descripcionTipoPeriodo
    ,concat_ws(' ',  s.apellidoPaterno,s.apellidoMaterno, s.nombreEmpleado) as supervisor
    ,concat_ws('-',  e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia) as supervisorId
    ,e.idTipoPuesto
    ,ue.usuario
    from empleados e
    left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
    left join catalogocategoriastipopuestos ctp on (ctp.idCategoria=cp.puestoIdCategoria)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join catalogogenero cg on (cg.idGenero=e.empleadoIdGenero)
    left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
    left join directorio dir on ( e.entidadFederativaId= dir.entidadEmpleadoDirectorio and e.empleadoConsecutivoId=dir.consecutivoEmpleadoDirectorio and
    e.empleadoCategoriaId=dir.categoriaEmpleadoDirectorio)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    left join empleados s on(e.idEntidadResponsableAsistencia=s.entidadFederativaId and
    e.consecutivoResponsableAsistencia=s.empleadoConsecutivoId and e.tipoResponsableAsistencia=s.empleadoCategoriaId)
    left join catalogotipoperiodo ctperiodo on (ctperiodo.tipoPeriodoId=e.tipoPeriodo)
    left join usuario_empleado ue on (e.entidadFederativaId=ue.entidadEmpleadoUsuario and e.empleadoConsecutivoId=ue.consecutivoEmpleadoUsuario and e.empleadoCategoriaId=ue.categoriaEmpleadoUsuario)
    where dir.correoEmpleado='" . $this->safeValue($correo) . "'";

        //$this -> logger -> LogInfo ("Ejecutando getEmpleadoByCorreo: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $empleado[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la getEmpleadoByCorreo ".var_export ($empleado, true));

    return $empleado;
}
public function getAsistenciaByEmpleadoIdPeriodo($fecha1, $fecha2, $empleadoId)
{
        //$this -> logger -> LogInfo ("getAsistenciaByEmpleadoIdPeriodo en persistencia");

    $lista = array();

    try {

        $sql = "select* from (
        select
        concat_ws('-', a.empleadoEntidad, a.empleadoConsecutivo, a.empleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoPaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.puntoServicioAsistenciaId
        ,cps.puntoServicio
        ,a.fechaAsistencia
        ,a.incidenciaAsistenciaId
        ,ci.descripcionIncidencia
        ,a.comentarioIncidencia
        ,ci.nomenclaturaIncidencia
        ,ci.valorAsistencia
        ,a.fechaRegistroAsistencia as FechaRegistroAsis
        from asistencia a
        left join catalogopuntosservicios cps on (a.puntoServicioAsistenciaId=cps.idPuntoServicio)
        left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
        left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join plantilla p on (p.empleadoEntidadPlantilla=e.entidadFederativaId and p.empleadoConsecutivoPlantilla=e.empleadoConsecutivoId and p.empleadoCategoriaPlantilla=e.empleadoCategoriaId)
        where
        a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and concat_ws('-', a.empleadoEntidad, a.empleadoConsecutivo, a.empleadoTipo)='" . $this->safeValue($empleadoId) . "'
        UNION
        select
        concat_ws('-', a.incidenciaEmpleadoEntidad, a.incidenciaEmpleadoConsecutivo, a.incidenciaEmpleadoTipo) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoPaterno, e.nombreEmpleado) as nombreEmpleado
        ,a.incidenciaPuntoServicio
        ,cps.puntoServicio
        ,a.incidenciaFecha
        ,a.incidenciaId
        ,ci.descripcionIncidenciaEspecial
        ,a.incidenciaComentario
        ,ci.nomenclaturaIncidenciaEspecial
        ,ci.valorIncidenciaEspecial
        ,a.incidenciaFechaRegistro as FechaRegistroAsis 
        from  incidenciasespeciales a
        left join catalogopuntosservicios cps on (a.incidenciaPuntoServicio=cps.idPuntoServicio)
        left join empleados e on (e.entidadFederativaId=a.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=a.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=a.incidenciaEmpleadoTipo)
        left join catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=a.incidenciaId)
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join plantilla p on (p.empleadoEntidadPlantilla=e.entidadFederativaId and p.empleadoConsecutivoPlantilla=e.empleadoConsecutivoId and p.empleadoCategoriaPlantilla=e.empleadoCategoriaId)
        where
        a.incidenciaFecha between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and concat_ws('-', a.incidenciaEmpleadoEntidad, a.incidenciaEmpleadoConsecutivo, a.incidenciaEmpleadoTipo)='" . $this->safeValue($empleadoId) . "') as b order by fechaAsistencia";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getAsistenciaByEmpleadoIdPeriodo " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getAsistenciaByEmpleadoIdPeriodo ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getEntidadesCobertura ERROR:" . $e->getMessage());
    }
}

public function insertComentarioGuardia($datosComentario)
{
        //$this -> logger -> LogInfo ("valor del array de la variable datos ".var_export ($datos, true));

    $sql = "INSERT INTO comentariosguardia (entidadGuardiaComentario,consecutivoGuardiaComentario,categoriaGuardiaComentario,
    supervisorEntidadGuardia,supervisorConsecutivoGuardia,supervisorCategoriaGuardia,comentario,fechaComentario) VALUES (
    '" . mysqli_real_escape_string($this->conn, $datosComentario["entidadGuardiaComentario"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datosComentario["consecutivoGuardiaComentario"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datosComentario["categoriaGuardiaComentario"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datosComentario["supervisorEntidadGuardia"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datosComentario["supervisorConsecutivoGuardia"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datosComentario["supervisorCategoriaGuardia"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datosComentario["comentario"]) . "', " .
    "NOW())";
        //$this -> logger -> LogInfo ("Se ejecuto  insertComentarioGuardia como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
public function getComentariosGuardiasByPeriodo($fecha1, $fecha2)
{
        //$this -> logger -> LogInfo ("getComentariosGuardiasByPeriodo en persistencia");

    $lista = array();

    try {

        $sql = "select concat_ws('-', cg.entidadGuardiaComentario,cg.consecutivoGuardiaComentario,cg.categoriaGuardiaComentario) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,concat_ws(' ', s.apellidoPaterno, s.apellidoMaterno, s.nombreEmpleado) as supervisor
        ,cps.puntoServicio, ef.nombreEntidadFederativa
        , comentario, cg.fechaComentario
        from comentariosguardia cg
        left join empleados e on (e.entidadFederativaId=cg.entidadGuardiaComentario and e.empleadoConsecutivoId=cg.consecutivoGuardiaComentario and e.empleadoCategoriaId=cg.categoriaGuardiaComentario)
        left join empleados s on (cg.supervisorEntidadGuardia=s.entidadFederativaId and cg.supervisorConsecutivoGuardia=s.empleadoConsecutivoId and cg.supervisorCategoriaGuardia=s.empleadoCategoriaId)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        where
        date(cg. fechaComentario) between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getComentariosGuardiasByPeriodo " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getComentariosGuardiasByPeriodo ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getComentariosGuardiasByPeriodo ERROR:" . $e->getMessage());
    }
}

public function getComentariosGuardiasByDay($fecha1)
{
        //$this -> logger -> LogInfo ("getComentariosGuardiasByDay en persistencia");

    $lista = array();

    try {

        $sql = "select concat_ws('-', cg.entidadGuardiaComentario,cg.consecutivoGuardiaComentario,cg.categoriaGuardiaComentario) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,concat_ws(' ', s.apellidoPaterno, s.apellidoMaterno, s.nombreEmpleado) as supervisor
        ,cps.puntoServicio, ef.nombreEntidadFederativa
        , comentario, cg.fechaComentario
        from comentariosguardia cg
        left join empleados e on (e.entidadFederativaId=cg.entidadGuardiaComentario and e.empleadoConsecutivoId=cg.consecutivoGuardiaComentario and e.empleadoCategoriaId=cg.categoriaGuardiaComentario)
        left join empleados s on (cg.supervisorEntidadGuardia=s.entidadFederativaId and cg.supervisorConsecutivoGuardia=s.empleadoConsecutivoId and cg.supervisorCategoriaGuardia=s.empleadoCategoriaId)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
        left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
        where
        date(cg. fechaComentario)=CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE)";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getComentariosGuardiasByDay " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getComentariosGuardiasByDay ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getComentariosGuardiasByDay ERROR:" . $e->getMessage());
    }
}
public function getEstatusFatiga()
{
        //$this-> logger -> LogInfo("getEstatusFatiga");

    $lista = array();

    $sql = "select * from estatusfatigas";

        //$this -> logger -> LogInfo ("ejecutando getEstatusFatiga en persistencia". $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function registroRecepcionFatiga(
    $puntoServicioFatigaId,
    $fechaFatiga1,
    $fechaFatiga2,
    $quincenaFatigaId,
    $fechaFatigaRecibida,
    $usuarioRegistroRecepcion
) {

    $sql = "insert into fatigasenviadas (puntoServicioFatigaId, fechaFatiga1, fechaFatiga2, quincenaFatigaId, fechaFatigaRecibida, usuarioRegistroRecepcion,dateCapturaRecepcion,estatusFatiga) values (";
    $sql .= "'" . $this->safeValue($puntoServicioFatigaId) . "',";
    $sql .= "'" . $this->safeValue($fechaFatiga1) . "',";
    $sql .= "'" . $this->safeValue($fechaFatiga2) . "',";
    $sql .= "'" . $this->safeValue($quincenaFatigaId) . "',";
    $sql .= "'" . $this->safeValue($fechaFatigaRecibida) . "',";
    $sql .= "'" . $this->safeValue($usuarioRegistroRecepcion) . "',";
    $sql .= "NOW(),";
    $sql .= "3);";

        //$this -> logger -> LogInfo ("Ejecutando SQL: registroRecepcionFatiga " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar registroRecepcionFatiga.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function actualizarEstatusFatiga($estatusFatiga, $fechaFatigaFacturada, $usuarioRegistroFacturacion, $puntoServicioFatigaId, $fecha1, $fecha2)
{
    $sql = "update fatigasenviadas " .
    "set estatusFatiga='" . mysqli_real_escape_string($this->conn, $estatusFatiga) . "'," .
    "fechaFatigaFacturada='" . mysqli_real_escape_string($this->conn, $fechaFatigaFacturada) . "'," .
    "dateCapturaFacturacion=now()," .
    "usuarioRegistroFacturacion='" . mysqli_real_escape_string($this->conn, $usuarioRegistroFacturacion) . "'" .
    "where puntoServicioFatigaId='" . $this->safeValue($puntoServicioFatigaId) . "'" .
    "and  fechaFatiga1='" . $this->safeValue($fecha1) . "'" .
    "and  fechaFatiga2='" . $this->safeValue($fecha2) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: actualizarEstatusFatiga " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
        throw new Exception("Error de actualización");
    }
}

public function registroFacturacionFatiga($puntoServicioFatigaId, $fechaFatiga1, $fechaFatiga2, $quincenaFatigaId, $fechaFatigaFacturada, $usuarioRegistroFacturacion)
{

    $sql = "insert into fatigasenviadas (puntoServicioFatigaId, fechaFatiga1, fechaFatiga2, quincenaFatigaId, fechaFatigaFacturada, usuarioRegistroFacturacion,dateCapturaFacturacion,estatusFatiga) values (";
    $sql .= "'" . $this->safeValue($puntoServicioFatigaId) . "',";
    $sql .= "'" . $this->safeValue($fechaFatiga1) . "',";
    $sql .= "'" . $this->safeValue($fechaFatiga2) . "',";
    $sql .= "'" . $this->safeValue($quincenaFatigaId) . "',";
    $sql .= "'" . $this->safeValue($fechaFatigaFacturada) . "',";
    $sql .= "'" . $this->safeValue($usuarioRegistroFacturacion) . "',";
    $sql .= "NOW(),";
    $sql .= "4);";

        //$this -> logger -> LogInfo ("Ejecutando SQL: registroFacturacionFatiga " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar registroFacturacionFatiga.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}
public function registroContrarecibo($puntoServicioFatigaId, $fechaFatiga1, $fechaFatiga2, $quincenaFatigaId, $fechaContrarecibo, $usuarioRegistroContrarecibo)
{

    $sql = "insert into fatigasenviadas (puntoServicioFatigaId, fechaFatiga1, fechaFatiga2, quincenaFatigaId, fechaContrarecibo
    , usuarioRegistroContrarecibo,dateCacturaContrarecibo,estatusFatiga) values (";
    $sql .= "'" . $this->safeValue($puntoServicioFatigaId) . "',";
    $sql .= "'" . $this->safeValue($fechaFatiga1) . "',";
    $sql .= "'" . $this->safeValue($fechaFatiga2) . "',";
    $sql .= "'" . $this->safeValue($quincenaFatigaId) . "',";
    $sql .= "'" . $this->safeValue($fechaContrarecibo) . "',";
    $sql .= "'" . $this->safeValue($usuarioRegistroContrarecibo) . "',";
    $sql .= "NOW(),";
    $sql .= "5);";

        //$this -> logger -> LogInfo ("Ejecutando SQL: registroContrarecibo " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar registroContrarecibo.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}
public function actualizarEstatusFatigaContrarecibo($estatusFatiga, $fechaContrarecibo, $usuarioRegistroContrarecibo, $puntoServicioFatigaId, $fecha1, $fecha2)
{
    $sql = "update fatigasenviadas " .
    "set estatusFatiga='" . mysqli_real_escape_string($this->conn, $estatusFatiga) . "'," .
    "fechaContrarecibo='" . mysqli_real_escape_string($this->conn, $fechaContrarecibo) . "'," .
    "dateCapturaFacturacion=now()," .
    "usuarioRegistroContrarecibo='" . mysqli_real_escape_string($this->conn, $usuarioRegistroContrarecibo) . "'" .
    "where puntoServicioFatigaId='" . $this->safeValue($puntoServicioFatigaId) . "'" .
    "and  fechaFatiga1='" . $this->safeValue($fecha1) . "'" .
    "and  fechaFatiga2='" . $this->safeValue($fecha2) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: actualizarEstatusFatigaContrarecibo " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
        throw new Exception("Error de actualización");
    }
}
public function registroUbicacion($datosUbicacion)
{

    $sql = "insert into ubicaciones_empleados (entidadEmpleado,consecutivoEmpleado,tipoEmpleado,latitud,longitud,fechaDispositivo,fechaCaptura) values (";
    $sql .= "'" . $this->safeValue($datosUbicacion["entidadEmpleado"]) . "',";
    $sql .= "'" . $this->safeValue($datosUbicacion["consecutivoEmpleado"]) . "',";
    $sql .= "'" . $this->safeValue($datosUbicacion["tipoEmpleado"]) . "',";
    $sql .= "'" . $this->safeValue($datosUbicacion["latitud"]) . "',";
    $sql .= "'" . $this->safeValue($datosUbicacion["longitud"]) . "',";
    $sql .= "'" . $this->safeValue($datosUbicacion["fechaDispositivo"]) . "',";
    $sql .= "NOW())";

        //$this -> logger -> LogInfo ("Ejecutando SQL: registroUbicacion " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error registroUbicacion.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}
public function getUbicacionesGuardiaByFecha($fecha1, $idGuardia)
{
        //$this -> logger -> LogInfo ("getUbicacionesGuardiaByFecha en persistencia");

    $lista = array();

    try {

        $sql = "select * from ubicaciones_empleados
        where
        entidadEmpleado='" . $this->safeValue($idGuardia["entidadEmpleado"]) . "' and
        consecutivoEmpleado='" . $this->safeValue($idGuardia["consecutivoEmpleado"]) . "' and
        tipoEmpleado='" . $this->safeValue($idGuardia["tipoEmpleado"]) . "' and
        date(fechaCaptura)=CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE)";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getUbicacionesGuardiaByFecha " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getUbicacionesGuardia ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getUbicacionesGuardiaByFecha ERROR:" . $e->getMessage());
    }
}

public function consultarEmpleadoById($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
{
   // $this-> logger -> LogInfo("consultarEmpleadoById");

    $empleado = array();

    $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId, e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado, e.empleadoEstatusId,
    e.idTipoPuesto, e.empleadoLineaNegocioId,dir.correoEmpleado,e.empleadoLocalizacion,
    e.empleadoIdPuesto,e.empleadoIdPuntoServicio,e.empleadoIdTurno,u.usuario
    from empleados e
    left join directorio dir on ( e.entidadFederativaId= dir.entidadEmpleadoDirectorio and e.empleadoConsecutivoId=dir.consecutivoEmpleadoDirectorio and
    e.empleadoCategoriaId=dir.categoriaEmpleadoDirectorio)
    left join usuarios u on ( u.usuario= ('" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'))
    where
    e.entidadFederativaId = '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "' and " .
    "e.empleadoConsecutivoId = '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "' and " .
    "e.empleadoCategoriaId = '" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "' group by entidadFederativaId, empleadoConsecutivoId , empleadoCategoriaId ";

   // $this -> logger -> LogInfo ("Ejecutando consultarEmpleadoById: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $empleado[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleadosActivos ".var_export ($empleado, true));

    return $empleado;
}

public function newUserEmpleado($datos)
{

    $sql = "INSERT INTO usuarios (usuario, contrasenia, usuarioRolId, apellidoPaterno,
    apellidoMaterno, nombre, entidadFederativaUsuario, correoElectronico, fechaCreacion) VALUES (
    '" . mysqli_real_escape_string($this->conn, $datos["usuario"]) . "', " .
    "MD5('" . mysqli_real_escape_string($this->conn, $datos["contrasenia"]) . "'), " .
    "'" . mysqli_real_escape_string($this->conn, $datos["usuarioRolId"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["apellidoPaterno"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["apellidoMaterno"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["nombre"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["entidadFederativaUsuario"]) . "'," .
    "'" . mysqli_real_escape_string($this->conn, $datos["correoElectronico"]) . "'," .
    " now())";

        //$this -> logger -> LogInfo ("Se ejecuto consulta newUserEmpleado como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar newUserEmpleado.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function bloqueoCuentaUsuario($usuario)
{
    $sql = "update usuarios set contrasenia='BLOQUEO' WHERE usuario='" . mysqli_real_escape_string($this->conn, $usuario) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: bloqueoCuentaUsuario " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
        throw new Exception("Error en bloqueo de cuenta de usuario");

        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function restaurarContraseniaByUsuario($usuario, $contrasenia1, $contrasenia2)
{

    $sql = "update usuarios set contrasenia=MD5('" . mysqli_real_escape_string($this->conn, $contrasenia1) . "') where usuario='" . mysqli_real_escape_string($this->conn, $usuario) . "'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta restaurarContraseniaByUsuario como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al restaurar contraseña.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
public function getUser($usuario)
{
    $user = array();

    $sql = "select * from  usuarios where usuario='" . mysqli_real_escape_string($this->conn, $usuario) . "'";
        //$this -> logger -> LogInfo ("Ejecutando SQL: getUser " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $user[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array getUser".var_export ($listaTipoPuestos, true));
    return $user;
}

public function selectPlantillaRequisicionByIdPuntoAndMonth($puntoServicio, $fecha1, $fecha2) 
{
        //$this-> logger -> LogInfo("selectPlantillaRequisicionByIdPuntoAndMonth");
    $lista = array();

    try {

        $sql = "select sp.servicioPlantillaId, sp.puntoServicioPlantillaId,
        sp.puestoPlantillaId, cp.descripcionPuesto, sp.tipoTurnoPlantillaId,sp.costoNetoFactura,
        ct.descripcionTurno,
        sp.folio,fechaRegistroPlantilla,
        sp.fechaInicio,sp.fechaTerminoPlantilla,sp.numeroElementos,
        sp.turnosPorDia,sp.costoPorTurno,
        sp.cobraDescanso,sp.cobraFestivos,sp.cobraDia31,
        sp.usuarioCapturaPlantilla,sp.lastEdited, sp.estatusPlantilla, sp.comentarioRequisicion,sp.recursosMateriales,
        cps.puntoservicio, cc.razonSocial, cps.cobraDescansos, cps.cobraDiaFestivo, cps.cobra31
        from servicios_plantillas sp
        left join catalogopuestos cp on (cp.idPuesto=sp.puestoPlantillaId)
        left join catalogoturnos ct on (ct.idTipoTurno=sp.tipoTurnoPlantillaId)
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        where puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $puntoServicio) . "
        and ( (sp.estatusPlantilla=1 and sp.fechaInicio <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
              or
              (sp.estatusPlantilla=0 and sp.fechaInicio <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE) and sp.fechaTerminoPlantilla between  CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
            )";

            //$this -> logger -> LogInfo ("ejecutando selectPlantillaRequisicionByIdPuntoAndMonth en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}
public function updatePuntoServicioFacturacion($puntoServicio)
{

        //$this -> logger -> LogInfo ("Ejecutando. updatePuntoServicioFacturacion en persistencia");

    $sql = "update catalogopuntosservicios " .
    "set centroCostoFacturacion='" . mysqli_real_escape_string($this->conn, $puntoServicio["centroCostoFacturacion"]) . "'," .
    "nombrePuntoFacturacion='" . mysqli_real_escape_string($this->conn, $puntoServicio["nombrePuntoFacturacion"]) . "' " .
    "where idPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicio["idPuntoServicio"]) . "";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  updateCatalogopuntosservicios como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al updatePuntoServicioFacturacion.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
public function cierrePeriodo($datos)
{

    $sql = "INSERT INTO cierresperiodos (fechaInicioPeriodo,fechaTerminoPeriodo,periodoId,fechaCierrePeriodo,
    fechaCambioPeriodo,usuarioCaptura,fechaCaptura) VALUES (
    '" . mysqli_real_escape_string($this->conn, $datos["fechaInicioPeriodo"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["fechaTerminoPeriodo"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["periodoId"]) . "', " .
    "now(), " .
    "'" . mysqli_real_escape_string($this->conn, $datos["fechaCambioPeriodo"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $datos["usuarioCaptura"]) . "', " .
    " now())";

        //$this -> logger -> LogInfo ("Se ejecuto consulta cierrePeriodo como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar cierrePeriodo.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
public function getDatosCierrePeriodoByFechasAndTipoPeriodo($fecha1, $fecha2, $periodoId)
{

    //$this-> logger -> LogInfo("getDatosCierrePeriodoByFechasAndTipoPeriodo");

    $lista = array();

    $sql = "select *
    from cierresperiodos
    where
    periodoId=" . $this->safeValue($periodoId) . "
    and fechaInicioPeriodo=CAST('" . $this->safeValue($fecha1) . "' AS DATE)
    and fechaTerminoPeriodo=CAST('" . $this->safeValue($fecha2) . "' AS DATE)";

    //$this -> logger -> LogInfo ("Ejecutando getDatosCierrePeriodoByFechasAndTipoPeriodo: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

    //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function updateDatosCierrePeriodoByFechas($datos)
{

        //$this -> logger -> LogInfo ("Ejecutando. updateDatosCierrePeriodoByFechas en persistencia");

    $sql = "update cierresperiodos
    set fechaCierrePeriodo=now(),
    usuarioLastEdicion='" . $this->safeValue($datos["usuarioCaptura"]) . "',
    fechaLastEdicion=now()
    where periodoId=" . $this->safeValue($datos["periodoId"]) . " and
    fechaInicioPeriodo=CAST('" . $this->safeValue($datos["fechaInicioPeriodo"]) . "' AS DATE)
    and fechaTerminoPeriodo=CAST('" . $this->safeValue($datos["fechaTerminoPeriodo"]) . "' AS DATE)";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  updateDatosCierrePeriodoByFechas como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al updateDatosCierrePeriodoByFechas.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
public function getModificacionesPostCierre($fechaCierre, $fechaCambioPeriodo, $idTipoPeriodo)
{

    $lista = array();

    $sql = "select
    concat_ws('-',a. empleadoEntidad
    , a.empleadoConsecutivo
    , a.empleadoTipo) as numeroEmpleado
    , concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
    , a.puntoServicioAsistenciaId
    , cps.puntoServicio
    , a.puestoCubiertoId
    , cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    , a.incidenciaAsistenciaId
    , ci.nomenclaturaIncidencia
    , ci.descripcionIncidencia
    , ci.valorAsistencia
    , a.fechaAsistencia
    , a.fechaRegistroAsistencia
    , a.lastEditedIncidencia
    , a.comentarioIncidencia
    ,concat_ws(' ',s.apellidoPaterno, s.apellidoMaterno, s.nombreEmpleado) as supervisor
    ,concat_ws('-',e.idEntidadResponsableAsistencia, e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia) as supervisorId
    ,valorAsistencia
    ,e.idEntidadTrabajo,a.roloperativo,dif.motivoDiaFestivo as DiaFestivo
    from asistencia a
    left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
    left join catalogopuestos cp on (cp.idPuesto=a.puestoCubiertoId)
    left join empleados e on(e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join empleados s on(e.idEntidadResponsableAsistencia=s.entidadFederativaId
    and e.consecutivoResponsableAsistencia=s.empleadoConsecutivoId
    and e.tipoResponsableAsistencia=s.empleadoCategoriaId)
    left join diasfestivos dif on(a.fechaAsistencia=dif.fechaDiaFestivo)
    where
    (a.fechaRegistroAsistencia between '" . $this->safeValue($fechaCierre) . "' and '" . $this->safeValue($fechaCambioPeriodo) . "' 
    and e.empleadoLineaNegocioId=1 and (e.idTipoPuesto='03'or e.idTipoPuesto='02')  
    and e.tipoPeriodo=" . $this->safeValue($idTipoPeriodo) . ")
    or (a.lastEditedIncidencia between '" . $this->safeValue($fechaCierre) . "' and '" . $this->safeValue($fechaCambioPeriodo) . "' 
    and e.empleadoLineaNegocioId=1 and (e.idTipoPuesto='03'or e.idTipoPuesto='02')  and e.tipoPeriodo=" . $this->safeValue($idTipoPeriodo) . " and a.aplicoDiferencia=0)
    union
    select concat_ws('-',a.incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo) as numeroEmpleado
    ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
    ,a.incidenciaPuntoServicio
    ,cps.puntoServicio
    ,a.incidenciaPuesto
    ,cp.descripcionPuesto
    ,e.empleadoIdTurno
    ,ct.descripcionTurno
    ,a.incidenciaId
    ,ci.nomenclaturaIncidenciaEspecial
    ,ci.descripcionIncidenciaEspecial
    ,ci.valorIncidenciaEspecial
    ,a.incidenciaFecha
    ,a.incidenciaFechaRegistro
    ,a.incidenciaLastEdited
    ,a.incidenciaComentario
    ,concat_ws(' ',s.apellidoPaterno, s.apellidoMaterno, s.nombreEmpleado) as supervisor
    ,concat_ws('-',e.idEntidadResponsableAsistencia, e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia) as supervisorId
    ,valorIncidenciaEspecial
    ,e.idEntidadTrabajo,a.rolOperativo,dif.motivoDiaFestivo as DiaFestivo
    from incidenciasespeciales a
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=a.incidenciaPuntoServicio)
    left join catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=a.incidenciaId)
    left join empleados e on (e.entidadFederativaId=a.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=a.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=a.incidenciaEmpleadoTipo)
    left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
    left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
    left join empleados s on(e.idEntidadResponsableAsistencia=s.entidadFederativaId
    and e.consecutivoResponsableAsistencia=s.empleadoConsecutivoId
    and e.tipoResponsableAsistencia=s.empleadoCategoriaId)
    left join diasfestivos dif on(a.incidenciaFecha=dif.fechaDiaFestivo)
    where
    (a.incidenciaFechaRegistro between '" . $this->safeValue($fechaCierre) . "' 
    and '" . $this->safeValue($fechaCambioPeriodo) . "' 
    and e.empleadoLineaNegocioId=1 
    and (e.idTipoPuesto='03'or e.idTipoPuesto='02') and e.tipoPeriodo=" . $this->safeValue($idTipoPeriodo) . ")
    or (a.incidenciaLastEdited between '" . $this->safeValue($fechaCierre) . "' 
    and '" . $this->safeValue($fechaCambioPeriodo) . "' and e.empleadoLineaNegocioId=1 
    and (e.idTipoPuesto='03'or e.idTipoPuesto='02') and e.tipoPeriodo=" . $this->safeValue($idTipoPeriodo) . "  )
    order by numeroEmpleado , fechaAsistencia ";

    //$this -> logger -> LogInfo ("Ejecutando getModificacionesPostCierre: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;
}

public function getIncidenciasAlCierre($datos)
{

    $lista = array();

    $sql = "select concat_ws('-',empleadoEntidadAsistenciaEdited,empleadoConsecutivoAsistenciaEdited,empleadoTipoAsistenciaEdited) as numeroEmpleado,
    incidenciaAsistenciaEdited
    ,ci.nomenclaturaIncidencia
    ,fechaAsistenciaEdited
    ,fechaRegistroAsistenciaEdited
    ,usuarioCapturaAsistenciaEdited
    ,usuarioEditedAsistencia
    , max(lastEditedAsistencia) as registro
    from asistenciaedited
    left join catalogoincidencias ci on (ci.incidenciaId=incidenciaAsistenciaEdited)
    where
    fechaAsistenciaEdited=CAST('" . $this->safeValue($datos["fechaAsistenciaEdited"]) . "' AS DATE)and
    empleadoEntidadAsistenciaEdited='" . $this->safeValue($datos["empleadoEntidadAsistenciaEdited"]) . "' and
    empleadoConsecutivoAsistenciaEdited='" . $this->safeValue($datos["empleadoConsecutivoAsistenciaEdited"]) . "' and
    empleadoTipoAsistenciaEdited='" . $this->safeValue($datos["empleadoTipoAsistenciaEdited"]) . "'
    and
    ((lastEditedAsistencia between '" . $this->safeValue($datos["fechaInicioPeriodo"]) . "' and '" . $this->safeValue($datos["fechaCierrePeriodo"]) . "')
    or (fechaRegistroAsistenciaEdited between '" . $this->safeValue($datos["fechaInicioPeriodo"]) . "' and '" . $this->safeValue($datos["fechaCierrePeriodo"]) . "')) ";

    //$this -> logger -> LogInfo ("Ejecutando getIncidenciasAlCierre: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;
}
public function registroDiferencias($datos)
{

        //$this -> logger -> LogInfo ("Ejecutando. asignacionPuntoServicioASupervisor en persistencia");

    $sql = "INSERT INTO incidenciasespeciales (incidenciaEmpleadoEntidad
    , incidenciaEmpleadoConsecutivo
    , incidenciaEmpleadoTipo
    , incidenciaPuntoServicio
    , incidenciaSupervisorEntidad
    , incidenciaSupervisorConsecutivo
    , incidenciaSupervisorTipo
    , incidenciaId
    , incidenciaFecha
    , incidenciaFechaRegistro
    , incidenciaUsuarioCaptura
    , incidenciaComentario
    , incidenciaPuesto ,rolOperativo,aplicoDiferencia) VALUES (";
    $sql .= "'" . $this->safeValue($datos["incidenciaEmpleadoEntidad"]) . "',";
    $sql .= "'" . $this->safeValue($datos["incidenciaEmpleadoConsecutivo"]) . "',";
    $sql .= "'" . $this->safeValue($datos["incidenciaEmpleadoTipo"]) . "',";
    $sql .= "'" . $this->safeValue($datos["incidenciaPuntoServicio"]) . "',";
    $sql .= "'" . $this->safeValue($datos["incidenciaSupervisorEntidad"]) . "',";
    $sql .= "'" . $this->safeValue($datos["incidenciaSupervisorConsecutivo"]) . "',";
    $sql .= "'" . $this->safeValue($datos["incidenciaSupervisorTipo"]) . "',";
    $sql .= "'" . $this->safeValue($datos["incidenciaId"]) . "',";
    $sql .= "'" . $this->safeValue($datos["incidenciaFecha"]) . "',";
    $sql .= "NOW(),";
    $sql .= "'" . $this->safeValue($datos["incidenciaUsuarioCaptura"]) . "',";
    $sql .= "'" . $this->safeValue($datos["incidenciaComentario"]) . "',";
    $sql .= "" . $this->safeValue($datos["incidenciaPuesto"]) . ",";
    $sql .= "'" . $this->safeValue($datos["roloperativo"]) . "',";
    $sql .= "" . $this->safeValue(1) . ");";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  registroDiferencias como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error registroDiferencias.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getCentroCostoByEntidadTrabajo($entidadTrabajo)
{
        //$this-> logger -> LogInfo("getEmpleadobyRfc");

    $sql = "select centroCostoId from entidad_centrocosto where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $entidadTrabajo) . "'";

        //$this -> logger -> LogInfo ("Ejecutando getCentroCostoByEntidadTrabajo: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

        //$this -> logger -> LogInfo ("Valor del getCentroCostoByEntidadTrabajo ".var_export ($reg, true));

    return $reg["centroCostoId"];
}
public function getCatalogoMediosInformacion()
{

    $empleado = array();

    try {

        $sql = "select * from catalogomedioinformacion where vistaCatalogo=1";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $empleado[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $empleado;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function obtenerReclutadoresSeguridadFisica()
{
        //$this-> logger -> LogInfo("obtenerReclutadoresByLineaNegocio");

    $reclutadores = array();
    try {

        $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId, concat_ws('-',e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId) as reclutadorId
        ,concat( e.nombreEmpleado, \" \", e.apellidoPaterno, \" \", e.apellidoMaterno) AS nombre
        FROM empleados e
        where empleadoIdPuesto=46 and e.empleadoEstatusId<>0 order by e.nombreEmpleado asc";

            //$this -> logger -> LogInfo ("Ejecutando obtenerReclutadoresByLineaNegocio: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $reclutadores[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la obtenerReclutadoresByLineaNegocio ".var_export ($reclutadores, true));

        return $reclutadores;
    } catch (Exception $e) {

        $this->logger->LogInfo("obtenerReclutadoresByLineaNegocio ERROR:" . $e->getMessage());
    }
}

public function actualizarEstatusEmisionAltaImss($datosImss)
{

        //$this -> logger -> LogInfo ("Ejecutando. rechazarEmpleadoImss en persistencia");

    $sql = "update datosimss " .
    "set emisionAltaImssConfirmada=" . mysqli_real_escape_string($this->conn, $datosImss["emisionAltaImssConfirmada"]) . "" .
    " where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusEmisionAltaImss como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarEstatusEmisionAltaImss.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
public function actualizarEstatusDefinitivoImss($datosImss)
{
    //$this -> logger -> LogInfo ("Ejecutando. rechazarEmpleadoImss en persistencia");
    $sql = "update datosimss " .
    "set empleadoEstatusImss=" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . "," .
    "comentario='" . mysqli_real_escape_string($this->conn, $datosImss["comentario"]) . "'," .
    "emisionAltaImssConfirmada=0," .
    "lastUserEdited='" . mysqli_real_escape_string($this->conn, $datosImss["usuario"]) . "'," .
    "lastEditedImss=NOW()" .
    " where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "' ";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusDefinitivoImss como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarEstatusDefinitivoImss.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

    $sql1 = "UPDATE empleados 
            SET empleadoEstatusId='0',estatusEmpleadoOperaciones='0'
            WHERE entidadFederativaId ='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) . "'
            and empleadoConsecutivoId = '" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) . "'
            and empleadoCategoriaId = '" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "'";
    //    $this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusDefinitivoempleados como" . $sql1);
    $res1 = mysqli_query($this->conn, $sql1);
    if ($res1 !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarEstatusDefinitivoImss.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
public function getReclutadoresByLineaNegocioAndMonth($usuario, $month, $puesto)
{
       // $this -> logger -> LogInfo ("getReclutadoresByLineaNegocioAndMonth en persistencia");
//$this -> logger -> LogInfo ("valor del array de la usuario ".var_export ($usuario, true));
    $lista = array();

    try {
        $sql = "SELECT
        concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) as nombreEmpleado,e.fechaIngresoEmpleado
        from empleados e 
        where empleadoIdPuesto=" . $puesto . "
        and ((year(e.fechaIngresoEmpleado)=year(now()) and month(e.fechaIngresoEmpleado)<='" . mysqli_real_escape_string($this->conn, $month) . "' and (empleadoEstatusId=1 or empleadoEstatusId=2))
            or (year(e.fechaIngresoEmpleado)<year(now()) and (empleadoEstatusId=1 or empleadoEstatusId=2))        
            or (empleadoEstatusId=0 and month(fechaBajaEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "' and year (fechaBajaEmpleado)=year(now()))";
        if($usuario["rol"]=="Lider Unidad"){
            $sql.=") and";
            for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
                if(!is_array($usuario['lineaNegocioUsuario'])){
                    $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
                }else{
                    $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
                } 
                for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                    if(!is_array($usuario['entidadFederativaUsuario'])){
                        $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                    }else{
                        $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                    }
                    if(($i==0) && ($j==0)){
                        $sql.=" ((e.empleadoLineaNegocioId='" . mysqli_real_escape_string($this->conn, $lineanegocioconsulta) . "' and e.idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadparaconsulta) . "')";  
                    }else{
                        $sql.=" or (e.empleadoLineaNegocioId='" . mysqli_real_escape_string($this->conn, $lineanegocioconsulta) . "' and e.idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadparaconsulta) . "')";       
                    }
                }
            }
        $sql.=" ) ";
        }else{
            $sql.=" ) and e.empleadoLineaNegocioId='1'";
        }
        $sql.=" order by concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) asc";

        

            //$this -> logger -> LogInfo ("Ejecutando SQL: getReclutadoresByLineaNegocioAndMonth " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getReclutadoresByLineaNegocioAndMonth ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getReclutadoresByLineaNegocioAndMonth ERROR:" . $e->getMessage());
    }
}

public function getElementosByReclutador($reclutadorId, $month)
{
        //$this -> logger -> LogInfo ("getElementosByReclutador en persistencia");

    $lista = array();

    try {

        $sql = "select
        concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) as nombreEmpleado,
        empleadoEstatusId
        from empleados e where
        concat_ws('-',reclutadorEntidad,reclutadorConsecutivoId,reclutadorTipo)='" . mysqli_real_escape_string($this->conn, $reclutadorId) . "' and
        month(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaIngresoEmpleado)=year(now())
        group by numeroEmpleado,nombreEmpleado";

       // $this -> logger -> LogInfo ("Ejecutando SQL: getElementosByReclutador " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getElementosByReclutador ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getElementosByReclutador ERROR:" . $e->getMessage());
    }
}
public function getAltasDelMes($month, $year)
{

        //$this-> logger -> LogInfo("traerUltimoFolioTxt");

    try {

        $sql = "select count(*) as altasMes
        FROM empleados
        where
        empleadoLineaNegocioId=1 and idTipoPuesto='03' and
        month(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $year) . "'";

            //$this -> logger -> LogInfo ("ejecutando getAltasDelMes en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $altasMes = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolioTxt ".var_export ($numeroFolio, true));

        return $altasMes;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function getBajasDelMes($month, $year)
{

        //$this-> logger -> LogInfo("traerUltimoFolioTxt");

    try {

        $sql = "select count(*) as bajasMes
        FROM empleados
        where
        empleadoLineaNegocioId=1 and idTipoPuesto='03' and
        month(fechaBajaEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaBajaEmpleado)='" . mysqli_real_escape_string($this->conn, $year) . "'";

            //$this -> logger -> LogInfo ("ejecutando getBajasDelMes en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $bajasMes = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolioTxt ".var_export ($numeroFolio, true));

        return $bajasMes;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function getNumeroElementosGif($fecha1, $fecha2)
{

        //$this-> logger -> LogInfo("getNumeroElementosPlantilla");

    try {

        $sql = "select
        ifnull(count(*),0) as numElementosGif
        from empleados e
        where
        e.idTipoPuesto='03' and e.empleadoLineaNegocioId=1
        and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
        and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
        or
        (
        e.idTipoPuesto='03' and e.empleadoLineaNegocioId=1
        and e.empleadoEstatusId=0
        and e.fechaBajaEmpleado >= CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE)
        and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))";

            //$this -> logger -> LogInfo ("ejecutando getBajasDelMes en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $numElementosGif = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getNumeroElementosPlantilla ".var_export ($numeroFolio, true));

        return $numElementosGif;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function getNumeroElementosPlantilla($fecha1, $fecha2)
{

        //$this-> logger -> LogInfo("getNumeroElementosPlantilla");

    try {

        $sql = "SELECT
        sum(numeroElementos) as elementosVentas
        FROM servicios_plantillas
        where
        (estatusPlantilla=1 and fechaInicio <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
        or
        (estatusPlantilla=0 and fechaInicio <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
        and fechaTerminoPlantilla between  CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))";

            //$this -> logger -> LogInfo ("ejecutando getBajasDelMes en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $elementosVentas = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getNumeroElementosPlantilla ".var_export ($numeroFolio, true));

        return $elementosVentas;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function getAltasDelMesByEntidad($month, $year, $entidadId)
{

        //$this-> logger -> LogInfo("getAltasDelMesByEntidad");

    try {

        $sql = "select count(*) as altasMes
        FROM empleados
        where
        empleadoLineaNegocioId=1 and idTipoPuesto='03' and
        idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadId) . "' and
        month(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $year) . "'";

            //$this -> logger -> LogInfo ("ejecutando getAltasDelMesByEntidad en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $altasMes = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getAltasDelMesByEntidad ".var_export ($numeroFolio, true));

        return $altasMes;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function getBajasDelMesByEntidad($month, $year, $entidadId)
{

        //$this-> logger -> LogInfo("traerUltimoFolioTxt");

    try {

        $sql = "select count(*) as bajasMes
        FROM empleados
        where
        empleadoLineaNegocioId=1 and idTipoPuesto='03' and
        idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadId) . "' and
        month(fechaBajaEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaBajaEmpleado)='" . mysqli_real_escape_string($this->conn, $year) . "'";

            //$this -> logger -> LogInfo ("ejecutando getBajasDelMes en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $bajasMes = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolioTxt ".var_export ($numeroFolio, true));

        return $bajasMes;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function getNumeroElementosGifByEntidad($fecha1, $fecha2, $entidadId)
{

        //$this-> logger -> LogInfo("getNumeroElementosPlantilla");

    try {

        $sql = "select
        ifnull(count(*),0) as numElementosGif
        from empleados e
        where
        idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadId) . "' and
        e.idTipoPuesto='03' and e.empleadoLineaNegocioId=1
        and (e.empleadoEstatusId=1 or e.empleadoEstatusId=2)
        and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
        or
        (
        idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadId) . "' and
        e.idTipoPuesto='03' and e.empleadoLineaNegocioId=1
        and e.empleadoEstatusId=0
        and e.fechaBajaEmpleado >= CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE)
        and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))";

            //$this -> logger -> LogInfo ("ejecutando getNumeroElementosGifByEntidad en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $numElementosGif = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getNumeroElementosGifByEntidad ".var_export ($numeroFolio, true));

        return $numElementosGif;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function getNumeroElementosPlantillaByEntidad($fecha1, $fecha2, $entidadId)
{

        //$this-> logger -> LogInfo("getNumeroElementosPlantillaByEntidad");

    try {

        $sql = "SELECT
        ifnull(sum(numeroElementos),0) as elementosVentas
        FROM servicios_plantillas
        left join catalogopuntosservicios cps on (puntoServicioPlantillaId=cps.idPuntoServicio)
        where
        (idEntidadPunto='" . mysqli_real_escape_string($this->conn, $entidadId) . "' and estatusPlantilla=1 and fechaInicio <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
        or
        (idEntidadPunto='" . mysqli_real_escape_string($this->conn, $entidadId) . "' and estatusPlantilla=0 and fechaInicio <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE)
        and fechaTerminoPlantilla between  CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))";

            //$this -> logger -> LogInfo ("ejecutando getBajasDelMes en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $elementosVentas = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getNumeroElementosPlantillaByEntidad ".var_export ($elementosVentas, true));

        return $elementosVentas;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function newProveedor($datos)
{
    $sql = "INSERT INTO proveedores(idProveedor,numeroContableProv,nombreProveedor,rfcProveedor,telefonoProveedor,idBancoCuenta,nombreContactoProv,nCuentaProveedor,ctaClabeProveedor,correoProveedor,domicilioProveedor) VALUES (NULL,
    '" . mysqli_real_escape_string($this->conn, $datos["numeroContableProv"]) . "','" .
    mysqli_real_escape_string($this->conn, $datos["nombreProveedor"]) . "','" .
    mysqli_real_escape_string($this->conn, $datos["rfcProveedor"]) . "','" .
    mysqli_real_escape_string($this->conn, $datos["telefonoProveedor"]) . "','" .
    mysqli_real_escape_string($this->conn, $datos["bancoProveedor"]) . "','" .
    mysqli_real_escape_string($this->conn, $datos["contactoProveedor"]) . "','" .
    mysqli_real_escape_string($this->conn, $datos["noCuentaProveedor"]) . "','" .
    mysqli_real_escape_string($this->conn, $datos["ctaProveedor"]) . "','" .
    mysqli_real_escape_string($this->conn, $datos["correoProveedor"]) . "','" .
    mysqli_real_escape_string($this->conn, $datos["domicilioProveedor"]) . "' )";

    $res = mysqli_query($this->conn, $sql);

        //$this -> logger -> LogInfo ("Se ejecuto consulta newProveedor como" . $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerProveedores()
{

    $listaProveedores = array();
    $sql              = "SELECT p.idProveedor,p.numeroContableProv,p.nombreProveedor,p.rfcProveedor,p.telefonoProveedor,be.nombreBanco,p.nombreContactoProv,p.nCuentaProveedor,p.ctaClabeProveedor,p.correoProveedor,p.domicilioProveedor
    FROM proveedores p LEFT JOIN bancos_empresa be ON (p.idBancoCuenta=be.idCuentaBanco) ORDER BY nombreProveedor";
        // $this -> logger -> LogInfo ("Se ejecuto consulta consultaProveedores como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaProveedores[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaProveedores;
}

public function obtenerPuntosServiciosPorEntidadCliente($idEntidad, $idCliente, $fecha1, $fecha2)
{

    $lista = array();

    try {

        $sql = "select cp.idPuntoServicio as puntoServicioId,cp.puntoServicio, ifnull(cp.cobraDescansos,0) as cobraDescansos , ifnull(cp.cobraDiaFestivo,0) as cobraDiaFestivo, ifnull(cp.cobra31,0) as cobra31
        FROM catalogopuntosservicios cp
        WHERE cp.idEntidadPunto ='" . $this->safeValue($idEntidad) . "' 
        and cp.idClientePunto= '" . $this->safeValue($idCliente) . "' 
        and ((cp.esatusPunto=1) or (cp.esatusPunto=0 and cp.fechaTerminoServicio between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)))";
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getPuntosServicios ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo(" obtenerPuntosServiciosPorEntidadCliente ERROR: " . $e->getMessage());
    }
}

public function getTipoUniformes()
{
    $listaTiposUniformes = array();
    $sql                 = "SELECT idTipoUniforme,codigoUniforme,descripcionTipo FROM catalogotiposuniforme";
        // $this -> logger -> LogInfo ("Se ejecuto consulta consultaProveedores como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaTiposUniformes[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaTiposUniformes;
}

public function generarFacturaUniforme($folioFactura, $mercanciaEntregada, $fechaEntrega, $tipoPago, $descripcionPago, $totalFactura, $proveedor, $lineaNegocio, $facturaPagada, $fechaPago)
{

    $sql = "INSERT INTO facturauniforme VALUES ('" . mysqli_real_escape_string($this->conn, $folioFactura) . "',now(),
    '" . mysqli_real_escape_string($this->conn, $mercanciaEntregada) . "',CAST('" . $this->safeValue($fechaEntrega) . "' AS DATE),'"
    . mysqli_real_escape_string($this->conn, $tipoPago) . "','" . mysqli_real_escape_string($this->conn, $descripcionPago) . "','"
    . mysqli_real_escape_string($this->conn, $totalFactura) . "','"
    . mysqli_real_escape_string($this->conn, $proveedor) . "','" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "','"
    . mysqli_real_escape_string($this->conn, $facturaPagada) . "'";
    if($fechaPago ==""){
        $sql.= " , null)";
    }else{
        $sql.= " , CAST('" . $this->safeValue($fechaPago) . "' AS DATE))";
    }

    $res = mysqli_query($this->conn, $sql);

        //$this -> logger -> LogInfo ("Se ejecuto consulta newFacturaUniforme como " . $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar factura.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function insertarCompraUniformes($idFactura, $claveUniforme, $cantidadUniforme, $precioUniforme)
{
    $sql = "INSERT INTO comprauniforme VALUES ('" . mysqli_real_escape_string($this->conn, $idFactura) . "',
    '" . mysqli_real_escape_string($this->conn, $claveUniforme) . "'," . $this->safeValue($cantidadUniforme) . ","
    . mysqli_real_escape_string($this->conn, $precioUniforme) . ")";

    $res = mysqli_query($this->conn, $sql);

        //$this -> logger -> LogInfo ("Se ejecuto consulta insertarCompra como " . $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar factura.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function insertarStockUniforme($claveUniforme, $entidadUniforme, $cantidadUniformes,$sucursalProducto){
    

    $sql = "SELECT * 
            FROM stockuniforme
            WHERE claveUniforme='" . mysqli_real_escape_string($this->conn, $claveUniforme) . "' 
            AND entidadUniforme='" . mysqli_real_escape_string($this->conn, $entidadUniforme) . "'
            AND sucursalUniformeStock='" . mysqli_real_escape_string($this->conn, $sucursalProducto) . "'";

    $res = mysqli_query($this->conn, $sql);
    $this -> logger -> LogInfo ("Se ejecuto consulta SELECT como " . $sql);

    if ((($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)))) {
        $sql = "UPDATE stockUniforme 
                SET cantidadUniformes=cantidadUniformes+" . mysqli_real_escape_string($this->conn, $cantidadUniformes) . "
                WHERE claveUniforme='" . mysqli_real_escape_string($this->conn, $claveUniforme) . "' 
                AND entidadUniforme='" . mysqli_real_escape_string($this->conn, $entidadUniforme) . "'
                AND sucursalUniformeStock='" . mysqli_real_escape_string($this->conn, $sucursalProducto) . "'";
        $this -> logger -> LogInfo ("Se ejecuto consulta IF como " . $sql);

        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al ACTUALIZAR STOCK.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }else{
        $sql = "INSERT INTO stockuniforme 
                VALUES ('" . mysqli_real_escape_string($this->conn,$claveUniforme) . "',
                        '" . mysqli_real_escape_string($this->conn,$entidadUniforme) . "',
                         " . mysqli_real_escape_string($this->conn, $cantidadUniformes) . ",
                         " . mysqli_real_escape_string($this->conn, $sucursalProducto) . ")";
        $this -> logger -> LogInfo ("Se ejecuto consulta ESLE como " . $sql);

        $res = mysqli_query($this->conn, $sql);
        if ($res !== true){
            $this->logger->LogInfo("Ocurrio un error al INSERTAR STOCK.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }
}

public function obtenerFacturas(){

    $listaFacturas = array();
    $sql           = "SELECT idFactura,fechaFactura,mercanciaEntregada,fechaMercanciaEntregada,formaPagoFactura,descripcionPago,totalFactura,nombreProveedor,descripcionLineaNegocio,facturaPagada,fechaPagoFactura,upper(nombreEntidadFederativa) as nombreEntidadFederativa, upper(si.nombreSucursal) as nombreSucursal
                      FROM facturaUniforme fu
                      INNER JOIN proveedores ON (idProveedorFactura=idProveedor) 
                      INNER JOIN catalogolineanegocio on (idLineaNegocioF=idLineaNegocio)
                      LEFT JOIN entidadesfederativas ef on (fu.entidadArecibir=ef.idEntidadFederativa)
                      LEFT JOIN sucursalesinternas si on (fu.sucursalArecibir=si.idSucursalI)
                      ORDER BY fechaFactura DESC";
        //$this -> logger -> LogInfo ("Se ejecuto consulta consultaFactura como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaFacturas[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaFacturas ".var_export ($listaFacturas, true));
    return $listaFacturas;
}

public function obtenerDetalleFactura($idFactura)
{

    $lista = array();

    try {

        $sql = "select codigoUniforme,descripcionTipo,cantidadUniforme,precioUniforme from catalogotiposuniforme inner join comprauniforme ON (claveUniformeCompra=idTipoUniforme) WHERE idFacturaCompra='" . mysqli_real_escape_string($this->conn, $idFactura) . "'";

            //$this -> logger -> LogInfo ("ejecutando selectCompraFactura en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function obtenerStatusFactura($idFactura)
{

    try {

        $sql = "select mercanciaEntregada,facturaPagada from facturauniforme WHERE idFactura='" . mysqli_real_escape_string($this->conn, $idFactura) . "'";

            //$this -> logger -> LogInfo ("ejecutando selectFactura en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        if (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $estado = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la estado ".var_export ($estado, true));

        return $estado;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function updateFactura($facturaId, $dato, $datoFecha, $estatusTipoMercancia,$campoEdicion){
        //$this -> logger -> LogInfo ("Ejecutando. updateRequisicion en persistencia");
    $sql = "UPDATE facturauniforme " .
           "SET " . mysqli_real_escape_string($this->conn, $dato) . "='$estatusTipoMercancia',
           " . mysqli_real_escape_string($this->conn, $datoFecha) . "=now(),
           " . mysqli_real_escape_string($this->conn, $campoEdicion) . "=now()
           WHERE idFactura='" . mysqli_real_escape_string($this->conn, $facturaId) . "'";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  updateFactura como " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al updateFactura .");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function agregarNuevoUniforme($lineaNegocio,$tipoMercancia,$codidoTipoUniforme, $descripcionUniforme,$LavanderiaR1,$LavanderiaR2,$LavanderiaR3,$LavanderiaR4,$LavanderiaR5,$LavanderiaR6,$DestruccionR1,$DestruccionR2,$DestruccionR3,$DestruccionR4,$DestruccionR5,$DestruccionR6,$CobroR1,$CobroR2,$CobroR3,$CobroR4,$CobroR5,$CobroR6){

    $sql = "INSERT INTO catalogotiposuniforme(idTipoUniforme,
                                              lineaNegocioUni,
                                              idTipoMercancia,
                                              codigoUniforme,
                                              descripcionTipo,
                                              porcentajeLAVANDERIArango1,
                                              porcentajeLAVANDERIArango2,
                                              porcentajeLAVANDERIArango3,
                                              porcentajeLAVANDERIArango4,
                                              porcentajeLAVANDERIArango5,
                                              porcentajeLAVANDERIArango6,
                                              porcentajeDESTRUCCIONRango1,
                                              porcentajeDESTRUCCIONRango2,
                                              porcentajeDESTRUCCIONRango3,
                                              porcentajeDESTRUCCIONRango4,
                                              porcentajeDESTRUCCIONRango5,
                                              porcentajeDESTRUCCIONRango6,
                                              porcentajeCOBRORango1,
                                              porcentajeCOBRORango2,
                                              porcentajeCOBRORango3,
                                              porcentajeCOBRORango4,
                                              porcentajeCOBRORango5,
                                              porcentajeCOBRORango6) 
            VALUES (NULL,
                   '$lineaNegocio',
                   '$tipoMercancia', 
                   '$codidoTipoUniforme', 
                   '$descripcionUniforme',
                   '$LavanderiaR1',
                   '$LavanderiaR2',
                   '$LavanderiaR3',
                   '$LavanderiaR4',
                   '$LavanderiaR5',
                   '$LavanderiaR6',
                   '$DestruccionR1',
                   '$DestruccionR2',
                   '$DestruccionR3',
                   '$DestruccionR4',
                   '$DestruccionR5',
                   '$DestruccionR6',
                   '$CobroR1',
                   '$CobroR2',
                   '$CobroR3',
                   '$CobroR4',
                   '$CobroR5',
                   '$CobroR6')";

    $res = mysqli_query($this->conn, $sql);
    if($res !== true){
       $this->logger->LogInfo("Ocurrio un error al insertar.");
       $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
       $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function uniformesPorEntidad($entidad, $tipoUniforme, $cantidadUniforme,$sucursalUnifAsigTMP)
{
 //$this-> logger -> LogInfo("uniformesPorEntidad");
 $result = false;
 $sql = "SELECT cantidadUniformes 
         FROM stockuniforme 
         WHERE claveUniforme=" . mysqli_real_escape_string($this->conn, $tipoUniforme) . " 
         AND entidadUniforme='" . $entidad . "'
         AND sucursalUniformeStock='" . $sucursalUnifAsigTMP . "'";
         //$this -> logger -> LogInfo ("Ejecutando: uniformesPorEntidad " . $sql);
 $res = mysqli_query($this->conn, $sql);
 $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);
   if($reg["cantidadUniformes"] >= $cantidadUniforme){
      $result = true;
     }
     //$this -> logger -> LogInfo ("el existeRfcEmpleado '" . $rfcEmp . "' " . ($result ? "existe" : "no existe"));
 return $result;
}

public function obtenerUniformesPorEntidad($entidad, $tipoUniforme,$sucursalStock)
{
        //$this-> logger -> LogInfo("existeRfcEmpleado");
    $result = 0;
    $sql = "SELECT IFNULL(sum(cantidadUniformes), 0) as cantidadUniformes 
            FROM stockuniforme
            WHERE claveUniforme=" . mysqli_real_escape_string($this->conn, $tipoUniforme) . " 
            AND entidadUniforme='" . $entidad . "'
            AND sucursalUniformeStock='$sucursalStock'";
        // $this -> logger -> LogInfo ("Ejecutando: obtenerUniformes " . $sql);
    $res = mysqli_query($this->conn, $sql);
    $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);
    if ($reg["cantidadUniformes"] != null) {
        $result = $reg["cantidadUniformes"];
    }
        //$this -> logger -> LogInfo ("Se ejecuto consulta obtenerUniformes como " . $sql);
    return $result;
}

public function asignarUniforme($nombreGuardia,$idUniforme, $cantidadUni, $empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria, $usuarioCaptura,$maxid,$codigoUnif,$talla,$descripcionTipoUnif,$EntidadEmpleadoUSR,$numEmpAlmacen,$FirmaEmpAlmacen,$FirmaGuardia,$NombreEmpAlmacen,$costoIngresado1,$tipoUniforme,$i,$asignacionSup,$entidadUniforme,$sucursalUnifAsigTMP){

 if($tipoUniforme!=5 && $asignacionSup==0) {
     $sql = "INSERT INTO asignacion_uniforme (claveUniAsignacion,cantidadUniforme,entidadEmpAsignacion,consecutivoEmpAsignacion,categoriaEmpAsignacion,fechaAsignacion,usuarioAsignacion) VALUES (" . $idUniforme . "," . $cantidadUni . ",'" . $empleadoEntidad . "','" . $empleadoConsecutivo . "','" . $empleadoCategoria . "',now(),'" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "')";
         $this -> logger -> LogInfo ("Se ejecuto consulta asignarUniformeNOSUP " . $sql);
         $res = mysqli_query($this->conn, $sql);
    if($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al asignarUniforme.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
      }
  }else if($asignacionSup==1){//actualizar crear el campo de sucursal para plantilla
           $sql="INSERT INTO asignacion_uniforme_Supervisores(entidadUniformeAsigSup,sucursalUniformeAsigSup,TipoUniAsignacionSup,claveUniAsignacionSup, cantidadUniformeSup,cantidadUniformeSupINICIAL, entidadSupAsignacion, consecutivoSupAsignacion, categoriaSupAsignacion, fechaAsignacionASup, usuarioAsignacionASup,EstatusAsignacionASup,costoUniformeINICIAL,costoUniformeACTUALIZADO,NoOrden) VALUES ('" . mysqli_real_escape_string($this->conn, $entidadUniforme) . "','" . mysqli_real_escape_string($this->conn, $sucursalUnifAsigTMP) . "','" . mysqli_real_escape_string($this->conn, $tipoUniforme) . "'," . $idUniforme . "," . $cantidadUni . "," . $cantidadUni . ",'" . $empleadoEntidad . "','" . $empleadoConsecutivo . "','" . $empleadoCategoria . "',now(),'" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "','0','" . mysqli_real_escape_string($this->conn, $costoIngresado1) . "','" . mysqli_real_escape_string($this->conn, $costoIngresado1) . "','" . mysqli_real_escape_string($this->conn, $maxid) . "')";
                $this -> logger -> LogInfo ("Se ejecuto consulta asignarUniforme sup " . $sql);
                $res = mysqli_query($this->conn, $sql);
           if($res !== true) {
               $this->logger->LogInfo("Ocurrio un error al asignarUniforme.");
               $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
               $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
             }
           //actualizar crear el campo de sucursal
           $sql1="INSERT INTO historico_Almacen(ordenID,nombreHA,entidadEmpAlm,ConsecutivoEmpAlm,CategoriaEmpAlm,claveUniAsignacionHis,codigoUnifAsig,tallaUniforme,descripcionUnif,cantidadUniformeHis,EntidadUniforme,sucursalUniforme,montoDeudaHA,fechaAsignacionHis,usuarioAsignacionHis,tipoMovimiento,nombreEmpAlm,entidadEmpAlmAsig,numempAlm,firmaEmpAlmacen,firmaGuardia) VALUES('$maxid','$nombreGuardia','$empleadoEntidad','$empleadoConsecutivo','$empleadoCategoria','$idUniforme','$codigoUnif','$talla','$descripcionTipoUnif','$cantidadUni','$entidadUniforme','$sucursalUnifAsigTMP','$costoIngresado1',now(),'" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "','3','$NombreEmpAlmacen','$EntidadEmpleadoUSR','$numEmpAlmacen','$FirmaEmpAlmacen','$FirmaGuardia')";
                $this -> logger -> LogInfo ("Se ejecuto consulta asignarUniforme historicoSup " . $sql1);
                $res1 = mysqli_query($this->conn, $sql1);
               if($res1 !== true) {
                   $this->logger->LogInfo("Ocurrio un error al insertar en el historico movimiento 3");
                   $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                   $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
               }
    }

    if ($asignacionSup==0) {//para uso propio
        $sql1="INSERT INTO historico_Almacen(ordenID,nombreHA,entidadEmpAlm,ConsecutivoEmpAlm,CategoriaEmpAlm,claveUniAsignacionHis,codigoUnifAsig,tallaUniforme,descripcionUnif,cantidadUniformeHis,EntidadUniforme,sucursalUniforme,montoDeudaHA,fechaAsignacionHis,usuarioAsignacionHis,tipoMovimiento,nombreEmpAlm,entidadEmpAlmAsig,numempAlm,firmaEmpAlmacen,firmaGuardia) values('$maxid','$nombreGuardia','$empleadoEntidad','$empleadoConsecutivo','$empleadoCategoria','$idUniforme','$codigoUnif','$talla','$descripcionTipoUnif','$cantidadUni','$entidadUniforme','$sucursalUnifAsigTMP','$costoIngresado1',now(),'" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "','1','$NombreEmpAlmacen','$EntidadEmpleadoUSR','$numEmpAlmacen','$FirmaEmpAlmacen','$FirmaGuardia')";
          $this -> logger -> LogInfo ("Se ejecuto consulta asignarUniforme 0 " . $sql1);
         $res1 = mysqli_query($this->conn, $sql1);
        if($res1 !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar en el historico movimiento 1");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    if($i=="0"){//con el adm en platilla no hizo nada
        $sql2 = "UPDATE SolicitudUniformesAlmacen 
            SET EstatusSolUniforme='0'
            WHERE EntidadSolUniforme='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
            and ConsecutivoSolUniforme='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
            and CategoriaSolUniforme='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'";
       $this -> logger -> LogInfo ("Se ejecuto consulta SolicitudUniformesAlmacen como " . $sql2);
    $res2 = mysqli_query($this->conn, $sql2);
    if($res2 !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar la solicitud.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
      }
    }
}

public function actualizarStock($idUniforme, $cantidadUni, $entidadUniforme,$sucursalUnifAsigTMP)
{
    $sql = "UPDATE stockuniforme 
            SET cantidadUniformes=cantidadUniformes-" . $cantidadUni . " 
            WHERE claveUniforme=" . $idUniforme . " 
            AND entidadUniforme='" . mysqli_real_escape_string($this->conn, $entidadUniforme) . "'
            AND sucursalUniformeStock='$sucursalUnifAsigTMP'";
        $this -> logger -> LogInfo ("Se ejecuto consulta actualizarStock como " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizarStock.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function obtenerStockUniforme(){
    $listaProveedores = array();
    $sql              = "select ctu.codigoUniforme as tipoUniforme,
                                ctu.descripcionTipo as descripcionUniforme,
                                ef.nombreEntidadFederativa as entidadUniforme,
                                su.cantidadUniformes as cantidadUniformes,
                                ctu.costoUniforme,
                                (ctu.costoUniforme*su.cantidadUniformes) as totalCosto,
                                si.nombreSucursal   
                                FROM catalogotiposuniforme ctu 
                                NATURAL JOIN stockuniforme su 
                                LEFT JOIN entidadesfederativas ef ON (ef.idEntidadFederativa= su.entidadUniforme) 
                                LEFT JOIN sucursalesinternas si on (su.sucursalUniformeStock=si.idSucursalI)
                                WHERE su.claveUniforme=ctu.idTipoUniforme";
        // $this -> logger -> LogInfo ("Se ejecuto consulta obtenerStockUniforme como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaProveedores[] = $reg;
        }
    }
    //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaProveedores;
}

public function obtenerAsignaciones()
{

    $listaAsignaciones = array();
    $sql               = "select concat_ws('-', au.entidadEmpAsignacion,au.consecutivoEmpAsignacion,au.categoriaEmpAsignacion) as numeroEmpleado,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado,ef.nombreEntidadFederativa as entidadTrabajo,ctu.codigoUniforme,ctu.descripcionTipo,ctu.costoUniforme,au.claveUniAsignacion as idUniforme,(au.cantidadUniforme*ctu.costoUniforme) as totalAsignacion,au.cantidadUniforme,au.fechaAsignacion,cc.razonSocial as cliente,cps.puntoServicio from asignacion_uniforme au LEFT JOIN empleados e ON (au.entidadEmpAsignacion=e.entidadFederativaId and au.consecutivoEmpAsignacion=e.empleadoConsecutivoId and au.categoriaEmpAsignacion=e.empleadoCategoriaId) LEFT JOIN entidadesfederativas ef ON (e.idEntidadTrabajo=ef.idEntidadFederativa) LEFT JOIN catalogopuntosservicios cps ON (e.empleadoIdPuntoServicio=cps.idPuntoServicio) LEFT JOIN catalogoclientes cc ON(cps.idClientePunto=cc.idCliente) LEFT JOIN catalogotiposuniforme ctu ON (au.claveUniAsignacion=ctu.idTipoUniforme)";
        // $this -> logger -> LogInfo ("Se ejecuto consulta consultaProveedores como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaAsignaciones[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaAsignaciones;

}

public function getListaEmpleadosNominaPorPuntoServicio($fecha1, $fecha2, $puntoServicioId, $puestoCubierto, $roloperativo)
{

       // $this-> logger -> LogInfo("getListaGeneralEmpleados");

    $lista = array();

    $sql = "select DISTINCT a. empleadoEntidad
    , a.empleadoConsecutivo
    , a.empleadoTipo
    , a.puntoServicioAsistenciaId
    ,ifnull(ce.sueldoEmpleado,0) as sueldoEmpleado
    ,ifnull(ce.cuotaDiariaEmpleado,0) as cuotaDiariaEmpleado
    ,ifnull(ce.bonoAsistenciaEmpleado,0) as bonoAsistenciaEmpleado
    ,ifnull(ce.bonoPuntualidadEmpleado,0) as bonoPuntualidadEmpleado
    from asistencia a
    left join  empleados e on (a.empleadoEntidad=e.entidadFederativaId and a.empleadoConsecutivo = e.empleadoConsecutivoId and a.empleadoTipo=e.empleadoCategoriaId)
    left join cuotas_empleados ce on (ce.empleadoEntidadCuota=e.entidadFederativaId and ce.empleadoConsecutivoCuota=e.empleadoConsecutivoId and ce.empleadoCategoriaCuota=e.empleadoCategoriaId)
    left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
    where
    a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and a.puntoServicioAsistenciaId=" . $this->safeValue($puntoServicioId) . " and puestoCubiertoId=" . $puestoCubierto . "
    and a.roloperativo='" . $this->safeValue($roloperativo) . "'";

        //$this -> logger -> LogInfo ("Ejecutando getListaEmpleadosNominaPunto: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getSumaDiasFestivos2($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $puntoServicio, $puestoCubierto)
{

        //$this-> logger -> LogInfo("getSumaDiasFestivos");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , count(cie.valorIncidenciaEspecial) as diasFestivos
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "' and incidenciaPuntoServicio=" . $puntoServicio . "
    and ie.incidenciaId=5 and incidenciaPuesto=" . $puestoCubierto . "";

        //$this -> logger -> LogInfo ("Ejecutando getSumaDiasFestivos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["diasFestivos"] = $reg["diasFestivos"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getAsistenciaByEmpleadoPeriodo2($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $puntoServicioId, $puestoCubierto)
{

        //$this-> logger -> LogInfo("getAsistenciaByEmpleadoPeriodo");

    $lista = array();

    $sql = "select a. empleadoEntidad
    , a.empleadoConsecutivo
    , a.empleadoTipo
    , a.puntoServicioAsistenciaId
    , a.incidenciaAsistenciaId
    , a.comentarioIncidencia
    , ci.nomenclaturaIncidencia
    , ci.descripcionIncidencia
    ,ci.valorAsistencia
    , a.fechaAsistencia
    , cps.puntoServicio
    ,a.puestoCubiertoId
    ,cp.descripcionPuesto
    from asistencia a
    left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
    left join catalogopuestos cp on (cp.idPuesto=a.puestoCubiertoId)
    where
    a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and a.empleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and a.empleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and a.empleadoTipo='" . $this->safeValue($empleadoTipo) . "' and puntoServicioAsistenciaId=" . $puntoServicioId . " and puestoCubiertoId=" . $puestoCubierto . "";

        //$this -> logger -> LogInfo ("Ejecutando getAsistenciaByEmpleadoPeriodo: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getSumaTurnosExtrasPorPunto($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $puntoServicioId, $puestoCubierto)
{

        //$this-> logger -> LogInfo("getSumaTurnosExtras");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , sum(cie.valorIncidenciaEspecial) as sumaTurnosExtras
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "' and incidenciaPuntoServicio=" . $puntoServicioId . "
    and (ie.incidenciaId=1 or ie.incidenciaId=6) 
    and incidenciaPuesto=" . $puestoCubierto . "";

        //$this -> logger -> LogInfo ("Ejecutando getSumaTurnosExtras: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["sumaTurnosExtras"] = $reg["sumaTurnosExtras"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getSumDescuentosPorPunto($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $puntoServicioId, $puestoCubierto)
{

        //$this-> logger -> LogInfo("getSumDescuentos");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , sum(cie.valorIncidenciaEspecial) as descuentos
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "' and incidenciaPuntoServicio=" . $puntoServicioId . "
    and ie.incidenciaId=4 and incidenciaPuesto=" . $puestoCubierto . "";

        //$this -> logger -> LogInfo ("Ejecutando getSumDescuentos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["descuentos"] = $reg["descuentos"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getSumaIncidenciasEspecialesPorPunto($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $puntoServicioId, $puestoCubierto)
{

        //$this-> logger -> LogInfo("getSumaIncidenciasEspeciales");

    $lista = array();

    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , count(cie.valorIncidenciaEspecial) as incidenciasEspeciales
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "' and incidenciaPuntoServicio=" . $puntoServicioId . "
    and ie.incidenciaId<>4 and ie.incidenciaId<>1 and ie.incidenciaId<>5 and incidenciaPuesto=" . $puestoCubierto . "";

        //$this -> logger -> LogInfo ("Ejecutando getSumaIncidenciasEspeciales: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["incidenciasEspeciales"] = $reg["incidenciasEspeciales"];
        }
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

public function getEmpleadosClienteEntidad($idCliente,$fechaPeriodo1,$fechaPeriodo2)
{

    $lista = array();

    $sql = "select concat_ws('-', e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado,e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId,ef.nombreEntidadFederativa as entidadT,cpu.descripcionPuesto as puesto,ct.descripcionTurno as turnoEmpleado,cp.puntoServicio,di.registroPatronal,di.fechaImss,di.empleadoEstatusImss,di.fechaBajaImss,datediff(now(), di.fechaImss) as diasTranscurridos,di.salarioDiario
    ,e.empleadoNumeroSeguroSocial,cp.numeroCentroCosto,cm.nombreMunicipio,cp.unidad,dp.curpEmpleado,dp.rfcEmpleado
    from empleados e
    left join catalogopuntosservicios cp on (e.empleadoIdPuntoServicio=cp.idPuntoServicio)
    left join datosimss di ON (e.entidadFederativaId=di.empladoEntidadImss AND e.empleadoConsecutivoId=di.empleadoConsecutivoImss AND e.empleadoCategoriaId=di.empleadoCategoriaImss)
    left join entidadesfederativas ef ON (e.idEntidadTrabajo=ef.idEntidadFederativa)
    left join catalogoclientes cc on (cp.idClientePunto=cc.idCliente)
    left join catalogopuestos cpu on (e.empleadoIdPuesto=cpu.idPuesto)
    left join catalogoTurnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
    left join catalogomunicipios cm on(cm.idMunicipio=cp.municipiodelegacion)
    left join datospersonales dp ON (e.entidadFederativaId=dp.empleadoEntidadPersonal AND e.empleadoConsecutivoId=dp.empleadoConsecutivoPersonal AND e.empleadoCategoriaId=dp.empleadoCategoriaPersonal)
    where ((di.empleadoEstatusImss=7 AND di.fechaBajaImss >= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' AS DATE) 
    AND di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE)) 
    OR (di.empleadoEstatusImss=3 AND di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE) ))";

    if($idCliente!=2){

     $sql.=" and cc.idCliente=" . $idCliente . " ";       
 }
 $sql.=" order by puntoServicio,nombreEmpleado";

 // $this -> logger -> LogInfo ("Ejecutando getEmpleadosByClienteEntidad: " . $sql);

 $res = mysqli_query($this->conn, $sql);

 if (!is_bool($res)) {
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $lista[] = $reg;
    }
}

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

return $lista;

}

public function registrarTransferencia($entidadOrigen, $entidadDestino, $guia, $paqueteria, $observaciones, $usuarioCaptura,$sucursalEnvio,$sucursalOrigen)
{

    $sql = "insert into transferencias_uniformes(entidadOrigen,entidadDestino,sucursalOrigen,sucursalDestino,fechaTransferenciaEnvio,nGuiaTransferencia,proveedorPaqueteria,observacionesTransferencia,usuarioTransferencia,idEstatusTransfer) values (";
    $sql .= "'" . $this->safeValue($entidadOrigen) . "',";
    $sql .= "'" . $this->safeValue($entidadDestino) . "',";
    $sql .= "'" . $this->safeValue($sucursalOrigen) . "',";
    $sql .= "'" . $this->safeValue($sucursalEnvio) . "',now(),";
    $sql .= "'" . $this->safeValue($guia) . "',";
    $sql .= "'" . $this->safeValue($paqueteria) . "',";
    $sql .= "'" . $this->safeValue($observaciones) . "',";
    $sql .= "'" . $this->safeValue($usuarioCaptura) . "',";
    $sql .= "1)";

       $this -> logger -> LogInfo ("Ejecutando SQL: registrarTransferencia " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar registrar transferencia.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function getTransferGeneralesByFecha($fecha1, $fecha2)
{

     //   $this-> logger -> LogInfo("getTransferGeneralesByFecha");

    $lista = array();

    $sql = "select t.idTransferencia,t.fechaTransferenciaEnvio,t.fechaTransferenciaRecepcion,
    t.nGuiaTransferencia,t.proveedorPaqueteria,t.observacionesTransferencia,t.usuarioTransferencia,
    cet.estatusTransfer,ef.nombreEntidadFederativa as entidadDestino
    from transferencias_uniformes t
    left join entidadesfederativas ef ON (t.entidadDestino=ef.idEntidadFederativa)
    left join catalogoestatustransferencias cet ON (t.idEstatusTransfer=cet.idEstatusTransfer)
    where
    t.fechaTransferenciaEnvio between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    ";

    //    $this -> logger -> LogInfo ("Ejecutando getTransferGeneralesByFecha: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getTransferGeneralesByEntidad($entidad)
{

    //$this-> logger -> LogInfo("getTransferGeneralesByEntidad");

    $lista = array();

    $sql = "select t.idTransferencia,t.fechaTransferenciaEnvio,t.fechaTransferenciaRecepcion,
    t.nGuiaTransferencia,t.proveedorPaqueteria,t.observacionesTransferencia,t.usuarioTransferencia,
    cet.estatusTransfer,ef.nombreEntidadFederativa as entidadDestino,t.entidadDestino as identidadDestino
    from transferencias_uniformes t
    left join entidadesfederativas ef ON (t.entidadDestino=ef.idEntidadFederativa)
    left join catalogoestatustransferencias cet ON (t.idEstatusTransfer=cet.idEstatusTransfer)
    where (";

    for($i=0;$i<count($entidad);$i++){
                if(!is_array($entidad)){
                    $entidadparaconsulta=$entidad;
                }else{
                    $entidadparaconsulta=$entidad[$i];
                }
                if($i==0){
                    $sql.=" t.entidadDestino='$entidadparaconsulta'";
                }else{
                    $sql.=" or t.entidadDestino='$entidadparaconsulta'";
                }
            }
            $sql.=" ) ORDER BY t.fechaTransferenciaEnvio desc";

    // $this -> logger -> LogInfo ("Ejecutando getTransferGeneralesByEntidad: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getTransferGeneralesByFechaEntidad($fecha1, $fecha2, $entidad)
{

    //    $this-> logger -> LogInfo("getTransferGeneralesByFechaEntidad");

    $lista = array();

    $sql = "select t.idTransferencia,t.fechaTransferenciaEnvio,t.fechaTransferenciaRecepcion,
    t.nGuiaTransferencia,t.proveedorPaqueteria,t.observacionesTransferencia,t.usuarioTransferencia,
    cet.estatusTransfer,ef.nombreEntidadFederativa as entidadDestino
    from transferencias_uniformes t
    left join entidadesfederativas ef ON (t.entidadDestino=ef.idEntidadFederativa)
    left join catalogoestatustransferencias cet ON (t.idEstatusTransfer=cet.idEstatusTransfer)
    where
    t.fechaTransferenciaEnvio between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE) and t.entidadDestino='" . $entidad . "'";

  //  $this -> logger -> LogInfo ("Ejecutando getTransferGeneralesByFechaEntidad: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getTransferGenerales()
{

       // $this-> logger -> LogInfo("getTransferGeneralesByFechaEntidad");

    $lista = array();

    $sql = "select t.idTransferencia,t.fechaTransferenciaEnvio,t.fechaTransferenciaRecepcion,
    t.nGuiaTransferencia,t.proveedorPaqueteria,t.observacionesTransferencia,t.usuarioTransferencia,
    cet.estatusTransfer,ef.nombreEntidadFederativa as entidadDestino
    from transferencias_uniformes t
    left join entidadesfederativas ef ON (t.entidadDestino=ef.idEntidadFederativa)
    left join catalogoestatustransferencias cet ON (t.idEstatusTransfer=cet.idEstatusTransfer) ";

  //  $this->logger->LogInfo("Ejecutando getTransferGenerales: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function negocio_obtenerFormasDePago()
{

        //$this-> logger -> LogInfo("");

    $lista = array();

    $sql = "SELECT idFormaPago,descripcionFormaPago FROM catalogoformapagos;";

        //$this -> logger -> LogInfo ("Ejecutando getTransferGenerales: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function negocio_obtenerPlazosCredito()
{

        //$this-> logger -> LogInfo("");

    $lista = array();

    $sql = "SELECT idPlazo,descripcionPlazo FROM plazozcredito;";

        //$this -> logger -> LogInfo ("Ejecutando getTransferGenerales: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function obtenerBancosEmpresa()
{

    $listaBancos = array();
    $sql         = "SELECT idCuentaBanco,nombreBanco,razonSocialBanco FROM bancos_empresa ORDER BY nombreBanco";
        // $this -> logger -> LogInfo ("Se ejecuto consulta consultaProveedores como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaBancos[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaBancos;
}

public function obtenerCardexEmpleado($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria)
{

    $listaAsignaciones = array();
    $sql               = "SELECT ctu.codigoUniforme,
                          ctu.idTipoMercancia,
                          ctu.descripcionTipo as descUniforme,
                          au.claveUniAsignacion as idUniforme,
                          au.cantidadUniforme,
                          au.fechaAsignacion,
                          ctu.costoUniforme,
                          ctu.costoUniforme as costoReal
                          FROM asignacion_uniforme au 
                          LEFT JOIN catalogotiposuniforme ctu ON (au.claveUniAsignacion=ctu.idTipoUniforme) 
                          WHERE entidadEmpAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "' 
                          AND consecutivoEmpAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "' 
                          AND categoriaEmpAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "' 
                          and ctu.idTipoMercancia!= '5'";//aqui
        //$this -> logger -> LogInfo ("Se ejecuto consulta consulta cardex como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaAsignaciones[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaAsignaciones;

}

public function getTiposMercancia()
{
    $listaTiposM = array();
    $sql         = "SELECT idTipoMercancia,descripcionTipoMercancia FROM catalogotiposmercancia";
        // $this -> logger -> LogInfo ("Se ejecuto consulta consultaProveedores como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaTiposM[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaTiposM;
}

public function recibirUniformeEmpleado($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria, $idUniforme, $fechaAsignacion)
{

    $sql = "UPDATE asignacion_uniforme SET cantidadUniforme=cantidadUniforme-1 
            WHERE claveUniAsignacion=" . $idUniforme . " 
            AND entidadEmpAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "' 
            AND consecutivoEmpAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "' 
            AND categoriaEmpAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "' 
            AND fechaAsignacion=CAST('" . $this->safeValue($fechaAsignacion) . "' AS DATE)
            LIMIT 1";

        //$this -> logger -> LogInfo ("Se ejecuto consulta recibirUniforme como " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al recibir uniforme.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function actualizarAsignacionesStored($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria,$fechaAsignacion, $idUniforme, $estatusRecibo, $usuarioCaptura, $entidadRecepcion,$codigoUniforme,$talla,$descripcionUni,$montoDur,$NombreEmp,$FirmaEmp,$FirmaGuardia,$orden,$NombreGuardia,$NumeroEmpFirma,$porcentajeCobrado,$precioDelUniforme,$coberturaEmpleado,$sucursalUsr){

      //  $this -> logger -> LogInfo ("Ejecutando. actualizarAsignacionesStored en persistencia");

    $sql = "call actualizar_asignacion_empleado('" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "','" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "','" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "','" . mysqli_real_escape_string($this->conn, $fechaAsignacion) . "'," . mysqli_real_escape_string($this->conn, $idUniforme) . "," . mysqli_real_escape_string($this->conn, $estatusRecibo) . ",'" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "','" . mysqli_real_escape_string($this->conn, $entidadRecepcion) . "','" . mysqli_real_escape_string($this->conn, $sucursalUsr) . "')";

        $this -> logger -> LogInfo ("Se ejecuto consulta  callActualizarAsignacion como " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar Asignaciones.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
$sql1="insert into historico_Almacen (ordenID,
                                      nombreHA,
                                      entidadEmpAlm,
                                      ConsecutivoEmpAlm,
                                      CategoriaEmpAlm,
                                      idUniformeRecibidoHis,
                                      codigoUnifAsig,
                                      tallaUniforme,
                                      descripcionUnif,
                                      cantidadUniformeHis,
                                      montoDeudaHA,
                                      porcentajeCobrado,
                                      precioUniforme,
                                      coberturaAlRecibirHA,
                                      estatusUniformeRecibido,
                                      entidadRecepcionHis,
                                      sucursalRecepcionHis,
                                      fechaRecibidoHis,
                                      usuarioRecepcionHis,
                                      tipoMovimiento,
                                      nombreEmpAlm,
                                      numempAlm,
                                      firmaEmpAlmacen,
                                      firmaGuardia) 
                                      
        values ('" . mysqli_real_escape_string($this->conn, $orden) . "',
                '" . mysqli_real_escape_string($this->conn, $NombreGuardia) . "',
                '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "',
                '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "',
                '" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "',
                '" . mysqli_real_escape_string($this->conn, $idUniforme) . "',
                '" . mysqli_real_escape_string($this->conn, $codigoUniforme) . "',
                '" . mysqli_real_escape_string($this->conn, $talla) . "',
                '" . mysqli_real_escape_string($this->conn, $descripcionUni) . "',
                '1',
                '" . mysqli_real_escape_string($this->conn, $montoDur) . "',
                '" . mysqli_real_escape_string($this->conn, $porcentajeCobrado) . "',
                '" . mysqli_real_escape_string($this->conn, $precioDelUniforme) . "',
                '" . mysqli_real_escape_string($this->conn, $coberturaEmpleado) . "',
                '" . mysqli_real_escape_string($this->conn, $estatusRecibo) . "',
                '" . mysqli_real_escape_string($this->conn, $entidadRecepcion) . "',
                '" . mysqli_real_escape_string($this->conn, $sucursalUsr) . "',
                now(),
                '" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "',
                '2',
                '" . mysqli_real_escape_string($this->conn, $NombreEmp) . "',
                '" . mysqli_real_escape_string($this->conn, $NumeroEmpFirma) . "',
                '" . mysqli_real_escape_string($this->conn, $FirmaEmp) . "',
                '" . mysqli_real_escape_string($this->conn, $FirmaGuardia) . "')";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarAsignacionesStored como " . $sql1);

        $res1 = mysqli_query($this->conn, $sql1);
        if($res1 !== true) {
          $this->logger->LogInfo("Ocurrio un error al actualizar historico movimiento 2.");
          $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
          $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
}

/*public function consultaUniformesRecibidosByFecha1($fecha1, $fecha2, $tipo)
{
    $listaRecibidos = array();
    $sql            = "SELECT bu.incremetBajauniforme,ctu.idTipoUniforme,ctu.codigoUniforme,ctu.descripcionTipo,concat( e.entidadFederativaId,\"-\", e.empleadoConsecutivoId,\"-\", e.empleadoCategoriaId ) AS numeroEmpleado,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado,bu.fechaRecibido,bu.usuarioRecepcion FROM bajas_uniforme bu
    LEFT JOIN catalogotiposuniforme ctu ON(bu.idUniformeRecibido=ctu.idTipoUniforme )
    LEFT JOIN empleados e ON (bu.entidadEmpleadoRecep = e.entidadFederativaId and bu.consecutivoEmpleadoRecep = e.empleadoConsecutivoId and bu.categoriaEmpleadoRecep = e.empleadoCategoriaId) WHERE bu.fechaRecibido between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE) AND estatusUniforme=" . $tipo . " ORDER BY fechaRecibido";
    $this -> logger -> LogInfo ("Se ejecuto consulta getRecibidos 1 como " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaRecibidos[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaRecibidos;
}*/

public function consultaUniformesRecibidosByFecha2($fecha1, $fecha2, $tipo, $entidadConsulta,$sucursalesArreglo)
{
    //$this -> logger -> LogInfo ("Ejecutando. consultaUniformesRecibidosByFecha2 en persistencia");
    $listaRecibidos = array();
    $sql = "SELECT bu.incremetBajauniforme,ctu.idTipoUniforme,ctu.codigoUniforme,ctu.descripcionTipo,concat( e.entidadFederativaId,\"-\", e.empleadoConsecutivoId,\"-\", e.empleadoCategoriaId ) AS numeroEmpleado,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado,bu.fechaRecibido,bu.usuarioRecepcion FROM bajas_uniforme bu
    LEFT JOIN catalogotiposuniforme ctu ON(bu.idUniformeRecibido=ctu.idTipoUniforme )
    LEFT JOIN empleados e ON (bu.entidadEmpleadoRecep = e.entidadFederativaId and bu.consecutivoEmpleadoRecep = e.empleadoConsecutivoId and bu.categoriaEmpleadoRecep = e.empleadoCategoriaId) 
    WHERE bu.fechaRecibido between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE) 
    AND estatusUniforme='$tipo' 
    AND bu.sucursalRecepcion IN ($sucursalesArreglo)
    AND (";
    for($i=0;$i<count($entidadConsulta);$i++){
                if(!is_array($entidadConsulta)){
                    $entidadparaconsulta=$entidadConsulta;
                }else{
                    $entidadparaconsulta=$entidadConsulta[$i];
                }
                if($i==0){
                    $sql.=" entidadRecepcion='$entidadparaconsulta'";
                }else{
                    $sql.=" or entidadRecepcion='$entidadparaconsulta'";
                }
            }
            $sql.=" ) ORDER BY fechaRecibido";

    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaRecibidos[] = $reg;
        }
    }
        $this -> logger -> LogInfo ("valor del array de la consultaUniformesRecibidosByFecha2 ".var_export ($sql, true));
    return $listaRecibidos;
}

public function consultarFoliosLavanderia($folioLavanderia)
{
    $sql = "SELECT *FROM envio_lavanderia WHERE folioEnvioLavanderia='" . mysqli_real_escape_string($this->conn, $folioLavanderia) . "'";

    //$this->logger->LogInfo("Se ejecuto consulta select FolioLava como " . $sql);

    $res = mysqli_query($this->conn, $sql);

        //$this -> logger -> LogInfo ("valor del array de la res ".var_export ($res, true));
    if ((($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)))) {
        return 1;
    } else {
        return 0;
    }
}

public function enviarLavanderia($folioLavanderia,$entidadEnvio,$sucursalEnvio)
{

    $sql = "INSERT INTO envio_lavanderia(folioEnvioLavanderia,entidadEnvioLavanderia,sucursalEnvioLavanderia,fechaEnvioLavanderia,recibidaLavanderia) 
            VALUES ('" . mysqli_real_escape_string($this->conn, $folioLavanderia) . "','" . mysqli_real_escape_string($this->conn, $entidadEnvio) . "','" . mysqli_real_escape_string($this->conn, $sucursalEnvio) . "',now(),0)";

    $res = mysqli_query($this->conn, $sql);

    $this -> logger -> LogInfo ("Se ejecuto consulta enviarLavanderia como " . $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al enviar a lavanderia.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function insertarDetalleLavanderia($folioLavanderia, $claveUniforme, $cantidadUniforme)
{
    $sql = "INSERT INTO detalle_lavanderia VALUES ('" . mysqli_real_escape_string($this->conn, $folioLavanderia) . "',
    " . mysqli_real_escape_string($this->conn, $claveUniforme) . "," . $this->safeValue($cantidadUniforme) . ")";

    $res = mysqli_query($this->conn, $sql);

        //$this -> logger -> LogInfo ("Se ejecuto consulta InsertarDetallelava como " . $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al enviar a lavanderia. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function obtenerEnviosLavanderia1()
{

    $listaEnvios = array();
    $sql         = "SELECT el.folioEnvioLavanderia as idEnvio,ef.nombreEntidadFederativa as entidadEnvio,el.fechaEnvioLavanderia as fechaEnvio,el.precioLavanderia as totalEnvio,el.recibidaLavanderia as estatus,el.fechaRecibida as fechaReceive FROM envio_lavanderia el LEFT JOIN entidadesfederativas ef ON(el.entidadEnvioLavanderia = ef.idEntidadFederativa) ORDER BY fechaEnvio DESC";
        //$this -> logger -> LogInfo ("Se ejecuto consulta consultaFactura como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEnvios[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaFacturas ".var_export ($listaFacturas, true));
    return $listaEnvios;

}

public function obtenerEnviosLavanderia2($entidad)
{

    $listaFacturas = array();
    $sql           = "SELECT el.folioEnvioLavanderia as idEnvio,ef.nombreEntidadFederativa as entidadEnvio,el.fechaEnvioLavanderia as fechaEnvio,el.precioLavanderia as totalEnvio,el.recibidaLavanderia as estatus,el.fechaRecibida as fechaReceive FROM envio_lavanderia el LEFT JOIN entidadesfederativas ef ON(el.entidadEnvioLavanderia = ef.idEntidadFederativa)";
        for($i=0;$i<count($entidad);$i++){
            if(!is_array($entidad)){
                $entidadparaconsulta=$entidad;
                $sql.=" WHERE el.entidadEnvioLavanderia='" . $entidadparaconsulta . "'";
            }else{
                $entidadparaconsulta=$entidad[$i];
                $sql.=" WHERE el.entidadEnvioLavanderia='" . $entidadparaconsulta . "'";
            }
        }
        //$this -> logger -> LogInfo ("Se ejecuto consulta consultaFactura como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaFacturas[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaFacturas ".var_export ($listaFacturas, true));
    return $listaFacturas;

}

public function obtenerDetalleEnvio($idEnvio)
{

    $lista = array();

    try {

        $sql = "SELECT ctu.codigoUniforme AS idUni,ctu.descripcionTipo AS nombreUniforme,dl.cantidadUniEnvio AS cantidad from detalle_lavanderia dl inner join catalogotiposuniforme ctu ON (dl.idUniformeSucio=ctu.idTipoUniforme) WHERE dl.idEnvio='" . mysqli_real_escape_string($this->conn, $idEnvio) . "'";

            //$this -> logger -> LogInfo ("ejecutando selectCompraFactura en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function obtenerEntidadEnvio($folioLavanderia)
{
        //$this-> logger -> LogInfo("existeRfcEmpleado");

    $result = 0;

    $sql = "SELECT entidadEnvioLavanderia FROM envio_lavanderia WHERE folioEnvioLavanderia='" . mysqli_real_escape_string($this->conn, $folioLavanderia) . "'";

        //$this -> logger -> LogInfo ("Ejecutando: obtenerUniformes " . $sql);

    $res = mysqli_query($this->conn, $sql);

    $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

    $result = $reg["entidadEnvioLavanderia"];

        //$this -> logger -> LogInfo ("Se ejecuto consulta obtenerUniformes como" . $sql);

    return $result;
}

public function obtenerUniformesByFolio($folio)
{

    $lista = array();

    try {

        $sql = "SELECT idUniformeSucio,cantidadUniEnvio FROM detalle_lavanderia WHERE idEnvio='" . mysqli_real_escape_string($this->conn, $folio) . "'";

            //$this -> logger -> LogInfo ("ejecutando selectCompraFactura en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function recibirUniformesLavanderia($folio)
{

    $sql = "UPDATE envio_lavanderia SET recibidaLavanderia=1,fechaRecibida=now() WHERE folioEnvioLavanderia='" .
    mysqli_real_escape_string($this->conn, $folio) . "'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta recibirUniforme como " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al recibir uniforme.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function obtenerStockUniformeEntidad($entidad,$sucArreglo)
{

    $listaProveedores = array();
    $sql              = "SELECT ctu.codigoUniforme as tipoUniforme,
                                ctu.descripcionTipo as descripcionUniforme,
                                ef.nombreEntidadFederativa as entidadUniforme,
                                su.cantidadUniformes as cantidadUniformes,
                                ctu.costoUniforme,
                                (ctu.costoUniforme*su.cantidadUniformes) as totalCosto,
                                si.nombreSucursal   
                        FROM catalogotiposuniforme ctu 
                        NATURAL JOIN stockuniforme su 
                        LEFT JOIN entidadesfederativas ef ON (ef.idEntidadFederativa= su.entidadUniforme) 
                        LEFT JOIN sucursalesinternas si on (su.sucursalUniformeStock=si.idSucursalI)
                        WHERE su.claveUniforme=ctu.idTipoUniforme 
                        AND sucursalUniformeStock in ($sucArreglo)
                        AND (";

                        for($i=0;$i<count($entidad);$i++){
                            if(!is_array($entidad)){
                                $entidadparaconsulta=$entidad;
                            }else{
                                $entidadparaconsulta=$entidad[$i];
                            }
                            if($i==0){
                                $sql.="  su.entidadUniforme='$entidadparaconsulta'";
                            }else{
                                $sql.=" or  su.entidadUniforme='$entidadparaconsulta'";
                            }
                        }
    $sql.=" ) ORDER BY tipoUniforme";

        $this -> logger -> LogInfo ("Se ejecuto consulta obtenerStockUniformeEntidad como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaProveedores[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaProveedores;
}

public function obtenerIdTransfer()
{
    $sql = "SELECT MAX(idTransferencia) ultimo FROM transferencias_uniformes";

   // $this->logger->LogInfo("Se ejecuto consulta select idTransfer como " . $sql);

    $res = mysqli_query($this->conn, $sql);

        //$this -> logger -> LogInfo ("valor del array de la res ".var_export ($res, true));
    if ((($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)))) {
        if ($reg["ultimo"] != null) {
            return $reg["ultimo"];
        } else {
            return 0;
        }
    }
}

public function insertarDetalleTransferencia($idTransfer, $claveUniforme, $cantidadUniforme)
{
    $sql = "INSERT INTO detalle_transferencia VALUES (" . mysqli_real_escape_string($this->conn, $idTransfer) . ",
    " . mysqli_real_escape_string($this->conn, $claveUniforme) . "," . $this->safeValue($cantidadUniforme) . ")";

    $res = mysqli_query($this->conn, $sql);

        //$this -> logger -> LogInfo ("Se ejecuto consulta InsertarDetallelava como " . $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al transferir detalle. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function obtenerDetalleTransferencia($idTransfer)
{

    $lista = array();

    try {

        $sql = "SELECT ctu.codigoUniforme AS idUni,ctu.descripcionTipo AS nombreUniforme,dt.cantidadUniformeTransfer AS cantidad from detalle_transferencia dt inner join catalogotiposuniforme ctu ON (dt.idUniformeTransfer=ctu.idTipoUniforme) WHERE dt.idTransferenciaD=" . mysqli_real_escape_string($this->conn, $idTransfer) . "";

            //$this -> logger -> LogInfo ("ejecutando selectCompraFactura en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function recibirUniformesTransfer($idTransfer)
{

    $sql = "UPDATE transferencias_uniformes SET idEstatusTransfer=2,fechaTransferenciaRecepcion=now() WHERE idTransferencia='" .
    mysqli_real_escape_string($this->conn, $idTransfer) . "'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta recibirUniforme como " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al recibir uniforme.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function obtenerUniformesByTransferencia($idTransfer)
{

    $lista = array();

    try {

        $sql = "SELECT idUniformeTransfer,cantidadUniformeTransfer FROM detalle_transferencia WHERE idTransferenciaD='" . mysqli_real_escape_string($this->conn, $idTransfer) . "'";

            //$this -> logger -> LogInfo ("ejecutando selectCompraFactura en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function traerUltimoFolioEv()
{

        //$this-> logger -> LogInfo("traerUltimoFolioTxtRequisicion");

    try {

        $sql = "select  LPAD(IF(MAX( folioEventual ) IS NULL , 1, MAX( folioEventual ) + 1 ), 4, 0)  AS 'folioEv',ifnull(max(idServicioEventual),0)+1 as idEve from servicioseventuales";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoFolioTxtRequisicion en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $numeroFolio = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

        return $numeroFolio;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function obtenerAsignacionesByEmpleado($entidad, $consecutivo, $categoria)
{

    $listaAsignaciones = array();
    $sql               = "select concat_ws('-', au.entidadEmpAsignacion,au.consecutivoEmpAsignacion,au.categoriaEmpAsignacion) as numeroEmpleado,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado,ctu.codigoUniforme,ctu.descripcionTipo,au.cantidadUniforme from asignacion_uniforme au LEFT JOIN empleados e ON (au.entidadEmpAsignacion=e.entidadFederativaId and au.consecutivoEmpAsignacion=e.empleadoConsecutivoId and au.categoriaEmpAsignacion=e.empleadoCategoriaId) LEFT JOIN catalogotiposuniforme ctu ON (au.claveUniAsignacion=ctu.idTipoUniforme) where entidadEmpAsignacion='" . $entidad . "' and consecutivoEmpAsignacion='" . $consecutivo . "' and categoriaEmpAsignacion='" . $categoria . "'";
        // $this -> logger -> LogInfo ("Se ejecuto consulta consultaProveedores como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaAsignaciones[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaAsignaciones;

}

public function getEntregadosByGuardia($entidadEmpleado, $consecutivoEmpleado, $categoriaEmpleado)
{

    $listaRecepciones = array();
    $sql              = "SELECT bu.idUniformeRecibido,ctu.descripcionTipo,ctu.codigoUniforme,bu.estatusUniforme,ctu.costoUniforme
    FROM bajas_uniforme bu LEFT JOIN catalogotiposuniforme ctu ON (bu.idUniformeRecibido=ctu.idTipoUniforme)
    WHERE entidadEmpleadoRecep='" . $entidadEmpleado . "' AND consecutivoEmpleadoRecep='" . $consecutivoEmpleado . "' AND categoriaEmpleadoRecep='" . $categoriaEmpleado . "' AND fechaRecibido= CAST(now() AS DATE)";
        //$this -> logger -> LogInfo ("Se ejecuto consulta consultaRecibidosEmp como: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaRecepciones[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaRecepciones;

}

public function obtenerUniformesByTipo($tipo)
{

    $listaUniformes = array();
    $sql            = "SELECT idTipoUniforme,codigoUniforme,descripcionTipo FROM catalogotiposuniforme WHERE idTipoMercancia=" . $tipo . "";
        //$this -> logger -> LogInfo ("Se ejecuto consulta consultaUniformes como " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaUniformes[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaUniformes;
}

public function insertarEventual($eventual)
{
    //$this -> logger -> LogInfo ("Ejecutando insertar Eventual en persistencia ");

    $sql = "INSERT INTO servicioseventuales (idServicioEventual, folioEventual, nombreServicio, entidadEventual, direccionEventual," .
    " clienteEventual, puestoEventual,idTurnoEv, numElementosEv, fechaInicioEv, fechaFinEv, usuarioCaptura ,fechaCaptura,lineaNegocioEv) values ( " .
    "" . mysqli_real_escape_string($this->conn, $eventual["idEventual"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $eventual["folioEv"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $eventual["nombreServicio"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $eventual["entidadEventual"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $eventual["direccionEv"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $eventual["clienteEv"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $eventual["puestoEv"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $eventual["turnoEv"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $eventual["numElementosEv"]) . ", " .
    "CAST('" . mysqli_real_escape_string($this->conn, $eventual["fechaInicioEv"]) . "' AS DATE ), " .
    "CAST('" . mysqli_real_escape_string($this->conn, $eventual["fechaFinEv"]) . "' AS DATE ), " .
    "'" . mysqli_real_escape_string($this->conn, $eventual["usuarioCaptura"]) . "', " .
    " now()," . mysqli_real_escape_string($this->conn, $eventual["lineaNegocio"]) . ")";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertar Eventual como " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar Eventual. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function traerEventualesTable()
{
        //$this-> logger -> LogInfo("traerCatalogoPuntosServicios");
    $lista = array();
    try {

        $sql = "SELECT se.idServicioEventual,se.folioEventual,se.nombreServicio,ef.nombreEntidadFederativa,se.direccionEventual,cc.razonSocial,cp.descripcionPuesto,ct.descripcionTurno,se.numElementosEv,se.fechaInicioEv,se.fechaFinEv,se.usuarioCaptura,se.costoEventual,se.fechaCaptura
        FROM servicioseventuales se
        LEFT JOIN entidadesfederativas ef ON (se.entidadEventual=ef.idEntidadFederativa)
        LEFT JOIN catalogoclientes cc ON (se.clienteEventual=cc.idCliente)
        LEFT JOIN catalogopuestos cp ON(se.puestoEventual=cp.idPuesto)
        LEFT JOIN catalogoturnos ct ON (se.idTurnoEv=ct.idTipoTurno) ORDER BY fechaCaptura DESC";

            //$this -> logger -> LogInfo ("ejecutando traer eventuales en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }

}

public function actualizarCostoEventual($idServicio, $nuevoCosto)
{

        //$this -> logger -> LogInfo ("Ejecutando insertar Eventual en persistencia ");

    $sql = "UPDATE servicioseventuales SET costoEventual=" . $nuevoCosto . " WHERE idServicioEventual=" . $idServicio . "";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertar Eventual como " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar Eventual. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function selectDatosEventual($eventualId)
{
        //$this-> logger -> LogInfo("selectDatosPuntoServicio");
    $lista = array();

    try {

        $sql = "SELECT se.idServicioEventual,se.folioEventual,se.nombreServicio,se.direccionEventual,cc.razonSocial,cc.nombreComercial,cc.rfcCliente,cc.direccionFiscalCliente,cc.contactoCliente,cc.telefonoFijoCLiente,cp.descripcionPuesto,ct.descripcionTurno,se.numElementosEv,se.fechaInicioEv,se.fechaFinEv,se.costoEventual
        FROM servicioseventuales se
        LEFT JOIN catalogoclientes cc ON(se.clienteEventual=cc.idCliente)
        LEFT JOIN catalogopuestos cp ON(se.puestoEventual=cp.idPuesto)
        LEFT JOIN catalogoturnos ct ON(se.idTurnoEv=ct.idTipoTurno)
        WHERE se.idServicioEventual=" . mysqli_real_escape_string($this->conn, $eventualId) . "";

            //$this -> logger -> LogInfo ("ejecutando select eventual en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function obtenerConsecutivoElementoEv()
{

        //$this-> logger -> LogInfo("traerUltimoFolioTxtRequisicion");

    try {

        $sql = "select  LPAD(IF(MAX( consecutivoElemento ) IS NULL , 1, MAX( consecutivoElemento ) + 1 ), 4, 0)  AS 'consecutivoEv' from elementos_eventuales";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoFolioTxtRequisicion en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $consecutivoElemento = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

        return $consecutivoElemento;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function asignarElementoEventual($elemento)
{
        //$this -> logger -> LogInfo ("Ejecutando insertar Eventual en persistencia ");

    $sql = "INSERT INTO elementos_eventuales (idEventual, consecutivoElemento, numeroEmpleado, nombreElemento, apPaternoE," .
    " apMaternoE) values ( " .
    "" . mysqli_real_escape_string($this->conn, $elemento["idServicio"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $elemento["consecutivoElemento"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $elemento["numeroElemento"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $elemento["nombreElemento"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $elemento["apPaternoEv"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $elemento["apMaternoEv"]) . "')";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertar Eventual como " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar Eventual. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerAsignadosByEventual($idEventual)
{
        //$this-> logger -> LogInfo("existeRfcEmpleado");

    $result = 0;

    $sql = "SELECT count(*) as numAsignados FROM elementos_eventuales WHERE idEventual=" . $idEventual . "";

        //$this -> logger -> LogInfo ("Ejecutando: obtener asignados  " . $sql);

    $res = mysqli_query($this->conn, $sql);

    $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);

    if ($reg["numAsignados"] != null) {
        $result = $reg["numAsignados"];
    }

        //$this -> logger -> LogInfo ("Se ejecuto consulta obtenerUniformes como" . $sql);

    return $result;
}

public function traerElementosByEventual($eventualId)
{
        //$this-> logger -> LogInfo("selectDatosPuntoServicio");
    $lista = array();

    try {

        $sql = "SELECT numeroEmpleado,nombreElemento,apPaternoE,apMaternoE FROM elementos_eventuales
        WHERE idEventual=" . mysqli_real_escape_string($this->conn, $eventualId) . "";

            //$this -> logger -> LogInfo ("ejecutando select eventual en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function getUsuariosEmpleado($entidad, $consecutivo, $categoria)
{
        //$this-> logger -> LogInfo("getEmpleadoByCorreo");

    $usuarios = array();

    $sql = "SELECT ue.usuario FROM usuario_empleado ue WHERE ue.entidadEmpleadoUsuario='" . $entidad . "' AND ue.consecutivoEmpleadoUsuario='" . $consecutivo . "' AND ue.categoriaEmpleadoUsuario='" . $categoria . "'";

        //$this -> logger -> LogInfo ("Ejecutando getUsuariosByEmpleado: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $usuarios[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la getEmpleadoByCorreo ".var_export ($usuarios, true));

    return $usuarios;
}

public function traerFolioPreseleccion()
{

        //$this-> logger -> LogInfo("traerUltimoFolioTxtRequisicion");

    try {

        $sql = "select  LPAD(IF(MAX( folioPreseleccion ) IS NULL , 1, MAX( folioPreseleccion ) + 1 ), 7, 0)  AS 'folioPres',ifnull(max(idPreseleccion),0)+1 as idPreContrato from empleados_preseleccion";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoFolioTxtRequisicion en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $numeroFolio = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

        return $numeroFolio;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function registrarEmpleadoPreseleccion($datos)
{
    $sql = "INSERT INTO empleados_preseleccion VALUES (NULL,
    '" . mysqli_real_escape_string($this->conn, $datos["folioEmp"]) . "',
    '" .mysqli_real_escape_string($this->conn, $datos["puestoEmp"]) . "',
    '" .mysqli_real_escape_string($this->conn, $datos["nombreEmp"]) . "',
    '" .mysqli_real_escape_string($this->conn, $datos["apPaternoEmp"]) . "',
    '" .mysqli_real_escape_string($this->conn, $datos["apMaternoEmp"]) . "',
    '" .mysqli_real_escape_string($this->conn, $datos["edadEmp"]) . "',
    '" .mysqli_real_escape_string($this->conn, $datos["edoCivilEmp"]) . "',
    '" .mysqli_real_escape_string($this->conn, $datos["pesoEmp"]) . "',
    '" .mysqli_real_escape_string($this->conn, $datos["estaturaEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["tallaCamisaEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["tallaPantalonEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["numCalzadoEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["sexoEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["tipoSangreEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["fechaNacEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["entidadNacEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["codPostalEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["calleEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["numeroCEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["coloniaEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["municipioEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["ciudadEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["telFijoEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["telMovilEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["emailEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["infonavitEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["fonacotEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["cartillaEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["licenciaEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["nImssEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["nombreE1Emp"]) . "',";
    if($datos["fecha1E1Emp"]==""){ 
        $sql .= " null,";
    }else{
        $sql .= " '" . mysqli_real_escape_string($this->conn, $datos["fecha1E1Emp"]) . "',";
    }
    if($datos["fecha2E1Emp"]==""){ 
        $sql .= " null,";
    }else{
        $sql .= " '" . mysqli_real_escape_string($this->conn, $datos["fecha2E1Emp"]) . "',";
    }   
    $sql .= "'" . mysqli_real_escape_string($this->conn, $datos["telE1Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["causaSepE1Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["nombreE2Emp"]) . "',";
    if($datos["fecha1E2Emp"]==""){ 
        $sql .= " null,";
    }else{
        $sql .= " '" . mysqli_real_escape_string($this->conn, $datos["fecha1E2Emp"]) . "',";
    }
    if($datos["fecha2E2Emp"]==""){ 
        $sql .= " null,";
    }else{
        $sql .= " '" . mysqli_real_escape_string($this->conn, $datos["fecha2E2Emp"]) . "',";
    }
    $sql .= " '" . mysqli_real_escape_string($this->conn, $datos["telE2Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["causaSepE2Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["personasCargoEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["gradoEstudioEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["cursoEspecialEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["enfermedadEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["padreEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["madreEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["esposaEmp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["hijo1Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["hijo2Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["hijo3Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["hijo4Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["hijo5Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["nombreR1Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["telR1Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["nombreR2Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["telR2Emp"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["reclutadorEmp"]) . "' ";
    if($datos["licenciapermanente"]==0){
        $sql.=" , '" . mysqli_real_escape_string($this->conn, $datos["licenciapermanente"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datos["numLicenciaPreseleccion"]) . "'  ,";
         if($datos["fechavigencialicencia"]==""){ 
        $sql .= " null, NOW(),NULL,NULL)";
        }else{
            $sql .= " '" . mysqli_real_escape_string($this->conn, $datos["fechavigencialicencia"]) . "' , NOW(),NULL,NULL)";
        }
    }else{
     $sql.=" , '" . mysqli_real_escape_string($this->conn, $datos["licenciapermanente"]) . "',NULL,NULL, NOW(),NULL,NULL)";

 }

 $res = mysqli_query($this->conn, $sql);

  $this -> logger -> LogInfo ("Se ejecuto consulta insert preseleccionnnnnnnnnnnnnnn como " . $sql);

 if ($res !== true) {
    $this->logger->LogInfo("Ocurrio un error al insertar Preseleccion. ");
    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
}
}

public function obtenerAspirante($folio)
{
        // $this-> logger -> LogInfo("consultarEmpleadoById");

    $aspirante = array();

    $sql = "SELECT p.idPreseleccion,p.folioPreseleccion,p.puestoPreseleccion,p.nombrePreseleccion,p.apPaternoPreseleccion,p.apMaternoPreseleccion,p.edadPreseleccion,p.edoCivilPreseleccion,p.pesoPreseleccion,p.estaturaPreseleccion,p.tallaCamisaPreseleccion,p.tallaPantalonPreseleccion,p.numCalzadoPreseleccion,p.generoPreseleccion,p.tipoSangrePreseleccion,p.fechaNacPreseleccion,p.entidadNacPreseleccion,p.cpPreseleccion,p.callePreseleccion,p.numeroPreseleccion,p.coloniaPreseleccion,p.municipioPreseleccion,p.ciudadPreseleccion,p.telFijoPreseleccion,p.telMovilPreseleccion,p.emailPreseleccion,p.infonavitPreseleccion,p.fonacotPreseleccion,p.cartillaPreseleccion,p.licenciaPreseleccion,p.nImssPreseleccion,p.nombreE1Preseleccion,p.fecha1E1Preseleccion,p.fecha2E1Preseleccion,p.telefonoE1Preseleccion,p.causaE1Preseleccion,p.nombreE2Preseleccion,p.fecha1E2Preseleccion,p.fecha2E2Preseleccion,p.telefonoE2Preseleccion,p.causaE2Preseleccion,p.personasACargoPreseleccion,p.gradoEPreseleccion,p.cursoEspecialPreseleccion,p.enfermedadPreseleccion,p.padrePreseleccion,p.madrePreseleccion,p.esposaPreseleccion,p.ben1Preseleccion,p.ben2Preseleccion,p.ben3Preseleccion,p.ben4Preseleccion,p.ben5Preseleccion,p.nombreR1Preseleccion,p.telefonoR1,p.nombreR2,p.telefonoR2,p.reclutadorPreseleccion,ce.descripcionEstadoCivil as edoCivil,cg.descripcionGenero as generoPre,cs.tipoSangre as tipoSangre,ef.nombreEntidadFederativa as entidadPre,cge.descripcionGradoEstudios as gradoEstudios,p.numlicenciapreseleccion,p.fechapreseleccion,p.fechavigencialicencia,p.fechavigencialicencia,p.licenciapermanente,p.idEntidadALaborar,p.idPuestoSeleccionado

    FROM empleados_preseleccion p
    LEFT JOIN catalogoestadocivil ce ON (p.edoCivilPreseleccion=ce.idEstadoCivil)
    LEFT JOIN catalogogenero cg ON (p.generoPreseleccion=cg.idGenero)
    LEFT JOIN catalogotiposangre cs ON (p.tipoSangrePreseleccion=cs.idTipoSangre)
    LEFT JOIN entidadesfederativas ef ON (p.entidadNacPreseleccion=ef.idEntidadFederativa)
    LEFT JOIN catalogogradoestudios cge ON (p.gradoEPreseleccion=cge.idGradoEstudios)
    WHERE " .
    "p.folioPreseleccion = '" . mysqli_real_escape_string($this->conn, $folio) . "' ";

        // $this -> logger -> LogInfo ("Ejecutando consultarEmpleadoById: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $aspirante[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de lista de aspirantes ".var_export ($aspirante, true));

    return $aspirante;
}

public function actualizaPreseleccion($datos)
{
    $sql = "UPDATE empleados_preseleccion SET nombrePreseleccion='" . mysqli_real_escape_string($this->conn, $datos["nombreEmpleado"]) . "'," .
    "apPaternoPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["apellidoPaterno"]) . "'," .
    "apMaternoPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["apellidoMaterno"]) . "' " .
    "WHERE folioPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["folio"]) . "'";

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar Preseleccion. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function actualizaDireccionPreseleccion($datos)
{
    $sql = "UPDATE empleados_preseleccion SET cpPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["codigoPostal"]) . "'," .
    "municipioPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["municipio"]) . "'," .
    "callePreseleccion='" . mysqli_real_escape_string($this->conn, $datos["calle"]) . "'," .
    "coloniaPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["colonia"]) . "'," .
    "numeroPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["numeroExterior"]) . "'," .
    "telFijoPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["telefonoFijoEmpleado"]) . "'," .
    "telMovilPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["telefonoMovilEmpleado"]) . "'," .
    "emailPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["correoEmpleado"]) . "' " .
    "WHERE folioPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["folio"]) . "'";

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar Preseleccion. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerEmpleadosBajaFiniquito($folio)
{
    $lista = array();

    $sql = "SELECT * FROM datosimss WHERE folioTxtBaja='" . $folio . "'";

     //   $this -> logger -> LogInfo ("Ejecutando consultaEmpleado Baja: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de lista de aspirantes ".var_export ($aspirante, true));

    return $lista;
}

public function insertaFiniquitoBaja($elementoBaja, $folio)
{
     //   $this -> logger -> LogInfo ("Ejecutando insertar Eventual en persistencia ");
    //************** SE AGREGA LA FUNCION DE CONSULTA PARA OBTENER EL ADMINISTRATIVO QUE DIO LA BAJA PARA EL CONTROL DEL PAGO DEL FINIQUITO ***********
    $AdminBaja = array();
    $AdminBaja = [];
    $EntidadAdmin = "";
    $ConsecutivoAdmin = "";
    $CategoriaAdmin = "";
    $ContraseniaAdmin = "";
    $sql1 = "SELECT f.EntidadFirmaEmpBaja,f.ConsecutivoFirmaEmpBaja,f.CategoriaFirmaEmpBaja,f.FirmaCifradaEmpBaja,e.empleadoIdPuesto,e.idTipoPuesto,e.idEntidadTrabajo,e.idBancoEmp,e.numeroCta,e.numeroCtaClabe
            from folosbajaemplados f
            left join empleados e on (f.EntidadEmpBaja=e.entidadFederativaId and f.ConsecutivoEmpBaja=e.empleadoConsecutivoId and f.CaegoriaEmpBaja=e.empleadoCategoriaId ) 
            where f.EntidadEmpBaja='" . mysqli_real_escape_string($this->conn, $elementoBaja["empladoEntidadImss"]) . "'
            and f.ConsecutivoEmpBaja='" . mysqli_real_escape_string($this->conn, $elementoBaja["empleadoConsecutivoImss"]) . "'
            and f.CaegoriaEmpBaja='" . mysqli_real_escape_string($this->conn, $elementoBaja["empleadoCategoriaImss"]) . "'
            and f.idFolioBajaEmp=(select max(idFolioBajaEmp) from folosbajaemplados
                                where EntidadEmpBaja='" . mysqli_real_escape_string($this->conn, $elementoBaja["empladoEntidadImss"]) . "'
                                and ConsecutivoEmpBaja='" . mysqli_real_escape_string($this->conn, $elementoBaja["empleadoConsecutivoImss"]) . "'
                                and CaegoriaEmpBaja='" . mysqli_real_escape_string($this->conn, $elementoBaja["empleadoCategoriaImss"]) . "')";
            // $this -> logger -> LogInfo ("Ejecutando consultaEmpleado Baja: " . $sql1);
    $res1 = mysqli_query($this->conn, $sql1);
    while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
        $AdminBaja[] = $reg1;
    }
    // $this -> logger -> LogInfo ("valor del array de AdminBaja ".var_export ($AdminBaja, true));
    
    $EntidadAdmin      = $AdminBaja[0]["EntidadFirmaEmpBaja"];
    $ConsecutivoAdmin  = $AdminBaja[0]["ConsecutivoFirmaEmpBaja"];
    $CategoriaAdmin    = $AdminBaja[0]["CategoriaFirmaEmpBaja"];
    $ContraseniaAdmin  = $AdminBaja[0]["FirmaCifradaEmpBaja"];
    $IdPuesto  = $AdminBaja[0]["empleadoIdPuesto"];
    $idTipoPuesto  = $AdminBaja[0]["idTipoPuesto"];
    $idEntidadTrabajo  = $AdminBaja[0]["idEntidadTrabajo"];
    $idBancoEmp  = $AdminBaja[0]["idBancoEmp"];
    $numeroCta  = $AdminBaja[0]["numeroCta"];
    $numeroCtaClabe  = $AdminBaja[0]["numeroCtaClabe"];  
    $sql = "INSERT INTO finiquitos (entidadEmpFiniquito, consecutivoEmpFiniquito, categoriaEmpFiniquito,EntidadAdminBaja, ConsecutivoAdminBaja,CategoriaAdminBaja, ContraseniaFirmaAdminBaja,idTipoEmpleado,idPuesto,idEntidadTrabajo,idBanco,numeroCuenta,numeroCuentaClave, folioBajaImss, estatusFiniquito,VacacionesPendientes,PrimaVacacionalPendiente,EstatusDiasTrabajados,estatusPagoFiniquito) values ( " .
    "'" . mysqli_real_escape_string($this->conn, $elementoBaja["empladoEntidadImss"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $elementoBaja["empleadoConsecutivoImss"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $elementoBaja["empleadoCategoriaImss"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $EntidadAdmin) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $ConsecutivoAdmin) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $CategoriaAdmin) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $ContraseniaAdmin) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $idTipoPuesto) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $IdPuesto) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $idEntidadTrabajo) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $idBancoEmp) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $numeroCta) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $numeroCtaClabe) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $folio) . "',0,0,0,0,1)";

    // $this->logger->LogInfo("Se ejecuto consulta  insertar Finiquito como " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar Finiquito. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerPreseleccionPorNombre($nombre)
{
        //$this-> logger -> LogInfo("obtenerEmpleadoPorNombre");

    $lista = array();

    $sql = "SELECT p.idPreseleccion,p.folioPreseleccion,p.puestoPreseleccion,p.nombrePreseleccion,p.apPaternoPreseleccion,p.apMaternoPreseleccion,p.edadPreseleccion,p.edoCivilPreseleccion,p.pesoPreseleccion,p.estaturaPreseleccion,p.tallaCamisaPreseleccion,p.tallaPantalonPreseleccion,p.numCalzadoPreseleccion,p.generoPreseleccion,p.tipoSangrePreseleccion,p.fechaNacPreseleccion,p.entidadNacPreseleccion,p.cpPreseleccion,p.callePreseleccion,p.numeroPreseleccion,p.coloniaPreseleccion,p.municipioPreseleccion,p.ciudadPreseleccion,p.telFijoPreseleccion,p.telMovilPreseleccion,p.emailPreseleccion,p.infonavitPreseleccion,p.fonacotPreseleccion,p.cartillaPreseleccion,p.licenciaPreseleccion,p.nImssPreseleccion,p.nombreE1Preseleccion,p.fecha1E1Preseleccion,p.fecha2E1Preseleccion,p.telefonoE1Preseleccion,p.causaE1Preseleccion,p.nombreE2Preseleccion,p.fecha1E2Preseleccion,p.fecha2E2Preseleccion,p.telefonoE2Preseleccion,p.causaE2Preseleccion,p.personasACargoPreseleccion,p.gradoEPreseleccion,p.cursoEspecialPreseleccion,p.enfermedadPreseleccion,p.padrePreseleccion,p.madrePreseleccion,p.esposaPreseleccion,p.ben1Preseleccion,p.ben2Preseleccion,p.ben3Preseleccion,p.ben4Preseleccion,p.ben5Preseleccion,p.nombreR1Preseleccion,p.telefonoR1,p.nombreR2,p.telefonoR2,p.reclutadorPreseleccion,ce.descripcionEstadoCivil as edoCivil,cg.descripcionGenero as generoPre,cs.tipoSangre as tipoSangre,ef.nombreEntidadFederativa as entidadPre,cge.descripcionGradoEstudios as gradoEstudios

    FROM empleados_preseleccion p
    LEFT JOIN catalogoestadocivil ce ON (p.edoCivilPreseleccion=ce.idEstadoCivil)
    LEFT JOIN catalogogenero cg ON (p.generoPreseleccion=cg.idGenero)
    LEFT JOIN catalogotiposangre cs ON (p.tipoSangrePreseleccion=cs.idTipoSangre)
    LEFT JOIN entidadesfederativas ef ON (p.entidadNacPreseleccion=ef.idEntidadFederativa)
    LEFT JOIN catalogogradoestudios cge ON (p.gradoEPreseleccion=cge.idGradoEstudios)
    WHERE folioPreseleccion='" . $nombre . "' OR concat_ws(' ',apPaternoPreseleccion, apMaternoPreseleccion, nombrePreseleccion) like '%" . mysqli_real_escape_string($this->conn, $nombre) . "%' ";

        //$this -> logger -> LogInfo ("Ejecutando obtenerPreseleccionPorNombre: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de listaEmpleados ".var_export ($listaEmpleados, true));

    return $lista;
}

public function obtenerEmpleadosEma($registro, $fechaPeriodo1, $fechaPeriodo2)
{
        //$this-> logger -> LogInfo("obtenerDatosCuadroAntig");
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo1: " . $fechaPeriodo1);
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo2: " . $fechaPeriodo2);

    $listaEmpleados = array();

    $sql = "SELECT concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleado,
    concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreCompleto,e.empleadoNumeroSeguroSocial as nss,ef.nombreEntidadFederativa,cps.puntoServicio,cc.razonSocial,e.empleadoEstatusId,
    dp.curpEmpleado,dp.rfcEmpleado,di.fechaImss,di.empleadoEstatusImss,di.fechaBajaImss,datediff(now(), di.fechaImss) as diasTranscurridos,di.salarioDiario,di.registroPatronal
    FROM datosimss di
    LEFT JOIN empleados e ON (di.empladoEntidadImss=e.entidadFederativaId and di.empleadoConsecutivoImss=e.empleadoConsecutivoId and di.empleadoCategoriaImss=e.empleadoCategoriaId)
    LEFT JOIN catalogopuntosservicios cps ON (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
    LEFT JOIN catalogoclientes cc ON (cps.idClientePunto=cc.idCliente)
    LEFT JOIN entidadesfederativas ef ON (e.idEntidadTrabajo=ef.idEntidadFederativa)
    LEFT JOIN datospersonales dp ON (di.empladoEntidadImss=dp.empleadoEntidadPersonal and di.empleadoConsecutivoImss=dp.empleadoConsecutivoPersonal and di.empleadoCategoriaImss=dp.empleadoCategoriaPersonal)
    where ((di.empleadoEstatusImss=7 AND di.fechaBajaImss >= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' AS DATE) AND di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE)) OR (di.empleadoEstatusImss=3 AND di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE) ))
    AND di.registroPatronal='" . mysqli_real_escape_string($this->conn, $registro) . "'";

        //$this->logger->LogInfo("Ejecutando obtener c: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaEmpleados[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

    return $listaEmpleados;
}

public function obtenerUmaImss($anio)
{
    try {

        $sql = "SELECT diarioUma FROM uma WHERE idUma=(SELECT MAX(idUma) FROM uma)";

            //$this -> logger -> LogInfo ("ejecutando traer UMA en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $uma = $reg["diarioUma"];
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

        return $uma;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function obtenerPrimaRT($registro, $mes, $anio)
{
    try {

        $primaRT = 0;

        $sql = "SELECT cantPrimaRiesgo FROM primariesgotrabajo WHERE idRegistro='$registro' AND anioPrimaR='$anio' AND mesPrimaR=(SELECT MAX(mesPrimaR) FROM primariesgotrabajo WHERE idRegistro='$registro' AND anioPrimaR='$anio' AND mesPrimaR<='$mes')";

            //$this -> logger -> LogInfo ("ejecutando traerPrimaRiesgo en persistencia: ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $primaRT = $reg["cantPrimaRiesgo"];
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

        return $primaRT;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function obtenerTblImss()
{
    $valores = array();

    $sql = "SELECT Patron,Obrero FROM imss WHERE idConcepto > 1";

        //$this -> logger -> LogInfo ("Ejecutando obtenerDatosCuadroAntig: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $valores[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

    return $valores;
}

public function rechazarBajaImss($datosImss)
{

        //$this -> logger -> LogInfo ("Ejecutando. rechazarEmpleadoImss en persistencia");

    $sql = "update datosimss " .
    "set empleadoEstatusImss=" . mysqli_real_escape_string($this->conn, $datosImss["empleadoEstatusImss"]) . ",folioTxtBaja=NULL " .
    " where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  rechazarEmpleadoImss como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al rechazarEmpleadoImss.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getRegistrosByCliente($idCliente)
{

    $lista = array();

    $sql = "select concat_ws('-', e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado,e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId,ef.nombreEntidadFederativa as entidadT,cpu.descripcionPuesto as puesto,ct.descripcionTurno as turnoEmpleado,cp.puntoServicio,di.registroPatronal,di.fechaImss,di.empleadoEstatusImss,di.fechaBajaImss,datediff(now(), di.fechaImss) as diasTranscurridos,di.salarioDiario
    from empleados e
    left join catalogopuntosservicios cp on (e.empleadoIdPuntoServicio=cp.idPuntoServicio)
    left join datosimss di ON (e.entidadFederativaId=di.empladoEntidadImss AND e.empleadoConsecutivoId=di.empleadoConsecutivoImss AND e.empleadoCategoriaId=di.empleadoCategoriaImss)
    left join entidadesfederativas ef ON (e.idEntidadTrabajo=ef.idEntidadFederativa)
    left join catalogoclientes cc on (cp.idClientePunto=cc.idCliente)
    left join catalogopuestos cpu on (e.empleadoIdPuesto=cpu.idPuesto)
    left join catalogoTurnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
    where (e.empleadoEstatusId=1 or e.empleadoEstatusId=2";
    if($idCliente==2){
        $sql.=" or e.empleadoEstatusId=0)";
    }else{
        $sql.=")";
    }

    $sql.=" and cc.idCliente=" . $idCliente . " group by di.registroPatronal";

        //$this -> logger -> LogInfo ("Ejecutando getEmpleadosByClienteEntidad: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getSueldosEmpleadosAdministrativos()
{
        //$this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");

    $lista = array();

    try {

        $sql = "select concat_ws('-', e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado
        , concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,e.entidadFederativaId
        ,e.empleadoConsecutivoId
        ,e.empleadoCategoriaId
        , e.fechaIngresoEmpleado
        ,empleadoIdPuesto
        ,cp.descripcionPuesto
        ,e.empleadoIdTurno
        ,ct.descripcionTurno
        ,e.empleadoIdPuntoServicio
        ,cps.puntoServicio
        ,cps.idEntidadPunto
        ,ef.nombreEntidadFederativa
        ,ifnull(ce.sueldoEmpleado,0) as sueldoEmpleado
        ,ifnull(ce.cuotaDiariaEmpleado,0) as cuotaDiaria
        ,ifnull(ce.bonoAsistenciaEmpleado,0) as bonoAsistencia
        ,ifnull(ce.bonoPuntualidadEmpleado,0) as bonoPuntualidad
        ,e.empleadoEstatusId
        ,cee.descripcionEstatusEmpleado
        from empleados e
        left join cuotas_empleados ce on (e.entidadFederativaId=ce.empleadoEntidadCuota and e.empleadoConsecutivoId=ce.empleadoConsecutivoCuota and e.empleadoCategoriaId=ce.empleadoCategoriaCuota)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
        left join catalogopuntosservicios cps on (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
        left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
        where ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.idTipoPuesto='02' )
        or
        (e.empleadoEstatusId=0 and  e.fechaIngresoEmpleado > DATE(DATE_SUB(NOW(), INTERVAL 1 month)) and e.idTipoPuesto='02' )
        
        order by apellidoPaterno, apellidoMaterno, nombreEmpleado ";


                 //or  (e.empleadoLineaNegocioId=2 and e.empleadoEstatusId=1 or e.empleadoEstatusId=2)

            //$this -> logger -> LogInfo ("Ejecutando SQL: getSueldosEmpleados " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getSueldosEmpleados ERROR:" . $e->getMessage());
    }
}

public function insertSueldoHistoricoAdmin($datos)
{

    $sql = "CALL proc_obtenerpeticionsalario (
    '" . mysqli_real_escape_string($this->conn, $datos["empleadoEntidad"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["empleadoConsecutivo"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["empleadoCategoria"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["sueldoAnterior"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["sueldoEmpleado"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["cuotaAnterior"]) . "',
    '" . mysqli_real_escape_string($this->conn, $datos["cuotaDiariaEmpleado"]) . "',
    " . " now(),'" . mysqli_real_escape_string($this->conn, $datos["usuarioCaptura"]) . "',@hola)";

        //$this->logger->LogInfo("Se ejecuto  insertSueldoEmpleado como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista = $reg["mensaje"];
    }
        //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

    return $lista;
}

public function getSueldosaConfirmar()
{
        //$this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");

    $lista = array();

    try {

        $sql = "select concat_ws('-', e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,e.entidadFederativaId
        ,e.empleadoConsecutivoId
        ,e.empleadoCategoriaId
        , e.fechaIngresoEmpleado
        ,cp.descripcionPuesto
        ,ct.descripcionTurno
        ,e.empleadoIdPuntoServicio
        ,cps.puntoServicio
        ,ef.nombreEntidadFederativa
        ,cee.descripcionEstatusEmpleado
        ,hs.sueldoAnterior
        ,hs.nuevoSueldo
        ,hs.cuotaanterior
        ,hs.cuotanueva
        ,hs.IdHistoricoSueldo
        ,hs.fechaPeticion
        ,hs.estatus
        ,cln.descripcionLineaNegocio
        ,entf.nombreEntidadFederativa
        ,cee.descripcionEstatusEmpleado
        from historico_sueldosadministrativos hs
        left join empleados e
        on hs.entidadAdminH=e.entidadFederativaId
        and hs.consecutivoAdminH=e.empleadoConsecutivoId
        and hs.categoriaAdminH=e.empleadoCategoriaId
        left join cuotas_empleados ce on (e.entidadFederativaId=ce.empleadoEntidadCuota
        and e.empleadoConsecutivoId=ce.empleadoConsecutivoCuota
        and e.empleadoCategoriaId=ce.empleadoCategoriaCuota)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
        left join catalogopuntosservicios cps on (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
        left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
        left join catalogolineanegocio cln on (cln.idLineaNegocio=e.empleadoLineaNegocioId)
        left join entidadesfederativas entf on (entf.idEntidadFederativa=e.idEntidadTrabajo)
        where hs.estatus=0";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getSueldosEmpleados " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getSueldosaConfirmar ERROR:" . $e->getMessage());
    }
}

public function confirmarorechazarsueldo($entidadempleado, $consecutivoempleado, $categoriaempleado, $cuotanueva, $sueldonuevo, $idpeticion, $accion, $usuario)
{
        //$this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");
    $lista = array();
    try {
        if ($accion == 0) {
                //rechazo de salario
            /*$sql = "DELETE FROM historico_sueldosadministrativos
            WHERE IdHistoricoSueldo='$idpeticion'";*/
            $sql = "update historico_sueldosadministrativos
            set fechaAceptacion=now(),usuarioAceptacion='$usuario',estatus='2'
            where IdHistoricoSueldo='$idpeticion'";
        }if ($accion == 1) {
                //acepta aumentosalario

            $sql = "update historico_sueldosadministrativos
            set fechaAceptacion=now(),usuarioAceptacion='$usuario',estatus='1'
            where IdHistoricoSueldo='$idpeticion'";

            $sql1 = "SELECT * FROM cuotas_empleados
            where empleadoEntidadCuota='$entidadempleado'
            and empleadoConsecutivoCuota='$consecutivoempleado'
            and empleadoCategoriaCuota='$categoriaempleado'";
            $resqry0  = mysqli_query($this->conn, $sql1);
            $datosql1 = array();
            while (($resqry = mysqli_fetch_array($resqry0, MYSQLI_ASSOC))) {
                $datosql1[] = $resqry;
            }
            $conteoqry = count($datosql1);

            if ($conteoqry > 0) {
                    //UPDATE tbl CUOTAS_EMPLEADOS
                $sql2 = "update cuotas_empleados
                set sueldoEmpleado='$sueldonuevo'
                ,cuotaDiariaEmpleado='$cuotanueva'
                ,bonoAsistenciaEmpleado='0'
                ,bonoPuntualidadEmpleado='0'
                ,usuarioCapturaCuota='$usuario'
                ,fechaCapturaCuota=now()
                where empleadoEntidadCuota='$entidadempleado'
                and empleadoConsecutivoCuota='$consecutivoempleado'
                and empleadoCategoriaCuota='$categoriaempleado'";
                $res1 = mysqli_query($this->conn, $sql2);

            } else {
                    //insert en tbl CUOTAS_EMPLEADOS
                $sql3 = "insert into cuotas_empleados(empleadoEntidadCuota, empleadoConsecutivoCuota, empleadoCategoriaCuota,
                sueldoEmpleado, cuotaDiariaEmpleado, bonoAsistenciaEmpleado, bonoPuntualidadEmpleado,
                usuarioCapturaCuota, fechaCapturaCuota)values('$entidadempleado','$consecutivoempleado','$categoriaempleado','$sueldonuevo','$cuotanueva','0','0','$usuario',now());";
                $res2 = mysqli_query($this->conn, $sql3);

            }
        }

            //$this -> logger -> LogInfo ("Ejecutando SQL: getSueldosEmpleados " . $sql);

        $res = mysqli_query($this->conn, $sql);

            /*  while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

        return $lista;*/

    } catch (Exception $e) {

        $this->logger->LogInfo("getSueldosaConfirmar ERROR:" . $e->getMessage());
    }
}

//////subir apartir de aqui

public function gettblhistoricosueldos()
{
        //$this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");

    $lista = array();

    try {

        $sql = "select concat_ws('-', e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado
        ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        ,e.entidadFederativaId
        ,e.empleadoConsecutivoId
        ,e.empleadoCategoriaId
        , e.fechaIngresoEmpleado
        ,cp.descripcionPuesto
        ,ct.descripcionTurno
        ,e.empleadoIdPuntoServicio
        ,cps.puntoServicio
        ,ef.nombreEntidadFederativa
        ,cee.descripcionEstatusEmpleado
        ,hs.sueldoAnterior
        ,hs.nuevoSueldo
        ,hs.cuotaanterior
        ,hs.cuotanueva
        ,hs.IdHistoricoSueldo
        ,hs.fechaPeticion
        ,hs.fechaAceptacion
        ,hs.estatus
        ,cln.descripcionLineaNegocio
        ,entf.nombreEntidadFederativa
        ,cee.descripcionEstatusEmpleado
        ,e.fechaIngresoEmpleado as FechaIngresoActual
        ,e.fechaBajaEmpleado as FechaBajaActual
        ,ifnull(emp.fechaIngresoEmpleado,0)as FechaIngresoEmpN
        ,ifnull(emp.fechaBajaEmpleado,0)as FechaBajaEmpN
        ,ifnull(empe.empleadoFechaIngresoE,0)as FechaIngresoEmpEdit
        ,ifnull(empe.empleadoFechaBajaE,0)as FechaBajaEmpEit
        from historico_sueldosadministrativos hs
        left join empleados e
        on hs.entidadAdminH=e.entidadFederativaId
        and hs.consecutivoAdminH=e.empleadoConsecutivoId
        and hs.categoriaAdminH=e.empleadoCategoriaId
        left join cuotas_empleados ce on (e.entidadFederativaId=ce.empleadoEntidadCuota
        and e.empleadoConsecutivoId=ce.empleadoConsecutivoCuota
        and e.empleadoCategoriaId=ce.empleadoCategoriaCuota)
        left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
        left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
        left join catalogopuntosservicios cps on (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
        left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
        left join catalogolineanegocio cln on (cln.idLineaNegocio=e.empleadoLineaNegocioId)
        left join entidadesfederativas entf on (entf.idEntidadFederativa=e.idEntidadTrabajo)
        left join empleados emp on (hs.entidadAdminH=emp.entidadFederativaId and hs.consecutivoAdminH=emp.empleadoConsecutivoId and hs.categoriaAdminH=emp.empleadoCategoriaId and (emp.fechaIngresoEmpleado <= hs.fechaPeticion and(emp.fechaBajaEmpleado >= hs.fechaPeticion or emp.fechaBajaEmpleado = '0000-00-00')))
        left join empleadosedited empe on (hs.entidadAdminH=empe.entidadFederativaEmpleadoEdited and hs.consecutivoAdminH=empe.consecutivoEmpleadoEdited and hs.categoriaAdminH=empe.categoriaEmpleadoEdited and (empe.empleadoFechaIngresoE <= hs.fechaPeticion and(empe.empleadoFechaBajaE >= hs.fechaPeticion)))
        where hs.estatus=1
        group by numeroEmpleado,fechaPeticion";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getSueldosEmpleados " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("gettblhistoricosueldos ERROR:" . $e->getMessage());
    }
}
public function gethistoricosueldobyfecha($tipoconsulta, $fechainicio, $fechafin)
{
        //$this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");

    $lista = array();

    try {
        if ($tipoconsulta == 1) {
            $sql = "select concat_ws('-', e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado
            ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
            ,e.entidadFederativaId
            ,e.empleadoConsecutivoId
            ,e.empleadoCategoriaId
            , e.fechaIngresoEmpleado
            ,cp.descripcionPuesto
            ,ct.descripcionTurno
            ,e.empleadoIdPuntoServicio
            ,cps.puntoServicio
            ,ef.nombreEntidadFederativa
            ,cee.descripcionEstatusEmpleado
            ,hs.sueldoAnterior
            ,hs.nuevoSueldo
            ,hs.cuotaanterior
            ,hs.cuotanueva
            ,hs.IdHistoricoSueldo
            ,hs.fechaPeticion
            ,hs.fechaAceptacion
            ,hs.estatus
            ,cl.descripcionLineaNegocio
            ,e.fechaIngresoEmpleado as FechaIngresoActual
            ,e.fechaBajaEmpleado as FechaBajaActual
            ,ifnull(emp.fechaIngresoEmpleado,0)as FechaIngresoEmpN
            ,ifnull(emp.fechaBajaEmpleado,0)as FechaBajaEmpN
            ,ifnull(empe.empleadoFechaIngresoE,0)as FechaIngresoEmpEdit
            ,ifnull(empe.empleadoFechaBajaE,0)as FechaBajaEmpEit
            from historico_sueldosadministrativos hs
            left join empleados e
            on hs.entidadAdminH=e.entidadFederativaId
            and hs.consecutivoAdminH=e.empleadoConsecutivoId
            and hs.categoriaAdminH=e.empleadoCategoriaId
            left join cuotas_empleados ce on (e.entidadFederativaId=ce.empleadoEntidadCuota
            and e.empleadoConsecutivoId=ce.empleadoConsecutivoCuota
            and e.empleadoCategoriaId=ce.empleadoCategoriaCuota)
            left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
            left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
            left join catalogopuntosservicios cps on (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
            left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
            left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
            left join catalogolineanegocio cl on(e.empleadoLineaNegocioId=cl.idLineaNegocio)
            left join empleados emp on (hs.entidadAdminH=emp.entidadFederativaId and hs.consecutivoAdminH=emp.empleadoConsecutivoId and hs.categoriaAdminH=emp.empleadoCategoriaId and (emp.fechaIngresoEmpleado <= hs.fechaPeticion and(emp.fechaBajaEmpleado >= hs.fechaPeticion or emp.fechaBajaEmpleado = '0000-00-00')))
            left join empleadosedited empe on (hs.entidadAdminH=empe.entidadFederativaEmpleadoEdited and hs.consecutivoAdminH=empe.consecutivoEmpleadoEdited and hs.categoriaAdminH=empe.categoriaEmpleadoEdited and (empe.empleadoFechaIngresoE <= hs.fechaPeticion and(empe.empleadoFechaBajaE >= hs.fechaPeticion)))
            where hs.fechaPeticion between '$fechainicio' and '$fechafin'
            and hs.estatus=1
            group by numeroEmpleado,fechaPeticion";
        } else if ($tipoconsulta == 2) {
            $sql = "select concat_ws('-', e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado
            ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
            ,e.entidadFederativaId
            ,e.empleadoConsecutivoId
            ,e.empleadoCategoriaId
            , e.fechaIngresoEmpleado
            ,cp.descripcionPuesto
            ,ct.descripcionTurno
            ,e.empleadoIdPuntoServicio
            ,cps.puntoServicio
            ,ef.nombreEntidadFederativa
            ,cee.descripcionEstatusEmpleado
            ,hs.sueldoAnterior
            ,hs.nuevoSueldo
            ,hs.cuotaanterior
            ,hs.cuotanueva
            ,hs.IdHistoricoSueldo
            ,hs.fechaPeticion
            ,hs.fechaAceptacion
            ,hs.estatus
            ,cl.descripcionLineaNegocio
            ,e.fechaIngresoEmpleado as FechaIngresoActual
            ,e.fechaBajaEmpleado as FechaBajaActual
            ,ifnull(emp.fechaIngresoEmpleado,0)as FechaIngresoEmpN
            ,ifnull(emp.fechaBajaEmpleado,0)as FechaBajaEmpN
            ,ifnull(empe.empleadoFechaIngresoE,0)as FechaIngresoEmpEdit
            ,ifnull(empe.empleadoFechaBajaE,0)as FechaBajaEmpEit
            from historico_sueldosadministrativos hs
            left join empleados e
            on hs.entidadAdminH=e.entidadFederativaId
            and hs.consecutivoAdminH=e.empleadoConsecutivoId
            and hs.categoriaAdminH=e.empleadoCategoriaId
            left join cuotas_empleados ce on (e.entidadFederativaId=ce.empleadoEntidadCuota
            and e.empleadoConsecutivoId=ce.empleadoConsecutivoCuota
            and e.empleadoCategoriaId=ce.empleadoCategoriaCuota)
            left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
            left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
            left join catalogopuntosservicios cps on (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
            left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
            left join catalogoestatusempleados cee on (cee.estatusEmpleadoId=e.empleadoEstatusId)
            left join catalogolineanegocio cl on(e.empleadoLineaNegocioId=cl.idLineaNegocio)
            left join empleados emp on (hs.entidadAdminH=emp.entidadFederativaId and hs.consecutivoAdminH=emp.empleadoConsecutivoId and hs.categoriaAdminH=emp.empleadoCategoriaId and (emp.fechaIngresoEmpleado <= hs.fechaPeticion and(emp.fechaBajaEmpleado >= hs.fechaPeticion or emp.fechaBajaEmpleado = '0000-00-00')))
            left join empleadosedited empe on (hs.entidadAdminH=empe.entidadFederativaEmpleadoEdited and hs.consecutivoAdminH=empe.consecutivoEmpleadoEdited and hs.categoriaAdminH=empe.categoriaEmpleadoEdited and (empe.empleadoFechaIngresoE <= hs.fechaPeticion and(empe.empleadoFechaBajaE >= hs.fechaPeticion)))
            where hs.fechaAceptacion between '$fechainicio' and '$fechafin'
            and hs.estatus=1
            group by numeroEmpleado,fechaPeticion";
        }

            //$this -> logger -> LogInfo ("Ejecutando SQL: getSueldosEmpleados " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("gettblhistoricosueldosbyfecha ERROR:" . $e->getMessage());
    }
}

public function calcularPromedioCosto($claveUniforme, $anio)
{

    $sql = "UPDATE catalogotiposuniforme SET costoUniforme=(SELECT (SUM(precioUniforme)/count(*)) FROM comprauniforme cu JOIN facturauniforme f ON (f.idFactura=cu.idFacturaCompra)WHERE claveUniformeCompra=" . $claveUniforme . " AND f.fechaFactura between CAST('" . mysqli_real_escape_string($this->conn, $anio . "-01-01") . "' AS DATE) AND CAST('" . mysqli_real_escape_string($this->conn, $anio . "-12-31") . "' AS DATE)) WHERE idTipoUniforme=" . $claveUniforme;

  //  $this->logger->LogInfo("Ejecutando: updatePrecioUniforme como: " . $sql);

    $res = mysqli_query($this->conn, $sql);

        //$this -> logger -> LogInfo ("Se ejecuto consulta insertarCompra como " . $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar precioUniforme.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerEmpleadosEmaPunto($puesto, $puntoServicio, $fechaPeriodo1, $fechaPeriodo2, $roloperativo)
{
  //  $this->logger->LogInfo("obtenerEmpleadosEma");
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo1: " . $fechaPeriodo1);
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo2: " . $fechaPeriodo2);

    $listaEmpleados = array();

    $sql = "SELECT concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleado,
    concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreCompleto,e.empleadoNumeroSeguroSocial as nss,ef.nombreEntidadFederativa,cps.puntoServicio,cc.razonSocial,di.registroPatronal,e.empleadoEstatusId,
    dp.curpEmpleado,di.fechaImss,di.empleadoEstatusImss,di.fechaBajaImss,datediff(now(), di.fechaImss) as diasTranscurridos,di.salarioDiario
    FROM datosimss di
    LEFT JOIN empleados e ON (di.empladoEntidadImss=e.entidadFederativaId and di.empleadoConsecutivoImss=e.empleadoConsecutivoId and di.empleadoCategoriaImss=e.empleadoCategoriaId)
    LEFT JOIN catalogopuntosservicios cps ON (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
    LEFT JOIN catalogoclientes cc ON (cps.idClientePunto=cc.idCliente)
    LEFT JOIN entidadesfederativas ef ON (e.idEntidadTrabajo=ef.idEntidadFederativa)
    LEFT JOIN datospersonales dp ON (di.empladoEntidadImss=dp.empleadoEntidadPersonal and di.empleadoConsecutivoImss=dp.empleadoConsecutivoPersonal and di.empleadoCategoriaImss=dp.empleadoCategoriaPersonal)
    where e.empleadoIdPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicio) . " AND ((di.empleadoEstatusImss=7 AND di.fechaBajaImss >= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' AS DATE) and di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE)) OR (di.empleadoEstatusImss=3 AND di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE) )) AND e.empleadoIdPuesto=" . $puesto . "
    and e.roloperativo='$roloperativo'";

   // $this->logger->LogInfo("Ejecutando obtener Empleados para Ema Punto: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaEmpleados[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

    return $listaEmpleados;
}

public function obtenerFechaAltaImss($entidadFederativaId, $empleadoConsecutivoId, $empleadoCategoriaId)
{
    try {

        $sql = "SELECT fechaImss FROM datosimss WHERE empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $entidadFederativaId) .
        "' AND empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'" .
        " AND empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoFolioTxtRequisicion en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $fecha = $reg["fechaImss"];
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

        return $fecha;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function obtenerCostoUniformes($puesto, $puntoServicio, $fechaPeriodo1, $fechaPeriodo2, $roloperativo)
{
    try {
      //  $this->logger->LogInfo("costouniformes");

        $sql = "SELECT ifnull(sum(ctu.costoUniforme),0) as costoTotal FROM empleados e LEFT JOIN asignacion_uniforme au ON (e.entidadFederativaId=au.entidadEmpAsignacion AND e.empleadoConsecutivoId=au.consecutivoEmpAsignacion AND e.empleadoCategoriaId=au.categoriaEmpAsignacion)
        LEFT JOIN catalogotiposuniforme ctu ON (au.claveUniAsignacion=ctu.idTipoUniforme) WHERE  e.empleadoIdPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoServicio) . " AND e.empleadoIdPuesto=" . mysqli_real_escape_string($this->conn, $puesto) . " AND au.fechaAsignacion BETWEEN
        CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' AS DATE) AND CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE)
        and e.roloperativo='" . mysqli_real_escape_string($this->conn, $roloperativo) . "'";

        //$this->logger->LogInfo("ejecutando totalCostoUniformes como: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $fecha = $reg["costoTotal"];
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

        return $fecha;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function obtenerClientesByEntidad($entidad)
{

    $lista = array();

    $sql = "SELECT DISTINCT cc.idCliente,cc.razonSocial,ef.nombreEntidadFederativa FROM catalogoclientes cc LEFT JOIN catalogopuntosservicios cps ON (cps.idClientePunto=cc.idCliente)
    LEFT JOIN entidadesfederativas ef ON (cps.idEntidadPunto=ef.idEntidadFederativa) WHERE ef.idEntidadFederativa='$entidad' ORDER BY cc.razonSocial ASC";

        //$this->logger->LogInfo("ejecutando obtenerClientesByEntidad como: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;

    }
        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

    return $lista;

}

public function traerEntidadesCliente($cliente)
{

    $lista = array();

    $sql = "SELECT DISTINCT ef.idEntidadFederativa,ef.nombreEntidadFederativa FROM entidadesfederativas ef LEFT JOIN catalogopuntosservicios cps ON (cps.idEntidadPunto=ef.idEntidadFederativa)
    LEFT JOIN catalogoclientes cc ON (cps.idClientePunto=cc.idCliente) WHERE cc.idCliente='$cliente' ORDER BY ef.nombreEntidadFederativa ASC";

        //$this->logger->LogInfo("ejecutando obtenerClientesByEntidad como: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;

    }
        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

    return $lista;

}

public function getcatbancos()
{

    $bancos = array();

    try {

        $sql = "select * from bancos_empresa order by nombreBanco";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $bancos[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $bancos;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function traerEventualesTableSup($user)
{
        //$this-> logger -> LogInfo("traerCatalogoPuntosServicios");
    $lista = array();
    try {

        $sql = "SELECT se.idServicioEventual,se.folioEventual,se.nombreServicio,ef.nombreEntidadFederativa,se.direccionEventual,cc.razonSocial,cp.descripcionPuesto,ct.descripcionTurno,se.numElementosEv,se.fechaInicioEv,se.fechaFinEv,se.usuarioCaptura,se.costoEventual,se.fechaCaptura
        FROM servicioseventuales se
        LEFT JOIN entidadesfederativas ef ON (se.entidadEventual=ef.idEntidadFederativa)
        LEFT JOIN catalogoclientes cc ON (se.clienteEventual=cc.idCliente)
        LEFT JOIN catalogopuestos cp ON(se.puestoEventual=cp.idPuesto)
        LEFT JOIN catalogoturnos ct ON (se.idTurnoEv=ct.idTipoTurno) WHERE usuarioCaptura='" . $user . "' ORDER BY fechaCaptura DESC ";

            //$this -> logger -> LogInfo ("ejecutando traer eventuales en persistencia ". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }

}

public function registrarTipoTurno($tipoT, $fechaTurno, $empleado, $puntoServicio)
{
        //$this -> logger -> LogInfo ("Ejecutando insertar Eventual en persistencia ");

    $sql = "INSERT INTO turnoasistencia (entidadEmpTurno,consecutivoEmpTurno,categoriaEmpTurno,puntoServicioTurno,tipoTurno,fechaTurno) values ( " .
    "'" . mysqli_real_escape_string($this->conn, $empleado["entidadId"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $empleado["consecutivoId"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $empleado["tipoId"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $puntoServicio) . "', " .
    "" . mysqli_real_escape_string($this->conn, $tipoT) . ", " .
    "CAST('" . mysqli_real_escape_string($this->conn, $fechaTurno) . "' AS DATE))";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertar Turno Asistencia como " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar turno Asistencia. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function deleteTipoTurno($datos)
{
    $sql = "DELETE FROM turnoasistencia WHERE entidadEmpTurno = '" . mysqli_real_escape_string($this->conn, $datos["empleadoEntidad"]) . "' AND " .
    "consecutivoEmpTurno= '" . mysqli_real_escape_string($this->conn, $datos["empleadoConsecutivo"]) . "' AND " .
    "categoriaEmpTurno='" . mysqli_real_escape_string($this->conn, $datos["empleadoTipo"]) . "' AND " .
    "fechaTurno= CAST('" . mysqli_real_escape_string($this->conn, $datos["fechaAsistencia"]) . "' AS DATE)";

    $res = mysqli_query($this->conn, $sql);

        //$this -> logger -> LogInfo ("Se ejecuto consulta eliminar Asistencia Turno como " . $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al eliminar Asistencia Turno. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function obtenerTurnoAsistencia($fecha, $empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria, $puntoServicio ,$idplantillaPunto)
{
    $turno = 0;
    try {

        $sql = "SELECT tipoTurno FROM turnoasistencia 
        left join asistencia on (asistencia.empleadoEntidad=turnoasistencia.entidadEmpTurno and asistencia.empleadoConsecutivo=turnoasistencia.consecutivoEmpTurno and asistencia.empleadoTipo=turnoasistencia.categoriaEmpTurno and asistencia.fechaAsistencia=turnoasistencia.fechaTurno and asistencia.puntoServicioAsistenciaId=turnoasistencia.puntoServicioTurno)
        WHERE entidadEmpTurno = '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "' AND " .
        "consecutivoEmpTurno= '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "' AND " .
        "categoriaEmpTurno='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "' AND " .
        "puntoServicioTurno=" . mysqli_real_escape_string($this->conn, $puntoServicio) . " AND " .
        "idPlantillaAsis=" . mysqli_real_escape_string($this->conn, $idplantillaPunto) . " AND " .
        "fechaTurno= CAST('" . mysqli_real_escape_string($this->conn, $fecha) . "' AS DATE)";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $turno = $reg["tipoTurno"];
        }
        return $turno;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function gastoByEntidad($entidad, $fechaPeriodo1, $fechaPeriodo2)
{
    try {

        $sql = "SELECT SUM(lm.monto) as total from libromovimientos lm LEFT JOIN entidadesfederativas ef ON (lm.idEntidad=ef.idEntidadFederativa)
        WHERE  ef.idEntidadFederativa='" . mysqli_real_escape_string($this->conn, $entidad) . "' AND  lm.fechaMovimiento BETWEEN
        CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' AS DATE) AND CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE)";

            /*if($entidad=='09')
            $this->logger->LogInfo("ejecutando totalGasto como: " . $sql);*/

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $costo = $reg["total"];
            }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

            return $costo;

        } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

    public function totalElementosByCliente($entidad, $fechaPeriodo1, $fechaPeriodo2)
    {
        try {

            $sql = "SELECT SUM(sp.numeroElementos) as numElementos FROM servicios_plantillas sp
            left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
            left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
            left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
            WHERE sp.numeroElementos>0 and ef.idEntidadFederativa= '" . mysqli_real_escape_string($this->conn, $entidad) . "' and
            (( sp.estatusPlantilla=1 and fechaInicio<=cast('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' as date ) )
            or(sp.estatusPlantilla=0 and fechaInicio<=cast('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' as date ) and fechaTerminoPlantilla>=cast('" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' as date ) ))";

            //$this->logger->LogInfo("ejecutando totalElementos como: " . $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $elementos = $reg["numElementos"];
            }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

            return $elementos;

        } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

////////////////////////////////////////////nuevo patra historico bajas y altas imss//////////////////////////////////////////////////////////////////////////////////////
    public function obtenerempleadosimssphistoricomov($foliotxt, $accion)
    {
//funcion que trae los elementos de nuevo  ingreso y reingresos y para bajas
        $listaEmpleados = array();

        $sql = "SELECT di.empladoEntidadImss,di.empleadoConsecutivoImss,di.empleadoCategoriaImss,e.empleadoEstatusId,di.salarioDiario,di.registroPatronal,
        di.fechaImss,di.fechaBajaImss,datediff(now(), di.fechaImss) as diasTranscurridos,di.empleadoEstatusImss,di.idMotivoBajaImss
        FROM datosimss di
        LEFT JOIN empleados e
        ON (di.empladoEntidadImss=e.entidadFederativaId and di.empleadoConsecutivoImss=e.empleadoConsecutivoId and di.empleadoCategoriaImss=e.empleadoCategoriaId)";
        if ($accion == 1) {
            $sql .= "WHERE di.folioTxt='" . mysqli_real_escape_string($this->conn, $foliotxt) . "'";
        } else if ($accion == 2) {$sql .= "WHERE di.folioTxtBaja='" . mysqli_real_escape_string($this->conn, $foliotxt) . "'";}

        //$this->logger->LogInfo("Ejecutando sql de empleadosparamovimientosimss: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this->logger->LogInfo("valor del array de la obtenerDatosCuadroAntig " . var_export($listaEmpleados, true));

        return $listaEmpleados;
    }
    public function obtenerestatusempleadoenhistoricoimss($empleado)
    {
//funcion que trae de historico de movimiento imss por empleado el ultimo estatus de movimiento
        $listaEmpleadosTipoEstatus = array();
        $sql                       = "SELECT *
        from historicomovimientosimss
        WHERE fechaMovimiento=(SELECT max(fechaMovimiento) AS fecha
        FROM historicomovimientosimss
        WHERE empEntidadMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empladoEntidadImss"]) . "'
        AND EmpConsecutivoMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoImss"]) . "'
        AND empCategoriaMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaImss"]) . "')
        and  estatusmov=0";

        $this->logger->LogInfo("Ejecutando sql de empleadosultimomov: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaEmpleadosTipoEstatus[] = $reg;
        }
        return $listaEmpleadosTipoEstatus;
    }


    public function obtenerestatusempleadoenhistoricoimssRP($empleado)
    {
//funcion que trae de historico de movimiento imss por empleado el ultimo estatus de movimiento
        $listaEmpleadosTipoEstatus = array();
        $sql                       = "SELECT *
        from historicomovimientosimss
        WHERE fechaMovimiento=(SELECT max(fechaMovimiento) AS fecha
        FROM historicomovimientosimss
        WHERE empEntidadMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empladoEntidadImss"]) . "'
        AND EmpConsecutivoMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoImss"]) . "'
        AND empCategoriaMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaImss"]) . "')
        AND empEntidadMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empladoEntidadImss"]) . "'
        AND EmpConsecutivoMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoImss"]) . "'
        AND empCategoriaMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaImss"]) . "'
        and  estatusmov=0";

        // $this->logger->LogInfo("Ejecutando sql de empleadosu/**/ltimomov: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaEmpleadosTipoEstatus[] = $reg;
        }
        return $listaEmpleadosTipoEstatus;
    }

    public function actualizahistoricomovimsbyestatus($empleado, $usuario, $factorIntegracion, $salarioBaseCotizacion, $ultimoestatusmovimiento, $numeroLote)
    {

        $sql = "UPDATE  historicomovimientosimss
        set fechaMovimiento=now(),
        sdiMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["salarioDiario"]) . "',
        FIntegracionMovimiento='$factorIntegracion',
        SBCMovimiento='$salarioBaseCotizacion',
        loteImss='$numeroLote',
        fechaAlta='" . mysqli_real_escape_string($this->conn, $empleado["fechaImss"]) . "',
        registroMovimiento= '" . mysqli_real_escape_string($this->conn, $empleado["registroPatronal"]) . "',
        usuarioEdicion=' $usuario',
        estatusmov=1,";
        if ($empleado["fechaBajaImss"] == "") {
            $sql .= " fechaBaja=NULL";

        } else { $sql .= " fechaBaja= '" . mysqli_real_escape_string($this->conn, $empleado["fechaBajaImss"]) . "'";}
        $sql .= " where empEntidadMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empladoEntidadImss"]) . "'
        and EmpConsecutivoMovimiento= '" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoImss"]) . "'
        and empCategoriaMovimiento='" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaImss"]) . "'
        and tipoMovimiento='$ultimoestatusmovimiento'
        and estatusmov=0 ";
        $this->logger->LogInfo("Se ejecuto updatyehisticoimss " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio unal actualizarultimomovimss en historico movimientos. ");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function insertahistoricoimssmov($empleado, $tipomovimiento, $usuario, $factorIntegracion, $salarioBaseCotizacion, $numeroLote)
    {
        //$this -> logger -> LogInfo ("Ejecutando insertar Eventual en persistencia ");
        $sql = "INSERT INTO historicomovimientosimss(empEntidadMovimiento, EmpConsecutivoMovimiento, empCategoriaMovimiento, tipoMovimiento, fechaMovimiento, sdiMovimiento, loteImss,registroMovimiento, usuarioEdicion,FIntegracionMovimiento, SBCMovimiento, fechaAlta, fechaBaja,estatusmov)
        values ('" . mysqli_real_escape_string($this->conn, $empleado["empladoEntidadImss"]) . "',
        '" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoImss"]) . "',
        '" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaImss"]) . "',
        '" . mysqli_real_escape_string($this->conn, $tipomovimiento) . "',
        now(),

        '" . mysqli_real_escape_string($this->conn, $empleado["salarioDiario"]) . "',
        '" . mysqli_real_escape_string($this->conn, $numeroLote) . "',
        '" . mysqli_real_escape_string($this->conn, $empleado["registroPatronal"]) . "',
        '" . mysqli_real_escape_string($this->conn, $usuario) . "',
        '" . mysqli_real_escape_string($this->conn, $factorIntegracion) . "',
        '" . mysqli_real_escape_string($this->conn, $salarioBaseCotizacion) . "',
        '" . mysqli_real_escape_string($this->conn, $empleado["fechaImss"]) . "'";

        if ($empleado["fechaBajaImss"] == "") {
            $sql .= " ,NULL,1)";
        } else { $sql .= " ,'" . mysqli_real_escape_string($this->conn, $empleado["fechaBajaImss"]) . "',1)";}

        //$this->logger->LogInfo("Se ejecuto consulta  insertar Turno Asistencia como " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar en historico movimientos. ");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function updatehistoricoimssmov($empleado, $usuario)
    {
        //$this -> logger -> LogInfo ("Ejecutando insertar Eventual en persistencia ");
        $sql = "INSERT INTO historicomovimientosimss(empEntidadMovimiento, EmpConsecutivoMovimiento, empCategoriaMovimiento, tipoMovimiento, fechaMovimiento, sdiMovimiento, registroMovimiento, usuarioEdicion,FIntegracionMovimiento, SBCMovimiento, fechaAlta, fechaBaja)
        values ('" . mysqli_real_escape_string($this->conn, $empleado["empladoEntidadImss"]) . "',
        '" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoImss"]) . "',
        '" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaImss"]) . "',
        '" . mysqli_real_escape_string($this->conn, $tipomovimiento) . "',
        now(),
        '" . mysqli_real_escape_string($this->conn, $empleado["salarioDiario"]) . "',
        '" . mysqli_real_escape_string($this->conn, $empleado["registroPatronal"]) . "',
        '" . mysqli_real_escape_string($this->conn, $usuario) . "',
        '" . mysqli_real_escape_string($this->conn, $factorIntegracion) . "',
        '" . mysqli_real_escape_string($this->conn, $salarioBaseCotizacion) . "',
        '" . mysqli_real_escape_string($this->conn, $empleado["fechaImss"]) . "'";

        //$this->logger->LogInfo("Se ejecuto consulta  insertar Turno Asistencia como " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar en historico movimientos. ");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function inserthistoricomovporeditsueldooregpatronal($entidademp, $consecutivoemp, $categoriaemp, $tipomovimiento, $salarioDiario, $registroPatronal, $usuario, $fechaingreso, $fechabaja, $factorintegracion, $salariobasecotizacion)
    {

        // $this->logger->LogInfo("Ejecutando insertar Eventual en persistencia ");

        $sql = "INSERT INTO historicomovimientosimss(empEntidadMovimiento, EmpConsecutivoMovimiento, empCategoriaMovimiento, tipoMovimiento, fechaMovimiento,usuarioEdicion,registroMovimiento,estatusmov) values (
        '" . mysqli_real_escape_string($this->conn, $entidademp) . "',
        '" . mysqli_real_escape_string($this->conn, $consecutivoemp) . "',
        '" . mysqli_real_escape_string($this->conn, $categoriaemp) . "',
        '" . mysqli_real_escape_string($this->conn, $tipomovimiento) . "',
        now(),
        '" . mysqli_real_escape_string($this->conn, $usuario) . "',
        '" . mysqli_real_escape_string($this->conn, $registroPatronal) . "',0)";

        // $this->logger->LogInfo("Se ejecuto consulta  insertar Turno Asistencia como " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar en historico movimientos. ");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function obtenerEmpleadosEva($registro, $fechaPeriodo1, $fechaPeriodo2)
    {
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo1: " . $fechaPeriodo1);
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo2: " . $fechaPeriodo2);

        $listaEmpleados = array();

        $sql = "SELECT concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleado,
        concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreCompleto,e.empleadoNumeroSeguroSocial as nss,ef.nombreEntidadFederativa,cps.puntoServicio,cc.razonSocial,e.empleadoEstatusId,
        dp.curpEmpleado,dp.rfcEmpleado,di.fechaImss,di.empleadoEstatusImss,di.fechaBajaImss,datediff(now(), di.fechaImss) as diasTranscurridos,di.salarioDiario,di.registroPatronal,di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss
        FROM datosimss di
        LEFT JOIN historicomovimientosimss hmi ON (di.empladoEntidadImss=hmi.empEntidadMovimiento and di.empleadoConsecutivoImss=hmi.EmpConsecutivoMovimiento and di.empleadoCategoriaImss=hmi.empCategoriaMovimiento)
        LEFT JOIN empleados e ON (di.empladoEntidadImss=e.entidadFederativaId and di.empleadoConsecutivoImss=e.empleadoConsecutivoId and di.empleadoCategoriaImss=e.empleadoCategoriaId)
        LEFT JOIN catalogopuntosservicios cps ON (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        LEFT JOIN catalogoclientes cc ON (cps.idClientePunto=cc.idCliente)
        LEFT JOIN entidadesfederativas ef ON (e.idEntidadTrabajo=ef.idEntidadFederativa)
        LEFT JOIN datospersonales dp ON (di.empladoEntidadImss=dp.empleadoEntidadPersonal and di.empleadoConsecutivoImss=dp.empleadoConsecutivoPersonal and di.empleadoCategoriaImss=dp.empleadoCategoriaPersonal)
        where di.registroPatronal='" . mysqli_real_escape_string($this->conn, $registro) . "' AND ((di.empleadoEstatusImss=7 AND di.fechaBajaImss >= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' AS DATE) and di.fechaBajaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE)
        AND di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE)
        OR (di.empleadoEstatusImss=3 AND di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE)) )) group by numeroEmpleado";
$this -> logger -> LogInfo ("Ejecutando obtenerEmpleadosEva: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

        return $listaEmpleados;
    }

    public function getIncidenciasAdmin()
    {

        //$this-> logger -> LogInfo("getCatalogoIncidencias");

        $lista = array();

        $sql = "SELECT * FROM catalogoincidencias WHERE incidenciaId<>3 AND incidenciaId<>11 AND incidenciaId<>12 AND incidenciaId<>13 AND incidenciaId<>14";

        //$this -> logger -> LogInfo ("Ejecutando getCatalogoIncidencias: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    }

    public function getListaEmpleadosAdminGeneral($fecha1, $fecha2, $periodoId, $entidad, $RolUsuario, $opcion, $NombreUsuario,$lineaNegocioUsuario)
    {

        //$this-> logger -> LogInfo("getListaEmpleadosAdminNombre");
        //$this -> logger -> LogInfo ("valor del array de la opcion ".var_export ($opcion, true));
        $lista = array();
        $sql = "select
        e.entidadFederativaId
        ,e.empleadoConsecutivoId
        ,e.empleadoCategoriaId
        ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
        ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
        ,e.fechaIngresoEmpleado
        ,e.empleadoIdPuntoServicio
        ,cps.puntoServicio
        ,e.empleadoIdPuesto
        ,cp.descripcionPuesto
        ,e.numeroCta
        ,e.numeroCtaClabe
        ,e.tipoPeriodo
        ,ctp.descripcionTipoPeriodo
        ,e.empleadoEstatusId
        ,e.fechaBajaEmpleado
        , cc.nombreComercial
        ,ef.nombreEntidadFederativa as Entidad
        ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
        ,e.roloperativo
        ,cln.descripcionLineaNegocio
        from empleados e
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
        left join entidadesfederativas ef on(e.idEntidadTrabajo=ef.idEntidadFederativa)
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
        where
        e.idTipoPuesto='02'
        and e.tipoPeriodo=" . $this->safeValue($periodoId) . " 
        and cps.idClientePunto=2
        and ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) or 
        (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)))";
        if(($opcion != "1") && ($RolUsuario == "Asistencia Administrativo") && (($NombreUsuario == "zue*2") || ($NombreUsuario == "leon*10"))){
            $sql.="and ((e.empleadoLineaNegocioId='1') or (e.empleadoLineaNegocioId='2') or (e.empleadoLineaNegocioId='3') or (e.empleadoLineaNegocioId='4')";
        }else{
            $sql.="and (";
            for($j=0;$j<count($lineaNegocioUsuario);$j++){
                if(!is_array($lineaNegocioUsuario)){
                    $lineanegocioconsulta=$lineaNegocioUsuario;
                }else{
                    $lineanegocioconsulta=$lineaNegocioUsuario[$j];
                } 
                for($i=0;$i<count($entidad);$i++){
                    if(!is_array($entidad)){
                        $entidadparaconsulta=$entidad;
                    }else{
                        $entidadparaconsulta=$entidad[$i];
                    }
                    if(($i==0) && ($j==0)){
                        $sql.=" (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";  
                    }else{
                        $sql.=" or (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";       
                    }
                }
            }  
        }
        $sql.=") AND  concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId)!='09-0003-02'
                AND  concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId)!='09-0001-02'
                order by nombreEmpleado asc";        
//$this->logger->LogInfo("Ejecutando getListaEmpleadosByPeriodoGeneral: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }
        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
        return $lista;
    }

    public function getAdminsByNombre($fecha1, $fecha2, $periodoId, $nombre, $entidad, $RolUsuario, $lineaNegocioUsuario)
    {

        //$this-> logger -> LogInfo("getListaEmpleadosByPeriodoNombre");
        $lista = array();

        $sql = "select
        e.entidadFederativaId
        ,e.empleadoConsecutivoId
        ,e.empleadoCategoriaId
        ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
        ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
        ,e.fechaIngresoEmpleado
        ,e.empleadoIdPuntoServicio
        ,cps.puntoServicio
        ,e.empleadoIdPuesto
        ,cp.descripcionPuesto
        ,e.empleadoIdTurno
        ,ct.descripcionTurno
        ,e.tipoPeriodo
        ,e.numeroCta
        ,e.numeroCtaClabe
        ,ctp.descripcionTipoPeriodo
        ,e.empleadoEstatusId
        ,e.fechaBajaEmpleado
        , cc.nombreComercial
        ,ef.nombreEntidadFederativa as Entidad
        ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
        ,e.roloperativo
        ,cln.descripcionLineaNegocio
        from empleados e
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
        left join entidadesfederativas ef on(e.idEntidadTrabajo=ef.idEntidadFederativa)
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
        where
        e.idTipoPuesto='02'
        and e.tipoPeriodo=" . $this->safeValue($periodoId) . "
        and concat_ws(' ',e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) like '%" . $this->safeValue($nombre) . "%'
        and cps.idClientePunto=2
        and ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) or
        (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)))";

        $sql.="and (";
        for($j=0;$j<count($lineaNegocioUsuario);$j++){
            if(!is_array($lineaNegocioUsuario)){
                $lineanegocioconsulta=$lineaNegocioUsuario;
            }else{
                $lineanegocioconsulta=$lineaNegocioUsuario[$j];
            } 
            for($i=0;$i<count($entidad);$i++){
                if(!is_array($entidad)){
                    $entidadparaconsulta=$entidad;
                }else{
                    $entidadparaconsulta=$entidad[$i];
                }
                if(($i==0) && ($j==0)){
                    $sql.=" (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";  
                }else{
                    $sql.=" or (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";       
                }
            }
        }
        $sql.=") order by nombreEmpleado asc";
        //$this->logger->LogInfo("Ejecutando getListaEmpleadosByPeriodoNombre: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    }

    public function getAdminById($fecha1, $fecha2, $periodoId, $empleado, $entidad, $RolUsuario, $lineaNegocioUsuario)
    {

        //$this-> logger -> LogInfo("getListaEmpleadosPeriodoEmpleadoId");
        //$this -> logger -> LogInfo ("valor del array de la conteoentidad2 ".var_export ($conteoentidad2, true));
        $lista = array();

        $sql = "select
        e.entidadFederativaId
        ,e.empleadoConsecutivoId
        ,e.empleadoCategoriaId
        ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
        ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
        ,e.fechaIngresoEmpleado
        ,e.empleadoIdPuntoServicio
        ,cps.puntoServicio
        ,e.empleadoIdPuesto
        ,cp.descripcionPuesto
        ,e.empleadoIdTurno
        ,ct.descripcionTurno
        ,e.numeroCta
        ,e.numeroCtaClabe
        ,e.tipoPeriodo
        ,ctp.descripcionTipoPeriodo
        ,empleadoEstatusId
        ,e.fechaBajaEmpleado
        , cc.nombreComercial
        ,ef.nombreEntidadFederativa as Entidad
        ,concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia) as supervisorId
        ,e.roloperativo
        ,cln.descripcionLineaNegocio
        from empleados e
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
        left join entidadesfederativas ef on(e.idEntidadTrabajo=ef.idEntidadFederativa)
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
        where
        e.idTipoPuesto='02'
        and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
        and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
        and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
        and e.tipoPeriodo=" . $this->safeValue($periodoId) . " 
        and cps.idClientePunto=2
        and ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) or
        (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE))) ";
        
        $sql.="and (";
        for($j=0;$j<count($lineaNegocioUsuario);$j++){
            if(!is_array($lineaNegocioUsuario)){
                $lineanegocioconsulta=$lineaNegocioUsuario;
            }else{
                $lineanegocioconsulta=$lineaNegocioUsuario[$j];
            } 
            for($i=0;$i<count($entidad);$i++){
                if(!is_array($entidad)){
                    $entidadparaconsulta=$entidad;
                }else{
                    $entidadparaconsulta=$entidad[$i];
                }
                if(($i==0) && ($j==0)){
                    $sql.=" (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";  
                }else{
                    $sql.=" or (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";       
                }
            }
        }
        $sql.=") order by nombreEmpleado asc";

   // $this -> logger -> LogInfo ("Ejecutando getListaEmpleadosPeriodoEmpleadoId: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

    //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    }

    public function registrarAsistenciaAdmin(
        $empleado,
        $incidenciaId,
        $asistenciaFecha,
        $usuarioCapturaAsistencia,
        $comentariIncidencia,
        $tipoPeriodo,
        $puestoCubiertoId,
        $selplantillaservicioincidencia,$conteobaja) {

        //$this -> logger -> LogInfo ("Ejecutando. registrarAsistencia en persistencia");

        // Buscamos si existe un registro de asistencia previo.
        $asistencia = $this->getAsistenciaByEmpleadoFecha($asistenciaFecha,
            $empleado["entidadId"],
            $empleado["consecutivoId"],
            $empleado["tipoId"]);

        $supervisor["entidadId"]     = '09';
        $supervisor["consecutivoId"] = '0017';
        $supervisor["tipoId"]        = '02';

        //$this -> logger -> LogInfo ("Se ejecuto consulta  asistencia como" . var_export ($asistencia, true));

        if (count($asistencia) == 0) {

            $sql = "INSERT INTO asistencia (empleadoEntidad, empleadoConsecutivo, empleadoTipo, puntoServicioAsistenciaId,supervisorEntidad,supervisorConsecutivo,supervisorTipo, incidenciaAsistenciaId, fechaAsistencia, fechaRegistroAsistencia, usuarioCapturaAsistencia,comentarioIncidencia, roloperativo,puestoCubiertoId,conteoPrimerDiaBaja) VALUES (";
            $sql .= "'" . $this->safeValue($empleado["entidadId"]) . "',";
            $sql .= "'" . $this->safeValue($empleado["consecutivoId"]) . "',";
            $sql .= "'" . $this->safeValue($empleado["tipoId"]) . "',";
            $sql .= "'" . $this->safeValue($empleado["puntoServicioId"]) . "','09','0017','02',";
            $sql .= "'" . $this->safeValue($incidenciaId) . "',";
            $sql .= "'" . $this->safeValue($asistenciaFecha) . "',";
            $sql .= "NOW(),";
            $sql .= "'" . $this->safeValue($usuarioCapturaAsistencia) . "',";
            $sql .= "'" . $this->safeValue($comentariIncidencia) . "',";
            $sql .= "'" . $this->safeValue($selplantillaservicioincidencia) . "',";
            $sql .= "" . $this->safeValue($puestoCubiertoId) . ",";

            $sql .= "" . $this->safeValue($conteobaja) . ");";

            $res = mysqli_query($this->conn, $sql);

            if (mysqli_errno($this->conn) == 0) {
                return true;
            }

            return false;
        } else {
            return $this->updateAsistenciaAdmin($empleado,

                $incidenciaId,
                $asistenciaFecha,
                $usuarioCapturaAsistencia,
                $comentariIncidencia,
                $tipoPeriodo, $puestoCubiertoId,$conteobaja);
        }
    }

    public function updateAsistenciaAdmin($empleado, $incidenciaId, $asistenciaFecha, $usuarioCapturaAsistencia, $comentarioIncidencia, $tipoPeriodo, $puestoCubiertoId,$conteobaja)
    {

        //$this-> logger -> LogInfo("updateAsistencia");

        $sql = "update asistencia " .
        "set puntoServicioAsistenciaId='" . $this->safeValue($empleado["puntoServicioId"]) . "'," .
        "incidenciaAsistenciaId=" . $this->safeValue($incidenciaId) . ", " .
        "fechaAsistencia='" . $this->safeValue($asistenciaFecha) . "', " .
        "lastEditedIncidencia=NOW(), " .
        "usuarioEditedAsistencia='" . $this->safeValue($usuarioCapturaAsistencia) . "',  " .
        "comentarioIncidencia='" . $this->safeValue($comentarioIncidencia) . "', " .
        "puestoCubiertoId='" . $this->safeValue($puestoCubiertoId) . "' ," .
        "conteoPrimerDiaBaja='" . $this->safeValue($conteobaja) . "' " .
        "where empleadoEntidad='" . $this->safeValue($empleado["entidadId"]) . "'" .
        "and  empleadoConsecutivo='" . $this->safeValue($empleado["consecutivoId"]) . "'" .
        "and  empleadoTipo='" . $this->safeValue($empleado["tipoId"]) . "'" .
        "and  fechaAsistencia='" . $this->safeValue($asistenciaFecha) . "'";

        // $this->logger->LogInfo("Ejecutando updateAsistenciaAdmin: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (mysqli_errno($this->conn) == 0) {
            return true;
        }

        return false;
    }

    public function registrarIncidenciaEspecialAdmin(
        $empleado,
        $incidenciaId,
        $asistenciaFecha,
        $usuarioCapturaAsistencia,
        $comentariIncidencia, $tipoPeriodo, $incidenciaPuesto) {

        //$this -> logger -> LogInfo ("Ejecutando. registrarIncidenciaEspecial en persistencia");

        // Buscamos si existe un registro de incidencia previo.
        $incidencia = $this->getIncidenciaByEmpleadoFecha($asistenciaFecha,
            $empleado["entidadId"],
            $empleado["consecutivoId"],
            $empleado["tipoId"], $incidenciaId);

        //$this -> logger -> LogInfo ("Se ejecuto consulta registrarIncidenciaEspecial como" . var_export ($incidencia, true));

        if (count($incidencia) == 0) {

            $sql = "INSERT INTO incidenciasespeciales (incidenciaEmpleadoEntidad
            , incidenciaEmpleadoConsecutivo
            , incidenciaEmpleadoTipo
            , incidenciaPuntoServicio
            , incidenciaSupervisorEntidad
            , incidenciaSupervisorConsecutivo
            , incidenciaSupervisorTipo
            , incidenciaId
            , incidenciaFecha
            , incidenciaFechaRegistro
            , incidenciaUsuarioCaptura
            ,incidenciaComentario
            ,incidenciaPuesto ) VALUES (";
            $sql .= "'" . $this->safeValue($empleado["entidadId"]) . "',";
            $sql .= "'" . $this->safeValue($empleado["consecutivoId"]) . "',";
            $sql .= "'" . $this->safeValue($empleado["tipoId"]) . "',";
            $sql .= "'" . $this->safeValue($empleado["puntoServicioId"]) . "','09','0017','02',";
            $sql .= "'" . $this->safeValue($incidenciaId) . "',";
            $sql .= "'" . $this->safeValue($asistenciaFecha) . "',";
            $sql .= "NOW(),";
            $sql .= "'" . $this->safeValue($usuarioCapturaAsistencia) . "',";
            $sql .= "'" . $this->safeValue($comentariIncidencia) . "',";
            $sql .= "" . $this->safeValue($incidenciaPuesto) . ");";

            $this->logger->LogInfo("Se ejecuto consulta  registrarIncidenciaEspecialAdmin como: " . $sql);
            $res = mysqli_query($this->conn, $sql);

            if (mysqli_errno($this->conn) == 0) {
                return true;
            }

            return false;

        } else {
            return $this->updateIncidenciaAdmin($empleado,
                $incidenciaId,
                $asistenciaFecha,
                $usuarioCapturaAsistencia,
                $comentariIncidencia,
                $tipoPeriodo, $incidenciaPuesto);
        }

    }

    public function updateIncidenciaAdmin($empleado, $incidenciaId, $asistenciaFecha, $usuarioCapturaAsistencia, $comentarioIncidencia, $tipoPeriodo, $incidenciaPuesto)
    {

        //$this-> logger -> LogInfo("updateIncidencia");

        $sql = "update incidenciasespeciales  " .
        "set incidenciaPuntoServicio='" . $this->safeValue($empleado["puntoServicioId"]) . "'," .
        "incidenciaId=" . $this->safeValue($incidenciaId) . ", " .
        "incidenciaFecha='" . $this->safeValue($asistenciaFecha) . "', " .
        "incidenciaLastEdited=NOW(), " .
        "incidenciaUsuarioEdited='" . $this->safeValue($usuarioCapturaAsistencia) . "',  " .
        "incidenciaComentario='" . $this->safeValue($comentarioIncidencia) . "', " .
        "incidenciaPuesto=" . $this->safeValue($incidenciaPuesto) . " " .
        "where incidenciaEmpleadoEntidad='" . $this->safeValue($empleado["entidadId"]) . "'" .
        "and  incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleado["consecutivoId"]) . "'" .
        "and  incidenciaEmpleadoTipo='" . $this->safeValue($empleado["tipoId"]) . "'" .
        "and  incidenciaId='" . $this->safeValue($incidenciaId) . "'" .
        "and  incidenciaFecha='" . $this->safeValue($asistenciaFecha) . "'";

        //$this -> logger -> LogInfo ("Ejecutando updateIncidencia: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (mysqli_errno($this->conn) == 0) {
            return true;
        }

        return false;
    }

    public function getListaAdminByFechaEntidad($fecha1, $fecha2, $entidad, $periodo, $RolUsuario, $NombreUsuario, $lineaNegocioUsuario)
    {

           // $this-> logger -> LogInfo("getListaEmpleadosAdminNombre");
        $lista = array();

        $sql = "select
        e.entidadFederativaId
        ,e.empleadoConsecutivoId
        ,e.empleadoCategoriaId
        ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
        ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
        ,e.fechaIngresoEmpleado
        ,e.empleadoIdPuntoServicio
        ,e.numeroCta
        ,e.numeroCtaClabe
        ,cps.puntoServicio
        ,e.empleadoIdPuesto
        ,cp.descripcionPuesto
        ,e.tipoPeriodo
        ,ctp.descripcionTipoPeriodo
        ,e.empleadoEstatusId
        ,e.fechaBajaEmpleado
        , cc.nombreComercial
        ,ef.nombreEntidadFederativa as Entidad
        ,cln.descripcionLineaNegocio
        from empleados e
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
        left join entidadesfederativas ef on(e.idEntidadTrabajo=ef.idEntidadFederativa)
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
        where
        e.idTipoPuesto='02'
        and cps.idClientePunto=2
        and e.tipoPeriodo=" . $this->safeValue($periodo) . "
        and ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) or
        (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE))) ";

        if(($RolUsuario == "Asistencia Administrativo") && (($NombreUsuario == "zue*2") || ($NombreUsuario == "leon*10"))){
            $sql.="and ((e.empleadoLineaNegocioId='1') or (e.empleadoLineaNegocioId='2') or (e.empleadoLineaNegocioId='3') or (e.empleadoLineaNegocioId='4')";
        }else{
            $sql.="and (";
            for($j=0;$j<count($lineaNegocioUsuario);$j++){
                if(!is_array($lineaNegocioUsuario)){
                    $lineanegocioconsulta=$lineaNegocioUsuario;
                }else{
                    $lineanegocioconsulta=$lineaNegocioUsuario[$j];
                } 
                for($i=0;$i<count($entidad);$i++){
                    if(!is_array($entidad)){
                        $entidadparaconsulta=$entidad;
                    }else{
                        $entidadparaconsulta=$entidad[$i];
                    }
                    if(($i==0) && ($j==0)){
                        $sql.=" (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";  
                    }else{
                        $sql.=" or (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";       
                    }
                }
            }  
        }
        $sql.=") order by nombreEmpleado asc"; 
            // $this -> logger -> LogInfo ("Ejecutando getListaEmpleadosByPeriodoGeneral: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    }

    public function getAdminByRangoFechaEntidad($fecha1, $fecha2, $empleado, $entidad, $RolUsuario, $NombreUsuario, $lineaNegocioUsuario)
    {

        //$this-> logger -> LogInfo("getListaEmpleadosPeriodoEmpleadoId");
        $lista = array();

        $sql = "select
        e.entidadFederativaId
        ,e.empleadoConsecutivoId
        ,e.empleadoCategoriaId
        ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
        ,concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpleado
        ,e.fechaIngresoEmpleado
        ,e.empleadoIdPuntoServicio
        ,e.numeroCta
        ,e.numeroCtaClabe
        ,cps.puntoServicio
        ,e.empleadoIdPuesto
        ,cp.descripcionPuesto
        ,e.empleadoIdTurno
        ,ct.descripcionTurno
        ,e.tipoPeriodo
        ,ctp.descripcionTipoPeriodo
        ,empleadoEstatusId
        ,e.fechaBajaEmpleado
        ,cc.nombreComercial
        ,ef.nombreEntidadFederativa as Entidad
        ,cln.descripcionLineaNegocio
        from empleados e
        left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
        left join entidadesfederativas ef on(e.idEntidadTrabajo=ef.idEntidadFederativa)
        left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
        left join catalogoturnos ct on (ct.idTipoTurno=e.empleadoIdTurno)
        left join catalogotipoperiodo ctp on (ctp.tipoPeriodoId=e.tipoPeriodo)
        left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
        left join catalogolineanegocio cln on (e.empleadoLineaNegocioId=cln.idLineaNegocio)
        where
        e.idTipoPuesto='02'
        and e.entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'
        and e.empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'
        and e.empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "'
        and cps.idClientePunto=2
        and ((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) or
        (e.empleadoEstatusId=0 and e.fechaBajaEmpleado between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE))) ";

        if(($RolUsuario == "Asistencia Administrativo") && (($NombreUsuario == "zue*2") || ($NombreUsuario == "leon*10"))){
            $sql.="and ((e.empleadoLineaNegocioId='1') or (e.empleadoLineaNegocioId='2') or (e.empleadoLineaNegocioId='3') or (e.empleadoLineaNegocioId='4')";
        }else{
            $sql.="and (";
            for($j=0;$j<count($lineaNegocioUsuario);$j++){
                if(!is_array($lineaNegocioUsuario)){
                    $lineanegocioconsulta=$lineaNegocioUsuario;
                }else{
                    $lineanegocioconsulta=$lineaNegocioUsuario[$j];
                } 
                for($i=0;$i<count($entidad);$i++){
                    if(!is_array($entidad)){
                        $entidadparaconsulta=$entidad;
                    }else{
                        $entidadparaconsulta=$entidad[$i];
                    }
                    if(($i==0) && ($j==0)){
                        $sql.=" (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";  
                    }else{
                        $sql.=" or (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";       
                    }
                }
            }  
        }
        $sql.=") order by nombreEmpleado asc"; 

        //$this -> logger -> LogInfo ("Ejecutando getListaEmpleadosPeriodoEmpleadoId: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    }

    ////////////////////////////////////////////termina nuevo patra historico bajas y altas imss//////////////////////////////////////////////////////////////////////////////////////

    public function obtenerEntidadesByCliente($cliente)
    {

        $lista = array();

        $sql = "SELECT DISTINCT ef.idEntidadFederativa,ef.nombreEntidadFederativa FROM entidadesfederativas ef LEFT JOIN catalogopuntosservicios cps ON (cps.idEntidadPunto=ef.idEntidadFederativa)
        LEFT JOIN catalogoclientes cc ON (cps.idClientePunto=cc.idCliente) WHERE cc.idCliente='$cliente' ORDER BY ef.nombreEntidadFederativa ASC";

        //$this->logger->LogInfo("ejecutando obtenerEntidadesByCliente como: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;

        }
        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

        return $lista;

    }

    public function actualizarDatosImssRegistro($empleado, $registro)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarFotoEmpleado en persistencia");

        $sql = "update datosimss " .
        "set registroPatronal='" . mysqli_real_escape_string($this->conn, $registro) . "'," .
        "fechaBajaImss=NULL" . ",numeroLoteBaja='',folioTxtBaja='',empleadoEstatusImss=1
        WHERE empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $empleado["empladoEntidadImss"]) . "'
        and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleado["empleadoConsecutivoImss"]) . "'
        and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleado["empleadoCategoriaImss"]) . "'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarFotoEmpleado como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        $errno = mysqli_errno($this->conn);
        if ($errno != 0) {
            $this->logger->LogInfo("Ocurrio un error al actualizarFotoEmpleado.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo($errno);
        }
    }

    public function inserupdatemontosfacturacion($fecha1, $fecha2, $monto, $turnosfactu, $llave)
    {
        $datos = array();
        $sql   = "SELECT max(idMonto) as idMontos  FROM turnosMontofacturacion
        WHERE fechaIniMonto BETWEEN '$fecha1'    AND '$fecha2'
        AND idMontoTurno='$llave'";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $datos[] = $reg;}
            $idmonto = $datos[0]["idMontos"];
            if ($idmonto >= 1) {
                $sql1 = "update turnosMontofacturacion
                set TurnosFacturados='$turnosfactu'
                ,montoFacturado='$monto'
                where idMonto=$idmonto";
            //$this->logger->LogInfo("Se ejecuto consulta  update  como como" . $res1);
            } else {
                $sql1 = "INSERT into turnosMontofacturacion(idMonto,idMontoTurno,fechaIniMonto,fechaFinMonto,TurnosFacturados,montoFacturado)
                values('','$llave','$fecha1','$fecha2',$turnosfactu,$monto)";
            }
            $res1 = mysqli_query($this->conn, $sql1);

        // $this->logger->LogInfo("Se ejecuto consulta  select " . $sql . "     " . var_export($datos[0]["idMonto"], true));
        //$this->logger->LogInfo("Se ejecuto consulta  insert como como" . $sql);
            $errno = mysqli_errno($this->conn);
            if ($errno != 0) {
                $this->logger->LogInfo("Ocurrio un error al INSERTTTTT.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                $this->throwExceptionFromErrNo($errno);
            }
        }

        public function traedatosmontoturnos($llave, $fechaPeriodo1, $fechaPeriodo2)
        {
        // $this-> logger -> LogInfo("traedatosmontoturnos");
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo1: " . $fechaPeriodo1);
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo2: " . $fechaPeriodo2);

            $lista = array();

            $sql = "SELECT  TurnosFacturados,montoFacturado
            FROM turnosMontofacturacion
            WHERE  idMontoTurno='" . mysqli_real_escape_string($this->conn, $llave) . "'
            AND fechaIniMonto >= '" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "'
            AND fechaFinMonto <='" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "'";

        //$this->logger->LogInfo("datos de montosturnosfacturadosbypuntoserv: " . $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

            return $lista;
        }

        public function actualizarEstatusEmisionBajaImss($datosImss)
        {

        //$this -> logger -> LogInfo ("Ejecutando. rechazarEmpleadoImss en persistencia");

            $sql = "update datosimss " .
            "set emisionBajaConfirmada=" . mysqli_real_escape_string($this->conn, $datosImss["emisionAltaImssConfirmada"]) . "" .
            " where empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $datosImss["empladoEntidadImss"]) . "' and empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoConsecutivoImss"]) . "' and empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $datosImss["empleadoCategoriaImss"]) . "' ";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusEmisionAltaImss como" . $sql);

            $res = mysqli_query($this->conn, $sql);

            if ($res !== true) {
                $this->logger->LogInfo("Ocurrio un error al actualizarEstatusEmisionAltaImss.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }
        }

        public function registroDatosHistoricoCostoPlantilla($datos)
        {

        //$this -> logger -> LogInfo ("Ejecutando. registroDatosPlantilla en persistencia");

            $sql = " INSERT INTO HistoricoCostosPlantillas(idCosto, idServicioPlantilla, costoTurno, fechaRegistro, usuarioCaptura)VALUES(
            '','" . mysqli_real_escape_string($this->conn, $datos["puntoServicioPlantillaId"]) . "','" . mysqli_real_escape_string($this->conn, $datos["costoPorTurno"]) . "',now(),'" . mysqli_real_escape_string($this->conn, $datos["usuarioCapturaPlantilla"]) . "')";

            $res = mysqli_query($this->conn, $sql);

            if ($res !== true) {
                $this->logger->LogInfo("Ocurrio un error al registroDatosPlantilla.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }
        }

        public function registroDatosHistoricoCostoPlantillaEdited($datos)
        {

       //$this -> logger -> LogInfo ("valor del array de la datosdffszfsfd".var_export ($datos, true));
            //$this->logger->LogInfo("Ejecutando. registroDatosPlantilla en persistencia");

            $sql = " INSERT INTO HistoricoCostosPlantillas(idServicioPlantilla, costoTurno, fechaRegistro, usuarioCaptura)VALUES(
            '" . mysqli_real_escape_string($this->conn, $datos["puntoServicioPlantillaId"]) . "',
            '" . mysqli_real_escape_string($this->conn, $datos["costoPorTurno"]) . "',
            now(),
            '" . mysqli_real_escape_string($this->conn, $datos["usuarioCapturaPlantilla"]) . "')";

            $res = mysqli_query($this->conn, $sql);

            //$this->logger->LogInfo("Se ejecuto insert edited como " . $sql);

            if ($res !== true) {
                $this->logger->LogInfo("Ocurrio un error al registroDatosPlantilla.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }
        }

        public function getCostoMaximoPunto($fecha1, $fecha2, $idPlantilla)
        {
            try {

                $costo = 0.0;

                $sql = "SELECT costoTurno FROM historicocostosplantillas WHERE idCosto=(SELECT MAX(idCosto) FROM
                Historicocostosplantillas WHERE idServicioPlantilla=
                " . mysqli_real_escape_string($this->conn, $idPlantilla) . " AND fechaRegistro BETWEEN
                CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE))";

                $this->logger->LogInfo("ejecutando traer costo historico como: " . $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $costo = $reg["costoTurno"];
                }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

                return $costo;

            } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
            }
        }

        public function getSupervisorPunto($idPunto)
        {
            try {

                $supervisor = "";

                $sql = "SELECT concat_ws(' ',e.nombreEmpleado,e.apellidoPaterno,e.apellidoMaterno) as supervisor FROM empleados e
                LEFT JOIN supervisor_puntoservicio sp ON (sp.supervisorEntidad=e.entidadFederativaId and sp.supervisorConsecutivo=e.empleadoConsecutivoId and sp.supervisorTipo=e.empleadoCategoriaId)
                WHERE sp.puntoServicioId='$idPunto' AND e.empleadoEstatusId!=0 and concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId)!='09-0017-02'";

            //$this->logger->LogInfo("ejecutando traer supervisor como: " . $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $supervisor = $reg["supervisor"];
                }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

                return $supervisor;

            } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
            }
        }
        public function getPuntosServBySupervisor($supervisorEntidad, $supervisorConsecutivo, $supervisorTipo)
        {
        //$this-> logger -> LogInfo("getPuntosServBySupervisor");
            $lista = array();
            $sql   = "SELECT cps.idPuntoServicio,cps.puntoServicio,cps.cobraDescansos,cps.cobraDiaFestivo,cps.cobra31,cps.idClientePunto
            FROM  catalogopuntosservicios cps
            LEFT JOIN    supervisor_puntoservicio sps
            ON cps.idPuntoServicio=sps.puntoServicioId
            WHERE sps.supervisorEntidad='" . mysqli_real_escape_string($this->conn, $supervisorEntidad) . "'
            AND sps.supervisorConsecutivo='" . mysqli_real_escape_string($this->conn, $supervisorConsecutivo) . "'
            AND sps.supervisorTipo='" . mysqli_real_escape_string($this->conn, $supervisorTipo) . "'";
        // $this -> logger -> LogInfo ("Ejecutando getPuntosServBySupervisor: " . $sql);
            $res = mysqli_query($this->conn, $sql);
            if (!is_bool($res)) {
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $lista[] = $reg;
                }
            }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
            return $lista;
        }

        public function listaBancos()
        {
        //$this-> logger -> LogInfo("traerListaTipoMovimientosFinancieros");

            try {
                $listaBancos = array();
                $sql         = "SELECT * FROM bancos_empresa";

            //$this -> logger -> LogInfo ("ejecutando traerListaTipoMovimientosFinancieros en persistencia". $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $listaBancos[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la ListaTipoMovimientosFinancieros ".var_export ($ListaTipoMovimientosFinancieros, true));

                return $listaBancos;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }

        }

        public function negocioinsertbanco($idbanco, $descbanco)
        {

            $this->logger->LogInfo("Ejecutando. consulyta bancos en persistencia");

            try {
                $lista = array();
                $sql   = "SELECT * FROM catalogobancos
                where idCuentaBanco=$idbanco;";
            //$this -> logger -> LogInfo ("ejecutando sql como:". $sql);
                $res = mysqli_query($this->conn, $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $lista[] = $reg;
                }

                if (!empty($lista)) {
                    $lista["accion"] = 1;
                } else {
                    $lista["accion"] = 0;
                    $sql1            = "INSERT INTO catalogobancos(NombreBanco, idCuentaBanco) VALUES('$descbanco','$idbanco')";
                //$this -> logger -> LogInfo ("valor de accion ".var_export ($lista, true));
                    $res1 = mysqli_query($this->conn, $sql1);

                }
                return $lista;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function insertcuentabancaria($idbanco, $numcuenta)
        {

        //    $this -> logger -> LogInfo ("Ejecutando. consulyta bancos en persistencia");

            try {
                $lista = array();
                $sql   = "SELECT * FROM cuentasBancarias
                where numCuenta='$numcuenta'";
            //$this -> logger -> LogInfo ("ejecutando sql como:". $sql);
                $res = mysqli_query($this->conn, $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $lista[] = $reg;
                }

                if (!empty($lista)) {
                    $lista["accion"] = 1;
                } else {
                    $lista["accion"] = 0;
                    $sql1            = "INSERT INTO cuentasBancarias(idBanco, numCuenta)VALUES('$idbanco','$numcuenta')";
                //$this -> logger -> LogInfo ("valor de accion ".var_export ($lista, true));
                    $res1 = mysqli_query($this->conn, $sql1);

                }
                return $lista;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function listaObtenerIva()
        {
        //$this -> logger -> LogInfo ("traeCatalogoLineaNegocio en persistencia");
            $listadeiva = array();

            try {

                $sql = "select idIva, descripcionIva, valor from tasa_iva";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listadeiva[] = $reg;

                }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoLineaNegocio ".var_export ($listaLineaNegocio, true));
                return $listadeiva;
            } catch (Exception $e) {
                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function traerListaCuentasBancarias($idbanco)
        {
        //$this-> logger -> LogInfo("traerListaBancos");
            $listaCuentas = array();

            try {

                $sql = "select * from cuentasBancarias
                where idBanco='$idbanco'";

            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $listaCuentas[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

                return $listaCuentas;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }

        }

        public function traerListaSubDepartamentos($idDepto)
        {
        //$this-> logger -> LogInfo("traerListaBancos");
            $listasubdepartamentos = array();

            try {

                $sql = "select * from catalogoSubDeptos
                where idDepto='$idDepto'";

            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $listasubdepartamentos[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

                return $listasubdepartamentos;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }

        }

        public function traerListaClavesClasificacionesPorTipo($case, $valorClaves, $usuario, $check)
        {
            $this->logger->LogInfo("traerListaClavesClasificacionesPorTipo");

            try {
                $listaClasificaciones = array();
                if ($case == 0) {
                    $sql = "select catclasi.claveClasificacion,catnego.claveLineaNegocio,catclasi.descripcionClasificacion
                    from catalogoclaveclasificacion catclasi
                    left join catalogolineanegocio catnego
                    on catclasi.idLineaNegocio=catnego.idLineaNegocio";

                    if ($usuario === "Finanzas" && $check == 0) {
//rafael rol = finanzas
                        $sql .= " where catclasi.bloqueoFinanzas=0
                        and catclasi.idTipoMovimiento=2
                        and catnego.idLineaNegocio= " . mysqli_real_escape_string($this->conn, $valorClaves) . " ";

                    } else if ($usuario === "Finanzas" && $check == 1) {
//rol sea cobrnaza
                        $sql .= " where catclasi.bloqueoFinanzas=0
                        and catclasi.idTipoMovimiento=2
                        and catnego.idLineaNegocio= " . mysqli_real_escape_string($this->conn, $valorClaves) . "
                        and catclasi.claveClasificacion!='004-000'
                        and catclasi.claveClasificacion!='003-012'";

                    } else if ($usuario === "Comprobaciones de flujo") {
//rol sea cobrnaza
                        $sql .= " where catclasi.bloqueoComprobaciones=0
                        and catclasi.idTipoMovimiento=2
                        and catnego.idLineaNegocio= " . mysqli_real_escape_string($this->conn, $valorClaves) . " ";
                    }
                } else {
                    $sql = "select catclasi.claveClasificacion,catnego.claveLineaNegocio,catclasi.descripcionClasificacion
                    from catalogoclaveclasificacion catclasi
                    left join catalogolineanegocio catnego
                    on catclasi.idLineaNegocio=catnego.idLineaNegocio
                    where catclasi.bloqueoFinanzas=0
                    and catclasi.idTipoMovimiento=1
                    and catnego.idLineaNegocio= " . mysqli_real_escape_string($this->conn, $valorClaves) . " ";
                }

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $listaClasificaciones[] = $reg;
                }
                $this->logger->LogInfo("este es el valor de usuario " . var_export($usuario, true));

                return $listaClasificaciones;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function obtenercuentaclabeybanco($cuentaclabe, $lineanegocio)
        {
        // $this->logger->LogInfo("traebancos y lineanegocio");

            try {
                $datos = array();
                $sql   = " SELECT  * FROM bancos_empresa
                WHERE idCuentaBanco= " . mysqli_real_escape_string($this->conn, $cuentaclabe) . " ";
                $res = mysqli_query($this->conn, $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $datos["bancos"] = $reg;
                }
                $sql1 = " SELECT * FROM catalogolineanegocio
                WHERE idLineaNegocio=" . mysqli_real_escape_string($this->conn, $lineanegocio) . " ";
                $res1 = mysqli_query($this->conn, $sql1);
                while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
                    $datos["lineanegocio"] = $reg1;
                }
            //$this -> logger -> LogInfo ("valor del array de la datos ".var_export ($datos, true));
                return $datos;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function obtenerEmpleadoAuthCaja($entidademp, $consecutivo, $categoriaemp)
        {
        //$this->logger->LogInfo("EJECUTANDO ATH CAJAS");

            try {
                $datos = array();
                $sql   = " SELECT IFNULL(max(idAutCaja),0) numero
                FROM autorizadoCaja
                WHERE EntidadEmpCaja='" . mysqli_real_escape_string($this->conn, $entidademp) . "'
                AND consecutivoEmpCaja='" . mysqli_real_escape_string($this->conn, $consecutivo) . "'
                AND categoriaEmpCaja='" . mysqli_real_escape_string($this->conn, $categoriaemp) . "'";
                $res = mysqli_query($this->conn, $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $datos = $reg;
                }

            //$this -> logger -> LogInfo ("valor DE sql ".var_export ($sql, true));
                return $datos;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function insertAuthCaja($entidademp, $consecutivo, $categoriaemp, $id)
        {
        // $this->logger->LogInfo("EJECUTANDO ATH CAJAS");
            try {
                $datos = array();
                $sql   = "insert into autorizadoCaja(idAutCaja,EntidadEmpCaja, consecutivoEmpCaja, categoriaEmpCaja,fechaAutoriza ,estatus)values('$id','$entidademp','$consecutivo','$categoriaemp',now(),1)";
                $res   = mysqli_query($this->conn, $sql);
            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function traerListaListaEmpleadosCaja()
        {
        //$this-> logger -> LogInfo("traerListaBancos");
            $listaCuentas = array();

            try {

                $sql = "select DISTINCT ac.EntidadEmpCaja,ac.consecutivoEmpCaja,ac.categoriaEmpCaja,CONCAT_WS(' ',e.nombreEmpleado,e.apellidoPaterno,e.apellidoMaterno) as nombre
                from autorizadoCaja ac
                left join empleados e
                on (ac.EntidadEmpCaja=e.entidadFederativaId and ac.consecutivoEmpCaja=e.empleadoConsecutivoId)";

            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $listaCuentas[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

                return $listaCuentas;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function traerListagenerador($entidad, $consecutivo, $categoria)
        {
        //$this-> logger -> LogInfo("traerListagenerador");
            $listagenerador = array();

            try {

                $sql = "select * from autorizadoCaja
                where idAutCaja=(select max(idAutCaja)
                from autorizadoCaja
                where EntidadEmpCaja='$entidad'
                and consecutivoEmpCaja='$consecutivo'
                and categoriaEmpCaja='$categoria')
                and  EntidadEmpCaja='$entidad'
                and consecutivoEmpCaja='$consecutivo'
                and categoriaEmpCaja='$categoria'";
            // $this -> logger -> LogInfo ("ejecutando traerListagenerador en persistencia". $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                    $listagenerador[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

                return $listagenerador;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }

        }

        public function insertarMovimientoCobranza($movimientocobranza, $usuario)
        {
        //$this -> logger -> LogInfo ("valor del array de la movimiento Cobranza".var_export ($movimientocobranza, true));
   //     $this->logger->LogInfo("insertarMovimientoCobranza");

            $sql = "INSERT INTO movimietosCobranza (fechaMovCobra,idClienteMovCobra,periodoCobroMovCobra,idEmpMovCobra,idTipoTransMovCobra,referenciaMovCobra,idBancoMovCobra,idNumCuentaMovCobra,nomUsuario) VALUES ( " .
            "'" . mysqli_real_escape_string($this->conn, $movimientocobranza["fechaMovimiento"]) . "', " .
            "" . mysqli_real_escape_string($this->conn, $movimientocobranza["SelecCliente"]) . ", " .
            "'" . mysqli_real_escape_string($this->conn, $movimientocobranza["SelectPeriodoCo"]) . "', " .
            "" . mysqli_real_escape_string($this->conn, $movimientocobranza["empresa"]) . ", " .
            "" . mysqli_real_escape_string($this->conn, $movimientocobranza["tipoTransaccion"]) . ", " .
            "" . mysqli_real_escape_string($this->conn, $movimientocobranza["numeroReferencia1"]) . ", " .
            "" . mysqli_real_escape_string($this->conn, $movimientocobranza["selectTipoDeBanco"]) . ", " .
            "" . mysqli_real_escape_string($this->conn, $movimientocobranza["selectNumCuenta"]) . ", " .
            "'" . mysqli_real_escape_string($this->conn, $usuario) . "'" . ")";

            $res = mysqli_query($this->conn, $sql);

    //    $this->logger->LogInfo("valor dela consulta sql " . var_export($sql, true));
            if ($res !== true) {
    //        $this->logger->LogInfo("Ocurrio un error al insertarMovimiento.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }

            $id               = array();
            $idMovCobranzamax = "select  max(idMovCobranza) AS idMovCobranza
            from movimietosCobranza";

            $res1 = mysqli_query($this->conn, $idMovCobranzamax);

            while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {

                $id[] = $reg1;
            }
        //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

            return $id;

        }

        public function insertarMovimientoCobranza1($Registro_MovimientoCobranza, $ImpFactura, $SelectPeriodoFac, $Ejercicio, $SelectPeriodoCo, $selectLineaNegocio, $selectEntidades, $txtSubTotal, $txtDescuento, $txtIva, $IvaCalculado, $Total)
        {
        //$this -> logger -> LogInfo ("valor del array de la movimiento Cobranza".var_export ($movimientocobranza, true));

        // $this-> logger -> LogInfo("insertarMovimientoCobranza1");
            try {
//$this-> logger -> LogInfo("SQLLLLLLLLL");
                $sql = "INSERT INTO entidadesMovimietosCobranza (idMovCobranzaE,numFactura,idMesFacturaE,ejercicioFactura,periodoCobroMovCobraE,idLineaNegcioE,idEntidadE,subtotalE,descuentoE,tasaIvaE,ivaCalculadoE,totalE)

                VALUES (
                '$Registro_MovimientoCobranza',
                '$ImpFactura',
                '$SelectPeriodoFac',
                '$Ejercicio',
                '$SelectPeriodoCo',
                '$selectLineaNegocio',
                '$selectEntidades',
                '$txtSubTotal',
                '$txtDescuento',
                '$txtIva',
                '$IvaCalculado',
                '$Total')";
                $res = mysqli_query($this->conn, $sql);

            //   $this -> logger -> LogInfo ("valor del sql ".var_export ($sql, true));

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }

        // $this -> logger -> LogInfo ("Se ejecuto consulta  insertarMovimiento uno como" . $sql);

        }

        public function obtenerTotalEntidadcobro($idEntidad, $ejercicio, $mes, $lineanegocio, $accion)
        {
        //$this -> logger -> LogInfo ("obtenertotal en persistencia");
            $lista = array();
            try {
                $sql = "SELECT SUM(subtotalE) total
                FROM entidadesMovimietosCobranza";
                if ($accion == 0) {
                    $sql .= " where idEntidadE='$idEntidad'
                    AND ejercicioFactura='$ejercicio'
                    AND idMesFacturaE=$mes
                    AND idLineaNegcioE=$lineanegocio";
                } else if ($accion == 1) {
                    $sql .= " WHERE MONTH(periodoCobroMovCobraE) =$mes
                    AND YEAR(periodoCobroMovCobraE)=$ejercicio
                    AND idEntidadE=$idEntidad";
                }
                $res = mysqli_query($this->conn, $sql);
            //$this -> logger -> LogInfo ("ejecutando obtenerTiotalEntidadcobro en persistencia". $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $lista[] = $reg;

                }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
                return $lista;
            } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
            }
        }

        public function insertarMovimientoComprobacion($impid,$inBeneficiarioCompro,$inConceptoCompro,$inNumeroReferenciaCompro,
          $inSubTotalCompro,$inDescuentoCompro,$inIvaRetenidoCompro,$inselectIvaCompro,$inTotalCompro)
        {
            $this->logger->LogInfo("obtenertotal en persistencia");
       // $this->logger->LogInfo("valor del array de la movimiento" . var_export($inBeneficiarioCompro, true));
            
            $sql = "INSERT INTO libromovimientoscomprobaciones (idMovimiento,fechaMovimientoCompro,beneficiarioCompro,subTotalCompro,descuentocompro,tasaIvaCompro,ivaRetenCompro,montoCompro,referenciaCompro,conceptoCompro) values (
            '$impid',
            now(),
            '$inBeneficiarioCompro',
            '$inSubTotalCompro',
            '$inDescuentoCompro',
            '$inselectIvaCompro',
            '$inIvaRetenidoCompro',
            '$inTotalCompro',
            '$inNumeroReferenciaCompro',
            '$inConceptoCompro')";

            $this->logger->LogInfo("Se ejecuto consulta  insertarMovimiento como" . $sql);
            $res = mysqli_query($this->conn, $sql);

    //    $this->logger->LogInfo("valor dela consulta sql " . var_export($sql, true));
            if ($res !== true) {
    //        $this->logger->LogInfo("Ocurrio un error al insertarMovimiento.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }

            $idComprobacionesMax = array();
            $idMovCompromax = "select  max(idMovimientoCompro) as idMovimientoCompro 
            from libromovimientoscomprobaciones";

            $res1 = mysqli_query($this->conn, $idMovCompromax);

            while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {

                $idComprobacionesMax[] = $reg1;
            }
     //   $this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

            return $idComprobacionesMax;

        }
        public function obtenerEmpleadoFini($empleadoId)
        {
        // $this-> logger -> LogInfo("obtenerEmpleadoPorId");
            $empleado1 = ("$empleadoId");
        // $this -> logger -> LogInfo ("valor del array de la listaEmpleadosActivos ".var_export ($empleado1, true));
        //$this -> logger -> LogInfo ("Ejecutando obtenerEmpleadoPorId: " . $sql);
            $empleado = array();

            $sql =

            $sql = "select concat_ws('-',fini.entidadEmpFiniquito,fini.consecutivoEmpFiniquito , fini.categoriaEmpFiniquito) numeroempleado,
            concat_ws(' ',emp.apellidoPaterno,emp.apellidoMaterno,emp.nombreEmpleado) nombreempleado,fini.fechaAlta,fini.fechaBaja,
            fini.netoAlPago,emp.entidadFederativaId,ent.nombreEntidadFederativa
            from finiquitos fini
            left join empleados emp
            on fini.entidadEmpFiniquito=emp.entidadFederativaId
            and fini.consecutivoEmpFiniquito=emp.empleadoConsecutivoId
            and fini.categoriaEmpFiniquito=emp.empleadoCategoriaId
            left join entidadesfederativas ent
            on fini.entidadEmpFiniquito=ent.idEntidadFederativa
            where concat_ws('-',fini.entidadEmpFiniquito,fini.consecutivoEmpFiniquito , fini.categoriaEmpFiniquito) = '$empleadoId'
            and fini.estatusCargaArchivo=1";
        //$this -> logger -> LogInfo ("valor del array de la listaEmpleadosActivos ".var_export ($empleado, true));
        //$this -> logger -> LogInfo ("Ejecutando obtenerEmpleadoPorId: " . $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $empleado[] = $reg;
            }

        //$this -> logger -> LogInfo ("valor del array de la listaEmpleadosActivos ".var_export ($empleado, true));

            return $empleado;
        }
        public function actualizarEstatuCargaArchivo($numempelado, $fechabaja, $fechaalta)
        {
        //$this-> logger -> LogInfo("actualizaestatuscargaarchivo");
            $sql = "update finiquitos
            set estatusCargaArchivo=1
            where concat_ws('-',entidadEmpFiniquito,consecutivoEmpFiniquito,categoriaEmpFiniquito)='$numempelado'
            and fechaAlta='$fechaalta'
            and fechaBaja='$fechabaja'";
            $res = mysqli_query($this->conn, $sql);
        //$this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));
            if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
                throw new Exception("Error de actualización");
            }
        }

        public function negocio_ListaCuentasBancos($idbanco)
        {
        //$this-> logger -> LogInfo("traerListaBancos");
            try {
                $sql = "select * from cuentasbancarias
                where idBanco=$idbanco";
            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);
                $res = mysqli_query($this->conn, $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listaCuentasBancos[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));
                return $listaCuentasBancos;
            } catch (Exception $e) {
                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function ListaCuentasBancos()
        {
        //$this-> logger -> LogInfo("traerListaBancos");
            try {
                $sql = "select * from cuentasbancarias";
            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);
                $res = mysqli_query($this->conn, $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listaCuentasBancos[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));
                return $listaCuentasBancos;
            } catch (Exception $e) {
                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }
        public function saldosporcuentasbancarias($idbanco, $idnumcuenta)
        {
        //$this-> logger -> LogInfo("listasaldosporcuenta");
            try {
                $listasaldosporcuenta = array();
                $sql                  = "select ifnull(saldoDisponibleFin,0) saldoDisponibleFin from librosaldos
                where idBancoSaldoInicial=$idbanco
                and idNumCuenta=$idnumcuenta
                and fechaRegistroMovimientoSaldo=curdate()";
            // $this -> logger -> LogInfo ("ejecutando saldosporcuenta en persistencia". $sql);
                $res = mysqli_query($this->conn, $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listasaldosporcuenta[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));
                return $listasaldosporcuenta;
            } catch (Exception $e) {
                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function montoporcuentasbancarias($numcuenta)
        {
        //$this-> logger -> LogInfo("listasaldosporcuenta");
            try {
                $listamontosporcuenta = array();
                $sql                  = "select ifnull(sum(monto),0) as monto from libromovimientos lm
                left join cuentasbancarias cb on lm.NumerodeCuenta=cb.idCuentaBancaria
                where numCuenta='$numcuenta'";
            // $this -> logger -> LogInfo ("ejecutando saldosporcuenta en persistencia". $sql);
                $res = mysqli_query($this->conn, $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listamontosporcuenta[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));
                return $listamontosporcuenta;
            } catch (Exception $e) {
                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function traerSaldosIniciales($idbanco)
        {
        //   $this-> logger -> LogInfo("traerSaldosIniciales");
            try {
                $listaSaldosIniciales = array();

                $sql = "select ifnull(sum(saldoTotalPorTipoDeBancoCobranza),0) saldoTotalPorTipoDeBancoCobranza,
                ifnull(sum(saldoTotalPorTipoDeBancoFinanza),0) saldoTotalPorTipoDeBancoFinanza,
                ifnull(sum(saldoDisponibleFin),0) saldoDisponibleFin
                from librosaldos
                where idBancoSaldoInicial=" . mysqli_real_escape_string($this->conn, $idbanco) . "
                and fechaRegistroMovimientoSaldo=curdate() ";

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                //$this -> logger -> LogInfo ("ejecutando traerSaldosIniciales en persistencia". $sql);
                    $listaSaldosIniciales[] = $reg;
                }
            //$this -> logger -> LogInfo ("valor del array de la listaSaldosIniciales ".var_export ($listaSaldosIniciales, true));

                return $listaSaldosIniciales;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function traelistahistoricoedicion($usuario)
        {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en usuario". $usuario);

            $listahistoricoedt = array();

            try {

                $sql = "select concat_ws('-',emp.entidadFederativaEmpleadoEdited,emp.consecutivoEmpleadoEdited,emp.categoriaEmpleadoEdited)
                numeroempleado,emp.empleadoFechaCapturaE,emp.idEdicion,
                emp.empleadoNumeroCtaE,emp.empleadoNumeroCtaClabeE,dir.correoEmpleadoEdited,catperi.descripcionTipoPeriodo,emp.status_checked,
                emp.empleadoFechaIngresoE,emp.empleadoFechaBajaE,emp.empleadoEstatusIdE,ifnull(emp.fechaConfirmacion,'SIN FECHA') fechaConfirmacion
                from empleadosedited emp
                left join directorioedited dir
                on emp.idEdicion=dir.idEdicion
                left join catalogotipoperiodo catperi
                on catperi.tipoPeriodoId = emp.idtipoperiodo";

                if ($usuario === "Contrataciones" || $usuario === "Laborales") {
                    $sql .= " where emp.status_checked='0'";

                } else if ($usuario === "Analista Asistencia") {
                    $sql .= " where emp.status_checked='1'";
                }
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listahistoricoedt[] = $reg;

                }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
                return $listahistoricoedt;
            } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
            }
        }

        public function actualizarlistahistoricoedicion($idEdicion, $usuario)
        {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");

            try {

                $sql = "update empleadosedited";

                if ($usuario === "Contrataciones" || $usuario === "Laborales") {
                    $sql .= " set status_checked=1,
                    fechaConfirmacion=NOW()
                    where idEdicion=" . mysqli_real_escape_string($this->conn, $idEdicion) . "";

                } else if ($usuario === "Analista Asistencia") {
                    $sql .= "  set status_checked=2
                    where idEdicion=" . mysqli_real_escape_string($this->conn, $idEdicion) . "";
                }

            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);

                $res = mysqli_query($this->conn, $sql);

            } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
            }
        }

//////////////////////////////////////////********************************PARA EL MODULO DE CONTRATACIONES********************************//////////////////////////////////////////
        // ya fue modificado
        public function getplantillasparaselectorcontrataciones($puestoPlantillaId, $tipoTurnoPlantillaId, $puntoServicioPlantillaId)
        {
         //$this-> logger -> LogInfo("getServicioPlantillaPerfil");
            $lista1 = array();
            $lista2 = array();
            $lista = array();
            $sql = "SELECT *
            FROM servicios_plantillas sp
            left join catalogoroleoperativo cro ON(sp.IdRolOperativoPlantilla=cro.idRolOperativo)
            where sp.numeroElementos>0
            and sp.estatusPlantilla='1'
            and sp.puestoPlantillaId='" . mysqli_real_escape_string($this->conn, $puestoPlantillaId) . "'
            and sp.tipoTurnoPlantillaId='" . mysqli_real_escape_string($this->conn, $tipoTurnoPlantillaId) . "'
            and sp.puntoServicioPlantillaId='" . mysqli_real_escape_string($this->conn, $puntoServicioPlantillaId) . "'";
        $this -> logger -> LogInfo ("Ejecutando getServicioPlantillaPerfil: " . $sql);
            $res = mysqli_query($this->conn, $sql);
            if (!is_bool($res)) {
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $lista1[] = $reg;
                }
            }
            $larogLista1 = count($lista1);
            for ($i=0; $i < $larogLista1; $i++) { 
                $servicioPlantillaId = $lista1[$i]["servicioPlantillaId"];
                $numeroElementos = $lista1[$i]["numeroElementos"];
                $sql1 = " SELECT count(p.plantillaId) as TotalElementosAsignados from plantilla p 
                        left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
                        where requisicionId='" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "'
                        and (e.empleadoEstatusId='1' or e.empleadoEstatusId='2');";
        $this -> logger -> LogInfo ("Ejecutando getServicioPlantillaPerfil: " . $sql1);
            $res1 = mysqli_query($this->conn, $sql1);
            if (!is_bool($res1)) {
                while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
                    $lista2[] = $reg1;
                }
            }
            $TotalElementosAsignados = $lista2[$i]["TotalElementosAsignados"];
            if($numeroElementos > $TotalElementosAsignados){
                $lista[] = $lista1[$i];
            }
            }
        $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
            return $lista;
        }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        public function insertLibroSaldos($selectTipoDeBanco, $selectNumCuenta)
        {
         $this->logger->LogInfo("EJECUTANDO ATH CAJAS");

         try {
            // $fecha=now();

            $fecha = now();
            $montoCobranza=0;
           // $this -> logger -> LogInfo ("valor del fecha".var_export ($fecha, true));
            $sql1  = "CALL proc_insertarlibrosaldos_Cobranza($selectTipoDeBanco,$selectNumCuenta, 
            " . mysqli_real_escape_string($this->conn, $montoCobranza) . ",
            " . mysqli_real_escape_string($this->conn, $fecha) . ")";

            $res = mysqli_query($this->conn, $sql1);
            $this->logger->LogInfo("valor del array del tipo de banco " . var_export($sql1, true));
        } catch (Exception $e) {

            ///           $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

    public function traedatosservplantillasbyidpuntoserv($idpuntoserv,$idpuesto)
    {
        try {
            $listaplantillas = array();
            $sql             = "SELECT  *
            from servicios_plantillas
            WHERE  puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $idpuntoserv) . "
            AND puestoPlantillaId=" . mysqli_real_escape_string($this->conn, $idpuesto) . "
            AND estatusPlantilla=1";

            //$this -> logger -> LogInfo ("ejecutando traerSaldosIniciales en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listaplantillas[] = $reg;
            }
            // $this -> logger -> LogInfo ("valor del array de la listaSaldosIniciales ".var_export ($totalObtenido, true));

            return $listaplantillas;

        } catch (Exception $e) {

            // $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }
    public function insertLibroSaldosMovimientos($selectTipoDeBanco,$selectNumCuenta,$monto,$Case)
    {
       //   $this->logger->LogInfo("EJECUTANDO procedure lbromoviiientos");

        try {
           // $fecha = date('Y-m-d');
         $fecha = 'curdate()';
             // $this -> logger -> LogInfo ("ejecutando montorecibido ". $fecha);

         if($Case!=0){
            $sql1  = "CALL proc_insertarlibrosaldos_Cobranza($selectTipoDeBanco,$selectNumCuenta,$monto,
            " . mysqli_real_escape_string($this->conn, $fecha) . ")";
        }
        else{ 
            $sql1 = "CALL proc_insertarlibrosaldos_Finanza($selectTipoDeBanco,$selectNumCuenta,$monto," . mysqli_real_escape_string($this->conn, $fecha) . ")";
        }

//             $this -> logger -> LogInfo ("ejecutando storeprocedure puerco en persistencia". $sql1);
        $res = mysqli_query($this->conn, $sql1);
    } catch (Exception $e) {

            //                 $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function callProcedureInserSaldoInicialDiario($idbanco, $idnumcuenta)
{
        //$this -> logger -> LogInfo ("Ejecutando. insertarActualizarDatosImss en persistencia");
    $sql = "call actualizar_saldo_dia_siguiente('" . mysqli_real_escape_string($this->conn, $idbanco) . "','" . mysqli_real_escape_string($this->conn, $idnumcuenta) . "')";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarActualizarDatosImss como" . $sql);
    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al inseratr saldo inicial");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
public function insertempresa($empresa)
{
        // $this -> logger -> LogInfo ("Ejecutando. consulyta insert empresa en persistenciaaaaaaaaaaaaaaaaaaaaaaa");
    try {
        $sql = "insert into catalogoempresas(nombreEmpresa,visiblerh) values ( '" . $this->safeValue($empresa) . "',1)";

        $res = mysqli_query($this->conn, $sql);

            // $this -> logger -> LogInfo ("ejecutando sql en persistencia". $sql);
    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function traelistaempresas()
{
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
    $listacatalogoempresas = array();

    try {

        $sql = "SELECT * from catalogoempresas";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listacatalogoempresas[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
        return $listacatalogoempresas;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function activarDesactivarEmpresa($idempresa, $valorupdate)
{
    $sql = "update catalogoempresas
    set visiblerh='" . mysqli_real_escape_string($this->conn, $valorupdate) . "'
    where idEmpresa='" . mysqli_real_escape_string($this->conn, $idempresa) . "'";

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
        throw new Exception("Error de actualización");
    }
}
public function insertarMovimientotransferencia($movimientotransferencia)
{
    $this->logger->LogInfo("trae movimientos transferencia");
    $sql = "CALL proc_Insert_And_Update_Transefencia (
    '" . mysqli_real_escape_string($this->conn, $movimientotransferencia["numeroFolio"]) . "',
    '" . mysqli_real_escape_string($this->conn, $movimientotransferencia["selbancoOrigen"]) . "',
    '" . mysqli_real_escape_string($this->conn, $movimientotransferencia["selnumcuentaOrigen"]) . "',
    '" . mysqli_real_escape_string($this->conn, $movimientotransferencia["selBancoDestino"]) . "',
    '" . mysqli_real_escape_string($this->conn, $movimientotransferencia["selnumCuentaDestino"]) . "',
    '" . mysqli_real_escape_string($this->conn, $movimientotransferencia["usuarioCapturaTransfe"]) . "',
    '" . mysqli_real_escape_string($this->conn, $movimientotransferencia["saldoDestino"]) . "',
    " . " now())";
    $this->logger->LogInfo("Se ejecuto  insertSueldoEmpleado como" . $sql);
    $res = mysqli_query($this->conn, $sql);
        //  $this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($movimientotransferencia, true));
}
public function obtenerFiniquitoPorConfirmar($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria)
{
        // $this-> logger -> LogInfo("traedatosmontoturnos");
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo1: " . $fechaPeriodo1);
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo2: " . $fechaPeriodo2);

    $lista = array();
    $sql   = "SELECT * from finiquitos
    WHERE entidadEmpFiniquito='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
    AND consecutivoEmpFiniquito='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
    AND categoriaEmpFiniquito='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'
    AND estatusFiniquito=0";

        //$this->logger->LogInfo("datos de montosturnosfacturadosbypuntoserv: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $lista[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

    return $lista;
}
public function traeCatalogoClaveClasificacion($lineanegociogastocosto, $usuario)
{
        //    $this->logger->LogInfo("traerListaClavesClasificacionesPorTipo");

    try {
        $listaClasificacion = array();

        $sql = "select catclasi.descripcionClasificacion,catclasi.idTipoCostoGasto,catclasi.claveClasificacion,
        catnego.descripcionLineaNegocio
        from catalogoclaveclasificacion catclasi
        left join catalogolineanegocio catnego
        on catclasi.idLineaNegocio=catnego.idLineaNegocio";

        if ($usuario === "Finanzas") {
//rafael rol = finanzas
            $sql .= " where catclasi.bloqueoFinanzas=0
            and catnego.idLineaNegocio= " . mysqli_real_escape_string($this->conn, $lineanegociogastocosto) . "
            and catclasi.claveClasificacion!='004-000'
            and catclasi.claveClasificacion!='003-012'";

        } else if ($usuario === "Comprobaciones de flujo") {
//rol sea cobrnaza
            $sql .= " where catclasi.bloqueoComprobaciones=0
            and catnego.idLineaNegocio= " . mysqli_real_escape_string($this->conn, $lineanegociogastocosto) . " ";
        }

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaClasificacion[] = $reg;
        }
            //   $this -> logger -> LogInfo ("este es el valor de usuario ".var_export ($usuario, true));

        return $listaClasificacion;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function obtenerTotalGastoCosto($lineanegociogastocosto, $claveclasi, $entidasgastocosto,
    $acciongastocosto, $fechafinal, $fechainicio) {
       // $this -> logger -> LogInfo ("obtenertotal en persistencia");
    $listagastocosto = array();
    try {
        if ($acciongastocosto == "0") {
            $sql = "select ifnull(sum((ifnull(SubTotal,0) - ifnull(Descuento,0))),0) totalsumatoria,
            convert(ifnull(sum((ifnull(SubTotal,0) - ifnull(Descuento,0))*ifnull(TazadeIva,0)),0),decimal(15,2)) totalIva
            from libromovimientos
            where idLineaNeg=" . mysqli_real_escape_string($this->conn, $lineanegociogastocosto) . "
            and fechaCaptura=curdate()
            and claveClasificacionM= '" . mysqli_real_escape_string($this->conn, $claveclasi) . "' ";
        } else if ($acciongastocosto == "1") {

            $sql = "select ifnull(sum((ifnull(SubTotal,0) - ifnull(Descuento,0))),0) totalsumatoria,
            convert(ifnull(sum((ifnull(SubTotal,0) - ifnull(Descuento,0))*ifnull(TazadeIva,0)),0),decimal(15,2)) totalIva
            from libromovimientos lm
            left join catalogolineanegocio cln
            on lm.idLineaNeg=cln.idLineaNegocio
            where idLineaNeg=" . mysqli_real_escape_string($this->conn, $lineanegociogastocosto) . "
            and claveClasificacionM= '" . mysqli_real_escape_string($this->conn, $claveclasi) . "'
            and fechaCaptura between '" . mysqli_real_escape_string($this->conn, $fechainicio) . "' and  '" . mysqli_real_escape_string($this->conn, $fechafinal) . "' ";
        } else if ($acciongastocosto == "2") {

            $sql = "select ifnull(sum((ifnull(SubTotal,0) - ifnull(Descuento,0))),0) totalsumatoria,
            convert(ifnull(sum((ifnull(SubTotal,0) - ifnull(Descuento,0))*ifnull(TazadeIva,0)),0),decimal(15,2)) totalIva
            from libromovimientos lm
            left join catalogolineanegocio cln
            on lm.idLineaNeg=cln.idLineaNegocio
            where idLineaNeg=" . mysqli_real_escape_string($this->conn, $lineanegociogastocosto) . "
            and claveClasificacionM= '" . mysqli_real_escape_string($this->conn, $claveclasi) . "'
            and idEntidad='" . mysqli_real_escape_string($this->conn, $entidasgastocosto) . "'
            and fechaCaptura between '" . mysqli_real_escape_string($this->conn, $fechainicio) . "' and  '" . mysqli_real_escape_string($this->conn, $fechafinal) . "' ";
        }
        $res = mysqli_query($this->conn, $sql);
        //    $this -> logger -> LogInfo ("ejecutando obtenerTiotalEntidadcobro en persistencia". $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listagastocosto[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
        return $listagastocosto;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }

}

public function getTabuladorSueldosPlantillasinactivas()
{
        //$this -> logger -> LogInfo ("getTabuladorSueldos en persistencia");
    $lista = array();

    try {

        $sql = "Select
        sp.servicioPlantillaId,
        cps.puntoServicio,
        ef.nombreEntidadFederativa,
        cc.razonSocial,
        cps.numeroCentroCosto,
        cps.fechaInicioServicio as fechaInicioPuntoServicio,
        cps.fechaTerminoServicio as fechaTerminoPuntoServicio,
        sp.puntoServicioPlantillaId,
        cps.esatusPunto,
        sp.estatusPlantilla,
        sp.fechaInicio as fechaMontaje,
        sp.fechaTerminoPlantilla as fechaTerminoPlantilla,
        sp.numeroElementos,
        sp.puestoPlantillaId,
        sp.tipoTurnoPlantillaId,
        cp.descripcionPuesto,
        ct.descripcionTurno,
        -- usuarioCapturaPlantilla,
        -- fechaRegistroPlantilla,
        -- lastEdited
        sum(numeroElementos) as totalElementos
        , costoPorTurno
        ,cef.nombreEntidadFederativa
        ,t.cuotaDiaria
        ,t.sueldo
        ,sp.rolOperativoPlantilla
        from
        servicios_plantillas sp
        LEFT JOIN
        catalogopuestos cp ON cp.idPuesto = sp.puestoPlantillaId
        LEFT JOIN
        catalogoturnos ct ON ct.idTipoTurno = sp.tipoTurnoPlantillaId
        LEFT JOIN
        catalogopuntosservicios cps ON (cps.idPuntoServicio = sp.puntoServicioPlantillaId)
        LEFT JOIN
        entidadesfederativas cef ON (cef.idEntidadFederativa = cps.idEntidadPunto)
        LEFT JOIN
        catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
        LEFT JOIN
        tabulador t ON (t.puntoServicio =sp.puntoServicioPlantillaId and t.puestoId=sp.puestoPlantillaId and t.rolId=sp.tipoTurnoPlantillaId )
        LEFT JOIN
        entidadesfederativas ef ON (ef.idEntidadFederativa=cps.idEntidadPunto)
        where (  sp.estatusPlantilla=0 and sp.numeroElementos>0 )
        group by sp.puestoPlantillaId , sp.puntoServicioPlantillaId, sp.tipoTurnoPlantillaId
        ORDER BY cps.puntoServicio ,cc.razonSocial ASC";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getTabuladorSueldos " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getTabuladorSueldos ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getTabuladorSueldos ERROR:" . $e->getMessage());
    }
}
public function getTabuladorSueldosByPuntoServicioplantillasinactivas($puntoServicioName)
{
    $lista = array();

    try {

        $sql = "Select
        sp.servicioPlantillaId,
        cps.puntoServicio,
        ef.nombreEntidadFederativa,
        cc.razonSocial,
        cps.numeroCentroCosto,
        cps.fechaInicioServicio as fechaInicioPuntoServicio,
        cps.fechaTerminoServicio as fechaTerminoPuntoServicio,
        sp.puntoServicioPlantillaId,
        cps.esatusPunto,
        sp.estatusPlantilla,
        sp.fechaInicio as fechaMontaje,
        sp.fechaTerminoPlantilla as fechaTerminoPlantilla,
        sp.numeroElementos,
        sp.puestoPlantillaId,
        sp.tipoTurnoPlantillaId,
        cp.descripcionPuesto,
        ct.descripcionTurno,
        -- usuarioCapturaPlantilla,
        -- fechaRegistroPlantilla,
        -- lastEdited
        sum(numeroElementos) as totalElementos
        , costoPorTurno
        ,cef.nombreEntidadFederativa
        ,t.cuotaDiaria
        ,t.sueldo
        ,sp.rolOperativoPlantilla
        from
        servicios_plantillas sp
        LEFT JOIN
        catalogopuestos cp ON cp.idPuesto = sp.puestoPlantillaId
        LEFT JOIN
        catalogoturnos ct ON ct.idTipoTurno = sp.tipoTurnoPlantillaId
        LEFT JOIN
        catalogopuntosservicios cps ON (cps.idPuntoServicio = sp.puntoServicioPlantillaId)
        LEFT JOIN
        entidadesfederativas cef ON (cef.idEntidadFederativa = cps.idEntidadPunto)
        LEFT JOIN
        catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
        LEFT JOIN
        tabulador t ON (t.puntoServicio =sp.puntoServicioPlantillaId and t.puestoId=sp.puestoPlantillaId and t.rolId=sp.tipoTurnoPlantillaId )
        LEFT JOIN
        entidadesfederativas ef ON (ef.idEntidadFederativa=cps.idEntidadPunto)
        where
        (sp.estatusPlantilla=0 and sp.numeroElementos>0 )
        and cps.puntoServicio like '%" . $this->safeValue($puntoServicioName) . "%'
        group by sp.puestoPlantillaId , sp.puntoServicioPlantillaId, sp.tipoTurnoPlantillaId
        ORDER BY cps.puntoServicio ,cc.razonSocial ASC";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getTabuladorSueldosByPuntoServicio " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getTabuladorSueldosByPuntoServicio ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("getTabuladorSueldosplantillasinactivas ERROR:" . $e->getMessage());
    }
}
public function activar_plantilla_PuntoServicio($flagactivacion, $idpuntoservicio, $idplantilla)
{
        //$this -> logger -> LogInfo ("activaplantillaopuntoserv en persistencia");
    $sql = "update catalogopuntosservicios
    set esatusPunto=1
    where idPuntoServicio=" . mysqli_real_escape_string($this->conn, $idpuntoservicio) . "";
    $sql1 = "update servicios_plantillas
    set estatusPlantilla=1
    where servicioPlantillaId=" . mysqli_real_escape_string($this->conn, $idplantilla) . "";
    if ($flagactivacion == 0) {
            //actualiza solo plantilla
        $res1             = mysqli_query($this->conn, $sql1);
        $tipodeactivacion = 1;
        if ($res1 !== true) {throw new Exception("Error de actualización en query update EstatusPlantillas");}

    } else if ($flagactivacion == 1) {
            //activar puntoServicio y plantilla
        $res              = mysqli_query($this->conn, $sql);
        $res1             = mysqli_query($this->conn, $sql1);
        $tipodeactivacion = 2;
        if ($res !== true || $res1 !== true) {throw new Exception("Error de actualización en query update EstatusPlantillas o en query update EstatusPuntoServ");}

    }

    return $tipodeactivacion;
}

public function insertarMovimientoCargo($movimientoCargo)
{
        //$this -> logger -> LogInfo ("valor del array de la movimiento".var_export ($movimientoCargo, true));
        //$this-> logger -> LogInfo("EJECUTANDO QUERY INSERTMOVIMIENTOS");
    $sql = "INSERT INTO libromovimientos (fechaMovimiento, idBancoM, beneficiario, concepto,  " .
    " idTipoTransaccionM, claveClasificacionM,idDepartamentoM, referencia, idEstatusM, fechaCaptura, idEmpresaM, monto, usuarioCaptura, idTipoMov, idLineaNeg, idEntidad,NumerodeCuenta,SubDepartamento,SubTotal,Descuento,TazadeIva,IvaRetenido) values ( " .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["fechaMovimientoCargo"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["idBancoMCargo"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["beneficiarioCargo"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["conceptoCargo"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["idTipoTransaccionMCargo"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["claveClasificacionMCargo"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["idDepartamentoMCargo"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["referenciaCargo"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["idEstatusMCargo"]) . ", " .
    "now()," .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["idEmpresaMCargo"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["montoCargo"]) . "', " .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["usuarioCaptura"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["idTipoMov"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["lineaNegocioCargo"]) . "'," .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["entidadCargo"]) . "'," .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["selectNumCuentaCargo"]) . ", " .
    "'" . mysqli_real_escape_string($this->conn, $movimientoCargo["subdepartamentoCargo"]) . "', " .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["txtSubTotalCargo"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["txtDescuentoCargo"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["txtIvaCargo"]) . ", " .
    "" . mysqli_real_escape_string($this->conn, $movimientoCargo["txtIvaRetenidoCargo"]) . ")";

        //     $this -> logger -> LogInfo ("Se ejecuto consulta  insertarMovimiento como" . $sql);

    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        //    $this->logger->LogInfo("Ocurrio un error al insertarMovimiento.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}
public function obtenerClavesComprobacione($usuario)
{    

       // $this -> logger -> LogInfo ("Ejecutando. claves en persistencia");
 //$this -> logger -> LogInfo ("valos de la vbariable usuario en persi: " . $usuario);
    $claves = array();

    try {

        $sql = "SELECT * FROM libromovimientos lm
        left join catalogoclaveclasificacion ccc
        on lm.claveClasificacionM=ccc.claveClasificacion
        where idTipoMov=2 
        and idEstatusM=3
        and idEntidad='" . mysqli_real_escape_string($this->conn, $usuario["entidadFederativaUsuario"]) . "'";

            //$this -> logger -> LogInfo ("Ejecutando SQL: " . $sql);

        $res = mysqli_query($this->conn, $sql);

            //$this -> logger -> LogInfo ("RES: " . var_export ($res, true));

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                //$this->logger->LogInfo(var_export($reg, true));

            $claves[] = $reg;
        }

            //$this -> logger -> LogInfo ("valor del array asociativo sqli" . var_export ($usuarios, true));

        return $claves;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());

    }
}




public function RegionesPorLineaNegocio($idlineanegocio,$idEntidad,$accion)
{
       // $this-> logger -> LogInfo("traerListaTipoTransaccion");

    try {

        $sql = "SELECT * FROM index_regiones ir
        left join entidadesfederativas ef
        on ir.idEntidadI=ef.idEntidadFederativa";


        if($accion==1){
         $sql.=" where ir.idLineaNegI=$idlineanegocio";

     }else if($accion==2){
         $sql.=" where ir.idLineaNegI=$idlineanegocio
         and ir.idEntidadI='$idEntidad'";

     }
 //$this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));

     $res = mysqli_query($this->conn, $sql);

     while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaRegiones[] = $reg;
    }
            //$this -> logger -> LogInfo ("valor del array de la listaTipoTransacciones ".var_export ($listaTipoTransacciones, true));

    return $listaRegiones;

} catch (Exception $e) {

    $this->logger->LogInfo("ERROR:" . $e->getMessage());
}
}

public function listaSolicitudpago($usuario,$usuario1)
{
   //     $this-> logger -> LogInfo("traerListaTipoTransaccion");
    $listasolicitudespagos = array();
    try {
        if($usuario1==="Comprobacion Regional" || $usuario1==="Gerente Regional")
        {
            $sql="SELECT bco.nombreBanco as banco,sdp.NumeroCuentaDestino as cuenta,sdp.NumeroCuentaClaveDestino as cuentaclave,clavclasi.claveClasificacion as claveclasificacion,clavclasi.descripcionClasificacion as descripcionclaveclasi,sdp.idEmpresa as idempresa,sdp.idTipoTransaccion as idtipotransaccion,sdp.idLineanegocio as idlineanegocio, sdp.idClaveClasificacion as idclaveclasi,sdp.idEntidad as identidad,caes.descripcion estatusdescripcion,sdp.idSolicitudPago as idsolicitudpago,lin.descripcionLineaNegocio as lineanegocio,    sdp.fechaSolicitud as fechasolicitud,
            sdp.NumEmpleado as numeroempleado,sdp.Beneficiaro as beneficiario,entfed.nombreEntidadFederativa as entidad,
            sdp.Concepto as concepto,sdp.TotalSolicitado as total,sdp.idEstatusSolicitud as estatus
            from solicitudDePagos sdp
            left join usuario_empleado usemp
            on usemp.usuario='" . mysqli_real_escape_string($this->conn, $usuario) . "'
            left join empleados emp
            on emp.entidadFederativaId=usemp.entidadEmpleadoUsuario
            and emp.empleadoConsecutivoId=usemp.consecutivoEmpleadoUsuario  
            and emp.empleadoCategoriaId=usemp.categoriaEmpleadoUsuario
            left join catalogolineanegocio lin
            on lin.idLineaNegocio=emp.empleadoLineaNegocioId
            left join entidadesfederativas entfed
            on entfed.idEntidadFederativa=sdp.idEntidad
            left join catalogoestatus_solicitudpago caes
            on caes.idestatus=sdp.idEstatusSolicitud
            left join catalogoclaveclasificacion clavclasi
            on clavclasi.idClasificacion=sdp.idClaveClasificacion
            left join bancos_empresa bco
            on bco.idCuentaBanco=sdp.idBancoDestino
            where emp.empleadoLineaNegocioId=sdp.idLineanegocio
            and sdp.idEstatusSolicitud=1  or sdp.idEstatusSolicitud=3";
        }
        else if($usuario1==="Finanzas")
        {
            $sql="SELECT bco.nombreBanco as banco,sdp.NumeroCuentaDestino as cuenta,sdp.NumeroCuentaClaveDestino as cuentaclave,clavclasi.claveClasificacion as claveclasificacion,clavclasi.descripcionClasificacion as descripcionclaveclasi,sdp.idEmpresa as idempresa,sdp.idTipoTransaccion as idtipotransaccion,sdp.idLineanegocio as idlineanegocio, sdp.idClaveClasificacion as idclaveclasi,sdp.idEntidad as identidad,caes.descripcion as estatusdescripcion,sdp.idSolicitudPago as idsolicitudpago,lin.descripcionLineaNegocio as lineanegocio,    sdp.fechaSolicitud as fechasolicitud,
            sdp.NumEmpleado as numeroempleado,sdp.Beneficiaro as beneficiario,entfed.nombreEntidadFederativa as entidad,
            sdp.Concepto as concepto,sdp.TotalSolicitado as total,sdp.idEstatusSolicitud as estatus
            from solicitudDePagos sdp
            left join catalogolineanegocio lin
            on lin.idLineaNegocio=sdp.idLineanegocio
            left join entidadesfederativas entfed
            on entfed.idEntidadFederativa=sdp.idEntidad
            left join catalogoestatus_solicitudpago caes
            on caes.idestatus=sdp.idEstatusSolicitud
            left join catalogoclaveclasificacion clavclasi
            on clavclasi.idClasificacion=sdp.idClaveClasificacion
            left join bancos_empresa bco
            on bco.idCuentaBanco=sdp.idBancoDestino
            where sdp.idEstatusSolicitud=2 or sdp.idEstatusSolicitud=6 or sdp.idEstatusSolicitud=10";

        }
 //$this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listasolicitudespagos[] = $reg;
        }
   //         $this -> logger -> LogInfo ("valor del array de la listasolicitudespagos ".var_export ($listasolicitudespagos, true));

        return $listasolicitudespagos;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}  
public function actualizartablasolicitudepago($idSolicitudPago,$accion,$usuario)
{   
    if($accion==0){$accion=2;}
    try {

        if($accion!=5){
            $sql= "update solicitudDePagos
            set idEstatusSolicitud =" . mysqli_real_escape_string($this->conn, $accion) . "
            where idSolicitudPago =" . mysqli_real_escape_string($this->conn, $idSolicitudPago) . "";
        }else {
            $sql= "update solicitudDePagos
            set idEstatusSolicitud =" . mysqli_real_escape_string($this->conn, $accion) . ",
            idMovimiento =(select max(idMovimiento)from libromovimientos)
            where idSolicitudPago =" . mysqli_real_escape_string($this->conn, $idSolicitudPago) . "";   
        }

        $res = mysqli_query($this->conn, $sql);
             //$this -> logger -> LogInfo ("valos de la vbariable usuario en persiaaaaaaaa: " . $sql);
    } 
    catch (Exception $e) 
    {
        $this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}  



public function getcatbancosSolicitudPago($ctaclabe)
{

    $bancos = array();

    try {

        $sql = "select * from bancos_empresa 
        where idCuentaBanco='$ctaclabe'
        order by nombreBanco";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $bancos[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $bancos;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function getlistaClavesSolicitudPago($lineanegocio)
{
        //$this->logger->LogInfo("traerListaClavesClasificacionesPorTipo");

    try {
        $listaClasificaciones = array();
        
        $sql = "select *
        from catalogoclaveclasificacion catclasi
        left join catalogolineanegocio catnego
        on catclasi.idLineaNegocio=catnego.idLineaNegocio
        where catclasi.bloqueoFinanzas=0
        and catclasi.idTipoMovimiento=2
        and catnego.idLineaNegocio= " . mysqli_real_escape_string($this->conn, $lineanegocio) . " ";

        
//rol sea cobrnaza

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaClasificaciones[] = $reg;
        }
            //$this->logger->LogInfo("este es el valor de usuario " . var_export($usuario, true));

        return $listaClasificaciones;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function getUltimoId()
{
        //$this->logger->LogInfo("traerListaClavesClasificacionesPorTipo");

    try {
        $ultimoId = array();
        
        $sql = "SELECT ifnull(max(idSolicitudPago),0) as idSolicitudPago
        FROM solicituddepagos";
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $ultimoId[] = $reg;
        }
            //$this->logger->LogInfo("este es el valor de usuario " . var_export($usuario, true));
        return $ultimoId;

    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function InsertSolicitudPago($formulario,$usuario)
{
        //$this->logger->LogInfo("insertasolictudpagos");
        // $this->logger->LogInfo("este es el valor de formulario " . var_export($formulario, true));

    try {
        $sql = "INSERT INTO solicituddepagos(fechaSolicitud,idEstatusSolicitud,idEmpresa,idTipoTransaccion,NumEmpleado,
        Beneficiaro,idLineanegocio,idClaveClasificacion,idEntidad,idBancoDestino,NumeroCuentaDestino,NumeroCuentaClaveDestino, Concepto,TotalSolicitado,RolUsuario)VALUES(now(),1,".mysqli_real_escape_string($this->conn, $formulario["idEmpresa"]).",2
        ,'".mysqli_real_escape_string($this->conn, $formulario["numempleado"])."','".mysqli_real_escape_string($this->conn, $formulario["benificiario"])."',".mysqli_real_escape_string($this->conn, $formulario["lineaNegocioSolicitante"]).",".mysqli_real_escape_string($this->conn, $formulario["idClaveClasificacion"]).",'".mysqli_real_escape_string($this->conn, $formulario["entidadSolicitante"])."','".mysqli_real_escape_string($this->conn, $formulario["idBancoBeneficiario"])."',
        '".mysqli_real_escape_string($this->conn, $formulario["cuentaBeneficiario"])."','".mysqli_real_escape_string($this->conn, $formulario["cuentaClabeBeneficiario"])."','".mysqli_real_escape_string($this->conn, $formulario["conceptoDelPago"])."','".mysqli_real_escape_string($this->conn, $formulario["importe"])."','".mysqli_real_escape_string($this->conn, $usuario)."')";
 //$this->logger->LogInfo("ejecutanso insertsolictudpago" . var_export($sql, true));

        $res = mysqli_query($this->conn, $sql);
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function obtenerultimoid()
{
        //$this->logger->LogInfo("traerListaClavesClasificacionesPorTipo");

    try {
        $obtultimoid = array();
        
        $sql = "SELECT max(idMovimiento) as idMovimiento
        FROM libromovimientos";
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $obtultimoid[] = $reg;
        }
            //$this->logger->LogInfo("este es el valor de usuario " . var_export($usuario, true));
        return $obtultimoid;

    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function traelistacomprobaciones($accioncomprobacionesdeabonos,$lineanegociocomprobacionesdeabonos,$entidadescomprobacionesdeabonos,$fechafinalcomprobacionesdeabonos,$fechainiciocomprobacionesdeabonos)
{
           // $this->logger->LogInfo("traelistacomprobaciones");

    try {
        $listacomprobaciones1 = array();

        $sql = "select lm.fechaMovimiento as fechacargo,lm.idTipoMov as idmovimientofinanciero,mf.descripcionMovimientoFinanciero as tipomovimiento,lm.idMovimiento as idmovimiento,lm.fechaComprobacion as FechaComprobación,em.DescripcionEstatusMov as Estatus,lm.beneficiario as Beneficiario,lm.concepto as Concepto,lm.referencia as Referencia,lm.monto as Monto,ln.descripcionLineaNegocio as LineaNegocio,ef.nombreEntidadFederativa as Entidad,dt.nombreDepto as Departamento,sd.nombreSubDepto as SubDepartamento,cc.descripcionClasificacion as ClaveClasificacion
        from libromovimientos lm
        left join catalogolineanegocio ln
        on lm.idLineaNeg=ln.idLineaNegocio 
        left join entidadesfederativas ef
        on lm.idEntidad=ef.idEntidadFederativa
        left join catalogodeptos dt
        on lm.idDepartamentoM=dt.idDepto
        left join catalogosubdeptos sd
        on lm.SubDepartamento=sd.idSubDepto 
        left join catalogoclaveclasificacion cc
        on lm.claveClasificacionM=cc.claveClasificacion
        left join catalogoestatusmovimientos em
        on lm.idEstatusM=em.idEstatusMov
        left join catalogotiposmovimientosfinancieros mf
        on lm.idTipoMov=mf.idTipoMovimientoFinanciero";

        if ($accioncomprobacionesdeabonos =="0") {
            $sql .= " where lm.idEstatusM=2
            and lm.idLineaNeg=" . mysqli_real_escape_string($this->conn, $lineanegociocomprobacionesdeabonos) . "";
        }else if ($accioncomprobacionesdeabonos =="1") {
            $sql .=" where lm.idEstatusM=2
            and lm.idLineaNeg=" . mysqli_real_escape_string($this->conn, $lineanegociocomprobacionesdeabonos) . "
            and lm.fechaComprobacion between '" . mysqli_real_escape_string($this->conn, $fechainiciocomprobacionesdeabonos) . "' and  '" . mysqli_real_escape_string($this->conn, $fechafinalcomprobacionesdeabonos) . "' ";
        }else if ($accioncomprobacionesdeabonos =="2") {
            $sql .=" where lm.idEstatusM=2
            and lm.idLineaNeg=" . mysqli_real_escape_string($this->conn, $lineanegociocomprobacionesdeabonos) . "
            and lm.idEntidad=" . mysqli_real_escape_string($this->conn, $entidadescomprobacionesdeabonos) . "";
        }else if ($accioncomprobacionesdeabonos =="3") {
            $sql .=" where lm.idEstatusM=2
            and lm.idLineaNeg=" . mysqli_real_escape_string($this->conn, $lineanegociocomprobacionesdeabonos) . "
            and lm.idEntidad=" . mysqli_real_escape_string($this->conn, $entidadescomprobacionesdeabonos) . "
            and lm.fechaComprobacion between '" . mysqli_real_escape_string($this->conn, $fechainiciocomprobacionesdeabonos) . "' and  '" . mysqli_real_escape_string($this->conn, $fechafinalcomprobacionesdeabonos) . "' ";
        }
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listacomprobaciones1[] = $reg;
        }
        //       $this -> logger -> LogInfo ("este es el valor de usuario ".var_export ($listacomprobaciones1, true));

        return $listacomprobaciones1;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function actualizartablalibromovimiento($idmovimiento,$accionSoli)
{
    try {

        $sql = "update libromovimientos set idEstatusM=1
        where idMovimiento=" . mysqli_real_escape_string($this->conn, $idmovimiento) . "";

        $sql2 = "update solicituddepagos set idEstatusSolicitud=9
        where idMovimiento=" . mysqli_real_escape_string($this->conn, $idmovimiento) . "";

        $res = mysqli_query($this->conn, $sql);

        if($accionSoli==1)
        {
         $res = mysqli_query($this->conn, $sql2);
     }
 } catch (Exception $e) {
    $this->logger->LogInfo("ERROR:" . $e->getMessage());
}
}

public function obteneridlineanegocio($usuario,$usuarioentidad)
{
        //$this-> logger -> LogInfo("traerListacomprobacionconysinsolicitud");
    $listobteneridlineanegocio = array();
    try {

        $sql="SELECT emp.empleadoLineaNegocioId as idLinea FROM usuario_empleado usemp
        left join empleados emp
        on usemp.entidadEmpleadoUsuario=emp.entidadFederativaId
        and usemp.consecutivoEmpleadoUsuario=emp.empleadoConsecutivoId
        and usemp.categoriaEmpleadoUsuario=emp.empleadoCategoriaId
        where usemp.entidadEmpleadoUsuario='" . mysqli_real_escape_string($this->conn, $usuarioentidad) . "'
        and usemp.usuario='" . mysqli_real_escape_string($this->conn, $usuario) . "'";
        
      //  $this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listobteneridlineanegocio[] = $reg;
        }
   //         $this -> logger -> LogInfo ("valor del array de la listasolicitudespagos ".var_export ($listasolicitudespagos, true));
        return $listobteneridlineanegocio;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
} 

public function listacomprobacionesconysinsolicitud($caso,$usuarioentidad,$idlinea,$usuario1)
{
        //  $this-> logger -> LogInfo("traerListacomprobacionconysinsolicitud");
    $listcomprobacionesconysinsolicitud1 = array();
    try {

        $sql="SELECT ce.DescripcionEstatusMov as Estatus,lm.idMovimiento as Folio,lm.fechaCaptura as Fecha,
        cc.descripcionClasificacion as Clave,lm.beneficiario as Beneficiario,lm.concepto as Concepto,
        lm.monto as Total,lm.idEntidad as Entidad,lm.idLineaNeg as Linea,lm.claveClasificacionM as ClaveC,
        be.nombreBanco as Banco,sp.NumeroCuentaDestino as Cuenta,lm.idTipoTransaccionM as Transaccion,
        lm.idDepartamentoM as Departamento,lm.SubDepartamento as SubDepartamento,lm.idEmpresaM as Empresa
        FROM libromovimientos lm
        left join solicituddepagos sp 
        on sp.idMovimiento=lm.idMovimiento 
        left join catalogoestatusmovimientos ce 
        on ce.idEstatusMov=lm.idEstatusM
        left join catalogoclaveclasificacion cc
        on cc.claveClasificacion=lm.claveClasificacionM
        left join bancos_empresa be
        on be.idCuentaBanco=sp.idBancoDestino
        where lm.idTipoMov=2
        and lm.idEstatusM=3
        and lm.idEntidad='" . mysqli_real_escape_string($this->conn, $usuarioentidad) . "'
        and lm.idLineaNeg='" . mysqli_real_escape_string($this->conn, $idlinea) . "'";
        if ($caso=="0"){
            $sql .= "and sp.RolUsuario='" . mysqli_real_escape_string($this->conn, $usuario1) . "' 
            and sp.idMovimiento!=''";}
            else{
                $sql .= "and sp.idMovimiento is null";}
        //$this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));
                $res = mysqli_query($this->conn, $sql);
                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listcomprobacionesconysinsolicitud1[] = $reg;
                }
   //         $this -> logger -> LogInfo ("valor del array de la listasolicitudespagos ".var_export ($listasolicitudespagos, true));
                return $listcomprobacionesconysinsolicitud1;

            } catch (Exception $e) {

                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function Actualizarestatuscomprobacion($idlibromovimientos,$casoactulizar)
        {

          $sql = "update libromovimientos
          set idEstatusM ='2',
          fechaComprobacion = now()
          where idMovimiento ='" . mysqli_real_escape_string($this->conn, $idlibromovimientos) . "'";


          $sql1 = "update solicituddepagos
          set idEstatusSolicitud ='8'
          where idMovimiento ='" . mysqli_real_escape_string($this->conn, $idlibromovimientos) . "'";

          $res = mysqli_query($this->conn, $sql);
          if($casoactulizar==0){
            $res = mysqli_query($this->conn, $sql1);
        }
        
        if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
            throw new Exception("Error de actualización");
        }
    }   

    public function traelistaporid($id,$idtipo)
    {
     try {
        $listaid = array();
          //  $this->logger->LogInfo("este es el valor de usuario " . var_export($idtipo, true));

        $sql = "select * ";

        if($idtipo=="ABONO"){
            $sql .=" from libromovimientoscomprobaciones lc
            left join solicituddepagos sp
            on lc.idMovimiento=sp.idMovimiento
            where lc.idMovimiento='" . mysqli_real_escape_string($this->conn, $id) . "'";
        }else{
         $sql .=" from libromovimientos
         where idMovimiento='" . mysqli_real_escape_string($this->conn, $id) . "'";
     }

     $res = mysqli_query($this->conn, $sql);

     while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaid[] = $reg;
    }
       //     $this->logger->LogInfo("este es el valor de usuario " . var_export($listaid, true));
    return $listaid;

} catch (Exception $e) {
    $this->logger->LogInfo("ERROR:" . $e->getMessage());
}
}

public function traerlineanegociogastocosto($case,$j)
{
        //    $this->logger->LogInfo("traerListaClavesClasificacionesPorTipo");

    try {
        $listalineagastocosto = array();
        $sql = "SELECT idLineaNegocio";
        if ($case==0){
            $sql .= " FROM catalogolineanegocio";
        }else{
            $sql .= " FROM catalogolineanegocio
            WHERE idLineaNegocio='" . mysqli_real_escape_string($this->conn, $j) . "'";
        }
         //   $this -> logger -> LogInfo ("este es el valor de usuario ".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listalineagastocosto[] = $reg;
        }
        
        return $listalineagastocosto;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function actulizartblAsistenciaAPlicodiferencias($datos)
{
        // $this -> logger -> LogInfo ("este es el valor de datos ".var_export ($neomenclaturaincidencia, true));
       // $this -> logger -> LogInfo ("Ejecutando. actulizartblAsistenciaAPlicodiferencias en persistencia");
    $neomenclaturaincidencia=$datos['neomenclaturaIncidencia'];
    $sql ="update asistencia
    set aplicoDiferencia=1
    where empleadoEntidad='" . mysqli_real_escape_string($this->conn, $datos['incidenciaEmpleadoEntidad']) . "'
    and empleadoConsecutivo='" . mysqli_real_escape_string($this->conn, $datos['incidenciaEmpleadoConsecutivo']) . "'
    and empleadoTipo='" . mysqli_real_escape_string($this->conn, $datos['incidenciaEmpleadoTipo']) . "'
    and fechaAsistencia='" . mysqli_real_escape_string($this->conn, $datos['fechaAsistencia']) . "' ";
    $sql1="update incidenciasespeciales
    set aplicoDiferencia=1
    where incidenciaEmpleadoEntidad='" . mysqli_real_escape_string($this->conn, $datos['incidenciaEmpleadoEntidad']) . "'
    and incidenciaEmpleadoConsecutivo='" . mysqli_real_escape_string($this->conn, $datos['incidenciaEmpleadoConsecutivo']) . "'
    and incidenciaEmpleadoTipo='" . mysqli_real_escape_string($this->conn, $datos['incidenciaEmpleadoTipo']) . "'
    and incidenciaFecha='" . mysqli_real_escape_string($this->conn, $datos['fechaAsistencia']) . "'";
        if($neomenclaturaincidencia=='TE' || $neomenclaturaincidencia=='R' || $neomenclaturaincidencia=='UI' || $neomenclaturaincidencia=='D' || $neomenclaturaincidencia=='DF' || $neomenclaturaincidencia=='TEN' || $neomenclaturaincidencia=='RN'){//SON LAS NEOMENCLATURAS DEL catalogoincidenciasespeciales
           $res = mysqli_query($this->conn, $sql1);
       }else {
           $res = mysqli_query($this->conn, $sql); 
       }

       

       if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar aplicodeiferencias asistencia o incidenciasespeciales.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
    
}




public function getDeducciones($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$case)
{
        // $this -> logger -> LogInfo ("este es el valor de datos ".var_export ($neomenclaturaincidencia, true));
       // $this -> logger -> LogInfo ("Ejecutando. actulizartblAsistenciaAPlicodiferencias en persistencia");
    try{

        $sqlfonacotnomina="select *
        from fonacot_nomina
        where idFN=(select max(idFN)
        FROM fonacot_nomina
        where entidadEmpFN='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
        and consecutivoEmpFN='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
        and categoriaEmpFN='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "')";
        $sqlinfonavit="select *
        from infonavit_nomina
        where idIN=(select max(idIN)
        FROM infonavit_nomina
        where entidadEmpIN='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
        and consecutivoEmpIN='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
        and categoriaEmpIN='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "')";
        $sqlpension="select *
        from pension_nomina
        where idPeN=(select max(idPeN)
        FROM pension_nomina
        where entidadEmpPeN='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
        and consecutivoEmpPeN='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
        and categoriaEmpPeN='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "')";
        $sqlprestamo="select *
        from prestamo_nomina
        where idPN=(select max(idPN)
        FROM prestamo_nomina
        where entidadEmpPN='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
        and consecutivoEmpPN='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
        and categoriaEmpPN='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "')";

        $sqlalimentosNomina=" select *
        from alimentos_nomina
        where idAN=(select max(idAN)
        FROM alimentos_nomina
        where entidadEmpAN='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
        and consecutivoEmpAN='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
        and categoriaEmpAN='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "');";

        if($case==1){
            $res = mysqli_query($this->conn, $sqlfonacotnomina); 
            $datodeudafonacot = array();
            while (($resqrydeudafonacot = mysqli_fetch_array($res, MYSQLI_ASSOC))){$datodeudafonacot[] = $resqrydeudafonacot;}
            $conteodeudafonacot = count($datodeudafonacot);
            if ($conteodeudafonacot != 0){$monto = $datodeudafonacot[0]["montoFN"];}else{$monto = 0;}

        }elseif ($case==2){
            $res = mysqli_query($this->conn, $sqlinfonavit); 
            $datodeudainfonavit = array();
            while (($resqrydeudafinfonavit = mysqli_fetch_array($res, MYSQLI_ASSOC))){$datodeudainfonavit[] = $resqrydeudafinfonavit;}
            $conteodeudainfonavit = count($datodeudainfonavit);
            if ($conteodeudainfonavit != 0){$monto = $datodeudainfonavit[0]["montoIN"];}else{$monto = 0;}
        }elseif ($case==3){

            $res = mysqli_query($this->conn, $sqlpension); 
            $datodeudapension = array();
            while (($resqrydeudafpension = mysqli_fetch_array($res, MYSQLI_ASSOC))){$datodeudapension[] = $resqrydeudafpension;}
            $conteodeudapension = count($datodeudapension);
            if ($conteodeudapension != 0){$monto = $datodeudapension[0]["montoPeN"];}else{$monto = 0;}
        }elseif ($case==4){
            $res = mysqli_query($this->conn, $sqlprestamo); 
            $datodeudaprestamo = array();
            while (($resqrydeudafprestamo = mysqli_fetch_array($res, MYSQLI_ASSOC))){$datodeudaprestamo[] = $resqrydeudafprestamo;}
            $conteodeudaprestamo= count($datodeudaprestamo);
            if ($conteodeudaprestamo != 0){$monto = $datodeudaprestamo[0]["montoPN"];}else{$monto = 0;}
        }elseif ($case==5){
            $res = mysqli_query($this->conn, $sqlalimentosNomina); 
            $datodeudaalimentos = array();
            while (($resqrydeudafalimentos = mysqli_fetch_array($res, MYSQLI_ASSOC))){$datodeudaalimentos[] = $resqrydeudafalimentos;}
            $conteodeudaalimentos= count($datodeudaalimentos);
            if ($conteodeudaalimentos != 0){$monto = $datodeudaalimentos[0]["montoAN"];}else{$monto = 0;}
        }
        return $monto;
    } catch (Exception $e) {$this->logger->LogInfo("ERROR:" . $e->getMessage());}                       
}

public function getcatalogoplacas()
{

    $placas = array();

    try {

        $sql ="select * from catalogoplacasvehiculares order by TipoDeServicio";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $placas[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $placas;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function traerListaModalidesPlacas($idPlacas)
{
        //$this-> logger -> LogInfo("traerListaBancos");
    $listamodalidad = array();

    try {

        $sql ="select * from catalogomodalidadplacasvehiculares
        where idTipoDePlacas='$idPlacas'";

            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listamodalidad[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

        return $listamodalidad;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}


public function traerEstructuraDePlacas($idmodalidadplacas)
{
        //$this-> logger -> LogInfo("traerListaBancos");
    $estructuraplacas = array();

    try {

        $sql ="select * from catalogomodalidadplacasvehiculares
        where idModalidadDePlacas='$idmodalidadplacas'";

            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $estructuraplacas[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

        return $estructuraplacas;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function getcatalogomarcas($valorselectorTipoDeVehiculo)
{

    $marca = array();

    try {

        $sql ="SELECT * FROM catalogoMarcasVehiculos";
            if($valorselectorTipoDeVehiculo == "12"){// ya que no esta completamente dividido el catalogo de vehiculos y models 
                $sql.= " where idTipoVehiculo ='$valorselectorTipoDeVehiculo'
                order by Marca";
            }else{
                $sql.= " where idTipoVehiculo !='12'
                order by Marca";
            }

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $marca[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

            return $marca;

        } catch (Exception $e) {

            $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
        }
    }

    public function traerListaModeloXMarca($idMarca)
    {
        //$this-> logger -> LogInfo("traerListaBancos");
        $listamodelos = array();

        try {

            $sql ="select * from catalogoModelosVehiculos
            where idMarca='$idMarca'";

            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $listamodelos[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

            return $listamodelos;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }

    public function getcatalogotipovehiculos()
    {

        $tipoVehiculos = array();

        try {

            $sql ="SELECT * FROM catalogoTipoVehiculos order by Descripcion";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $tipoVehiculos[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

            return $tipoVehiculos;

        } catch (Exception $e) {

            $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
        }
    }

    public function insertarRegistroDeVehiculos($Rvehiculo)
    {
        
        $this -> logger -> LogInfo ("Ejecutando. insertarVehiculo en persistencia");
        $sql = "INSERT INTO parquevehicular (DestinoVehiculo, FechaIngresoVehiculo, idLineaNegocio, idEntidadFederativa, idTipoServicioPlacas, idModalidadDePlacas, idColorEngomado, NumeroPlaca, idtarjetaC, FechaInicioVigenciaDeTarjeta, FechaTerminoVigenciaDeTarjeta, idMarca, idModelo, idTipoDeVehiculo, IdColorVehiculo, AnioVehiculo, NumeroSerieVehiculo, idTieneNumeroDeMotor, NumeroDeMotorVehiculo, IdPaisOrigen, idEstadoDelVehiculo, FechaDeCompraVehiculo, CilindradaDelVehiculo, CentimetrosCubicos, idAseguradora, idTipoDePoliza, NumeroPoliza,FechaInicionPoliza, FechaFinalPoliza, UsuarioCaptura, NombreFotoVehiculo, NombreFotoTarjetaDeCirculacion, NombreFotoPoliza, NombreFotoFactura, EstatusDelVehiculo) VALUES (

        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selempresaexterno"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["fechaingreso"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selLineaDeNegocio"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selEntidad"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selPlacas"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selModalidad"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selEngomado"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["numeroPlacas"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["seltarjetacirculacion"])."',";
   
        if($Rvehiculo["inpFechaDeIniciotarjeta"] == "" || $Rvehiculo["inpFechaDeIniciotarjeta"] == "0000-00-00" || $Rvehiculo["inpFechaDeTerminotarjeta"] == "" || $Rvehiculo["inpFechaDeTerminotarjeta"]=="0000-00-00"){
            $sql.=" null,null, ";
        }else{
            $sql.=" '".mysqli_real_escape_string($this->conn, $Rvehiculo["inpFechaDeIniciotarjeta"])."',
                    '".mysqli_real_escape_string($this->conn, $Rvehiculo["inpFechaDeTerminotarjeta"])."', ";
        }

        $sql.=" '".mysqli_real_escape_string($this->conn, $Rvehiculo["selMarca"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selModelo"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selTipoDeVehiculo"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selColor"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["inpAnio"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["inpNumeroDeSerie"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selCuentaConNumeroMotro"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["inpNumeroDeMotor"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selPaisOrigen"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selVehiculoNuevoViejo"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["fechaCompra"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selCilindrosDelVehiculo"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["inpCentimetrosCubicos"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selAseguradora"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selTipoDePoliza"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["inpNumeroPoliza"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selFechaIniciPoliza"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["selFechaFinPoliza"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["usuarioCapturavehiculo"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["idfotoVehiculo"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["idfotoTarjeta"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["idfotoPoliza"])."',
        '".mysqli_real_escape_string($this->conn, $Rvehiculo["idfotoFactura"])."',
        '1')";
       $this -> logger -> LogInfo ("Se ejecuto consulta como" . $sql);
        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function updateBajas_Uniformes_envioLavanderia($idIncrementUniformes)
    {

        $sql = "update bajas_uniforme
        set estatusUniforme=4
        where incremetBajauniforme=" .mysqli_real_escape_string($this->conn, $idIncrementUniformes) . "";

        //$this -> logger -> LogInfo ("Se ejecuto consulta recibirUniforme como " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al enviar uniforme lavanderia desde        consulta uniformes recibidos.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }

    }

    public function getcatalogoColores($casoColor)
    {
       try {
        $Color = array();
        $sql ="SELECT * ";
        if ($casoColor==0){
            $sql .= "FROM catalogocolores order by Descripcion";
        }else{
            $sql .= "FROM catalogocolores where idcolor ='1' or idcolor ='2' or idcolor ='3' or idcolor ='4' or idcolor ='11' order by Descripcion";
        }
            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $Color[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));
        return $Color;
    } catch (Exception $e) {
        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}


public function consultaultimofolioenviarLavanderia()
{
        //$this-> logger -> LogInfo("traerUltimoFolioTxtRequisicion");
    try {
           /* $sql = "select  LPAD(IF(MAX( folioEnvioLavanderia ) IS NULL , 1, MAX( folioEnvioLavanderia ) + 1 ), 7, 0)  AS 'folioEnvioLavanderia'
           from envio_lavanderia";*/
           $sql="Select  IF(MAX( folioEnvioLavanderia ) IS NULL , 1, MAX( convert(folioEnvioLavanderia,unsigned) ) + 1 ) AS 'folioEnvioLavanderia'
           from envio_lavanderia";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoFolioTxtRequisicion en persistencia". $sql);

           $res = mysqli_query($this->conn, $sql);

           while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $ultimoFolio = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

        return $ultimoFolio;

    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function consultaFoliosdeUniformesEnviadosLavan($entidadUsuario,$sucursalesArreglo)
{
    //$this-> logger -> LogInfo("consultaFoliosdeUniformesEnviadosLavan");
    try {
        $FoliosUniformes=array();

           $sql="SELECT el.folioEnvioLavanderia,ef.nombreEntidadFederativa,el.fechaEnvioLavanderia,el.recibidaLavanderia,sucursalEnvioLavanderia,nombreSucursal 
                 FROM envio_lavanderia el
                 LEFT JOIN  entidadesfederativas ef ON el.entidadEnvioLavanderia=ef.idEntidadFederativa
                 LEFT JOIN sucursalesinternas si ON  si.idSucursalI=el.sucursalEnvioLavanderia
                 WHERE recibidaLavanderia=0 
                 AND sucursalEnvioLavanderia IN ($sucursalesArreglo) 
                 AND(";
           for($i=0;$i<count($entidadUsuario);$i++){
                if(!is_array($entidadUsuario)){
                    $entidadparaconsulta=$entidadUsuario;
                }else{
                    $entidadparaconsulta=$entidadUsuario[$i];
                }
                if($i==0){
                    $sql.=" entidadEnvioLavanderia='$entidadparaconsulta'";
                }else{
                    $sql.=" or entidadEnvioLavanderia='$entidadparaconsulta'";
                }
            }
            $sql.=" ) order by fechaEnvioLavanderia";
       $this -> logger -> LogInfo ("ejecutando consultaFoliosdeUniformesEnviadosLavan en persistencia". $sql);
           $res = mysqli_query($this->conn, $sql);
           while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $FoliosUniformes[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));
        return $FoliosUniformes;
    } catch (Exception $e) {
        $this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function consultaDetallesEnvioLavanderia($folio)
{
        //$this-> logger -> LogInfo("traerUltimoFolioTxtRequisicion");
    try {
        $dertalleUniformes=array();
           /* $sql = "select  LPAD(IF(MAX( folioEnvioLavanderia ) IS NULL , 1, MAX( folioEnvioLavanderia ) + 1 ), 7, 0)  AS 'folioEnvioLavanderia'
           from envio_lavanderia";*/
           $sql="  select *
           from detalle_lavanderia dl
           left join bajas_uniforme bu
           on dl.idUniformeSucio=bu.incremetBajauniforme
           left join catalogotiposuniforme ctu
           on bu.idUniformeRecibido  =ctu.idTipoUniforme
           where dl.idEnvio='$folio'";

            //$this -> logger -> LogInfo ("ejecutando traerUltimoFolioTxtRequisicion en persistencia". $sql);

           $res = mysqli_query($this->conn, $sql);

           while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $dertalleUniformes[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traerUltimoFolio ".var_export ($numeroFolio, true));

        return $dertalleUniformes;

    } catch (Exception $e) {

        $this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function UpdateFolioRecibidoFromLavanderia($folio,$costoNotaFactura,$folioRecibidoLavan)
{
  $sql = "update envio_lavanderia
  set recibidaLavanderia=1,fechaRecibida=now(),precioLavanderia=$costoNotaFactura,folioRecibidoLavanderia='$folioRecibidoLavan'
  where folioEnvioLavanderia=$folio";
  $res = mysqli_query($this->conn, $sql);


            //$this -> logger -> LogInfo ("ejecutando update update folioRecibidos ".var_export ($sql, true));
  if ($res !== true) {
    $this->logger->LogInfo("Ocurrio un error al actualizar envio_lanaderia");
    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
}

}


public function RecepcionAStockFromLavanderia($idsUniformes,$usuarioEntidad,$idunicoBajaUniforme)
{
    $sql = "update stockuniforme
    set cantidadUniformes=(cantidadUniformes+1)
    where claveUniforme=$idsUniformes and(";
    for($i=0;$i<count($usuarioEntidad);$i++){
            if(!is_array($usuarioEntidad)){
                $entidadparaconsulta=$usuarioEntidad;
            }else{
                $entidadparaconsulta=$usuarioEntidad[$i];
            }
            if($i==0){
                    $sql.=" entidadUniforme='$entidadparaconsulta'";
                }else{
                    $sql.=" or entidadUniforme='$entidadparaconsulta'";
                }
            }
            $sql.=" )";
    // $this -> logger -> LogInfo ("ejecutando upadet stockuniforme en persistencia". $sql);

    $res = mysqli_query($this->conn, $sql);
    $sql2 = "update bajas_uniforme
    set estatusUniforme=0
    where incremetBajauniforme='$idunicoBajaUniforme'";
    $res2 = mysqli_query($this->conn, $sql2);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar reingreso a stock desde lavanderia.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }else if ($res2 !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar bajas_uniforme recepcion stock");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function DestruccionFromLavanderia($idUnicoUniforme)
{
    $sql = "update bajas_uniforme
    set estatusUniforme=2
    where incremetBajauniforme='$idUnicoUniforme'";
    $res = mysqli_query($this->conn, $sql);
            //$this -> logger -> LogInfo ("ejecutando upadet destruccion en persistencia". $sql);       
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar bajas_uniforme");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function ReturnConsultaRecibidos($idunicoBajaUniforme)
{
    $sql = "update bajas_uniforme
    set estatusUniforme=1
    where incremetBajauniforme='$idunicoBajaUniforme'";
    $res = mysqli_query($this->conn, $sql);
            //$this -> logger -> LogInfo ("ejecutando upadet destruccion en persistencia". $sql);       
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar bajas_uniforme retur consulta lavanderia");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}



public function getnumeroeconomico()
{
   try {
    $economico_Numero = array();
    $sql ="SELECT max(idvehiculo) as idNumeroEconomico FROM parquevehicular";
    
            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $economico_Numero[] = $reg;
    }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));
    return $economico_Numero;
} catch (Exception $e) {
    $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
}
}

public function getcatalogoTarjetaCierculacion()
{

    $TarjetaC = array();

    try {

        $sql ="SELECT * FROM catalogotarjetacerculacion";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $TarjetaC[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $TarjetaC;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function getcatalogoNumMotor()
{

    $MotorM = array();

    try {

        $sql ="SELECT * FROM catalogonumeromotor";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $MotorM[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $MotorM;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}
public function getcatalogoEstadovehiculo()
{

    $EstadoDVehiculo = array();

    try {

        $sql ="SELECT * FROM catalogonestadodelvehiculo";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $EstadoDVehiculo[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $EstadoDVehiculo;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function getcatalogoAseguradorid()
{

    $Aseguradora = array();

    try {

        $sql ="SELECT * FROM catalogonaseguradoras";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $Aseguradora[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $Aseguradora;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function getcatalogotipoCoberturas()
{

    $tipoCobertura = array();

    try {

        $sql ="SELECT * FROM catalogotipocoberturaseguros order by Descripcion";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $tipoCobertura[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $tipoCobertura;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function insertarDatosGenerasPoliza($DatosPoliza,$idVehiculoR)
{
        $this -> logger -> LogInfo ("Ejecutando. insertarDatosGenerasPoliza en persistencia");
    $sql = "INSERT INTO datospoliza ( idvehiculo, idCheckDanoMaterialesperdidaTotal, CantidadAsegurada_DMPT, idCheckCristales, idCristalesAmparados, PorcentajeAmparada_Cristales, CantidadAmparada_Cristales, idCheckDanoMaterialesperdidaParcial, CantidadAsegurada_DMPP, idCheckProteccionLegal, idProteccionLegalAmparados, PorcentajeAmparada_ProteccionLegal, CantidadAmparada_ProteccionLegal, idCheckRoboTotal, CantidadAsegurada_RoboTotal, idCheckClubAutos, idClubAutosAmparados, PorcentajeAmparada_ClubAutos, CantidadAmparada_ClubAutos, idCheckResponsabilidadCivilDanosATerceros, CantidadAsegurada_RCDT, idCheckGastosMedicosOcupantes, CantidadAsegurada_GastosMedicosOcupantes, idCheckAccidenteAlConductor, CantidadAsegurada_AccidenteAlConductor) VALUES (

    '".mysqli_real_escape_string($this->conn, $idVehiculoR["idNumeroEconomico"])."',        
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["DMPTotal"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpCantidadPerdidaTotal"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["Cristales"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["selAparadaCristales"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpPorcentajeCristales"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpCantidadCristales"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["DMPParcial"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpCantidadPerdidaParcial"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["ProteccionLegal"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["selAparadaProteccionLegal"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpPorcentajeProteccionLegal"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpCantidadProteccionLegal"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["Robototal"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpCantidadRobototal"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["Club"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["selAparadaClub"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpCantidadRobototal"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpPorcentajeClub"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["DanosATerceros"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpCantidadDanosATerceros"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["GastosMedicos"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpCantidadGastosMedicos"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["Accidentes"])."',
    '".mysqli_real_escape_string($this->conn, $DatosPoliza["inpCantidadAccidentes"])."')";

        $this -> logger -> LogInfo ("Se ejecuto consulta como" . $sql);
    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function insertarAccesoriosVehiculo($AccesorosVehiculos,$idVehiculoaccesoriosR)
{
        $this -> logger -> LogInfo ("Ejecutando. insertarAccesoriosVehiculo en persistencia");
    $sql = "INSERT INTO accesoriosdelvehiculo (idvehiculo, idCheckDesarmadorDeCruz, idCheckDesarmadorPlano, idCheckCablesPasaCorriente, idCheckSenalDePrecaucion, idCheckCopiaDeLlaves, idCheckLlantaDeRefaccion, idCheckLlaveDeCruz, idCheckGatoHidraulico, idTarjetaLlave, NumeroTarjetaLlave, idTarjetaGasolina, NumeroTarjetaGasolina, NipTarjetaGasolina) VALUES (

    '".mysqli_real_escape_string($this->conn, $idVehiculoaccesoriosR["idNumeroEconomico"])."',        
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["DesarmadorC"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["DesarmadorP"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["Cables"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["Senal"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["CLlave"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["Llanta"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["Llave"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["Gato"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["TarjetaLlave"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["inpNumeroTarjetaLLave"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["TarjetaGasolina"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["inpNumeroTarjetaGasolina"])."',
    '".mysqli_real_escape_string($this->conn, $AccesorosVehiculos["inpNIP"])."')";

        $this -> logger -> LogInfo ("Se ejecuto consulta como" . $sql);
    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getcatalogoCilindrosVehiculos()
{

    $Cilindros = array();

    try {

        $sql ="SELECT * FROM catalogoCilindradaVehiculo";

            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $Cilindros[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));

        return $Cilindros;

    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function getdatosdelvehiculo($consultavehicular,$valordelcampodeconsulta)
{
       // $this-> logger -> LogInfo("traer lista vehiculo");
    $datosconsultavehiculo = array();

    try {

        $sql ="select pv.idvehiculo as idvehiculo, ce.nombreEmpresa as destinoempresa , pv.FechaIngresoVehiculo as fechaIngresoVehiculo,ln.idLineaNegocio as IdLineaNegocio,
        ln.descripcionLineaNegocio as lineanegocio,ef.idEntidadFederativa as IdEntidadF ,ef.nombreEntidadFederativa as entidadfederativa, cpv.TipoDeServicio as tipodeservicio, cmp.DesacripcionDeModalidad  as modalidadplacas,cc.Descripcion as colorengomado,cc.idcolor as idcolorengomado,pv.NumeroPlaca as numeroplacas, ctc.Descripcion as tarjetaDeCirculacion, ctc.idtarjetaC as idtarjetaDeCirculacion,pv.FechaInicioVigenciaDeTarjeta as fechainicioVigencia,pv.FechaTerminoVigenciaDeTarjeta as fechaTerminoVigencia,cmr.Marca as Marca, cmd.Modelo as Modelo, 
        ctv.Descripcion as tipoDeVehiculo, ccc.Descripcion as ColorVehiculo,pv.AnioVehiculo as anioVehuiculo, pv.NumeroSerieVehiculo as NumeroSerie,cnm.Descripcion as TieneNumeroDeMotor,cnm.idnumeroMotor as idTieneNumeroDeMotor, pv.NumeroDeMotorVehiculo NumeroMotor, cpa.nombrePais as PaisDeOrigen, cev.Descripcion as EstadoDelVehiculo,pv.FechaDeCompraVehiculo as FechaCompra, cacv.Descripcion as Cilindrada, pv.CentimetrosCubicos as CentimetrosCubicos, catase.idaseguradora as IdAseguradora,catase.Descripcion as Aseguradora,ctp.idTipoCobertura as idtipoDePoliza,ctp.Descripcion as tipoDePoliza,
        pv.NumeroPoliza as NumeroPoliza,pv.FechaInicionPoliza as FechaIniciPoliza, pv.FechaFinalPoliza as FechaFinalPoliza,
        pv.UsuarioCaptura as Usuariocaptura, pv.NombreFotoVehiculo as NombreFotoVehiculo,pv.NombreFotoTarjetaDeCirculacion as NombreFotoTarjetaDeCirculacion, pv.NombreFotoPoliza as NombreFotoPoliza, pv.NombreFotoFactura as NombreFotoFactura,dapol.idCheckDanoMaterialesperdidaTotal as checkDMPT, dapol.CantidadAsegurada_DMPT as CantidadDMPT,dapol.idCheckCristales as CheckCristales,cm1.Descripcion as AmparoDeCristales, dapol.PorcentajeAmparada_Cristales as Porcentajecristales, dapol.CantidadAmparada_Cristales as CantidadCristales,dapol.idCheckDanoMaterialesperdidaParcial checkDMPP,
        dapol.CantidadAsegurada_DMPP as CantidadDMPP, dapol.idCheckProteccionLegal as CheckProteccion,cm2.Descripcion as AmparoProteccion, dapol.PorcentajeAmparada_ProteccionLegal as PorcentajeProteccion, dapol.CantidadAmparada_ProteccionLegal as CantidadProteccion,dapol.idCheckRoboTotal as CheckRobo, dapol.CantidadAsegurada_RoboTotal as CantidadRobo, dapol.idCheckClubAutos as CheckClub,cm3.Descripcion as AmparoClub,dapol.PorcentajeAmparada_ClubAutos as PorcentajeClub, dapol.CantidadAmparada_ClubAutos as CantidadClub, dapol.idCheckResponsabilidadCivilDanosATerceros as CheckRCDAT,dapol.CantidadAsegurada_RCDT as CantidadRCDAT, dapol.idCheckGastosMedicosOcupantes as CheckGMO, dapol.CantidadAsegurada_GastosMedicosOcupantes as CantidadGMO, dapol.idCheckAccidenteAlConductor as CheckAccidenteC, dapol.CantidadAsegurada_AccidenteAlConductor as CantidadAccidenteC,accv.idCheckDesarmadorDeCruz as DCruz, accv.idCheckDesarmadorPlano as DPlano, accv.idCheckCablesPasaCorriente as Cable, accv.idCheckSenalDePrecaucion Senal,accv.idCheckCopiaDeLlaves as Cllaves, accv.idCheckLlantaDeRefaccion as Llanta, accv.idCheckLlaveDeCruz as LaveCruz, accv.idCheckGatoHidraulico as Gato, accv.idTarjetaLlave as idTarjetaLlave,accv.NumeroTarjetaLlave as NumeroTarjetaLlave, accv.idTarjetaGasolina as idTarjetaGasolina, accv.NumeroTarjetaGasolina as NumeroTarjetaGasolina, accv.NipTarjetaGasolina as NipTarjetaGasolina, pv.EstatusDelVehiculo as EstatusVehiculo, cpa.idPais 
        from parquevehicular pv
        left join catalogoempresas ce
        on pv.DestinoVehiculo=ce.idEmpresa
        left join catalogolineanegocio ln
        on pv.idLineaNegocio=ln.idLineaNegocio
        left join entidadesfederativas ef
        on pv.idEntidadFederativa=ef.idEntidadFederativa
        left join catalogoplacasvehiculares cpv
        on pv.idTipoServicioPlacas=cpv.idPlacas
        left join catalogomodalidadplacasvehiculares cmp
        on pv.idModalidadDePlacas=cmp.idModalidadDePlacas
        left join catalogocolores cc
        on pv.idColorEngomado=cc.idcolor
        left join catalogotarjetacerculacion ctc
        on pv.idtarjetaC=ctc.idtarjetaC
        left join catalogomarcasvehiculos cmr
        on pv.idMarca=cmr.idMarca
        left join catalogomodelosvehiculos cmd
        on pv.idModelo=cmd.idModelo
        left join catalogotipovehiculos ctv
        on pv.idTipoDeVehiculo= ctv.idTipoDeVehiculo
        left join catalogocolores ccc
        on pv.IdColorVehiculo=ccc.idcolor
        left join catalogonumeromotor cnm
        on pv.idTieneNumeroDeMotor=cnm.idnumeroMotor
        left join catalogopaises cpa
        on pv.IdPaisOrigen=cpa.idPais
        left join catalogonestadodelvehiculo cev
        on pv.idEstadoDelVehiculo=cev.idestadovehiculo
        left join catalogocilindradavehiculo cacv
        on pv.CilindradaDelVehiculo=cacv.idCilindos
        left join catalogonaseguradoras catase
        on pv.idAseguradora=catase.idaseguradora
        left join catalogotipocoberturaseguros ctp
        on pv.idTipoDePoliza=ctp.idTipoCobertura
        left join datospoliza dapol
        on pv.idvehiculo=dapol.idvehiculo
        left join catalogonumeromotor cm1
        on dapol.idCristalesAmparados=cm1.idnumeroMotor
        left join catalogonumeromotor cm2
        on dapol.idProteccionLegalAmparados=cm2.idnumeroMotor
        left join catalogonumeromotor cm3
        on dapol.idClubAutosAmparados=cm3.idnumeroMotor
        left join accesoriosdelvehiculo accv
        on pv.idvehiculo=accv.idvehiculo";

        if ($consultavehicular==1){
            $sql .=" where pv.NumeroPlaca='$valordelcampodeconsulta'";
        }else{
            $sql .=" where pv.idvehiculo='$valordelcampodeconsulta'";
        }

           // $this -> logger -> LogInfo ("ejecutando lusta vehiculo en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $datosconsultavehiculo[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

        return $datosconsultavehiculo;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}


public function getrolUsuariosEmpleado($usuario)
{
        //$this-> logger -> LogInfo("getEmpleadoByCorreo");

    $usuarios = array();

    $sql = "SELECT * FROM usuarios usu
    left join catalogorolesusuarios cru
    on usu.usuarioRolId=cru.idRolUsuario
    where usu.usuario='$usuario'";

        //$this -> logger -> LogInfo ("Ejecutando getUsuariosByEmpleado: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $usuarios[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la getEmpleadoByCorreo ".var_export ($usuarios, true));

    return $usuarios;
}
public function obtenerFolioPreseleccionReingreso($curpBusqueda,$numeroAfiliacionImss)
{
        //$this -> logger -> LogInfo ("Ejecutando. login en persistencia");
    $curp = strtoupper($curpBusqueda);
    $datosPreseleccion = array();
    try {

        $sql = "SELECT concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numempleado,e.empleadoNumeroSeguroSocial,dp.curpEmpleado,dp.rfcEmpleado,e.foliopreseleccion,ep.folioPreseleccion as foliotblempleadopreseleccion,e.foliopreseleccion
        FROM empleados e
        LEFT JOIN datospersonales dp
        ON( e.entidadFederativaId=dp.empleadoEntidadPersonal and e.empleadoConsecutivoId=dp.empleadoConsecutivoPersonal and e.empleadoCategoriaId=dp.empleadoCategoriaPersonal)
        LEFT JOIN empleados_preseleccion ep on(e.empleadoNumeroSeguroSocial=ep.nImssPreseleccion)";
        if($curpBusqueda!="" && $numeroAfiliacionImss==""){
            $sql.=" WHERE dp.curpEmpleado='" . mysqli_real_escape_string($this->conn, $curp) . "'";

        }else if($curpBusqueda=="" && $numeroAfiliacionImss!=""){
            $sql.=" WHERE e.empleadoNumeroSeguroSocial='" . mysqli_real_escape_string($this->conn, $numeroAfiliacionImss) . "'";
        }      
        $res = mysqli_query($this->conn, $sql);
           // $this -> logger -> LogInfo ("Ejecutando SQL: " . $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                //$this->logger->LogInfo(var_export($reg, true));
            $datosPreseleccion[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array asociativo sqli" . var_export ($sql, true));
        return $datosPreseleccion;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function updateFolioPreseleccionEmpleado($noempleado,$foliopreseleccion)
{
    $array = explode("-", $noempleado);
    $entidad=$array[0];
    $consecutivo=$array[1];
    $categoria=$array[2];
    $sql = "update empleados
    set foliopreseleccion='$foliopreseleccion'
    where entidadFederativaId='$entidad'
    and empleadoConsecutivoId='$consecutivo'
    and empleadoCategoriaId='$categoria'";
    $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
        throw new Exception("Error de actualización");
    }
}

public function updateDatosEmpleadoPreseleccion($datos)
{
       //  $this -> logger -> LogInfo ("Ejecutando. update e,pleados_preseleccion");
          //$this -> logger -> LogInfo ("valor del array " . var_export ($datos, true));
    $sql = "UPDATE empleados_preseleccion 
    SET puestoPreseleccion='".mysqli_real_escape_string($this->conn, $datos["puestoEmp"]) . "',
    nombrePreseleccion='" . mysqli_real_escape_string($this->conn, $datos["nombreEmp"]) . "',
    apPaternoPreseleccion ='" .mysqli_real_escape_string($this->conn, $datos["apPaternoEmp"]) . "',
    apMaternoPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["apMaternoEmp"]) . "',
    edadPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["edadEmp"]) . "',
    edoCivilPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["edoCivilEmp"]) . "',
    pesoPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["pesoEmp"]) . "',
    estaturaPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["estaturaEmp"]) . "',
    tallaCamisaPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["tallaCamisaEmp"]) . "',
    tallaPantalonPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["tallaPantalonEmp"]) . "',
    numCalzadoPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["numCalzadoEmp"]) . "',
    generoPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["sexoEmp"]) . "',
    tipoSangrePreseleccion='" .mysqli_real_escape_string($this->conn, $datos["tipoSangreEmp"]) . "',
    fechaNacPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["fechaNacEmp"]) . "',
    entidadNacPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["entidadNacEmp"]) . "',
    cpPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["codPostalEmp"]) . "',
    callePreseleccion='" .mysqli_real_escape_string($this->conn, $datos["calleEmp"]) . "',
    numeroPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["numeroCEmp"]) . "',
    coloniaPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["coloniaEmp"]) . "',
    municipioPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["municipioEmp"]) . "',
    ciudadPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["ciudadEmp"]) . "',
    telFijoPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["telFijoEmp"]) . "',
    telMovilPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["telMovilEmp"]) . "',
    emailPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["emailEmp"]) . "',
    infonavitPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["infonavitEmp"]) . "',
    fonacotPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["fonacotEmp"]) . "',
    cartillaPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["cartillaEmp"]) . "',
    licenciaPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["licenciaEmp"]) . "',
    nImssPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["nImssEmp"]) . "',
    nombreE1Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["nombreE1Emp"]) . "',";
    if($datos["fecha1E1Emp"]==""){
        $sql .= " fecha1E1Preseleccion=null ,";
    }else{
        $sql .= " fecha1E1Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["fecha1E1Emp"]) . "',";
    }
    if($datos["fecha2E1Emp"]==""){
        $sql .= " fecha2E1Preseleccion=null ,";
    }else{
        $sql .= " fecha2E1Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["fecha2E1Emp"]) . "',";
    }
    
    $sql .= " telefonoE1Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["telE1Emp"]) . "',
    causaE1Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["causaSepE1Emp"]) . "',
    nombreE2Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["nombreE2Emp"]) . "',";

    if($datos["fecha1E2Emp"]==""){
        $sql .= " fecha1E2Preseleccion=null ,";
    }else{
        $sql .= " fecha1E2Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["fecha1E2Emp"]) . "',";
    }
    if($datos["fecha2E2Emp"]==""){
        $sql .= " fecha2E2Preseleccion=null ,";
    }else{
        $sql .= " fecha2E2Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["fecha2E2Emp"]) . "',";
    }

    $sql .= " telefonoE2Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["telE2Emp"]) . "',
    causaE2Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["causaSepE2Emp"]) . "',
    personasACargoPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["personasCargoEmp"]) . "',
    gradoEPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["gradoEstudioEmp"]) . "',
    cursoEspecialPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["cursoEspecialEmp"]) . "',
    enfermedadPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["enfermedadEmp"]) . "',
    padrePreseleccion='" .mysqli_real_escape_string($this->conn, $datos["padreEmp"]) . "',
    madrePreseleccion='" .mysqli_real_escape_string($this->conn, $datos["madreEmp"]) . "',
    esposaPreseleccion='" .mysqli_real_escape_string($this->conn, $datos["esposaEmp"]) . "',
    ben1Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["hijo1Emp"]) . "',
    ben2Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["hijo2Emp"]) . "',
    ben3Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["hijo3Emp"]) . "',
    ben4Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["hijo4Emp"]) . "',
    ben5Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["hijo5Emp"]) . "',
    nombreR1Preseleccion='" .mysqli_real_escape_string($this->conn, $datos["nombreR1Emp"]) . "',
    telefonoR1='" .mysqli_real_escape_string($this->conn, $datos["telR1Emp"]) . "',
    nombreR2='" .mysqli_real_escape_string($this->conn, $datos["nombreR2Emp"]) . "',
    telefonoR2='" .mysqli_real_escape_string($this->conn, $datos["telR2Emp"]) . "',
    licenciapermanente='".mysqli_real_escape_string($this->conn, $datos["licenciapermanente"])."',
    numlicenciapreseleccion='".mysqli_real_escape_string($this->conn, $datos["numLicenciaPreseleccion"])."',";
    if($datos["fechavigencialicencia"] == ""){
    $sql .= " fechavigencialicencia=null ,";
    }else{
        $sql .= " fechavigencialicencia='".mysqli_real_escape_string($this->conn, $datos["fechavigencialicencia"])."', ";
    }
    $sql .= " fechapreseleccion=NOW()
    WHERE folioPreseleccion='" . mysqli_real_escape_string($this->conn, $datos["folioempleadopreseleccion"]) . "'";
    $res = mysqli_query($this->conn, $sql);
$this -> logger -> LogInfo ("se ejecuto la consulta como" . var_export ($sql, true));
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar Preseleccion. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function traeCatalogorgn()
{
        //$this -> logger -> LogInfo ("traeCatalogoLineaNegocio en persistencia");
    $listaRGN = array();

    try {

        $sql = "select * from catalogo_rgn order by  abreviatura";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaRGN[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoLineaNegocio ".var_export ($listaLineaNegocio, true));
        return $listaRGN;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function traeCatalogoProveedor()
{
        //$this -> logger -> LogInfo ("traeCatalogoLineaNegocio en persistencia");
    $listaproveedor = array();

    try {

        $sql = "select * from catalogo_proveedor";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaproveedor[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoLineaNegocio ".var_export ($listaLineaNegocio, true));
        return $listaproveedor;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function traeCatalogoAnalista()
{
        //$this -> logger -> LogInfo ("traeCatalogoLineaNegocio en persistencia");
    $listaAnalista = array();

    try {

        $sql = "select * from catalogo_analistas_electronica
        order by Abreviatura";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaAnalista[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoLineaNegocio ".var_export ($listaLineaNegocio, true));
        return $listaAnalista;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}
public function traeCatalogoCanal()
{
        //$this -> logger -> LogInfo ("traeCatalogoLineaNegocio en persistencia");
    $ListaCanal = array();

    try {

        $sql = "SELECT * FROM catalogo_canal
        ORDER BY Abreviatura";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $ListaCanal[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoLineaNegocio ".var_export ($listaLineaNegocio, true));
        return $ListaCanal;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function traeCatalogoCatalogoAbecedario()
{
        //$this -> logger -> LogInfo ("traeCatalogoLineaNegocio en persistencia");
    $listaabcd = array();

    try {

        $sql = "SELECT * FROM catalogoletras";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaabcd[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoLineaNegocio ".var_export ($listaLineaNegocio, true));
        return $listaabcd;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function Obtener_MaterialxLetra($selectLetraInicial)
{
       // $this-> logger -> LogInfo("traerListaTipoTransaccion");
    $listaMaterial = array();
    try {

        $sql = "SELECT * FROM catalogo_equipo_electronico";
        if($selectLetraInicial=="TODOS"){
         $sql.=" order by Descripcion";
     }else{
         $sql.=" WHERE (Descripcion like '$selectLetraInicial%')
         order by Descripcion";
     }
 //$this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));
     $res = mysqli_query($this->conn, $sql);

     while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaMaterial[] = $reg;
    }
            //$this -> logger -> LogInfo ("valor del array de la listaTipoTransacciones ".var_export ($listaTipoTransacciones, true));

    return $listaMaterial;

} catch (Exception $e) {

    $this->logger->LogInfo("ERROR:" . $e->getMessage());
}
}

public function Obtener_CostoMaterial($selectMaterial)
{
       // $this-> logger -> LogInfo("traerListaTipoTransaccion");
    $ListaCostoMaterial = array();
    try {

        $sql = "SELECT * FROM catalogo_equipo_electronico 
        where idEquipo='$selectMaterial'";
 //$this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $ListaCostoMaterial[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la listaTipoTransacciones ".var_export ($listaTipoTransacciones, true));

        return $ListaCostoMaterial;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function insertarNuevaSucursal($NuevaSucursal)
{

   // $this -> logger -> LogInfo ("Ejecutando. insertarPuntoServicio en persistencia");
   // $this -> logger -> LogInfo ("valor del array " . var_export ($NuevaSucursal, true));

/*
        $sql = "insert into catalogopuntosservicios(puntoServicio,numeroCentroCosto, idEntidadPunto, esatusPunto, numeroOrden,
         usuarioCapturaPunto, idClientePunto,direccionPuntoServicio,
         contactoFacturacion, telefonoFijoFacturacion, telefonoMovilFacturacion, correoFacturacion,
         contactoTesoreria, telefonoFijoTesoreria, telefonoMovilTesoreria, correoTesoreria,
         contactoOperativo, telefonoFijoOperativo, telefonoMovilOperativo, correoOperativo,fechaInicioServicio,terminoFacturacion,
         fechaTerminoServicio,cobraDescansos, cobraDiaFestivo, cobra31,latitudPunto,longitudPunto,nombrePuntoFacturacion,centroCostoFacturacion,turnosFlat,fechaCapturaPunto,idIncrementRegionPuntoServ,idLineaNegocioPunto) " .
        "values ('" . mysqli_real_escape_string($this->conn, $puntoServicio["puntoServicio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["numeroCentroCosto"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["idEntidadPunto"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $puntoServicio["esatusPunto"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["numeroOrden"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["usuarioCapturaPunto"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $puntoServicio["idClientePunto"]) . ", " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["direccionPuntoServicio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["contactoFacturacion"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoFijoFacturacion"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoMovilFacturacion"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["correoFacturacion"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["contactoTesoreria"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoFijoTesoreria"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoMovilTesoreria"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["correoTesoreria"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["contactoOperativo"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoFijoOperativo"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["telefonoMovilOperativo"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["correoOperativo"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["fechaInicioServicio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["terminoFacturacion"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["fechaTerminoServicio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["cobraDescansos"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["cobraDiaFestivo"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["cobra31"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["latitudPunto"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["longitudPunto"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["puntoServicio"]) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puntoServicio["numeroCentroCosto"]) . "', " .
        "" . mysqli_real_escape_string($this->conn, $puntoServicio["turnoFlat"]) . ", " .
            " now(), " .
        "" . mysqli_real_escape_string($this->conn, $puntoServicio["idRegion"]) . ", " .
        "" . mysqli_real_escape_string($this->conn, $puntoServicio["selLineaNegocio"]) . ")";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarPuntoServicio como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertarPuntoServicio.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }*/
    }

    public function obtenerCatalogoVehiculos($casoVehiculo)
    {
     //   $this-> logger -> LogInfo("traerCatalogoPuntosServicios");
        $listavehiculos= array();
        try {
            $sql = "SELECT pv.idvehiculo as idvehiculo, pv.EstatusDelVehiculo as EstatusVehiculo, pv.NumeroPlaca as numeroplacas,cln.descripcionLineaNegocio as LineaNegocio, cmr.Marca as Marca, cmd.Modelo as Modelo,ccc.Descripcion as ColorVehiculo,
            pv.AnioVehiculo as anioVehuiculo, pv.CentimetrosCubicos as celindradas, 
            apv.idAsignacionC as Asignacion,ef.idEntidadFederativa as Entidad, ef.nombreEntidadFederativa as nombreEntidadF,
            apv.entidadFederativaIdC as empleadoentidad, apv.empleadoConsecutivoIdC as empleadoConsecutivo,
            apv.empleadoCategoriaIdC as empleadoCategoria, apvsg.idAsignacionS as AsignacionSinGif, apvsg.NombreS as NombreSinGif ,
            apvsg.ApellidoPaternoS as apellidoPSinGifS ,apvsg.ApellidoMaternoS as apellidoMSinGif ,apv.EstatusRegistroC as EstatusConGif ,
            apvsg.EstatusRegistroS as EstatusSinGif,emp.nombreEmpleado as nombreConGIf,emp.apellidoPaterno as apellidoPConGif,emp.apellidoMaterno as apellidoMConGIf
            from parquevehicular pv
            left join catalogomarcasvehiculos cmr
            on pv.idMarca=cmr.idMarca
            left join catalogomodelosvehiculos cmd
            on pv.idModelo=cmd.idModelo
            left join catalogocolores ccc
            on pv.IdColorVehiculo=ccc.idcolor
            left join AsignacionesParqueVehicular apv
            on pv.idvehiculo=apv.idvehiculoC
            left join empleados emp
            on emp.entidadFederativaId=apv.entidadFederativaIdC
            and emp.empleadoConsecutivoId=apv.empleadoConsecutivoIdC
            and emp.empleadoCategoriaId=apv.empleadoCategoriaIdC
            left join entidadesfederativas ef
            on pv.idEntidadFederativa=ef.idEntidadFederativa
            left join AsignacionesParqueVehicularSinGif apvsg
            on pv.idvehiculo=apvsg.idvehiculoS
            left join catalogolineanegocio cln
            on pv.idLineaNegocio=cln.idLineaNegocio";

            if($casoVehiculo==2){
                $sql.=" where((apv.idAsignacionC!='null') OR (apvsg.idAsignacionS!='null'))";
            }else if($casoVehiculo==3){
                $sql.="  where apv.idAsignacionC is null
                AND apvsg.idAsignacionS is null";
            }
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listavehiculos[] = $reg;
            }//WHERE pv.EstatusDelVehiculo=1
         //   $this -> logger -> LogInfo ("valor del array de la listavehiculos ".var_export ($listavehiculos, true));

            return $listavehiculos;
        } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }


    public function InsertarEnHistorico($numeroeconomico,$CuentaConGifHistorico)
    {
        //$this -> logger -> LogInfo ("Ejecutando. insertar registro asignacion en persistencia");
        //$this -> logger -> LogInfo ("valor del array de la CuentaConGifHistorico ".var_export ($CuentaConGifHistorico, true));
      //  $this -> logger -> LogInfo ("valor del array de la numeroeconomico ".var_export ($numeroeconomico, true));
        try {

            $sql = "SELECT * from parquevehicular pv
            left join AsignacionesParqueVehicular apv
            on pv.idvehiculo=apv.idvehiculoC
            left join AsignacionesParqueVehicularSinGif apvsg
            on pv.idvehiculo=apvsg.idvehiculoS
            where pv.idvehiculo='$numeroeconomico'";
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $olddatesofvehicule[] = $reg;
            }

            if($CuentaConGifHistorico == "si" && $olddatesofvehicule[0]["EstatusRegistroC"]!=null){

                $sql1 = "INSERT INTO historicoAsignacionParqueVehicular (idAsignacionHistorico, idvehiculoHistorico, NumeroPlacaHistorico, entidadFederativaIdHistorico, empleadoConsecutivoIdHistorico, empleadoCategoriaIdHistorico, idEntidadTrabajoHistorico, empleadoEstatusIdHistorico, PuestoEmpleadoHistorico, NumeroLicenciaHistorico, KilometrajeHistorico, MotivodeCambioHistorico, FechaAsignacionHistorico, FechaInsercionAlHistorico, UsuarioCapturaHistorico, EstatusRegistroHistorico) VALUES (
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["idAsignacionC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["idvehiculoC"])."',        
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["NumeroPlacaC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["entidadFederativaIdC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["empleadoConsecutivoIdC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["empleadoCategoriaIdC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["idEntidadTrabajoC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["empleadoEstatusIdC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["PuestoEmpleadoC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["NumeroLicenciaC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["KilometrajeC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["MotivodeCambioC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["FechaAsignacionC"])."',
                now(),
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["UsuarioCapturaC"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["EstatusRegistroC"])."')";

                $res1 = mysqli_query($this->conn, $sql1);
                if ($res1 !== true) {
                    $this->logger->LogInfo("Ocurrio un error al insertar.");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }                   
            }else if($CuentaConGifHistorico == "No" && $olddatesofvehicule[0]["EstatusRegistroS"] != null){

                $sql1 = "INSERT INTO historicoAsignacionParqueVehicular (idAsignacionHistorico, idvehiculoHistorico, NumeroPlacaHistorico, entidadFederativaIdHistorico, empleadoConsecutivoIdHistorico, empleadoCategoriaIdHistorico, idEntidadTrabajoHistorico, empleadoEstatusIdHistorico, PuestoEmpleadoHistorico, NumeroLicenciaHistorico, KilometrajeHistorico, MotivodeCambioHistorico, FechaAsignacionHistorico, FechaInsercionAlHistorico, UsuarioCapturaHistorico, EstatusRegistroHistorico) VALUES (
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["idAsignacionS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["idvehiculoS"])."',        
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["NumeroPlacaS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["NombreS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["ApellidoPaternoS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["ApellidoMaternoS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["EntidadTrabajoS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["empleadoEstatusS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["PuestoEmpleadoS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["NumeroLicenciaS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["KilometrajeS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["MotivodeCambioS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["FechaAsignacionS"])."',
                now(),
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["UsuarioCapturaS"])."',
                '".mysqli_real_escape_string($this->conn, $olddatesofvehicule[0]["EstatusRegistroS"])."')";

                $res1 = mysqli_query($this->conn, $sql1);
                if ($res1 !== true) {
                    $this->logger->LogInfo("Ocurrio un error al insertar.");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }
            }
            
            
        } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

    public function UpdateReasignacion($NuevaReasignacion)
    {

//$this -> logger -> LogInfo ("Ejecutando. update en persistencia");
//$this -> logger -> LogInfo ("valor del array de NuevaReasignacion ".var_export ($NuevaReasignacion, true));
        $estatusregistroinactivo="INACTIVO";
        $estatusregistroactivo="ACTIVO";

        $sql = "SELECT * from parquevehicular pv
        left join AsignacionesParqueVehicular apv
        on pv.idvehiculo=apv.idvehiculoC
        left join AsignacionesParqueVehicularSinGif apvsg
        on pv.idvehiculo=apvsg.idvehiculoS
        where pv.idvehiculo='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"]) . "'";
        
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $datosasignacion[] = $reg;
        }
        if($NuevaReasignacion["CuentaConGif"]=="si")
        {
            if($datosasignacion[0]["idvehiculoC"]==null)
            {
                //Se manda a la funcion de insertar ya que no existe registo para actualizar
               // insertarNuevaAsignacion($NuevaReasignacion);
                $sql1 = "INSERT INTO AsignacionesParqueVehicular (idvehiculoC, NumeroPlacaC, entidadFederativaIdC, empleadoConsecutivoIdC, empleadoCategoriaIdC, idEntidadTrabajoC, empleadoEstatusIdC, PuestoEmpleadoC, NumeroLicenciaC, KilometrajeC, MotivodeCambioC, FechaAsignacionC, UsuarioCapturaC, EstatusRegistroC) VALUES (
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"])."',        
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumeroPlacas"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["entidadFederativaId"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["empleadoConsecutivoId"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["empleadoCategoriaId"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["ocultoidentidadempleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["EstatusEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["PuestoEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["LicenciaEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["Kilometraje"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["motivocambio"])."',
                now(),
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["usuarioAsignacion"])."',
                '$estatusregistroactivo')";
                $res1 = mysqli_query($this->conn, $sql1);
                if ($res1 !== true) {
                    $this->logger->LogInfo("Ocurrio un error al insertar Asignacion parque vehicular.");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }
               // insertarNuevaAsignacion($NuevaReasignacion);
                // Se Actualiza La Tabla Sin Gif En Su Campo "EstatusRegistroS" 
                if($datosasignacion[0]["idAsignacionS"]!=null)
                {
                    $sql3 = "UPDATE AsignacionesParqueVehicularSinGif 
                    SET EstatusRegistroS='$estatusregistroinactivo'
                    WHERE (idvehiculoS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"]) . "')";
                    $res3 = mysqli_query($this->conn, $sql3);
                    if ($res3 !== true) {
                        $this->logger->LogInfo("Ocurrio un error al actualizar Asignacion parquevehicular sin gif. ");
                        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                        
                        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                    }
                }else{}
            }else{
                $sql2 = "UPDATE AsignacionesParqueVehicular 
                SET idvehiculoC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"]) . "',
                NumeroPlacaC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumeroPlacas"]) . "',
                entidadFederativaIdC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["entidadFederativaId"]) . "',
                empleadoConsecutivoIdC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["empleadoConsecutivoId"]) . "',
                empleadoCategoriaIdC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["empleadoCategoriaId"]) . "',
                idEntidadTrabajoC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["ocultoidentidadempleado"]) . "',
                empleadoEstatusIdC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["EstatusEmpleado"]) . "',
                PuestoEmpleadoC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["PuestoEmpleado"]) . "',
                NumeroLicenciaC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["LicenciaEmpleado"]) . "',
                KilometrajeC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["Kilometraje"]) . "',
                MotivodeCambioC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["motivocambio"]) . "',
                FechaAsignacionC=now(),
                UsuarioCapturaC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["usuarioAsignacion"]) . "',
                EstatusRegistroC='$estatusregistroactivo'
                WHERE idvehiculoC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"]) . "'";
                $res2 = mysqli_query($this->conn, $sql2);
                if ($res2 !== true) {
                    $this->logger->LogInfo("Ocurrio un error al actualizar Asignacion Parque Vehicular. ");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }

                if($datosasignacion[0]["idAsignacionS"]!=null)
                {
                    $sql3 = "UPDATE AsignacionesParqueVehicularSinGif 
                    SET EstatusRegistroS='$estatusregistroinactivo'
                    WHERE idvehiculoS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"]) . "'";
                    $res3 = mysqli_query($this->conn, $sql3);
                    if ($res3 !== true) {
                        $this->logger->LogInfo("Ocurrio un error al actualizar Asignacion Parque Vehicular sing gif. ");
                        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                        
                        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                    }
                }else{}
            }
        }else
        {
            if($datosasignacion[0]["idAsignacionS"]==null)
            {
                //Se manda a la funcion de insertar ya que no existe registo para actualizar
              //insertarNuevaAsignacion($NuevaReasignacion);
                $sql1 = "INSERT INTO AsignacionesParqueVehicularSinGif (idvehiculoS, NumeroPlacaS, NombreS, ApellidoPaternoS, ApellidoMaternoS, EntidadTrabajoS, empleadoEstatusS, PuestoEmpleadoS, NumeroLicenciaS, KilometrajeS, MotivodeCambioS, FechaAsignacionS, UsuarioCapturaS, EstatusRegistroS) VALUES (
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"])."',        
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumeroPlacas"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["NombreEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["ApellidoPEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["ApellidoMEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["EntidadFEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["EstatusEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["PuestoEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["LicenciaEmpleado"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["Kilometraje"])."',
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["motivocambio"])."',
                now(),
                '".mysqli_real_escape_string($this->conn, $NuevaReasignacion["usuarioAsignacion"])."',
                '$estatusregistroactivo')";
                $res1 = mysqli_query($this->conn, $sql1);
                if ($res1 !== true) {
                    $this->logger->LogInfo("Ocurrio un error al insertar Asignacion Parque Vehicular sin gif. ");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }
               // insertarNuevaAsignacion($NuevaReasignacion);
                // Se Actualiza La Tabla Con Gif En Su Campo "EstatusRegistroS" 
                if($datosasignacion[0]["idAsignacionC"]!=null)
                {
                    $sql3 = "UPDATE AsignacionesParqueVehicular 
                    SET EstatusRegistroC='$estatusregistroinactivo'
                    WHERE idvehiculoC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"]) . "'";
                    $res3 = mysqli_query($this->conn, $sql3);
                    if ($res3 !== true) {
                        $this->logger->LogInfo("Ocurrio un error al actualizar Asignacion Parque Vehicular. ");
                        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                        
                        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                    }
                }else{}
            }else{
                $sql2 = "UPDATE AsignacionesParqueVehicularSinGif 
                SET idvehiculoS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"]) . "',
                NumeroPlacaS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumeroPlacas"]) . "',
                NombreS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["NombreEmpleado"]) . "',
                ApellidoPaternoS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["ApellidoPEmpleado"]) . "',
                ApellidoMaternoS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["ApellidoMEmpleado"]) . "',
                EntidadTrabajoS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["EntidadFEmpleado"]) . "',
                empleadoEstatusS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["EstatusEmpleado"]) . "',
                PuestoEmpleadoS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["PuestoEmpleado"]) . "',
                NumeroLicenciaS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["LicenciaEmpleado"]) . "',
                KilometrajeS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["Kilometraje"]) . "',
                MotivodeCambioS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["motivocambio"]) . "',
                FechaAsignacionS=now(),
                UsuarioCapturaS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["usuarioAsignacion"]) . "',
                EstatusRegistroS='$estatusregistroactivo'
                WHERE idvehiculoS='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"]) . "'";
                $res2 = mysqli_query($this->conn, $sql2);
                if ($res2 !== true) {
                    $this->logger->LogInfo("Ocurrio un error al actualizar Asignacion Parque Vehicular sin gif. ");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }

                if($datosasignacion[0]["idAsignacionC"]!=null)
                {
                    $sql3 = "UPDATE AsignacionesParqueVehicular 
                    SET EstatusRegistroC='$estatusregistroinactivo'
                    WHERE idvehiculoC='".mysqli_real_escape_string($this->conn, $NuevaReasignacion["inpNumroEcoVehiculo"]) . "'";
                    $res3 = mysqli_query($this->conn, $sql3);
                    if ($res3 !== true) {
                        $this->logger->LogInfo("Ocurrio un error al actualizar Asignacion Parque Vehicular. ");
                        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                        
                        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                    }
                }else{}
            }
        }
    }
    public function insertarNuevaAsignacion($NuevaAsignacion)
    {
//        $this -> logger -> LogInfo ("Ejecutando. insertarVehiculo en persistencia");
  //      $this -> logger -> LogInfo ("valor del array de la sql ".var_export ($NuevaAsignacion, true));
     $estatusregistroactivoinsert="ACTIVO";
     if($NuevaAsignacion["CuentaConGif"]=="si"){
        $sql = "INSERT INTO AsignacionesParqueVehicular (idvehiculoC, NumeroPlacaC, entidadFederativaIdC, empleadoConsecutivoIdC, empleadoCategoriaIdC, idEntidadTrabajoC, empleadoEstatusIdC, PuestoEmpleadoC, NumeroLicenciaC, KilometrajeC, MotivodeCambioC, FechaAsignacionC, UsuarioCapturaC, EstatusRegistroC) VALUES (
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["inpNumroEcoVehiculo"])."',        
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["inpNumeroPlacas"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["entidadFederativaId"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["empleadoConsecutivoId"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["empleadoCategoriaId"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["ocultoidentidadempleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["EstatusEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["PuestoEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["LicenciaEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["Kilometraje"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["motivocambio"])."',
        now(),
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["usuarioAsignacion"])."',
        '$estatusregistroactivoinsert')";
    }else{
        $sql = "INSERT INTO AsignacionesParqueVehicularSinGif (idvehiculoS, NumeroPlacaS, NombreS, ApellidoPaternoS, ApellidoMaternoS, EntidadTrabajoS, empleadoEstatusS, PuestoEmpleadoS, NumeroLicenciaS, KilometrajeS, MotivodeCambioS, FechaAsignacionS, UsuarioCapturaS, EstatusRegistroS) VALUES (
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["inpNumroEcoVehiculo"])."',        
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["inpNumeroPlacas"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["NombreEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["ApellidoPEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["ApellidoMEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["EntidadFEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["EstatusEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["PuestoEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["LicenciaEmpleado"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["Kilometraje"])."',
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["motivocambio"])."',
        now(),
        '".mysqli_real_escape_string($this->conn, $NuevaAsignacion["usuarioAsignacion"])."',
        '$estatusregistroactivoinsert')";
    }
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function InsertarHistoricoEdiconVehiculo($VehiculoHistoricoEdicion)
{
        $this -> logger -> LogInfo ("Ejecutando. insertar Historico Vehiculo en persistencia");
        //$this -> logger -> LogInfo ("valor del array de la VehiculoHistoricoEdicion ".var_export ($VehiculoHistoricoEdicion, true));
      //  $this -> logger -> LogInfo ("valor del array de la numeroeconomico ".var_export ($numeroeconomico, true));
    try {

        $sql1 = "INSERT INTO historicoedicionVehiculo (IdVehiculoEdicion, idColorEngomadoHistoricoEdicionV, idLineanegocioEdicion,
        idEntidadFederativaEdicion, NumeroPlacaHistoricoEdicionV, idtarjetaCHistoricoEdicionV, FechaInicioVigenciaDeTarjetaHEdicionV, FechaTerminoVigenciaDeTarjetaHEdicionV, idTieneNumeroDeMotorHistoricoEdicionV, NumeroDeMotorVehiculoHistoricoEdicionV, IdPaisOrigenHistoricoEdicionV, NumeroTajetaLlaveEdicionV, NumeroTajetaGasolinaEdicionV, NumeroNipTajetaEdicionV, AseguradoraEdiconV, TipoPolizaEdicionV, NumeroPolizaHistoricoEdicionV, FechaInicionPolizaHistoricoV,FechaFinalPolizaHistoricoV, NombreFotoTarjetaDeCirculacionHEdicionV, NombreFotoPolizaHEdicionV, NombreFotoFacturaHEdicionV, UsuarioEdited, FechaEdicionVehiculo) VALUES (
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["numeroeconomicoconsultaHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["colorengomadohidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["selLineaDeNegocioHidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["selEntidadHidenHistorico"])."',        
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["numeroplacashidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["tarjetchidenHistorico"])."',";
        if($VehiculoHistoricoEdicion["fechainiciotarjetahidenHistorico"] == "" || $VehiculoHistoricoEdicion["fechainiciotarjetahidenHistorico"] == "0000-00-00" || $VehiculoHistoricoEdicion["fechaterminotarjetahidenHistorico"] == "" || $VehiculoHistoricoEdicion["fechaterminotarjetahidenHistorico"]=="0000-00-00"){
            $sql1.=" null,null, ";
        }else{
            $sql1.=" '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["fechainiciotarjetahidenHistorico"])."',
                    '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["fechaterminotarjetahidenHistorico"])."', ";
        }
        $sql1.=" '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["tienemotorhidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["numeromotrohidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["paishidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["inpNumeroTarjetaLLavehidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["inpNumeroTarjetaGasolinahidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["inpNIPhidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["selAseguradorahidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["selTipoDePolizahidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["numeropolizahidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["selFechaIniciPolizaHidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["selFechaFinPolizaHidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["fototarjetahidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["fotopolizahidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["fotofacturahidenHistorico"])."',
        '".mysqli_real_escape_string($this->conn, $VehiculoHistoricoEdicion["usuarioCapturavehiculoHistorico"])."',
        now())";

        // $this -> logger -> LogInfo ("valor del array de la sql1 ".var_export ($sql1, true));
        $res1 = mysqli_query($this->conn, $sql1);
        if ($res1 !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
        
    } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function updateEdicionVehiculo($EdicionVehiculo)
{
        // $this -> logger -> LogInfo ("Ejecutando. update del vehiculo en persistencia");
    $sql = "UPDATE parquevehicular 
    SET idLineaNegocio='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["selLineaDeNegocioEdicion"]) . "',
    idEntidadFederativa='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["selEntidadEdicion"]) . "',
    idColorEngomado='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["selEngomadoEdicion"]) . "',
    NumeroPlaca='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["numeroPlacasEdicion"]) . "',
    idtarjetaC='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["seltarjetacirculacionEdicion"]) . "',";
    if($EdicionVehiculo["inpFechaDeIniciotarjetaEdicion"] == "" || $EdicionVehiculo["inpFechaDeIniciotarjetaEdicion"] == "0000-00-00" || $EdicionVehiculo["inpFechaDeTerminotarjetaEdicion"] == "" || $EdicionVehiculo["inpFechaDeTerminotarjetaEdicion"]=="0000-00-00"){
        $sql.=" FechaInicioVigenciaDeTarjeta=null,FechaTerminoVigenciaDeTarjeta=null, ";
    }else{
        $sql.=" FechaInicioVigenciaDeTarjeta='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["inpFechaDeIniciotarjetaEdicion"]) . "',
    FechaTerminoVigenciaDeTarjeta='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["inpFechaDeTerminotarjetaEdicion"]) . "', ";
    }
    
    $sql.=" idTieneNumeroDeMotor='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["selCuentaConNumeroMotroEdicion"]) . "',
    NumeroDeMotorVehiculo='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["inpNumeroDeMotorEdicion"]) . "',
    IdPaisOrigen='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["selPaisOrigenEdicion"]) . "',
    NumeroPoliza='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["inpNumeroPolizaEdicion"]) . "', ";
    if($EdicionVehiculo["selFechaIniciPolizaEdicion"] == "" || $EdicionVehiculo["selFechaIniciPolizaEdicion"] == "0000-00-00" || $EdicionVehiculo["selFechaFinPolizaEdicion"] == "" || $EdicionVehiculo["selFechaFinPolizaEdicion"]=="0000-00-00"){
        $sql.=" null,null, ";
    }else{
        $sql.=" FechaInicionPoliza='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["selFechaIniciPolizaEdicion"]) . "',
    FechaFinalPoliza='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["selFechaFinPolizaEdicion"]) . "', ";
    }
    $sql.=" NombreFotoTarjetaDeCirculacion='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["idfotoTarjetaEdicion"]) . "',
    NombreFotoPoliza='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["idfotoPolizaEdicion"]) . "',
    NombreFotoFactura='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["idfotoFacturaEdicion"]) . "',
    idAseguradora='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["selAseguradoraEdicion"]) . "',
    idTipoDePoliza='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["selTipoDePolizaEdicion"]) . "'
    WHERE idvehiculo='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["numeroeconomicoconsultaEdicion"]) . "'";
          // $this -> logger -> LogInfo ("valor del array del update del vehiculo sql ".var_export ($sql, true));
    $sql1 = "UPDATE accesoriosdelvehiculo
    SET NumeroTarjetaLlave='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["inpNumeroTarjetaLLaveEdicion"]) . "',
    NumeroTarjetaGasolina='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["inpNumeroTarjetaGasolinaEdicion"]) . "',
    NipTarjetaGasolina='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["inpNIPEdicion"]) . "'
    WHERE idvehiculo='".mysqli_real_escape_string($this->conn, $EdicionVehiculo["numeroeconomicoconsultaEdicion"]) . "'";
          // $this -> logger -> LogInfo ("valor del array del update del vehiculo sql1 ".var_export ($sql1, true));

    $res = mysqli_query($this->conn, $sql);
    $res1 = mysqli_query($this->conn, $sql1);
    if ($res !== true || $res1 !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar Edicion Del Vehiculo En Parque Vehicular");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function obtenerUsuariosEmpleado($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria)
{
    $usuariosEmpleado = array();

    $sql = "select * from usuario_empleado ue
    left join usuarios u
    on ue.usuario=u.usuario
    left join  catalogorolesusuarios cru
    on   u.usuarioRolId=cru.idRolUsuario
    where ue.entidadEmpleadoUsuario='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
    and ue.consecutivoEmpleadoUsuario='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
    and ue.categoriaEmpleadoUsuario='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'
    and contrasenia != 'BLOQUEO'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoRfc " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $usuariosEmpleado[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la consulta obtenerNumeroEmpleadoRfc".var_export ($numeroEmpleado, true));

    return $usuariosEmpleado;
}



public function obtenerEntidadesByIdUser($usuarioId)
{
    $EntidadesByUser = array();

    $sql = "select * from entidadesUsuario eu
    left join entidadesfederativas ef
    on eu.idEntidadEnt=ef.idEntidadFederativa
    where idUsuarioEnt='" . mysqli_real_escape_string($this->conn, $usuarioId) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoRfc " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $EntidadesByUser[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la consulta obtenerNumeroEmpleadoRfc".var_export ($numeroEmpleado, true));

    return $EntidadesByUser;
}

public function EliminarEntidadUSer($idusuario,$identidad)
{
    $sql = "DELETE  FROM entidadesUsuario 
    WHERE idUsuarioEnt='" . $this->safeValue($idusuario) . "'
    AND  idEntidadEnt='" . $this->safeValue($identidad) . "' ";
        //$this -> logger -> LogInfo ("Ejecutando deleteTurnoDiaFestivo: " . $sql);
    mysqli_query($this->conn, $sql);

    if (mysqli_errno($this->conn) == 0) {
        return true;
    }

    return false;
}

public function EliminarLineaNegocioUSer($idusuario,$idlineanegocio)
{
    $sql = "DELETE  FROM lineasNegocioUsuario
    WHERE idUsuariolineaneg='" . $this->safeValue($idusuario) . "'
    AND idlineaNegocio='" . $this->safeValue($idlineanegocio) . "' ";
        //$this -> logger -> LogInfo ("Ejecutando deleteTurnoDiaFestivo: " . $sql);
    mysqli_query($this->conn, $sql);

    if (mysqli_errno($this->conn) == 0) {
        return true;
    }

    return false;
}

public function addEntidadUSer($idusuario,$identidad)
{
   $existEntidad = array();

   $sql = "select * from entidadesUsuario
   where idUsuarioEnt='" . mysqli_real_escape_string($this->conn, $idusuario) . "'
   and idEntidadEnt='" . mysqli_real_escape_string($this->conn, $identidad) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoRfc " . $sql);
   $res = mysqli_query($this->conn, $sql);

   while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
    $existEntidad[] = $reg;
}

        //$this -> logger -> LogInfo ("valor del array de la consulta existentidad".var_export (count($existEntidad), true));
if(count($existEntidad)!=0){
    $mensage="existe";
}else{

    $sql1 = "insert into entidadesUsuario(idUsuarioEnt,idEntidadEnt) values('" . $this->safeValue($idusuario) . "','" . $this->safeValue($identidad) . "') ";
        //$this -> logger -> LogInfo ("Ejecutando deleteTurnoDiaFestivo: " . $sql);
    $res1 = mysqli_query($this->conn, $sql1);
    if ($res1 !== true) {
        $this->logger->LogInfo("Ocurrio un error al add entidades usuario.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }else{
        $mensage="addEnitidad";
    }


}
return $mensage;

}


public function addLineaNegocioUSer($idusuario,$idlineanegocio)
{
   $existLineanegocio = array();

   $sql = "select * from lineasNegocioUsuario
   where idUsuariolineaneg='" . mysqli_real_escape_string($this->conn, $idusuario) . "'
   and idlineaNegocio='" . mysqli_real_escape_string($this->conn, $idlineanegocio) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoRfc " . $sql);
   $res = mysqli_query($this->conn, $sql);

   while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
    $existLineanegocio[] = $reg;
}

        //$this -> logger -> LogInfo ("valor del array de la consulta existentidad".var_export (count($existEntidad), true));
if(count($existLineanegocio)!=0){
    $mensage="existe";
}else{

    $sql1 = "insert into lineasNegocioUsuario(idUsuariolineaneg,idlineaNegocio)  values('" . $this->safeValue($idusuario) . "','" . $this->safeValue($idlineanegocio) . "') ";
        //$this -> logger -> LogInfo ("Ejecutando deleteTurnoDiaFestivo: " . $sql);
    $res1 = mysqli_query($this->conn, $sql1);
    if ($res1 !== true) {
        $this->logger->LogInfo("Ocurrio un error al add lineanegocio usuario.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }else{
        $mensage="addLineanegocio";
    }


}
return $mensage;

}



public function UpdateBajaVehiculo($usuarioCapturaBaja,$numeroeconomicoBaja,$selMotivoBaja1,$selMotivoSiniestro1,$numeroeconomicoconsulta1,$numeroPlacas1,$inpNumeroDeSerie1,$ComentariosBaja1,$DocFiniquitoHiden,$DocChequesHiden)
{
    $MovimientoBaja="BAJA";
      //  $this -> logger -> LogInfo ("Ejecutando. update del vehiculo en persistencia");
    $sql = "UPDATE parquevehicular 
    SET EstatusDelVehiculo='0',
    UsuarioBaja='$usuarioCapturaBaja',
    FechaBaja=now()
    WHERE idvehiculo='$numeroeconomicoBaja'";
  //$this -> logger -> LogInfo ("valor del array del update del vehiculo sql ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar Edicion Del Vehiculo En Parque Vehicular sin gif. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

    $sql1 = "INSERT INTO bajavehiculos (idvehiculoBaja, NumeroPlacaBaja, NumeroSerieVehiculoBaja, idMotivoBaja, idMotivoBajaSiniestro, ComentarioBaja, UsusarioBaja, FechaBaja_Reingreso, Movimiento, DocumentoFiniquito, Documentocheque) VALUES ('$numeroeconomicoconsulta1','$numeroPlacas1','$inpNumeroDeSerie1','$selMotivoBaja1','$selMotivoSiniestro1','$ComentariosBaja1','$usuarioCapturaBaja',now(),'$MovimientoBaja','$DocFiniquitoHiden','$DocChequesHiden')";
 //$this -> logger -> LogInfo ("valor del array de la sql1 ".var_export ($sql1, true));
    $res1 = mysqli_query($this->conn, $sql1);
    if ($res1 !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar BajaVehiculos.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getCatalagoMotivoBaja($TipoSelector)
{
    $placas = array();
    try {

        $sql ="select * from CatalogoMotivosBajaParqueVehicular";
        if($TipoSelector=="1"){
            $sql.=" where idBajaVehiculos!= '5' order by Descripcion";
        }else{
            $sql.=" where idBajaVehiculos = '5' order by Descripcion";  
        }
            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $placas[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));
        return $placas;
    } catch (Exception $e) {
        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function traerMotivoBajaSiniestro($selMotivoBaja1)
{
        //$this-> logger -> LogInfo("traerListaBancos");
    $MotivoSiniestro = array();

    try {

        $sql ="select * from CatalogoMotivosBajaSiniestro
        where idBajaVehiculosS='$selMotivoBaja1'";

            //$this -> logger -> LogInfo ("ejecutando traerListaBancos en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $MotivoSiniestro[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la listaBancos ".var_export ($listaBancos, true));

        return $MotivoSiniestro;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function UpdateReingresarVehiculo($usuarioCapturareingreso,$numeroeconomicoReingreso2,$selMotivoReingreso2,$selMotivoSiniestro2,$numeroPlacas2,$inpNumeroDeSerie2,$ComentariosReingreso)
{
    $MovimientoReingreso="REINGRESO";
        //$this -> logger -> LogInfo ("Ejecutando. update del vehiculo en persistencia");
    $sql = "UPDATE parquevehicular 
    SET EstatusDelVehiculo='1',
    UsuarioBaja='$usuarioCapturareingreso',
    FechaBaja=now()
    WHERE idvehiculo='$numeroeconomicoReingreso2'";
                  //  $this -> logger -> LogInfo ("valor del array del update del vehiculo sql ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar Edicion Del Vehiculo En Parque Vehicular sin gif. ");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

    $sql1 = "INSERT INTO BajaVehiculos (idvehiculoBaja, NumeroPlacaBaja, NumeroSerieVehiculoBaja, idMotivoBaja, idMotivoBajaSiniestro, ComentarioBaja, UsusarioBaja, FechaBaja_Reingreso, Movimiento) VALUES ('$numeroeconomicoReingreso2','$numeroPlacas2','$inpNumeroDeSerie2','$selMotivoReingreso2','$selMotivoSiniestro2','$ComentariosReingreso','$usuarioCapturareingreso',now(),'$MovimientoReingreso')";
        //$this -> logger -> LogInfo ("valor del array de la sql1 ".var_export ($sql1, true));
    $res1 = mysqli_query($this->conn, $sql1);
    if ($res1 !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar BajaVehiculos.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}



public function CatalogoVehiculosasignados($entidadesusuario,$nombreusuario)
{
       // $this-> logger -> LogInfo("traerCatalogoVehiculosasignados");

    $listavehiculosAsignados= array();
    try {
     $sql1 ="SELECT empleadoLineaNegocioId as LineaNegocioUsuario,
                    entidadFederativaId as EntidadEmpleado,
                    empleadoConsecutivoId as ConsecutivoEmpleado,
                    empleadoCategoriaId as Categoriaepleado FROM empleados
             WHERE entidadFederativaId=(SELECT entidadEmpleadoUsuario 
                                        FROM usuario_empleado 
                                        WHERE usuario='$nombreusuario')
             AND empleadoConsecutivoId=(SELECT consecutivoEmpleadoUsuario 
                                        FROM usuario_empleado 
                                        WHERE usuario='$nombreusuario')
             AND empleadoCategoriaId=(SELECT categoriaEmpleadoUsuario 
                                      FROM usuario_empleado
                                      WHERE usuario='$nombreusuario')";
           $this -> logger -> LogInfo ("valor del array de la CatalogoVehiculosasignados ".var_export ($sql1, true));

     $res1 = mysqli_query($this->conn, $sql1);
     while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
        $Lineanegociousuario = $reg1;
    }
    $Lineanegociousuario1 = $Lineanegociousuario['LineaNegocioUsuario'];        

    // for ($i = 0; $i < count($entidadesusuario); $i++){  
        $sql = "SELECT pv.idvehiculo as NumeroEconomico,pv.NumeroPlaca as Placas, pv.idLineaNegocio as IdLineaNegocio,cln.descripcionLineaNegocio as DescripcionLineaNegocio,
        cmr.Marca as Marca, cmd.Modelo as Modelo,pv.IdColorVehiculo as idcolorvehiculo,ccc.Descripcion as ColorVehiculo,
        pv.AnioVehiculo as AnioVehuiculo, pv.CentimetrosCubicos as Cilindrada, 
        pv.idColorEngomado as IdEngomado,cce.Descripcion as ColorEngomado,ef.idEntidadFederativa as EntidadFederativa,
        apv.idAsignacionC as Asignacion,ef.nombreEntidadFederativa as nombreEntidadF,
        apv.entidadFederativaIdC as empleadoentidad, apv.empleadoConsecutivoIdC as empleadoConsecutivo,
        apv.empleadoCategoriaIdC as empleadoCategoria,emp.nombreEmpleado as nombreConGIf,
        emp.apellidoPaterno as apellidoPConGif,emp.apellidoMaterno as apellidoMConGIf,
        apvsg.idAsignacionS as AsignacionSinGif, apvsg.NombreS as NombreSinGif ,
        apvsg.ApellidoPaternoS as apellidoPSinGifS ,apvsg.ApellidoMaternoS as apellidoMSinGif ,apv.EstatusRegistroC as EstatusConGif ,
        apvsg.EstatusRegistroS as EstatusSinGif,pv.NumeroPoliza as Numeropoliza,pv.NombreFotoPoliza as FotoPoliza,pv.NombreFotoTarjetaDeCirculacion as FotoTarjetaC
        from parquevehicular pv
        left join catalogomarcasvehiculos cmr
        on pv.idMarca=cmr.idMarca
        left join catalogomodelosvehiculos cmd
        on pv.idModelo=cmd.idModelo
        left join catalogocolores ccc
        on pv.IdColorVehiculo=ccc.idcolor
        left join entidadesfederativas ef
        on pv.idEntidadFederativa=ef.idEntidadFederativa
        left join catalogocolores cce
        on pv.idColorEngomado=cce.idcolor
        left join AsignacionesParqueVehicular apv
        on pv.idvehiculo=apv.idvehiculoC
        left join empleados emp
        on emp.entidadFederativaId=apv.entidadFederativaIdC
        and emp.empleadoConsecutivoId=apv.empleadoConsecutivoIdC
        and emp.empleadoCategoriaId=apv.empleadoCategoriaIdC
        left join AsignacionesParqueVehicularSinGif apvsg
        on pv.idvehiculo=apvsg.idvehiculoS
        left join catalogolineanegocio cln
        on pv.idLineaNegocio=cln.idLineaNegocio
        where EstatusDelVehiculo= '1'
        and (apv.idAsignacionC != 'null' or apvsg.idvehiculoS !='null')
        and pv.idLineaNegocio= '$Lineanegociousuario1'
        and ef.idEntidadFederativa IN ($entidadesusuario)";//'$entidadesusuario[$i]' agregar al momento de hacer el cambio de las entidades
                    
                    $res = mysqli_query($this->conn, $sql);
                    // $r=0;
                    // $abc=array();
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $listavehiculosAsignados[] = $reg;
                        // $r++;
                    }    

        // }// Termina el for I
           $this -> logger -> LogInfo ("valor del array de la CatalogoVehiculosasignados ".var_export ($sql, true));
           $this -> logger -> LogInfo ("valor del array de la listavehiculosAsignados ".var_export ($listavehiculosAsignados, true));
        return $listavehiculosAsignados;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}
public function TraerDocLicenciaLista($empleadoentidad,$empleadoConsecutivo,$empleadoCategoria)
{
       // $this-> logger -> LogInfo("traerCatalogoVehiculosasignados");
    $listaDocumentosAsignados= array();

    try {
        $sql1 = "SELECT max(idDocumentoDigitalizado) as MaxIdEmpleado, nombreArchivoSeleccionado as ExtencionLicencia, nombreArchivoGuardado as RutaLicencia
        from empleadosdocumentos
        where documentoId='13'
        and empleadoEntidadFederativaId = '$empleadoentidad'
        and empleadoConsecutivo ='$empleadoConsecutivo'
        and empleadoCategoriaId = '$empleadoCategoria'";
        
        $res1 = mysqli_query($this->conn, $sql1);
        while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
            $listaDocumentosAsignados[] = $reg1;
        }  
         //   $this -> logger -> LogInfo ("valor del array de la listaDocumentosAsignados ".var_export ($listaDocumentosAsignados, true));
           // $this -> logger -> LogInfo ("valor del array de la listavehiculosAsignados ".var_export ($listavehiculosAsignados, true));
        return $listaDocumentosAsignados;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }

}

public function TraerDocTalonVerificacion($NumeroEconomico)
{
    $TalonUltimaVerificacion= array();
    try {
        $sql1 = "SELECT max(idVerificacionV) as MaxIdVerificacion, idVehiculoAVerificar AS NumEco, FotoTalonVerificacion as NombreTalon
        from VerificacionesVehiculares
        where idVehiculoAVerificar='$NumeroEconomico'"; 
        $res1 = mysqli_query($this->conn, $sql1);
        while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
            $TalonUltimaVerificacion[] = $reg1;
        }  
        return $TalonUltimaVerificacion;
    } catch (Exception $e) {
    }

}

public function CatalogoVehiculosVerificacion($entidadesusuarioVerificacion,$nombreusuarioVerificacion,$fecha,$consulta,$color,$year1,$RolUsuarioVerificacion)
{
       // $this-> logger -> LogInfo("traerCatalogoVehiculosVerificados");
       // $fecha="12";
    $enero="01";$febrero="02";$marzo="03";$abril="04";$mayo="05";$junio="06";$julio="07";
    $agosto="08";$septiembre="09";$octubre="10";$noviembre="11";$diciembre="12";
    $listavehiculoVerificacion= array();
    $listavehiculoVerificacion1= array();
    $ListaMaximoIdVehiculos= array();
    $year = date('Y');
    try {
        //******************** Se Lanza La Consulta Para Saber La Linea de Negocio Del Ususario******************
     $sql1 ="SELECT empleadoLineaNegocioId as LineaNegocioUsuario FROM empleados
     where entidadFederativaId=(SELECT entidadEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioVerificacion')
     and empleadoConsecutivoId=(SELECT consecutivoEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioVerificacion')
     and empleadoCategoriaId=(SELECT categoriaEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioVerificacion')";
     $res1 = mysqli_query($this->conn, $sql1);
     while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
        $LineanegociousuarioVerificado = $reg1;
    }
    $this -> logger -> LogInfo ("valor del array de la sql1 ".var_export ($sql1, true));
    $this -> logger -> LogInfo ("valor del array de la LineanegociousuarioVerificado ".var_export ($LineanegociousuarioVerificado, true));
    
    $LineanegociousuarioVerificado = $LineanegociousuarioVerificado['LineaNegocioUsuario'];
        //******************** Termina Consulta de La Linea De negocio ***************************************
            // for ($i = 0; $i < count($entidadesusuarioVerificacion); $i++)//Comienza For Para Las Entidades Del Usuario{  
        //******************** Se Lanza La Consulta Para Traer Todos Los Vehiculo Nulos y Adjuntarlos****************** 
        if($consulta=="0" || $consulta=="2"){// para evitar que entre en esta consulta Cuando Es Con Veridicacion  
            $sql3 = "SELECT pv.idvehiculo as NumEconomico,pv.idLineaNegocio as idLineaNegocio,ln.descripcionLineaNegocio as NombreLineaNegocio,pv.idEntidadFederativa as Entidades, ef.nombreEntidadFederativa as NombreEntidades, pv.NumeroPlaca as Placas,mav.Marca as MarCaVehiculo, mov.Modelo as ModeloVehiculo, cc.Descripcion as ColorEngomado,cc.idcolor as idColorEngomado,apvc.EstatusRegistroC as estatuscongif,apvc.empleadoConsecutivoIdC as EmpleadoUnoCon,apvc.empleadoCategoriaIdC as empleadodoscon,apvc.idEntidadTrabajoC as empleadotrescon,apvs.EstatusRegistroS as estatusSingif,vpv.PrimerSemestreDeVerificacion as PrimerSemestre,vpv.SegundoSemestreDeVerificacion as SegundoSemestre,emp.apellidoMaterno as ApellidoP, emp.apellidoMaterno as apellidoM, emp.nombreEmpleado as Nombre,cvv.FechaUnoPrimerSemestreV as FechaUnoSemestreUno,cvv.FechaDosPrimerSemestreV as FechaDosSemestreUno, cvv.FechaUnoSegundoSemestreV as FechaUnoSemestreDos,cvv.FechaDosSegundorSemestreV as FechaDosSemestreDos,  vpv.FechaInsertVerificacion as fechaUltimaVerificacion
            from parquevehicular pv
            left join catalogolineanegocio ln
            on pv.idLineaNegocio=ln.idLineaNegocio
            left join catalogocolores cc
            on pv.idColorEngomado=cc.idcolor
            left join asignacionesparquevehicular apvc
            on pv.idvehiculo=apvc.idvehiculoC
            left join asignacionesparquevehicularsingif apvs
            on pv.idvehiculo=apvs.idvehiculoS
            left join VerificacionesVehiculares vpv
            on pv.idvehiculo=vpv.idVehiculoAVerificar
            left join empleados emp
            on emp.entidadFederativaId=apvc.entidadFederativaIdC
            and emp.empleadoConsecutivoId=apvc.empleadoConsecutivoIdC
            and emp.empleadoCategoriaId=apvc.empleadoCategoriaIdC
            left join catalogomarcasvehiculos mav
            on pv.idMarca=mav.idMarca
            left join catalogomodelosvehiculos mov
            on pv.idModelo=mov.idModelo
            left join entidadesfederativas ef
            on pv.idEntidadFederativa=ef.idEntidadFederativa
            left join CalendarioVerificacionesVehiculares cvv
            on pv.idColorEngomado=cvv.idColorEngomado
            where pv.EstatusDelVehiculo=1
            and (apvc.idAsignacionC != 'null' or apvs.idvehiculoS !='null')";
            if($RolUsuarioVerificacion!="Control Vehicular" && $RolUsuarioVerificacion!="Direccion General"){
                $sql3.=" and pv.idLineaNegocio= '$LineanegociousuarioVerificado'";
            }
                }// Se cierra EL Primer if 
                if($fecha==$enero || $fecha==$febrero || $fecha==$marzo || $fecha==$abril || $fecha==$mayo || $fecha==$junio){
                    if($consulta=="0"){// urgentes a verificacar En Nulos

                        $sql3.=" AND vpv.PrimerSemestreDeVerificacion is null
                        AND (cvv.FechaUnoPrimerSemestreV <='$fecha')
                        AND ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        order by  pv.idvehiculo";}
                    else if($consulta=="2"){//verificacar En Nulos x color

                        $sql3.=" AND vpv.PrimerSemestreDeVerificacion is null
                        AND cc.idcolor='$color'
                        AND cvv.FechaUnoPrimerSemestreV <='06'
                        AND ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        order by  pv.idvehiculo";}
                    }else{
                    if($consulta=="0"){// urgentes a verificacar En Nulos

                        $sql3.=" and ((vpv.PrimerSemestreDeVerificacion is null) or (vpv.SegundoSemestreDeVerificacion is null))
                        and (cvv.FechaUnoPrimerSemestreV <='$fecha')
                        and ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        order by  pv.idvehiculo";}
                    else if($consulta=="2"){// verificacar En Nulos  x color

                        $sql3.=" and ((vpv.PrimerSemestreDeVerificacion is null) or (vpv.SegundoSemestreDeVerificacion is null))
                        and cc.idcolor='$color'
                        and cvv.FechaUnoPrimerSemestreV <='12'
                        and ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        order by  pv.idvehiculo";}
                    }
        //*************** Termina La Consulta De Los vehiculos En nulos Para los Cuatro Casos  De Todo El año *******************

        //*********Se Lanza La Consulta De los Maximos Ids Para Los Vehiculos Con Y Sin verificacion En Estatus 1,0 o 2************       
                    $TamañoArreglomaxId=0;
                    $sql2 = "SELECT max(vcv.idVerificacionV) as idVerificaciones,pv.idvehiculo as NumEconomico, ef.idEntidadFederativa as entidadesid
                    from parquevehicular pv
                    left join verificacionesvehiculares vcv
                    on pv.idvehiculo =vcv.idVehiculoAVerificar
                    left join entidadesfederativas ef
                    on pv.idEntidadFederativa=ef.idEntidadFederativa
                    where vcv.idVerificacionV != 'null'
                    and ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                    group by vcv.idVehiculoAVerificar";      
                    // $r2=0;
                    $res2 = mysqli_query($this->conn, $sql2);
                    while (($reg2 = mysqli_fetch_array($res2, MYSQLI_ASSOC))) {
                        // $ListaMaximoIdVehiculos[$i][$r2] = $reg2;
                        $ListaMaximoIdVehiculos[] = $reg2;
                        // $r2++;
                    }
                        $TamañoArreglomaxId=count($ListaMaximoIdVehiculos);
        //********************** Termina La Consulta De los Maximos Ids Para Los Vehiculos Verificados Y LOs No veificados***********

        //*********Se Lanza La Consulta De los los Vehiculos Con Y Sin verificacion En Estatus 1,0 o 2 (general)************
                for($j = 0; $j < $TamañoArreglomaxId; $j++){// for para el tamaño del arreglo que trae los maximos ids
                    $MaxIdXIteracion=$ListaMaximoIdVehiculos[$j]['idVerificaciones'];

                    $sql = "SELECT pv.idvehiculo as NumEconomico,pv.idLineaNegocio as idLineaNegocio,ln.descripcionLineaNegocio as NombreLineaNegocio,pv.idEntidadFederativa as Entidades, ef.nombreEntidadFederativa as NombreEntidades, pv.NumeroPlaca as Placas,mav.Marca as MarCaVehiculo, mov.Modelo as ModeloVehiculo, cc.Descripcion as ColorEngomado,cc.idcolor as idColorEngomado,apvc.EstatusRegistroC as estatuscongif,apvc.empleadoConsecutivoIdC as EmpleadoUnoCon,apvc.empleadoCategoriaIdC as empleadodoscon,apvc.idEntidadTrabajoC as empleadotrescon,apvs.EstatusRegistroS as estatusSingif,vpv.PrimerSemestreDeVerificacion as PrimerSemestre,vpv.SegundoSemestreDeVerificacion as SegundoSemestre,emp.apellidoMaterno as ApellidoP, emp.apellidoMaterno as apellidoM, emp.nombreEmpleado as Nombre,cvv.FechaUnoPrimerSemestreV as FechaUnoSemestreUno,cvv.FechaDosPrimerSemestreV as FechaDosSemestreUno, cvv.FechaUnoSegundoSemestreV as FechaUnoSemestreDos,cvv.FechaDosSegundorSemestreV as FechaDosSemestreDos,  vpv.FechaInsertVerificacion as fechaUltimaVerificacion
                    from parquevehicular pv
                    left join catalogolineanegocio ln
                    on pv.idLineaNegocio=ln.idLineaNegocio
                    left join catalogocolores cc
                    on pv.idColorEngomado=cc.idcolor
                    left join asignacionesparquevehicular apvc
                    on pv.idvehiculo=apvc.idvehiculoC
                    left join asignacionesparquevehicularsingif apvs
                    on pv.idvehiculo=apvs.idvehiculoS
                    left join VerificacionesVehiculares vpv
                    on pv.idvehiculo=vpv.idVehiculoAVerificar
                    left join empleados emp
                    on emp.entidadFederativaId=apvc.entidadFederativaIdC
                    and emp.empleadoConsecutivoId=apvc.empleadoConsecutivoIdC
                    and emp.empleadoCategoriaId=apvc.empleadoCategoriaIdC
                    left join catalogomarcasvehiculos mav
                    on pv.idMarca=mav.idMarca
                    left join catalogomodelosvehiculos mov
                    on pv.idModelo=mov.idModelo
                    left join entidadesfederativas ef
                    on pv.idEntidadFederativa=ef.idEntidadFederativa
                    left join CalendarioVerificacionesVehiculares cvv
                    on pv.idColorEngomado=cvv.idColorEngomado   
                    where pv.EstatusDelVehiculo=1
                    and (apvc.idAsignacionC != 'null' or apvs.idvehiculoS !='null')";
                    if($RolUsuarioVerificacion!="Control Vehicular" && $RolUsuarioVerificacion!="Direccion General"){
                        $sql.=" and pv.idLineaNegocio= '$LineanegociousuarioVerificado'";
                    }
                if($fecha==$enero || $fecha==$febrero || $fecha==$marzo || $fecha==$abril || $fecha==$mayo || $fecha==$junio){//primer semestre
                    if($consulta=="0" && $TamañoArreglomaxId!="0"){// urgentes a verificacr

                        $sql.=" and ((vpv.PrimerSemestreDeVerificacion ='0') or ((vpv.PrimerSemestreDeVerificacion ='1') and (YEAR(vpv.FechaInsertVerificacion) = '$year1')))
                        and cvv.FechaUnoPrimerSemestreV <='$fecha'
                        and ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        and vpv.idVerificacionV='$MaxIdXIteracion'
                        order by  pv.idvehiculo"; 
                    }else if($consulta=="3" && $TamañoArreglomaxId!="0"){// todos los verificados

                        $sql.=" and ((vpv.PrimerSemestreDeVerificacion ='2') or ((vpv.PrimerSemestreDeVerificacion ='1') and (YEAR(vpv.FechaInsertVerificacion) = '$year'))) 
                        and (cvv.FechaUnoPrimerSemestreV <='$fecha')
                        and ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        and vpv.idVerificacionV='$MaxIdXIteracion'
                        group by  pv.idvehiculo"; 
                    }else if($consulta=="1"){// por color con verificaciony fecha
                     $sql.=" and ((vpv.PrimerSemestreDeVerificacion ='2') or ((vpv.PrimerSemestreDeVerificacion ='1') and (YEAR(vpv.FechaInsertVerificacion) = '$year'))) 
                     and (cc.idcolor='$color')
                     and (cvv.FechaUnoPrimerSemestreV <='06')
                     and vpv.idVerificacionV='$MaxIdXIteracion'
                     order by  pv.idvehiculo";
                    }else if($consulta=="2"){//sin verificacion por color y fecha 
                     $sql.=" and ((vpv.PrimerSemestreDeVerificacion ='0') or ((vpv.PrimerSemestreDeVerificacion ='1') and (YEAR(vpv.FechaInsertVerificacion) = '$year1')))
                     and cc.idcolor='$color'
                     and cvv.FechaUnoPrimerSemestreV <='06'
                     and vpv.idVerificacionV='$MaxIdXIteracion'
                     order by  pv.idvehiculo";
                 }
                }else{// Segundo Semestre
                    if($consulta=="0" && $TamañoArreglomaxId!="0"){
                        $sql.=" and ((vpv.SegundoSemestreDeVerificacion ='0') or ((vpv.SegundoSemestreDeVerificacion ='1') and (YEAR(vpv.FechaInsertVerificacion) = '$year1')))
                        and ((cvv.FechaUnoSegundoSemestreV <='$fecha') or (cvv.FechaUnoPrimerSemestreV <='$fecha'))
                        and ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        and vpv.idVerificacionV='$MaxIdXIteracion'
                        order by  pv.idvehiculo";
                    }else if($consulta=="3" && $TamañoArreglomaxId!="0"){
                        $sql.=" and ((vpv.SegundoSemestreDeVerificacion ='2') or ((vpv.SegundoSemestreDeVerificacion ='1') and (YEAR(vpv.FechaInsertVerificacion) = '$year'))) 
                        and ((cvv.FechaUnoSegundoSemestreV <='$fecha') or (cvv.FechaUnoPrimerSemestreV <='$fecha'))
                        and ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        and vpv.idVerificacionV='$MaxIdXIteracion'
                        order by  pv.idvehiculo";
                    }else if($consulta=="1"){
                        $sql.=" and ((vpv.SegundoSemestreDeVerificacion ='2') or ((vpv.SegundoSemestreDeVerificacion ='1') and (YEAR(vpv.FechaInsertVerificacion) = '$year'))) 
                        and (cc.idcolor='$color')
                        and (cvv.FechaUnoPrimerSemestreV <='12')
                        and ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        and vpv.idVerificacionV='$MaxIdXIteracion'
                        order by  pv.idvehiculo";
                    }else if($consulta=="2"){
                        $sql.=" and ((vpv.SegundoSemestreDeVerificacion ='0') or ((vpv.SegundoSemestreDeVerificacion ='1') and (YEAR(vpv.FechaInsertVerificacion) = '$year1')))
                        and (cc.idcolor='$color')
                        and (cvv.FechaUnoPrimerSemestreV <='12')
                        and ef.idEntidadFederativa IN ($entidadesusuarioVerificacion)
                        and vpv.idVerificacionV='$MaxIdXIteracion'
                        order by  pv.idvehiculo";
                    }
                    
                }
   //*********Se Termina La Consulta General De Los Vehiculos Con Y Sin verificacion En Estatus 1,0 o 2************   
    $this -> logger -> LogInfo ("valor del array de la sql ".var_export ($sql, true));
    // $this -> logger -> LogInfo ("valor del array de la sql3 ".var_export ($sql3, true));
                $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {// Elquery General Siempre entra aqui
                $listavehiculoVerificacion[] = $reg;
            }
        }//Termina el for max ids
        if($consulta=="0" || $consulta=="2"){
            $res3 = mysqli_query($this->conn, $sql3);
            while (($reg3 = mysqli_fetch_array($res3, MYSQLI_ASSOC))) {// El query PAra Los Nulos Solo netra Cuando es 0 o 2
                $listavehiculoVerificacion[] = $reg3;
            }}
    // }// Termina el for entidades
    $this -> logger -> LogInfo ("valor del array de la listavehiculoVerificacion ".var_export ($listavehiculoVerificacion, true));
   //  $this -> logger -> LogInfo ("valor del array de la listavehiculoVerificacion1 ".var_export ($listavehiculoVerificacion1, true));
    return $listavehiculoVerificacion;
} catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
}

}

public function getTurnosCubiertosByPeriodoFechasAndPuntoServicioconteo($fecha, $puntoServicioId) {
    $sql = "select fechaAsistencia, sum(ci.valorAsistencia) as cantidadTurnos,nomenclaturaIncidencia,valorAsistencia";
    $sql .= " from asistencia a ";
    $sql .= "inner join catalogoincidencias ci on a.incidenciaAsistenciaId=ci.incidenciaId ";
    $sql .= "where fechaAsistencia = '" . $this->safeValue($fecha) . "' ";   
    $sql .= "and PuntoServicioAsistenciaId = '" . $this->safeValue($puntoServicioId) . "' ";
    $sql .= "group by fechaAsistencia,nomenclaturaIncidencia;";
    $rs = mysqli_query($this->conn, $sql);

    $result = array();
    if (!is_bool($rs)) {
        while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {
            $result[]=$reg;
        }
    }
    return $result;
}
public function getTurnosdeDiaoNoche($fecha, $puntoServicioId,$diaonoche) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    $sql1 = "select count(*) turnos_diaonoche
    from turnoasistencia
    where  fechaTurno='" . $this->safeValue($fecha) . "'
    and puntoServicioTurno='" . $this->safeValue($puntoServicioId) . "'";
    if($diaonoche==1){
        $sql1.=" and (tipoTurno=1 or tipoTurno=3 or tipoTurno=5 or tipoTurno=7 or tipoTurno=8 or tipoTurno=10 or tipoTurno=12 or tipoTurno=14 or tipoTurno=16 or tipoTurno=18 or tipoTurno=19 )";
    }else{$sql1.=" and (tipoTurno=2 or tipoTurno=4 or tipoTurno=6 or tipoTurno=7 or tipoTurno=9 or tipoTurno=11 or tipoTurno=13 or tipoTurno=15 or tipoTurno=17 or tipoTurno=18  or tipoTurno=19)";}
    $rs1 = mysqli_query($this->conn, $sql1);
    $turnos_diaonoche="";
    while (($reg1 = mysqli_fetch_array($rs1, MYSQLI_ASSOC))) {
       $turnos_diaonoche= $reg1["turnos_diaonoche"];
   // $this -> logger -> LogInfo ("Ejecutando reg1: "  . var_export ( $turnos_dia, true));
   }
   return $turnos_diaonoche;
}
public function getBajasPorDias($fecha, $puntoServicioId,$opcion) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    $sql1 = "select count(conteoPrimerDiaBaja) bajasTotal
    from asistencia
    where fechaAsistencia='" . $this->safeValue($fecha) . "'
    and puntoServicioAsistenciaId='" . $this->safeValue($puntoServicioId) . "'";
                if($opcion==1){$sql1.=" and conteoPrimerDiaBaja=1 and incidenciaAsistenciaId=10";//incidencia de baja 
            }
            if($opcion==2){
                    $sql1.=" and conteoPrimerDiaBaja=1 and incidenciaAsistenciaId=11";//incidencia de ingreso
                }
                if($opcion==3){
                    $sql1.=" and incidenciaAsistenciaId=4"; //incidencia de falta
                }
                if($opcion==4){
                    $sql1.=" and incidenciaAsistenciaId=7"; //incidencia de permiso
                }
                if($opcion==5){
                    $sql1.=" and incidenciaAsistenciaId=8"; //incidencia de incapacidad
                }
                $rs1 = mysqli_query($this->conn, $sql1);
                $bajasTotal="";
                while (($reg1 = mysqli_fetch_array($rs1, MYSQLI_ASSOC))) {
                   $bajasTotal= $reg1["bajasTotal"];
   // $this -> logger -> LogInfo ("Ejecutando reg1: "  . var_export ( $turnos_dia, true));
               }
               return $bajasTotal;
           }
           public function traeCatalogoClientesconteo($opcion,$idcliente)
           {
        //$this -> logger -> LogInfo ("traeCatalogoClientes en persistencia");
            $listaClientes = array();

            try {

                $sql = "select idCliente, razonSocial, nombreComercial, rfcCliente, contactoCliente, telefonoFijoCliente,
                telefonoMovilCliente, correoCliente, claveClienteNomina, estatusCliente,
                personaCapturaCliente,fechaCapturaCliente,direccionFiscalCliente from catalogoclientes";
                if($opcion==2){
                    $sql.=" where idCliente='" . $this->safeValue($idcliente) . "'";
                } 
                $sql.=" order by razonSocial asc";

                //$this -> logger -> LogInfo ("ejecutando traeCatalogoClientesconteo en persistencia". $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listaClientes[] = $reg;

                }
            //$this -> logger -> LogInfo ("valor del array de la listaClientes ".var_export ($listaClientes, true));
                return $listaClientes;
            } catch (Exception $e) {
                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function insertarRegistroDeVerificacionesVehiculares($VerificacionesVehiculares)
        {
       // $this -> logger -> LogInfo ("Ejecutando. insertarVehiculo en persistencia");
            $sql = "INSERT INTO VerificacionesVehiculares (idVehiculoAVerificar, PlacasVerificacion, idColorEngomadoVerificacion, VerificacionConstante, CalendarioNormal, MontoVerificacion, SeVerificoATiempo, SePagoMulta, MontoMulta, FolioMulta, FotoTalonVerificacion, FotoMultaVerificacion, PorQueNoPagoMulta, Comentarios, PrimerSemestreDeVerificacion, SegundoSemestreDeVerificacion, Usuarioverificacion, FechaInsertVerificacion, FechaInicioVerificacion, FechaFinalVerificacion) VALUES (
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["inpNumroEcoVehiculoVerificacion"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["inpNumeroPlacasVerificacion"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["inpcolorEngomadoVerificacion"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["SeVerificahiden"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["checkCalendarionormalhiden"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["MontoVerificacion"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["checkVerificacionATiempohiden"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["checkSePagoMultahiden"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["MontoMulta"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["FolioMulta"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["fotoverificacionhiden"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["formatomultahiden"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["PorqueMulta"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["ComentariosGenerales"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["PrimerSemestrHiden"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["SegundosemestreHiden"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["usuarioCapturaVerificacion"])."',
            now(),
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["FechaInicialVerificacion"])."',
            '".mysqli_real_escape_string($this->conn, $VerificacionesVehiculares["FechaFinalVerificacion"])."')";
            
       // $this -> logger -> LogInfo ("Se ejecuto consulta como" . $sql);
            $res = mysqli_query($this->conn, $sql);
            if ($res !== true) {
                $this->logger->LogInfo("Ocurrio un error al insertar.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }
        }


        public function getultimadeduccionsubida($tipo)
        {
        //$this -> logger -> LogInfo ("traeCatalogoClientes en persistencia");
            $ultimoid = array();

            try {

                $sql = "select * 
                from ultimoUpdateDeudores
                where idUpdate=(select ifnull(max(idUpdate),0) idupdate from ultimoUpdateDeudores where tipoUpdate='" . $this->safeValue($tipo) . "')";
                
                

           //$this -> logger -> LogInfo ("ejecutando traeCatalogoClientesconteo en persistencia". $sql);

                $res = mysqli_query($this->conn, $sql);

                while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $ultimoid[] = $reg;

                }
            //$this -> logger -> LogInfo ("valor del array de la listaClientes ".var_export ($listaClientes, true));
                return $ultimoid;
            } catch (Exception $e) {
                $this->logger->LogInfo("ERROR:" . $e->getMessage());
            }
        }

        public function ListaLicenciasEmpleados($entidadesusuarioLicencia,$nombreusuarioLicencia,$consulta,$RolUsuarioLicencia)
        {
        //$this-> logger -> LogInfo("traerCatalogoVehiculosasignados");
            $listaLicencias= array();
            $FechaActual = date("Y-m-d");
            $FechaMasunMes = date("Y-m-d",strtotime($FechaActual."+ 1 month")); 
       // $this -> logger -> LogInfo ("valor del array de la mesmenos ".var_export ($mesmenos, true));
            try {
             $sql1 ="SELECT empleadoLineaNegocioId as LineaNegocioUsuario, entidadFederativaId as EntidadEmpleado,empleadoConsecutivoId as ConsecutivoEmpleado,empleadoCategoriaId as Categoriaepleado FROM empleados
             where entidadFederativaId=(SELECT entidadEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioLicencia')
             and empleadoConsecutivoId=(SELECT consecutivoEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioLicencia')
             and empleadoCategoriaId=(SELECT categoriaEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioLicencia')";
             $res1 = mysqli_query($this->conn, $sql1);
             while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
                $LineanegociousuarioLicencia = $reg1;
            }
            $LineanegociousuarioLicencia1 = $LineanegociousuarioLicencia['LineaNegocioUsuario'];        

            // for ($i = 0; $i < count($entidadesusuarioLicencia); $i++)
            // {  
                $sql = "SELECT emp.entidadFederativaId as EntidadEmpleado, emp.empleadoConsecutivoId as ConsecutivoEmpleado, emp.empleadoCategoriaId as CategoriaEmpleado, emp.apellidoPaterno as ApeelidoP, emp.apellidoMaterno as ApellidoM, emp.nombreEmpleado as Nombre, emp.numlicencia as NumeroLicencia, emp.fechavigencialicencia as FechaVigenciaLicencia, cln.descripcionLineaNegocio as LineaNegocio, enf.nombreEntidadFederativa as EntidadFederativa, cee.descripcionEstatusEmpleado as Estatusempleado
                from empleados emp
                left join catalogolineanegocio cln
                on emp.empleadoLineaNegocioId=cln.idLineaNegocio
                left join entidadesfederativas enf
                on emp.idEntidadTrabajo=enf.idEntidadFederativa
                left join catalogoestatusempleados cee
                on emp.empleadoEstatusId=cee.estatusEmpleadoId
                where ((empleadoEstatusId='1') or (empleadoEstatusId='2'))
                and idEntidadTrabajo IN ($entidadesusuarioLicencia)";


                if($RolUsuarioLicencia!="Control Vehicular" && $RolUsuarioLicencia!="Direccion General"){
                 $sql.=" and empleadoLineaNegocioId='$LineanegociousuarioLicencia1'";
             }
             if($consulta=="0"){
                $sql.=" and numlicencia != '' and fechavigencialicencia > '$FechaMasunMes'";
            }else if($consulta=="1"){
                $sql.=" and (fechavigencialicencia BETWEEN '$FechaActual' AND '$FechaMasunMes') and numlicencia != ''";
            }else if($consulta=="2"){
                $sql.=" and ((fechavigencialicencia < '2020-05-13') or (numlicencia is null))";
            }

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaLicencias[]= $reg;
                
            }    
        // }// Termina el for I
           // $this -> logger -> LogInfo ("valor del array de la ListaLicenciasEmpleados ".var_export ($sql, true));
           // $this -> logger -> LogInfo ("valor del array de la listavehiculosAsignados ".var_export ($listavehiculosAsignados, true));
        return $listaLicencias;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}


public function ListaTarjetaCVehiculos($entidadesusuarioTarjetaC,$nombreusuarioTarjetaC,$consulta,$RolUsuarioTarjetaC)
{
        //$this-> logger -> LogInfo("traerCatalogoVehiculosasignados");
    $listaTarjetasC= array();
    $FechaActual1 = date("Y-m-d");
    $FechaMasunMes1 = date("Y-m-d",strtotime($FechaActual1."+ 1 month")); 
       // $this -> logger -> LogInfo ("valor del array de la mesmenos ".var_export ($mesmenos, true));
    try {
     $sql1 ="SELECT empleadoLineaNegocioId as LineaNegocioUsuario, entidadFederativaId as EntidadEmpleado,empleadoConsecutivoId as ConsecutivoEmpleado,empleadoCategoriaId as Categoriaepleado FROM empleados
     where entidadFederativaId=(SELECT entidadEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioTarjetaC')
     and empleadoConsecutivoId=(SELECT consecutivoEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioTarjetaC')
     and empleadoCategoriaId=(SELECT categoriaEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioTarjetaC')";
     $res1 = mysqli_query($this->conn, $sql1);
     while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
        $LineanegociousuarioTarjetaC = $reg1;
    }
    $LineanegociousuarioTarjetaC1 = $LineanegociousuarioTarjetaC['LineaNegocioUsuario'];        

    // for ($i = 0; $i < count($entidadesusuarioTarjetaC); $i++){  
        $sql = "SELECT pv.idvehiculo as NumeroEconomico, pv.NumeroPlaca as Placas, pv.FechaTerminoVigenciaDeTarjeta as FechaVigenciaTarjeta, ln.descripcionLineaNegocio as LineaNegocio, ef.nombreEntidadFederativa as EntidadFederativa, ct.Descripcion as TipoTarjeta, cc.Descripcion as ColorEngomado, apv.EstatusRegistroC as EstatusConGif, apvsg.EstatusRegistroS as EstatusSinGif 
        from parquevehicular pv
        left join catalogolineanegocio ln
        on pv.idLineaNegocio=ln.idLineaNegocio
        left join entidadesfederativas ef
        on pv.idEntidadFederativa=ef.idEntidadFederativa
        left join catalogotarjetacerculacion ct
        on pv.idtarjetaC=ct.idtarjetaC
        left join catalogocolores cc
        on pv.idColorEngomado=cc.idcolor
        left join AsignacionesParqueVehicular apv
        on pv.idvehiculo=apv.idvehiculoC
        left join AsignacionesParqueVehicularSinGif apvsg
        on pv.idvehiculo=apvsg.idvehiculoS
        where pv.EstatusDelVehiculo='1'
        and pv.idEntidadFederativa IN ($entidadesusuarioTarjetaC)";
        if($RolUsuarioTarjetaC!="Control Vehicular" && $RolUsuarioTarjetaC!="Direccion General"){
         $sql.=" and pv.idLineaNegocio='$LineanegociousuarioTarjetaC1'
                 and (apv.idAsignacionC != 'null' or apvsg.idvehiculoS !='null')";
     }
     if($consulta=="0"){
        $sql.=" and ((pv.idtarjetaC='1') or ((pv.idtarjetaC='2') and (pv.FechaTerminoVigenciaDeTarjeta >'$FechaMasunMes1')))";
    }else if($consulta=="1"){
        $sql.=" and ((pv.idtarjetaC='2') and (pv.FechaTerminoVigenciaDeTarjeta BETWEEN'$FechaActual1'  AND '$FechaMasunMes1'))";
    }else if($consulta=="2"){
        $sql.=" and ((pv.idtarjetaC='2') and (pv.FechaTerminoVigenciaDeTarjeta <'$FechaActual1'))";
    }


    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $listaTarjetasC[]= $reg;
        
    }    
        // }// Termina el for I
           // $this -> logger -> LogInfo ("valor del array de la listaDocumentosAsignados ".var_export ($listaDocumentosAsignados, true));
           // $this -> logger -> LogInfo ("valor del array de la listavehiculosAsignados ".var_export ($listavehiculosAsignados, true));
        return $listaTarjetasC;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function ListaPolizaV($entidadesusuarioPoliza,$nombreusuarioPoliza,$consulta,$RolUsuarioPoliza)
{
        //$this-> logger -> LogInfo("traerCatalogoVehiculosasignados");
    $listaPolizaVe= array();
    $FechaActual11 = date("Y-m-d");
    $FechaMasunMes11 = date("Y-m-d",strtotime($FechaActual11."+ 1 month")); 
       // $this -> logger -> LogInfo ("valor del array de la mesmenos ".var_export ($mesmenos, true));
    try {
     $sql1 ="SELECT empleadoLineaNegocioId as LineaNegocioUsuario, entidadFederativaId as EntidadEmpleado,empleadoConsecutivoId as ConsecutivoEmpleado,empleadoCategoriaId as Categoriaepleado FROM empleados
     where entidadFederativaId=(SELECT entidadEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioPoliza')
     and empleadoConsecutivoId=(SELECT consecutivoEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioPoliza')
     and empleadoCategoriaId=(SELECT categoriaEmpleadoUsuario FROM usuario_empleado where usuario='$nombreusuarioPoliza')";
     $res1 = mysqli_query($this->conn, $sql1);
     while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {
        $LineanegociousuarioPoliza = $reg1;
    }
    $LineanegociousuarioPoliza = $LineanegociousuarioPoliza['LineaNegocioUsuario'];        

    // for ($i = 0; $i < count($entidadesusuarioPoliza); $i++){  
        $sql = "SELECT pv.idvehiculo as NumeroEconomico, pv.NumeroPlaca as Placas,ln.descripcionLineaNegocio as LineaNegocio, ef.nombreEntidadFederativa as EntidadFederativa, mav.Marca as Marca, mov.Modelo as Modelo, cta.Descripcion Aseguradora,pv.NumeroPoliza as NumeroPoliza,  pv.FechaFinalPoliza as FechaPoliza, apv.EstatusRegistroC as EstatusConGif, apvsg.EstatusRegistroS as EstatusSinGif
        from parquevehicular pv
        left join catalogolineanegocio ln
        on pv.idLineaNegocio=ln.idLineaNegocio
        left join entidadesfederativas ef
        on pv.idEntidadFederativa=ef.idEntidadFederativa
        left join catalogomarcasvehiculos mav
        on pv.idMarca=mav.idMarca
        left join catalogomodelosvehiculos mov
        on pv.idModelo=mov.idModelo
        left join catalogonaseguradoras cta
        on pv.idAseguradora=cta.idaseguradora
        left join AsignacionesParqueVehicular apv
        on pv.idvehiculo=apv.idvehiculoC
        left join AsignacionesParqueVehicularSinGif apvsg
        on pv.idvehiculo=apvsg.idvehiculoS
        where pv.EstatusDelVehiculo='1'
        and pv.idEntidadFederativa IN ($entidadesusuarioPoliza)";

        if($RolUsuarioPoliza!="Control Vehicular" && $RolUsuarioPoliza!="Direccion General"){
         $sql.=" and pv.idLineaNegocio='$LineanegociousuarioPoliza'
         and (apv.idAsignacionC != 'null' or apvsg.idvehiculoS !='null')";
     }
     if($consulta=="0"){
        $sql.=" and pv.FechaFinalPoliza >'$FechaMasunMes11'";
    }else if($consulta=="1"){
        $sql.=" and pv.FechaFinalPoliza BETWEEN'$FechaActual11'  AND '$FechaMasunMes11'";
    }else if($consulta=="2"){
        $sql.=" and ((pv.FechaFinalPoliza <'$FechaActual11') or (pv.FechaFinalPoliza is null))";
    }

    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $listaPolizaVe[]= $reg;
        
    }    
        // }// Termina el for I
           // $this -> logger -> LogInfo ("valor del array de la listaDocumentosAsignados ".var_export ($listaDocumentosAsignados, true));
           // $this -> logger -> LogInfo ("valor del array de la listavehiculosAsignados ".var_export ($listavehiculosAsignados, true));
        return $listaPolizaVe;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function getincidenciaspordiabycliente($idcliente,$fechadia,$usuario) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    $sql = "select * from catalogoclientes cc 
    left join catalogopuntosservicios cps on(cc.idCliente=cps.idClientePunto)
    left join asistencia a on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
    left join catalogoincidencias ci on( a.incidenciaAsistenciaId=ci.incidenciaId )
    where idCliente='" . $this->safeValue($idcliente) . "'
    and a.fechaAsistencia= '" . $this->safeValue($fechadia) . "' ";
    if($usuario["userLog"]["rol"]=="Supervisor"){
        $numeroempleado=$usuario["userLog"]["empleadoId"];
        $empleadoId=explode('-', $numeroempleado);
        $empleadoentidad=$empleadoId[0];
        $empleadoconsecutivo=$empleadoId[1];
        $empleadocategoria=$empleadoId[2];
        $sql.=" and a.supervisorEntidad='$empleadoentidad'
        and a.supervisorConsecutivo='$empleadoconsecutivo'
        and a.supervisorTipo='$empleadocategoria'";          
    }

    $rs = mysqli_query($this->conn, $sql);
    //$this -> logger -> LogInfo ("Ejecutando getturnosbyclientetotales: " . $sql);

    $result = array();
    if (!is_bool($rs)) {
        while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {

              //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($reg, true));
           $result[] = $reg;
                //$result[$reg["fechaAsistencia"]]["nomenclaturaIncidencia"] = $reg["nomenclaturaIncidencia"];
       }
   }
   //$this -> logger -> LogInfo ("Ejecutando getturnoscubiertos result: "  . var_export ( $result, true));


       // $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($result, true));
   return $result;
}
public function getincidenciasturnosdia($idcliente,$fechadia,$accion,$usuario) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
        // $this -> logger -> LogInfo ("Ejecutando usuario: " . var_export ( $usuario["userLog"], true));
    $sql = "select count(*)turnosdiaonoche 
    from catalogopuntosservicios  cps
    left join turnoasistencia ta
    on (cps.idPuntoServicio=ta.puntoServicioTurno)
    left join asistencia a 
    on(ta.entidadEmpTurno=a.empleadoEntidad and ta.consecutivoEmpTurno=a.empleadoConsecutivo  and ta.categoriaEmpTurno=a.empleadoTipo  and ta.fechaTurno=a.fechaAsistencia)
    where cps.idClientePunto='" . $this->safeValue($idcliente) . "'
    and ta.fechaTurno= '" . $this->safeValue($fechadia) . "' ";
    if($usuario["userLog"]["rol"]=="Supervisor"){
        $numeroempleado=$usuario["userLog"]["empleadoId"];
        $empleadoId=explode('-', $numeroempleado);
        $empleadoentidad=$empleadoId[0];
        $empleadoconsecutivo=$empleadoId[1];
        $empleadocategoria=$empleadoId[2];
        $sql.=" and a.supervisorEntidad='$empleadoentidad'
        and a.supervisorConsecutivo='$empleadoconsecutivo'
        and a.supervisorTipo='$empleadocategoria'";          
    }
    if($accion==2){
        //esta accion es para sacar el total de turnos de dia
       $sql .=" and (tipoTurno=1 or tipoTurno=3 or tipoTurno=5 or tipoTurno=7 or tipoTurno=8 or tipoTurno=10 or tipoTurno=12 or tipoTurno=14 or tipoTurno=16 or tipoTurno=18 or tipoTurno=19 )";
   }else if($accion==3){
      //esta accion es para sacar el total de turnos dedia
    $sql.=" and (tipoTurno=2 or tipoTurno=4 or tipoTurno=6 or tipoTurno=7 or tipoTurno=9 or tipoTurno=11 or tipoTurno=13 or tipoTurno=15 or tipoTurno=17 or tipoTurno=18  or tipoTurno=19)";
}
$rs = mysqli_query($this->conn, $sql);
      //$this -> logger -> LogInfo ("Ejecutando getincidenciasturnosdia1: " . $sql);

$result = array();
if (!is_bool($rs)) {
    while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {

              //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($reg, true));
       $result[] = $reg;
                //$result[$reg["fechaAsistencia"]]["nomenclaturaIncidencia"] = $reg["nomenclaturaIncidencia"];
   }
}
$this -> logger -> LogInfo ("Ejecutando getturnoscubiertos result: "  . var_export ( $result, true));


       // $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($result, true));
return $result;
}

public function listaEdicionVehiculo($consulta,$FechaInicial,$FechaFinal)
{
        //$this-> logger -> LogInfo("traerCatalogoVehiculosasignados");
    $EdicionVehiculo1= array();
       // $this -> logger -> LogInfo ("valor del array de la mesmenos ".var_export ($mesmenos, true));
    try {

        $sql = "SELECT hepv.idHistoricoEdicionV as IdTabla,hepv.IdVehiculoEdicion as NumeroEco,cc.Descripcion as ColorEngomado,ln.descripcionLineaNegocio LineaNegocio,ef.nombreEntidadFederativa as Entidad,hepv.NumeroPlacaHistoricoEdicionV as Placas,
        ctc.Descripcion as TipoTarjeta, hepv.FechaInicioVigenciaDeTarjetaHEdicionV as FechaInicioVegenciaTC,hepv.FechaTerminoVigenciaDeTarjetaHEdicionV as FechaFinVigenciaTC, cnm.Descripcion as TieneMotor, hepv.NumeroDeMotorVehiculoHistoricoEdicionV as NumeroDeMotor,cp.nombrePais as Pais, hepv.NumeroTajetaLlaveEdicionV as NumeroTarjetaLlave, hepv.NumeroTajetaGasolinaEdicionV as NumeroTarjetaGas, hepv.NumeroNipTajetaEdicionV as NumeroNip,
        cta.Descripcion as Aseguradora, ctcp.Descripcion as TipoPoliza, hepv.NumeroPolizaHistoricoEdicionV as NumeroPoliza, hepv.FechaInicionPolizaHistoricoV as FechaInicioPoliza,hepv.FechaFinalPolizaHistoricoV as FechaFinalPoliza, hepv.NombreFotoTarjetaDeCirculacionHEdicionV as NombreTarjetaC, hepv.NombreFotoPolizaHEdicionV as NombrePoliza,
        hepv.NombreFotoFacturaHEdicionV as NombreFactura, hepv.UsuarioEdited as UsuarioEdited, hepv.FechaEdicionVehiculo as FechaEdicion
        from historicoedicionvehiculo hepv
        left join catalogocolores cc
        on hepv.idColorEngomadoHistoricoEdicionV=cc.idcolor
        left join catalogolineanegocio ln
        on hepv.idLineanegocioEdicion=ln.idLineaNegocio
        left join entidadesfederativas ef
        on hepv.idEntidadFederativaEdicion=ef.idEntidadFederativa
        left join catalogotarjetacerculacion ctc
        on hepv.idtarjetaCHistoricoEdicionV=ctc.idtarjetaC
        left join catalogonumeromotor cnm
        on hepv.idTieneNumeroDeMotorHistoricoEdicionV=cnm.idnumeroMotor
        left join catalogopaises cp
        on hepv.IdPaisOrigenHistoricoEdicionV=cp.idPais
        left join catalogonaseguradoras cta
        on hepv.AseguradoraEdiconV=cta.idaseguradora 
        left join catalogotipocoberturaseguros ctcp
        on hepv.TipoPolizaEdicionV=ctcp.idTipoCobertura";
        
        if($consulta=="0"){
            $sql.=" order by hepv.idHistoricoEdicionV";
        }else if($consulta=="1"){
            $sql.=" where hepv.FechaEdicionVehiculo BETWEEN '$FechaInicial' AND '$FechaFinal'
            order by hepv.idHistoricoEdicionV";
        }

        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $EdicionVehiculo1[]= $reg;
            
        }    
        
        return $EdicionVehiculo1;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}


public function listaAsignacionVehiculo($consulta,$FechaInicial1,$FechaFinal1)
{
        //$this-> logger -> LogInfo("traerCatalogoVehiculosasignados");
    $AsignacionVehiculo1= array();
       //$this -> logger -> LogInfo ("valor del array de la mesmenos ".var_export ($mesmenos, true));
    try {

        $sql = "SELECT * 
        FROM historicoasignacionparquevehicular hpv
        left join empleados emp
        on entidadFederativaId=hpv.entidadFederativaIdHistorico
        and empleadoConsecutivoId=hpv.empleadoConsecutivoIdHistorico
        and empleadoCategoriaId=hpv.empleadoCategoriaIdHistorico
        left join entidadesfederativas ef
        on ef.idEntidadFederativa=hpv.entidadFederativaIdHistorico";
        
        if($consulta=="0"){
            $sql.=" order by hpv.idHistoricoAsignacion";
        }else if($consulta=="1"){
            $sql.=" where hpv.FechaInsercionAlHistorico BETWEEN '$FechaInicial1' AND '$FechaFinal1'
            order by hpv.idHistoricoAsignacion";
        }

        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $AsignacionVehiculo1[]= $reg;
            
        }    
        
        return $AsignacionVehiculo1;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function listaHistoricoVerifiacionVehiculo($consulta,$FechaInicial11,$FechaFinal11)
{
        //$this-> logger -> LogInfo("traerCatalogoVehiculosasignados");
    $VerifiacionVehiculo1= array();
       // $this -> logger -> LogInfo ("valor del array de la mesmenos ".var_export ($mesmenos, true));
    try {

        $sql = "SELECT * FROM VerificacionesVehiculares";
        
        if($consulta=="0"){
            $sql.=" order by idVerificacionV";
        }else if($consulta=="1"){
            $sql.=" where FechaInsertVerificacion between '$FechaInicial11' and '$FechaFinal11'
            order by idVerificacionV";
        }

        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $VerifiacionVehiculo1[]= $reg;
            
        }    
        
        return $VerifiacionVehiculo1;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function TraerEmpleadosEstatusOperacionesConCondiciones($usuario,$FechaInicio,$FechaFinal)
{
        // $this-> logger -> LogInfo("getEmpleadosEstatusOperacionessss");
    $lista = array();
    $sql = "select concat_ws('-', e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado,
    concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombre,
    e.fechaBajaOperaciones, e.fechaIngresoEmpleado, e.empleadoEstatusId, e.estatusEmpleadoOperaciones,di.empleadoEstatusImss, e.empleadoIdPuesto,
    concat_ws('-', e.idEntidadResponsableAsistencia, e.consecutivoResponsableAsistencia, e.tipoResponsableAsistencia) as responsableAsistencia,
    e.tipoPeriodo, e.empleadoIdPuntoServicio, e.idTipoPuesto, concat_ws(' ', s.apellidoPaterno, s.apellidoMaterno, s.nombreEmpleado) as supervisor, ctp.descripcionTipoPeriodo,e.roloperativo,cru.descripcionRolUsuario as RolUsuario,fe.NombreArchivoBaja,fe.ComentarioEmpBaja,e.EstatusReingreso,e.MotivoReingreso, p.requisicionId as IdPlantilla,di.origenSalarioDiario as OrigenEstatusImss,di.fechaImss,e.idHoario
    from  empleados e
    left join empleados s on (e.idEntidadResponsableAsistencia=s.entidadFederativaId
    and e.consecutivoResponsableAsistencia=s.empleadoConsecutivoId and e.tipoResponsableAsistencia=s.empleadoCategoriaId)
    left join folosbajaemplados fe on (e.entidadFederativaId=fe.EntidadEmpBaja
    and e.empleadoConsecutivoId=fe.ConsecutivoEmpBaja and e.empleadoCategoriaId=fe.CaegoriaEmpBaja)
    left join usuarios u on(fe.UsuarioCapturaBaja=u.usuario)
    left join catalogorolesusuarios cru on (u.usuarioRolId=cru.idRolUsuario)
    left join catalogotipoperiodo ctp on (e.tipoPeriodo=ctp.tipoPeriodoId)
    left join datosimss di on ( e.entidadFederativaId= di.empladoEntidadImss and e.empleadoConsecutivoId=di.empleadoConsecutivoImss and
    e.empleadoCategoriaId=di.empleadoCategoriaImss)
    left join plantilla p on ( e.entidadFederativaId= p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and
    e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    where e.estatusEmpleadoOperaciones='0'
    and e.empleadoEstatusId='0'
    and di.empleadoEstatusImss='3'
    and((e.fechaBajaEmpleado BETWEEN '$FechaInicio' AND '$FechaFinal')";
    if($usuario["rol"]=="Lider Unidad"){
        $sql.=") and";
        for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
            if(!is_array($usuario['lineaNegocioUsuario'])){
                $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
            }else{
                $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
            } 
            for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                if(!is_array($usuario['entidadFederativaUsuario'])){
                    $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                }else{
                    $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                }
                if(($i==0) && ($j==0)){
                    $sql.=" ((e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";  
                }else{
                    $sql.=" or (e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";       
                }
            }
        }
    }
    else if($usuario["rol"]=="Supervisor" || $usuario["rol"] == "Consulta Supervisor"){
        $numempleadosupervisor=$usuario["empleadoId"];
        $empleadoidsupervisor = explode("-", $numempleadosupervisor);
        $empleadoEntidadSup=$empleadoidsupervisor[0];
        $empleadoConsecutivoSup=$empleadoidsupervisor[1];
        $empleadoCategoriaSup=$empleadoidsupervisor[2];
        //explode 
        $sql.=") and ((e.idEntidadResponsableAsistencia='$empleadoEntidadSup') and (e.consecutivoResponsableAsistencia='$empleadoConsecutivoSup')  and (e.tipoResponsableAsistencia='$empleadoCategoriaSup')";   
    }
    $sql.=" ) group by  numeroEmpleado order by numeroEmpleado ";

    // $this -> logger -> LogInfo ("Ejecutando getEmpleadosEstatusOperacionesssss: " . $sql);
    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }


       // $this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function Traerobtenerfecha($FechaDiaActual)
{
       // $this-> logger -> LogInfo("getEmpleadosEstatusOperaciones");
    $listafecha = array();
    $sql = "SELECT rp.FechaInicioP as FechaInicio, rp.FechaFinP as FechaFinal from periodos pr
    left join aniosperiodos ap
    on pr.IdPeriodo=ap.IdPeriodo
    left join rangoperiodos rp
    on ap.IdAnio=rp.IdAnio
    where pr.IdPeriodo='1'
    and '$FechaDiaActual' between rp.FechaInicioP and rp.FechaFinP";
        //$this -> logger -> LogInfo ("Ejecutando getEmpleadosEstatusOperaciones1: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listafecha[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $listafecha;

}


public function consultaturnosdiaonochebyplantillaservicio($asistenciaFecha, $plantilladeservicio, $valordia,$puntoServicioId, $puestoCubiertoId,$idPlantillaServicio,$opcion){
    //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    if($opcion==3){
        $sql="select * from catalogopuntosservicios
            where idPuntoServicio='" . $this->safeValue($puntoServicioId) . "'";
        $rs1 = mysqli_query($this->conn, $sql);
        $puntoservicio=array();
        while (($reg1 = mysqli_fetch_array($rs1, MYSQLI_ASSOC))) {
            $puntoservicio[]= $reg1;
        }
        return $puntoservicio;

    } else if($opcion==1){
        $sql="select sum(LunesTurnoDia)LunesTurnoDia,sum(LunesTurnoNoche)LunesTurnoNoche,
        sum(MartesTurnoDia)MartesTurnoDia, sum(MartesTurnoNoche)MartesTurnoNoche,
        sum(MiercolesTurnoDia)MiercolesTurnoDia,sum(MiercolesTurnoNoche)MiercolesTurnoNoche,
        sum(JuevesTurnoDia)JuevesTurnoDia,sum(JuevesTurnoNoche)JuevesTurnoNoche,
        sum(ViernesTurnoDia)ViernesTurnoDia,sum(ViernesTurnoNoche)ViernesTurnoNoche,
        sum(SabadoTurnoDia)SabadoTurnoDia,sum(SabadoTurnoNoche)SabadoTurnoNoche,
        sum(DomingoTurnoDia)DomingoTurnoDia,sum(DomingoTurnoNoche)DomingoTurnoNoche
        from servicios_plantillas sp
        left join diasdetrabajoplantilla dtp
        on (sp.servicioPlantillaId=dtp.servicioPlantillaId)
        where sp.servicioPlantillaId='" . $this->safeValue($idPlantillaServicio) . "'
        and estatusPlantilla=1";

        $rs1 = mysqli_query($this->conn, $sql);
        $encontroplantilla=array();
        while (($reg1 = mysqli_fetch_array($rs1, MYSQLI_ASSOC))) {
           $encontroplantilla[]= $reg1;
        }
        return $encontroplantilla;
    }else if($opcion==2){//agregar el select coun del inicio
        $sql1=" select sum(
                (select count(*) as turnosdiaonoche 
                    from asistencia a
                    left join turnoasistencia ta
                    on (a.empleadoEntidad=ta.entidadEmpTurno and a.empleadoConsecutivo=ta.consecutivoEmpTurno   and a. empleadoTipo=ta.categoriaEmpTurno  and a.fechaAsistencia=ta.fechaTurno)
                    where a.idPlantillaAsis='" . $this->safeValue($idPlantillaServicio) . "'
                    and ta.fechaTurno='" . $this->safeValue($asistenciaFecha) . "'";
        if($valordia==1 ){
            $sql1.=" and (ta.tipoTurno=1 or ta.tipoTurno=3 or ta.tipoTurno=5 or ta.tipoTurno=7  or ta.tipoTurno=18 ))
                +
                (select count(*) turnosdiaonoche
                    from incidenciasespeciales 
                    where incidenciaIdPlantilla='" . $this->safeValue($idPlantillaServicio) . "'
                    and incidenciaFecha='" . $this->safeValue($asistenciaFecha) . "'
                    and (incidenciaId=1 or incidenciaId=2))) as turnosdiaonoche";//para TURNOS DE DIA
        }else if($valordia==2){
            $sql1.=" and (ta.tipoTurno=2 or ta.tipoTurno=4 or ta.tipoTurno=6 or ta.tipoTurno=7  or ta.tipoTurno=18  ))
                    + 
                    (select count(*) turnosdiaonoche
                        from incidenciasespeciales 
                        where incidenciaIdPlantilla='" . $this->safeValue($idPlantillaServicio) . "'
                        and incidenciaFecha='" . $this->safeValue($asistenciaFecha) . "'
                        and (incidenciaId=6 or incidenciaId=7))) as turnosdiaonoche";//para TURNOS DE DIA
        }else if($valordia==0){
        //para TURNOS DE DIA *LA UNION EN MAYUSCULA ES PARALOSCONTEO DIAS NOCHE*
            $sql1.=" and (ta.tipoTurno=1 or ta.tipoTurno=3 or ta.tipoTurno=5 or ta.tipoTurno=7  or ta.tipoTurno=18  ))
                    + 
                    (select count(*) turnosdiaonoche
                        from incidenciasespeciales 
                        where incidenciaIdPlantilla='" . $this->safeValue($idPlantillaServicio) . "'
                        and incidenciaFecha='" . $this->safeValue($asistenciaFecha) . "'
                        and (incidenciaId=1 or incidenciaId=2))) as turnosdiaonoche
                    union all
                select sum( 
                    (select count(*) turnosdiaonoche from asistencia a
                        left join turnoasistencia ta
                        on (a.empleadoEntidad=ta.entidadEmpTurno and a.empleadoConsecutivo=ta.consecutivoEmpTurno   and a. empleadoTipo=ta.categoriaEmpTurno  and a.fechaAsistencia=ta.fechaTurno)
                        where a.idPlantillaAsis='" . $this->safeValue($idPlantillaServicio) . "'
                        and ta.fechaTurno='" . $this->safeValue($asistenciaFecha) . "'
                        and (tipoTurno=2 or tipoTurno=4 or tipoTurno=6 or tipoTurno=7 or tipoTurno=18 ))
                    +  
                    (select count(*) turnosdiaonoche
                        from incidenciasespeciales 
                        where incidenciaIdPlantilla='" . $this->safeValue($idPlantillaServicio) . "'
                        and incidenciaFecha='" . $this->safeValue($asistenciaFecha) . "'
                        and (incidenciaId=6 or incidenciaId=7))) as turnosdiaonoche";
        }
        $this -> logger -> LogInfo ("Ejecutando turnosdiaonoche: "  . var_export ( $sql1, true));
        $res = mysqli_query($this->conn, $sql1);
        $turnos_diaonoche=array();
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $turnos_diaonoche[]= $reg;
        }return $turnos_diaonoche;
    }   
}



               public function ObtenerCantidadEmleadosPlantilla($idPuntosDeServicio,$idPlantilla)
               {
       // $this -> logger -> LogInfo ("traeCatalogoLineaNegocio en persistencia");
                $ListaEmpleadosPorPlantilla = array();
                try {
                    $sql = "select count(sp.servicioPlantillaId) as NumeroDeElementos from  servicios_plantillas sp
                    left join plantilla pl
                    on sp.servicioPlantillaId=pl.requisicionId
                    left join empleados em
                    on pl.empleadoEntidadPlantilla=em.entidadFederativaId
                    and pl.empleadoConsecutivoPlantilla=em.empleadoConsecutivoId
                    and empleadoCategoriaPlantilla=em.empleadoCategoriaId
                    where sp.puntoServicioPlantillaId='$idPuntosDeServicio'
                    and sp.servicioPlantillaId='$idPlantilla'
                    and (em.empleadoEstatusId=1 or em.empleadoEstatusId=2) 
                    and (em.estatusEmpleadoOperaciones=1 or em.estatusEmpleadoOperaciones=4 )";

            //$this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);

                    $res = mysqli_query($this->conn, $sql);

                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $ListaEmpleadosPorPlantilla[] = $reg;

                    }
           // $this -> logger -> LogInfo ("valor del array de la ListaEmpleadosPorPlantilla ".var_export ($ListaEmpleadosPorPlantilla, true));
                    return $ListaEmpleadosPorPlantilla;
                } catch (Exception $e) {
                    $this->logger->LogInfo("ERROR:" . $e->getMessage());
                }
            }

            public function ObtenerEstatusEmpleadoXFecha($empleadoEntidad,$empleadoConsecutivo,$empleadoCategoria)
            {
       // $this -> logger -> LogInfo ("traeCatalogoLineaNegocio en persistencia");
                $listaEmpPorFecha = array();
                try {
                    $sql = "select emp.empleadoEstatusId as EstatusEmpleado, emp.fechaBajaEmpleado as FechaBajaEmpleado
                    from empleados emp
                    where entidadFederativaId='$empleadoEntidad'
                    and empleadoConsecutivoId='$empleadoConsecutivo'
                    and empleadoCategoriaId='$empleadoCategoria'";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);
                    $res = mysqli_query($this->conn, $sql);
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $listaEmpPorFecha[] = $reg;
                    }
           // $this -> logger -> LogInfo ("valor del array de la ListaEmpleadosPorPlantilla ".var_export ($ListaEmpleadosPorPlantilla, true));
                    return $listaEmpPorFecha;
                } catch (Exception $e) {
                    $this->logger->LogInfo("ERROR:" . $e->getMessage());
                }
            }

            public function getIncidenciaByEmpleadoPeticionFecha($fecha, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $incidenciaId)
            {

        //$this-> logger -> LogInfo("getIncidenciaByEmpleadoFecha");

                $lista = array();

                $sql = "select p.PincidenciaEmpleadoEntidad
                , p.PincidenciaEmpleadoEntidad
                , p.PincidenciaEmpleadoConsecutivo
                , p.PincidenciaEmpleadoTipo
                , p.PincidenciaId
                , ci.nomenclaturaIncidenciaEspecial
                , ci.descripcionIncidenciaEspecial
                , p.PincidenciaFecha
                , cps.puntoServicio
                from  PeticionesIncidenciasEspeciales p
                left join   catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=p.PincidenciaId)
                left join  catalogopuntosservicios cps on (cps.idPuntoServicio=p.PincidenciaPuntoServicio)
                where
                p.PincidenciaFecha=CAST('" . $this->safeValue($fecha) . "' AS DATE)
                and p.PincidenciaId='" . $this->safeValue($incidenciaId) . "'
                and p.Estatus='0'
                and p.EstatusBorradoSup is null
                and p.PincidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
                and p.PincidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
                and p.PincidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "'";

        //$this -> logger -> LogInfo ("Ejecutando getIncidenciaByEmpleadoFechaPeticion: " . $sql);

                $res = mysqli_query($this->conn, $sql);

                if (!is_bool($res)) {
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $lista[] = $reg;
                    }
                }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

                return $lista;

            }

   public function registrarPeticionIncidenciaEspecial(
                $empleado,
                $supervisor,
                $incidenciaId,
                $asistenciaFecha,
                $usuarioCapturaAsistencia,
                $comentariIncidencia, $tipoPeriodo,
                $incidenciaPuesto, $plantilladeservicio,$idPlantillaServicio,$selectMotivoIncidenciaEspecial) {

      //  $this -> logger -> LogInfo ("Ejecutando. registrarIncidenciaEspecial en persistencia");

        // Buscamos si existe un registro de incidencia previo.
                $incidencia = $this->getIncidenciaByEmpleadoPeticionFecha($asistenciaFecha,
                    $empleado["entidadId"],
                    $empleado["consecutivoId"],
                    $empleado["tipoId"], $incidenciaId);
                $EstatusP = "0";

       // $this -> logger -> LogInfo ("Se ejecuto consulta registrarIncidenciaEspecial como EstatusP" . var_export ($EstatusP, true));

                if (count($incidencia) == 0) {

                    $sql = "INSERT INTO PeticionesIncidenciasEspeciales (PincidenciaEmpleadoEntidad
                    , PincidenciaEmpleadoConsecutivo
                    , PincidenciaEmpleadoTipo
                    , PincidenciaPuntoServicio
                    , idPlantillaInc
                    , idMotivoIncidencia
                    , PincidenciaSupervisorEntidad
                    , PincidenciaSupervisorConsecutivo
                    , PincidenciaSupervisorTipo
                    , PincidenciaId
                    , PincidenciaFecha
                    , PincidenciaFechaRegistro
                    , PincidenciaUsuarioCaptura
                    ,PincidenciaComentario
                    ,PincidenciaPuesto,ProlOperativo,Estatus) VALUES (";
                    $sql .= "'" . $this->safeValue($empleado["entidadId"]) . "',";
                    $sql .= "'" . $this->safeValue($empleado["consecutivoId"]) . "',";
                    $sql .= "'" . $this->safeValue($empleado["tipoId"]) . "',";
                    $sql .= "'" . $this->safeValue($empleado["puntoServicioId"]) . "',";
                    $sql .= "'" . $this->safeValue($idPlantillaServicio) . "',";
                    $sql .= "'" . $this->safeValue($selectMotivoIncidenciaEspecial) . "',";
                    $sql .= "'" . $this->safeValue($supervisor["entidadId"]) . "',";
                    $sql .= "'" . $this->safeValue($supervisor["consecutivoId"]) . "',";
                    $sql .= "'" . $this->safeValue($supervisor["tipoId"]) . "',";
                    $sql .= "'" . $this->safeValue($incidenciaId) . "',";
                    $sql .= "'" . $this->safeValue($asistenciaFecha) . "',";
                    $sql .= "NOW(),";
                    $sql .= "'" . $this->safeValue($usuarioCapturaAsistencia) . "',";
                    $sql .= "'" . $this->safeValue($comentariIncidencia) . "',";
                    $sql .= "" . $this->safeValue($incidenciaPuesto) . ",";
                    $sql .= "'" . $this->safeValue($plantilladeservicio) . "',";
                    $sql .= "'$EstatusP')";

            // $this -> logger -> LogInfo ("Se ejecuto consulta  registrarIncidenciaEspecial como" . $sql);
                    $res = mysqli_query($this->conn, $sql);

                    if (mysqli_errno($this->conn) == 0) {
                        return true;
                    }

                    return false;

                } else {
                    return $this->updateIncidenciaPeticion($empleado,
                        $supervisor,
                        $incidenciaId,
                        $asistenciaFecha,
                        $usuarioCapturaAsistencia,
                        $comentariIncidencia,
                        $tipoPeriodo, $incidenciaPuesto,$selectMotivoIncidenciaEspecial);
                }

            }


            public function updateIncidenciaPeticion($empleado, $supervisor, $incidenciaId, $asistenciaFecha, $usuarioCapturaAsistencia, $comentarioIncidencia, $tipoPeriodo, $incidenciaPuesto ,$selectMotivoIncidenciaEspecial)
            {

     //   $this-> logger -> LogInfo("updateIncidencia");

                $sql = "update PeticionesIncidenciasEspeciales  " .
                "set PincidenciaPuntoServicio='" . $this->safeValue($empleado["puntoServicioId"]) . "'," .
                "PincidenciaSupervisorEntidad='" . $this->safeValue($supervisor["entidadId"]) . "', " .
                "PincidenciaSupervisorConsecutivo='" . $this->safeValue($supervisor["consecutivoId"]) . "', " .
                "PincidenciaSupervisorTipo='" . $this->safeValue($supervisor["tipoId"]) . "', " .
                "PincidenciaId=" . $this->safeValue($incidenciaId) . ", " .
                "PincidenciaFecha='" . $this->safeValue($asistenciaFecha) . "', " .
                "PincidenciaLastEdited=NOW(), " .
                "PincidenciaUsuarioEdited='" . $this->safeValue($usuarioCapturaAsistencia) . "',  " .
                "idMotivoIncidencia='" . $this->safeValue($selectMotivoIncidenciaEspecial) . "', " .
                "PincidenciaComentario='" . $this->safeValue($comentarioIncidencia) . "', " .
                "PincidenciaPuesto=" . $this->safeValue($incidenciaPuesto) . " " .
                "where PincidenciaEmpleadoEntidad='" . $this->safeValue($empleado["entidadId"]) . "'" .
                "and  PincidenciaEmpleadoConsecutivo='" . $this->safeValue($empleado["consecutivoId"]) . "'" .
                "and  PincidenciaEmpleadoTipo='" . $this->safeValue($empleado["tipoId"]) . "'" .
                "and  PincidenciaId='" . $this->safeValue($incidenciaId) . "'" .
                "and  PincidenciaFecha='" . $this->safeValue($asistenciaFecha) . "'";

        // $this -> logger -> LogInfo ("Ejecutando updatePeticionIncidencia: " . $sql);

                $res = mysqli_query($this->conn, $sql);

                if (mysqli_errno($this->conn) == 0) {
                    return true;
                }

                return false;
            }


            public function getPeticionesIncidenciasEspeciales()
            {
        //$this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");

                $lista = array();

                try {

                    $sql = "select idPeticionIncidencia,
                    concat_ws('-',pi.PincidenciaEmpleadoEntidad,pi.PincidenciaEmpleadoConsecutivo,pi.PincidenciaEmpleadoTipo) as numeroempleado,
                    concat_ws(' ',e.nombreEmpleado,e.apellidoPaterno,e.apellidoMaterno)as nombreempleado,
                    cp.descripcionPuesto,
                    pi.PincidenciaFecha as Fechadeincidencia,pi.Proloperativo as roloperativoincidencia,
                    cps.puntoServicio as nombrepuntoservicio,
                    cie.descripcionIncidenciaEspecial as descripcionincidenciaespecial,
                    concat_ws(' ',em.nombreEmpleado,em.apellidoPaterno,em.apellidoMaterno) as nombresupervisor
                    from peticionesincidenciasespeciales pi
                    left join empleados e
                    on(pi.PincidenciaEmpleadoEntidad=e.entidadFederativaId and pi.PincidenciaEmpleadoConsecutivo=e.empleadoConsecutivoId and pi.PincidenciaEmpleadoTipo=e.empleadoCategoriaId)
                    left join empleados em
                    on (pi.PincidenciaSupervisorEntidad=em.entidadFederativaId and pi.PincidenciaSupervisorConsecutivo=em.empleadoConsecutivoId and pi.PincidenciaSupervisorTipo=em.empleadoCategoriaId)
                    left join catalogopuestos cp
                    on (pi.PincidenciaPuesto=cp.idPuesto)
                    left join catalogopuntosservicios cps
                    on (pi.PincidenciaPuntoServicio=cps.idPuntoServicio)
                    left join catalogoincidenciasespeciales cie
                    on (pi.PincidenciaId=cie.incidenciaEspecialId)
                    where pi.Estatus = '0'
                    and pi.EstatusBorradoSup is null";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getSueldosEmpleados " . $sql);

                    $res = mysqli_query($this->conn, $sql);

                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                        $lista[] = $reg;
                    }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

                    return $lista;

                } catch (Exception $e) {

                    $this->logger->LogInfo("getPeticionIncidenciasEspecialesaConfirmar ERROR:" . $e->getMessage());
                }
            }

            public function confirmarorechazarpeticionincidencia($idpeticion, $accion)
            {
       // $this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");
                $lista = array();
                try {
             //rechazo de salario, se pondra el campo status en 2 Y si acepta el cambio, el estatus cambiara a 1
                    //$sql = "delete from peticionesincidenciasespeciales
                    //where idPeticionIncidencia='$idpeticion'";

                    $sql = "update peticionesincidenciasespeciales
                            set Estatus='1',FechaConfirmacionRechazoP=now()
                            where idPeticionIncidencia='$idpeticion'";//  Actualiza a 1 por que la peticion fue aceptada

                    $sql2 = "update peticionesincidenciasespeciales
                            set Estatus='2',FechaConfirmacionRechazoP=now()
                            where idPeticionIncidencia='$idpeticion'";// Actualiza a 2 por que la peticion fue rechazada
                   
                    if ($accion == 0) {
                        $res2 = mysqli_query($this->conn, $sql2);
                        
                    }if ($accion == 1) {
                        $sql1 = "insert into incidenciasespeciales(incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo,incidenciaPuntoServicio,incidenciaIdPlantilla,incidenciaSupervisorEntidad,incidenciaSupervisorConsecutivo,
                        incidenciaSupervisorTipo,incidenciaId,incidenciaFecha,incidenciaFechaRegistro,incidenciaUsuarioCaptura,incidenciaLastEdited,incidenciaUsuarioEdited,incidenciaComentario,incidenciaPuesto,
                        roloperativo,idMotivoIncidencia) select PincidenciaEmpleadoEntidad,PincidenciaEmpleadoConsecutivo,PincidenciaEmpleadoTipo,PincidenciaPuntoServicio,idPlantillaInc,PincidenciaSupervisorEntidad,PincidenciaSupervisorConsecutivo,
                        PincidenciaSupervisorTipo,PincidenciaId,PincidenciaFecha,PincidenciaFechaRegistro,PincidenciaUsuarioCaptura,PincidenciaLastEdited,PincidenciaUsuarioEdited,
                        PincidenciaComentario,PincidenciaPuesto,Proloperativo,idMotivoIncidencia
                        from peticionesincidenciasespeciales
                        where idPeticionIncidencia='$idpeticion'";
                        $res1 = mysqli_query($this->conn, $sql1);
                        $res = mysqli_query($this->conn, $sql);                        
                    }

                } catch (Exception $e) {

                    $this->logger->LogInfo("getSueldosaConfirmar ERROR:" . $e->getMessage());
                }
            }

            public function insertandupdatefolioincapacidad($folioIncapacidad,$asistenciaFecha,$fechafinalincidencia,$empleado,$tipoIncapacidad,$diasIncapacidad,$opcion)
            {
                if($opcion==0){
                    $sql="select * from foliosincapacidades
                    where folioIncapacidad='$folioIncapacidad'";

                    $res = mysqli_query($this->conn, $sql);
                    $lista=Array();
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                        $lista[] = $reg;
                    }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

                    return $lista;


                }else if ($opcion==1) {

                   $sql = "update asistencia
                   set folioIncapacidad='$folioIncapacidad'
                   where (fechaAsistencia between '$asistenciaFecha' and  '$fechafinalincidencia')
                   and incidenciaAsistenciaId=8
                   and empleadoEntidad='".$empleado["entidadId"]."'
                   and empleadoConsecutivo='".$empleado["consecutivoId"]."'
                   and empleadoTipo='".$empleado["tipoId"]."'
                   and puntoServicioAsistenciaId='".$empleado["puntoServicioId"]."' ";

                   $res=mysqli_query($this->conn, $sql);


                   if ($res !== true) {
                    $this->logger->LogInfo("Ocurrio un error al actualizar folio en asistencia");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }else{

                 $sql1 = "INSERT INTO foliosincapacidades(folioIncapacidad,tipoIncapacidad,entidadempleadoInc, consecutivoempleadoInc, categoriaEmpleadoInc,diasIncapacidad,fechaInicioIncapacidad,fechaFInIncapacidad,st7,st2,Dictamen)values('$folioIncapacidad','$tipoIncapacidad','".$empleado["entidadId"]."','".$empleado["consecutivoId"]."','".$empleado["tipoId"]."','$diasIncapacidad','$asistenciaFecha','$fechafinalincidencia','".$empleado["st7"]."','".$empleado["st2"]."','".$empleado["dictamen"]."');";

                 $res1=mysqli_query($this->conn, $sql1);
                 if ($res1 !== true) {
                    $this->logger->LogInfo("Ocurrio un error al insertar folio en foliosincapacidades");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }

            }
        }else if($opcion==2){

            $sql="select * from  foliosincapacidades
            where idincapacidad=(select max(idincapacidad) from foliosincapacidades where entidadempleadoInc='".$empleado["entidadId"]."' and consecutivoempleadoInc='".$empleado["consecutivoId"]."' and categoriaEmpleadoInc='".$empleado["tipoId"]."' and tipoIncapacidad=2)";


            $res = mysqli_query($this->conn, $sql);
            $lista=Array();
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            
            return $lista;



        }else if($opcion==3){

            $sql="select * from  foliosincapacidades
            where idincapacidad=(select max(idincapacidad) from foliosincapacidades where entidadempleadoInc='".$empleado["entidadId"]."' and consecutivoempleadoInc='".$empleado["consecutivoId"]."' and categoriaEmpleadoInc='".$empleado["tipoId"]."' )";


            $res = mysqli_query($this->conn, $sql);
            $lista=Array();
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            
            return $lista;



        }
    }

            

    public function deleteIncidenciaIncapacidadByFolio($incidencia,$incidenciaId, $folioincapacidad)
    {
        $respuesta=true;
        $sql="select * from foliosincapacidades
        where folioIncapacidad='$folioincapacidad'";
        $res = mysqli_query($this->conn, $sql);
        $fechas=Array();
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
     
            $fechas[] = $reg;
        }
        $fechaInicioIncapacidad =$fechas[0]["fechaInicioIncapacidad"];
        $fechaFInIncapacidad =$fechas[0]["fechaFInIncapacidad"];



        $sql1="delete from foliosincapacidades
        where folioIncapacidad='$folioincapacidad'";
        $res1 = mysqli_query($this->conn, $sql1);
        //$this -> logger -> LogInfo ("valor del array de la res1 ".var_export ($res1, true));

        if($res1==true){
            $sql2 = "DELETE  FROM asistencia WHERE 
            empleadoEntidad='" . $this->safeValue($incidencia["empleadoEntidad"]) . "'
            and empleadoConsecutivo='" . $this->safeValue($incidencia["empleadoConsecutivo"]) . "'
            and empleadoTipo='" . $this->safeValue($incidencia["empleadoTipo"]) . "'
            and fechaAsistencia between '$fechaInicioIncapacidad' and '$fechaFInIncapacidad'  ";
            //$this -> logger -> LogInfo ("Ejecutando deleteAsistenciaFromAsistencia: " . $sql2);
            mysqli_query($this->conn, $sql2);

            if (mysqli_errno($this->conn) == 0) {
              $respuesta=true;
          }else{
            $respuesta=false;

        }


        $a_eliminar=  scandir("uploads/DocumentosIncapacidad/". $incidencia["empleadoEntidad"]."-". $incidencia["empleadoConsecutivo"]."-". $incidencia["empleadoTipo"]."/");
        $archivoEnfermedadGeneral=$folioincapacidad."_INC-1_".$fechaInicioIncapacidad."_".$fechaFInIncapacidad;
        $archivoRiesgotrabajo=$folioincapacidad."_INC-2_".$fechaInicioIncapacidad."_".$fechaFInIncapacidad;
        $archivost7=$folioincapacidad."_ST7_2_".$fechaInicioIncapacidad."_".$fechaFInIncapacidad;
        $archivost2=$folioincapacidad."_ST2-2_".$fechaInicioIncapacidad."_".$fechaFInIncapacidad;
        $archivomaternidad=$folioincapacidad."_INC-3_".$fechaInicioIncapacidad."_".$fechaFInIncapacidad;
        $archivoDictamen=$folioincapacidad."_DICTAMEN-2_".$fechaInicioIncapacidad."_".$fechaFInIncapacidad;
//$log->LogInfo("Valor de la variable \$archivo1: " . var_export ($archivo1, true));
        foreach($a_eliminar as $elemento) {
$path = pathinfo($elemento); // con esto obtengo el nombre del archivo sin extension.
if($path['filename'] == $archivoEnfermedadGeneral || $path['filename'] == $archivoRiesgotrabajo ||$path['filename'] == $archivost7 ||$path['filename'] == $archivost2 ||$path['filename'] == $archivomaternidad ||$path['filename'] == $archivoDictamen) {
 unlink("uploads/DocumentosIncapacidad/". $incidencia["empleadoEntidad"]."-". $incidencia["empleadoConsecutivo"]."-". $incidencia["empleadoTipo"]."/".$elemento."");

}
//$log->LogInfo("Valor de la variable \$respuesta: " . var_export ($path, true));

}
}else{
    $respuesta=false;

}
return $respuesta;
}

public function obtenerCatalogoPalabraAntisonante($palabraAntisonante)
{
        //$this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");
    $CatalogoPalabraAntis = array();
    try {

        $sql = "SELECT PalabraSustitucion from catalogoPlabrasAntisonantes
        where PalabraOriginal='$palabraAntisonante'";

            //$this -> logger -> LogInfo ("Ejecutando SQL: getSueldosEmpleados " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $CatalogoPalabraAntis[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($CatalogoPalabraAntis, true));

        return $CatalogoPalabraAntis;

    } catch (Exception $e) {

        $this->logger->LogInfo("getPeticionIncidenciasEspecialesaConfirmar ERROR:" . $e->getMessage());
    }
}
public function getListaDocumentosIncapacidadByFechaquincena($fecha1,$fecha2,$opcion,$usuario)
{
       // $this -> logger -> LogInfo ("incapacidades en persistencia");
    $listafolioincapacidades = array();
    try {

        $sql = "select fi.folioIncapacidad as folioIncapacidad,fi.tipoIncapacidad as tipoIncapacidad,fi.entidadempleadoInc as entidadempleadoInc,fi.consecutivoempleadoInc as consecutivoempleadoInc,
        fi.categoriaEmpleadoInc as categoriaEmpleadoInc,fi.diasIncapacidad as diasIncapacidad,fi.fechaInicioIncapacidad as fechaInicioIncapacidad,
        fi.fechaFInIncapacidad as fechaFInIncapacidad,e.apellidoPaterno as apellidoPaterno,e.apellidoMaterno as apellidoMaterno,e.nombreEmpleado as nombreEmpleado,
        es.apellidoPaterno as apellidoPaternosupervisor,es.apellidoMaterno as apellidoMaternosupervisor,es.nombreEmpleado as nombreEmpleadosupervisor
        ,di.registroPatronal as registroPatronal
        from foliosincapacidades fi
        left join empleados e
        on (fi.entidadempleadoInc=e.entidadFederativaId and fi.consecutivoempleadoInc=e.empleadoConsecutivoId and fi.categoriaEmpleadoInc=e.empleadoCategoriaId)
        left join empleados es
        on (es.entidadFederativaId=e.idEntidadResponsableAsistencia and es.empleadoConsecutivoId=e.consecutivoResponsableAsistencia and es.empleadoCategoriaId=e.tipoResponsableAsistencia)
        left join datosimss di
        on(e.entidadFederativaId=di.empladoEntidadImss and e.empleadoConsecutivoId=di.empleadoConsecutivoImss and e.empleadoCategoriaId=di.empleadoCategoriaImss)
        where ((fi.fechaInicioIncapacidad >='$fecha1')";

        if($opcion==1 && ($usuario["rol"] =="Supervisor" || $usuario["rol"] =="Consulta Supervisor")){
            $sql.=" ) and (concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia)='".$usuario["empleadoId"]."'";
        }
        else if($opcion==2 && ($usuario["rol"] =="Supervisor" || $usuario["rol"] =="Consulta Supervisor")){
            $sql.=") and (fi.fechaFInIncapacidad<='$fecha2') and (concat_ws('-',e.idEntidadResponsableAsistencia,e.consecutivoResponsableAsistencia,e.tipoResponsableAsistencia)='".$usuario["empleadoId"]."'";
        }
        else if(($opcion==1 || $opcion==2) && ($usuario["rol"]=="Lider Unidad" || $usuario["rol"]=="Asistencia Administrativo" || $usuario["rol"]=="Asistencia Administrativa SES" || $usuario["rol"]=="Asistencia Administrativa ST")){
            $sql.=") and";
            for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
                if(!is_array($usuario['lineaNegocioUsuario'])){
                    $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
                }else{
                    $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
                } 
                for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                    if(!is_array($usuario['entidadFederativaUsuario'])){
                        $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                    }else{
                        $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                    } 
                    if($opcion==1){
                        if(($i==0) && ($j==0)){
                            $sql.=" ((e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";
                        }else{
                            $sql.=" or (fi.fechaInicioIncapacidad >='$fecha1' and e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";
                        }
                    }else if($opcion==2){
                        if(($i==0) && ($j==0)){
                            $sql.=" ((fi.fechaFInIncapacidad<='$fecha2'  and e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";
                        }else{
                            $sql.=" or (fi.fechaInicioIncapacidad >='$fecha1' and fi.fechaFInIncapacidad<='$fecha2'  and e.empleadoLineaNegocioId='$lineanegocioconsulta' and e.idEntidadTrabajo='$entidadparaconsulta')";
                        }
                    }

                }
            }
        }else{
            $sql.=") and (fi.fechaFInIncapacidad<='$fecha2'";
        }
        if($usuario["rol"]=="Asistencia Administrativo" || $usuario["rol"]=="Asistencia Administrativa SES" || $usuario["rol"]=="Asistencia Administrativa ST"){
        $sql.=" ) and (e.empleadoCategoriaId='02' or e.empleadoCategoriaId='03') order by tipoIncapacidad";
        }else{
            $sql.=" ) order by tipoIncapacidad";
        }
            //$this -> logger -> LogInfo ("valor del array de la sql ".var_export ($sql, true));

       //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listafolioincapacidades[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
        return $listafolioincapacidades;
    }catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}
public function traeCatalogoEntidadesclaveEntidadCurp($idEntidad)
{
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
    $listaEnditadesFederativas = array();
    try {

        $sql = "Select claveEntidadF from entidadesfederativas where idEntidadFederativa='$idEntidad'";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaEnditadesFederativas[] = $reg;

        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
        return $listaEnditadesFederativas;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}


public function ObtenerDatosPersonalesYCurp()
{
        //$this-> logger -> LogInfo("obtenerMunicipiosPorEntidadNacimiento");
    $listaDatosYCurp = array();

    $sql = "SELECT emp.entidadFederativaId,emp.empleadoConsecutivoId,emp.empleadoCategoriaId,emp.apellidoPaterno,emp.apellidoMaterno,emp.nombreEmpleado,cgn.nomenclaturaGenero,dtp.fechaNacimiento,dtp.paisNacimientoId,cef.claveEntidadF,dtp.curpEmpleado,dtp.rfcEmpleado
    from empleados emp
    left join catalogogenero cgn on (emp.empleadoIdGenero=cgn.idGenero)
    left join datospersonales dtp on (dtp.empleadoEntidadPersonal=emp.entidadFederativaId 
    and dtp.empleadoConsecutivoPersonal=emp.empleadoConsecutivoId and dtp.empleadoCategoriaPersonal=emp.empleadoCategoriaId)
    left join entidadesfederativas cef on (cef.idEntidadFederativa=dtp.entidadNacimientoId)";//where emp.empleadoEstatusId !='0'
        //$this -> logger -> LogInfo ("Ejecutando listaDatosYCurp: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaDatosYCurp[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la listaDatosYCurp ".var_export ($listaDatosYCurp, true));

    return $listaDatosYCurp;
}


public function obtenerLineasNegocioByIdUser($usuarioId)
{
    $LineasNegocioByUser = array();

    $sql = "SELECT *
    FROM lineasNegocioUsuario lnu
    LEFT JOIN catalogolineanegocio cln
    ON (lnu.idlineaNegocio=cln.idLineaNegocio)
    WHERE idUsuariolineaneg='" . mysqli_real_escape_string($this->conn, $usuarioId) . "'";

        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoRfc " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $LineasNegocioByUser[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la consulta obtenerNumeroEmpleadoRfc".var_export ($numeroEmpleado, true));

    return $LineasNegocioByUser;
}


public function MunicipiosByEntidad($idEntidad)
{
    $municipios = array();

    $sql = "SELECT * FROM catalogomunicipios
    where idEstado='" . mysqli_real_escape_string($this->conn, $idEntidad) . "'
    order by nombreMunicipio";
        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerNumeroEmpleadoRfc " . $sql);
    $res = mysqli_query($this->conn, $sql);

    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $municipios[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la consulta obtenerNumeroEmpleadoRfc".var_export ($numeroEmpleado, true));

    return $municipios;
}

public function ObtenerestatusPeticionesincidenciaespecial($incidencia)
            {
       // $this -> logger -> LogInfo ("ObtenerestatusPeticionesincidenciaespecial en persistencia");
                $EstatusPEI = array();
                try {
                    $sql="SELECT  max(idPeticionIncidencia) as idPeticionIncidencia, PincidenciaEmpleadoEntidad, PincidenciaEmpleadoConsecutivo, PincidenciaEmpleadoTipo, PincidenciaPuntoServicio, PincidenciaSupervisorEntidad, PincidenciaSupervisorConsecutivo, PincidenciaSupervisorTipo, PincidenciaId, PincidenciaFecha, PincidenciaFechaRegistro, PincidenciaUsuarioCaptura, PincidenciaComentario, PincidenciaPuesto, Proloperativo, PincidenciaLastEdited, PincidenciaUsuarioEdited, Estatus, FechaConfirmacionRechazoP, EstatusBorradoSup, FechaBorradoSup, UsuarioEliminate 
                            FROM peticionesincidenciasespeciales 
                            WHERE PincidenciaEmpleadoEntidad='" . $this->safeValue($incidencia["empleadoEntidad"]) . "' 
                            AND PincidenciaEmpleadoConsecutivo='" . $this->safeValue($incidencia["empleadoConsecutivo"]) . "'
                            AND PincidenciaEmpleadoTipo='" . $this->safeValue($incidencia["empleadoTipo"]) . "' 
                            AND PincidenciaFecha=CAST('" . $this->safeValue($incidencia["fechaAsistencia"]) . "' AS DATE)
                            AND Estatus='1'
                            AND EstatusBorradoSup='1'";
         //   $this -> logger -> LogInfo ("ejecutando traeCatalogoLineaNegocio en persistencia". $sql);
                    $res = mysqli_query($this->conn, $sql);
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                        $EstatusPEI[] = $reg;
                    }
         //   $this -> logger -> LogInfo ("valor del array de la ListaEmpleadosPorPlantilla ".var_export ($EstatusPEI, true));
                    return $EstatusPEI;
                } catch (Exception $e) {
                    $this->logger->LogInfo("ERROR:" . $e->getMessage());
                }
            }

public function obtenertblhistoricoIncidencias($fechainicio,$fechafin,$accion)
{
        //$this -> logger -> LogInfo ("getSueldosEmpleados en persistencia");
    $lista = array();
    try {
        $sql = "SELECT concat_ws('-',pie.PincidenciaEmpleadoEntidad,pie.PincidenciaEmpleadoConsecutivo,pie.PincidenciaEmpleadoTipo) NumeroEmpleadoincidencia,
       concat_ws(' ',e.nombreEmpleado,e.apellidoPaterno,e.apellidoMaterno)NombreEmpleadoIncidencia, cps.puntoServicio as PuntoServicioIncidencia, 
       concat_ws('-',pie.PincidenciaSupervisorEntidad,pie.PincidenciaSupervisorConsecutivo,pie.PincidenciaSupervisorTipo)NumeroSupervisorIncidencia,
       concat_ws(' ',es.nombreEmpleado,es.apellidoPaterno,es.apellidoMaterno)NombreSupervisorIncidencia, cie.descripcionIncidenciaEspecial,
       pie.PincidenciaFecha as DiaDeLaIncidencia,
       pie.PincidenciaFechaRegistro AS FechaRegistroIncidencia,
       pie.PincidenciaUsuarioCaptura AS UsuarioCaptura,
       pie.PincidenciaComentario AS ComentarioIncidencia,
       cp.descripcionPuesto, pie.Proloperativo AS RolOperativo,
       pie.PincidenciaLastEdited AS FechaEdicionIncidencia,
       pie.PincidenciaUsuarioEdited AS UsuarioEdicionIncidencia, 
       pie.Estatus AS AccionPeticionDG,
       pie.FechaConfirmacionRechazoP AS FechaAccionDG,
       pie.EstatusBorradoSup AS AccionUsuario, 
       pie.FechaBorradoSup AS FechaAccionUsuario,
       pie.UsuarioEliminate AS UsuarioAccion
    
    from peticionesincidenciasespeciales pie
    left join empleados e 
        ON  pie.PincidenciaEmpleadoEntidad=e.entidadFederativaId
        and pie.PincidenciaEmpleadoConsecutivo=e.empleadoConsecutivoId
        and pie.PincidenciaEmpleadoTipo=e.empleadoCategoriaId
    left join catalogopuntosservicios cps
        ON  pie.PincidenciaPuntoServicio=cps.idPuntoServicio
    left join empleados es
        ON pie.PincidenciaSupervisorEntidad =es.entidadFederativaId
        and pie.PincidenciaSupervisorConsecutivo=es.empleadoConsecutivoId
        and pie.PincidenciaSupervisorTipo=es.empleadoCategoriaId
    left join catalogoincidenciasespeciales cie
        ON pie.PincidenciaId=cie.incidenciaEspecialId
    left join catalogopuestos cp
        ON pie.PincidenciaPuesto=cp.idPuesto";

        if($accion=="1"){
            $sql.= " order by DiaDeLaIncidencia desc";
        }else{
            $sql.=" where pie.PincidenciaFecha between '$fechainicio' and '$fechafin'
            order by DiaDeLaIncidencia desc";
        }
            //$this -> logger -> LogInfo ("Ejecutando SQL: getSueldosEmpleados " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("gettblhistoricoIncidencias ERROR:" . $e->getMessage());
    }
}

public function traeCatalogoPeriodosAnuales($FechaPeriodo)
    {
        $ListaPeriodos = array();
        $sql = "SELECT * from catalogo_Periodos_Anuales
                where AnioPeriodo='$FechaPeriodo' ";      
       // $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $ListaPeriodos[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $ListaPeriodos;
    }

    public function insertarFolioVacaciones1($Diasvacaciones,$Foliovacaciones,$RolOperativoVacaciones,$empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$nomenclaturaIncidencia,$peridosVacaciones,$primerfecha,$usuarioCapturaAsistencia,$NombreTempArchivo)
    {    
    //$this -> logger -> LogInfo ("insertarFolioVacaciones1 en persistencia");  
        $Lista = array();
        $sql = "select idVacaciones from folioVacaciones
        where folioVacaciones='$Foliovacaciones'";

        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $Lista[] = $reg;
        }
        if($Lista=="" || $Lista=="NULL" || $Lista=="null" || $Lista==NULL || $Lista==null)
        {
            $sql1 = "INSERT INTO folioVacaciones(folioVacaciones, entidadempleadoVac, consecutivoempleadoVac, categoriaEmpleadoVac, RolOperativo, TipoVacaciones, PeriodoVacaciones, diasVacaciones, fechaInicioVacaciones, NombreArchivo, NumbreUsuario, fechaInsertVacaciones , StatusFolio)values('$Foliovacaciones','$empleadoEntidadId','$empleadoConsecutivoId','$empleadoTipoId','$RolOperativoVacaciones','$nomenclaturaIncidencia','$peridosVacaciones','$Diasvacaciones','$primerfecha','$NombreTempArchivo','$usuarioCapturaAsistencia',now(),'1')";
            $res1=mysqli_query($this->conn, $sql1);
            if ($res1 !== true) {
                $this->logger->LogInfo("Ocurrio un error al insertar folioVacaciones en folioVacaciones");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }
        }else
        {
        $Lista1 = $Lista[0]['idVacaciones'];
            $sql2 = "update folioVacaciones
            set folioVacaciones='$Foliovacaciones', entidadempleadoVac='$empleadoEntidadId', consecutivoempleadoVac='$empleadoConsecutivoId', categoriaEmpleadoVac='$empleadoTipoId', RolOperativo='$RolOperativoVacaciones', TipoVacaciones='$nomenclaturaIncidencia', PeriodoVacaciones='$peridosVacaciones', diasVacaciones='$Diasvacaciones', fechaInicioVacaciones='$primerfecha', NombreArchivo='$NombreTempArchivo', NumbreUsuario='$usuarioCapturaAsistencia', fechaInsertVacaciones=now(), StatusFolio='1'
            where idVacaciones='$Lista1'";
            $res2=mysqli_query($this->conn, $sql2);
            if ($res2 !== true) {
                $this->logger->LogInfo("Ocurrio un error al actualizar folioVacaciones en asistencia");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }
        }
    }

     public function UpdateAsistenciaFolioVacaciones1($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$empleadoPuntoServicioId,$Foliovacaciones1,$asistenciaFecha,$AnioAniversario)
    {        
        $sql = "update asistencia
        set folioVacaciones='$Foliovacaciones1', Aniversario='$AnioAniversario'
        where fechaAsistencia = '$asistenciaFecha' 
        and (incidenciaAsistenciaId=5 or incidenciaAsistenciaId=6 or incidenciaAsistenciaId=12 or incidenciaAsistenciaId=13)
        and empleadoEntidad='$empleadoEntidadId'
        and empleadoConsecutivo='$empleadoConsecutivoId'
        and empleadoTipo='$empleadoTipoId'
        and puntoServicioAsistenciaId='$empleadoPuntoServicioId' ";
        $res=mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizar folio en asistencia");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    
    }

public function GetListaHistoricoAL()
    {
        $GetListaHistoricos = array();
        $sql = "SELECT concat(empleados.entidadFederativaId,'-',empleados.empleadoConsecutivoId,'-',empleados.empleadoCategoriaId)AS numempleado,
                       concat(empleados.apellidoPaterno,' ',empleados.apellidoMaterno,' ',empleados.nombreEmpleado) AS nombreempleado,
                       catalogopuestos.descripcionPuesto,
                       entidadesfederativas.nombreEntidadFederativa,
                       deudasempleadosfiniquito.DeudaEmp,
                       finiquitos.MontoAcordado
                    
            FROM  finiquitos
            LEFT JOIN  empleados
            ON finiquitos.entidadEmpFiniquito=empleados.entidadFederativaId
            AND finiquitos.consecutivoEmpFiniquito=empleados.empleadoConsecutivoId
            AND finiquitos.categoriaEmpFiniquito=empleados.empleadoCategoriaId
            LEFT JOIN  catalogopuestos
            ON empleados.empleadoIdPuesto=catalogopuestos.idPuesto
            LEFT JOIN entidadesfederativas
            ON empleados.idEntidadTrabajo=entidadesfederativas.idEntidadFederativa
            LEFT JOIN deudasempleadosfiniquito
            ON finiquitos.entidadEmpFiniquito= deudasempleadosfiniquito.EntEmpD
            AND finiquitos.consecutivoEmpFiniquito=deudasempleadosfiniquito.ConEmpD
            AND finiquitos.categoriaEmpFiniquito=deudasempleadosfiniquito.CatEmpD
            where finiquitos.estatusFiniquitoPiramidar='3' or finiquitos.estatusFiniquitoPiramidar='5'";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaHistoricos[] = $reg;
        }
        return $GetListaHistoricos;
    }

    public function UPDATEFiniquitoPiramidado1($entidademp,$consecutivoemp,$categoriaemp,$netoAlPago,$netoAlPagocalculado)
    {      

       $sql2 ="INSERT into deudasempleadosfiniquito(EntEmpD,ConEmpD,CatEmpD,DeudaEmp,EstatusDeuda) 
               values('$entidademp','$consecutivoemp','$categoriaemp','$netoAlPago','0')";
            $res2 = mysqli_query($this->conn, $sql2);

            if ($res2 !== true) {
                $this->logger->LogInfo("Ocurrio un error al actualizarEstatusEmpleado.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));        
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }

      $sql = "UPDATE finiquitos
        
        SET MontoAcordado= '1', estatusFiniquitoPiramidar ='5', piramidar= '" . mysqli_real_escape_string($this->conn, $netoAlPagocalculado) . "'
                WHERE entidadEmpFiniquito = '" . mysqli_real_escape_string($this->conn, $entidademp) . "'
                AND consecutivoEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $consecutivoemp) . "'
                AND categoriaEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $categoriaemp) . "'
                AND (estatusFiniquito ='0' or estatusFiniquito ='4') ";  

       
      $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizarEstatusEmpleado.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
    
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function GetListaFiniquitosNegativos()
    {
        $GetListaFiniquitosEnNegativo = array();
        $sql = "SELECT concat_ws('-',empleados.entidadFederativaId,empleados.empleadoConsecutivoId,empleados.empleadoCategoriaId)AS numempleado,
                       concat(empleados.apellidoPaterno,' ',empleados.apellidoMaterno,' ',empleados.nombreEmpleado) AS nombreempleado,
                        datosimss.fechaImss,
                        datosimss.fechaBajaImss,
                        catalogopuestos.descripcionPuesto,
                        entidadesfederativas.nombreEntidadFederativa,
                        finiquitos.netoAlPago,
                        finiquitos.folioBajaImss,
                        finiquitos.estatusFiniquito,
                        empleados.entidadFederativaId,
                        empleados.empleadoConsecutivoId,
                        empleados.empleadoCategoriaId,
                        finiquitos.prestamoFiniquito,
                        finiquitos.uniformesFiniquito,
                        finiquitos.pensionFiniquito,
                        finiquitos.infonavitFiniquito,
                        finiquitos.fonacotFiniquito
                    
            FROM  finiquitos
            LEFT JOIN  empleados
            ON finiquitos.entidadEmpFiniquito=empleados.entidadFederativaId
            AND finiquitos.consecutivoEmpFiniquito=empleados.empleadoConsecutivoId
            AND finiquitos.categoriaEmpFiniquito=empleados.empleadoCategoriaId
            LEFT JOIN  catalogopuestos
            ON empleados.empleadoIdPuesto=catalogopuestos.idPuesto
            LEFT JOIN entidadesfederativas
            ON empleados.idEntidadTrabajo=entidadesfederativas.idEntidadFederativa
            LEFT JOIN datosimss
            ON datosimss.empladoEntidadImss=empleados.entidadFederativaId
            AND datosimss.empleadoConsecutivoImss=empleados.empleadoConsecutivoId
            AND datosimss.empleadoCategoriaImss=empleados.empleadoCategoriaId
            left join prestamo_finiquito on (prestamo_finiquito.idPF = (select max(idPF) from prestamo_finiquito
            where finiquitos.entidadEmpFiniquito=prestamo_finiquito.entidadEmpPF 
            and finiquitos.consecutivoEmpFiniquito=prestamo_finiquito.consecutivoEmpPF 
            and finiquitos.categoriaEmpFiniquito=prestamo_finiquito.categoriaEmpPF))
            left join pension_finiquito on (pension_finiquito.idPeF = (select max(idPeF) from pension_finiquito
            where finiquitos.entidadEmpFiniquito=pension_finiquito.entidadEmpPeF 
            and finiquitos.consecutivoEmpFiniquito=pension_finiquito.consecutivoEmpPeF 
            and finiquitos.categoriaEmpFiniquito=pension_finiquito.categoriaEmpPeF))
            left join infonavit_finiquito on (infonavit_finiquito.idIF = (select max(idIF) from infonavit_finiquito
            where finiquitos.entidadEmpFiniquito=infonavit_finiquito.entidadEmpIF 
            and finiquitos.consecutivoEmpFiniquito=infonavit_finiquito.consecutivoEmpIF 
            and finiquitos.categoriaEmpFiniquito=infonavit_finiquito.categoriaEmpIF))
            left join fonacot_finiquito on (fonacot_finiquito.idFF = (select max(idFF) from fonacot_finiquito
            where finiquitos.entidadEmpFiniquito=fonacot_finiquito.entidadEmpFF 
            and finiquitos.consecutivoEmpFiniquito=fonacot_finiquito.consecutivoEmpFF 
            and finiquitos.categoriaEmpFiniquito=fonacot_finiquito.categoriaEmpFF))
            left join uniformes_finiquitos on (uniformes_finiquitos.idUniformeF = (select max(idUniformeF) from uniformes_finiquitos 
            where finiquitos.entidadEmpFiniquito=uniformes_finiquitos.entidadUniF 
            and finiquitos.consecutivoEmpFiniquito=uniformes_finiquitos.consecutivoUniF 
            and finiquitos.categoriaEmpFiniquito=uniformes_finiquitos.categoriaUniF))
            left join diastrabajados on (diastrabajados.idDT = (select max(idDT) from diastrabajados
            where finiquitos.entidadEmpFiniquito=diastrabajados.EntidadEmpDT 
            and finiquitos.consecutivoEmpFiniquito=diastrabajados.ConsecutivoEmpDT 
            and finiquitos.categoriaEmpFiniquito=diastrabajados.CategoriaEmpDT))
            where finiquitos.netoAlPago <=0
            and (finiquitos.estatusFiniquito='0' or finiquitos.estatusFiniquito='4')
            and prestamo_finiquito.idPF is not null
            and pension_finiquito.idPeF is not null
            and infonavit_finiquito.idIF is not null
            and fonacot_finiquito.idFF is not null
            and uniformes_finiquitos.idUniformeF is not null
            and diastrabajados.idDT is not null";      
        
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaFiniquitosEnNegativo[] = $reg;
        }
        return $GetListaFiniquitosEnNegativo;
    }

    
 public function UPDATEFiniquitoPiramidadoMonto($entidademp,$consecutivoemp,$categoriaemp,$MontoAcuerdo)    {      
      $sql = " UPDATE finiquitos
              SET estatusFiniquito = '2', MontoAcordado = '" . mysqli_real_escape_string($this->conn, $MontoAcuerdo) . "'
              WHERE entidadEmpFiniquito = '" . mysqli_real_escape_string($this->conn, $entidademp) . "'
              AND consecutivoEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $consecutivoemp) . "'
              AND categoriaEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $categoriaemp) . "'
              AND (estatusFiniquito ='0' or estatusFiniquito ='4') ";  
       
      $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizarFiniquito.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
    
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    
    public function obtenerListaEntidadesUsuarios($entidadConsulta)
    {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
        $ListaEntidadesUs = array();
        try {
            $sql = "SELECT idEntidadFederativa, upper(nombreEntidadFederativa) AS nombreEntidadFederativa,claveEntidadF from entidadesfederativas
            WHERE (";
            for($i=0;$i<count($entidadConsulta);$i++){
                if(!is_array($entidadConsulta)){
                    $entidadparaconsulta=$entidadConsulta;
                }else{
                    $entidadparaconsulta=$entidadConsulta[$i];
                }
                if($i==0){
                    $sql.=" idEntidadFederativa='$entidadparaconsulta'";
                }else{
                    $sql.=" or idEntidadFederativa='$entidadparaconsulta'";
                }
            }
            $sql.=" ) ORDER BY nombreEntidadFederativa";


                //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
    
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaEntidadesUs[] = $reg;
    
            }
                //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
            return $ListaEntidadesUs;
        } catch (Exception $e) {
                //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }


public function GetExistenciaEmpleado($entidad,$consecutivo,$categoria)
    {
        $ExistenciaEmpleado = array();

        $sql = "SELECT count(e.entidadFederativaId) as ExistenciaDeEmpleado, di.empleadoEstatusImss as EstatusImss,count(finiquitos.entidadEmpFiniquito) as conteofiniquito,
                    finiquitos.estatusFiniquito 
                from empleados e
                left join datosimss di
                on di.empladoEntidadImss= e.entidadFederativaId
                and di.empleadoConsecutivoImss= e.empleadoConsecutivoId
                and di.empleadoCategoriaImss=e.empleadoCategoriaId
                LEFT JOIN  finiquitos  
                ON finiquitos.entidadEmpFiniquito     =e.entidadFederativaId
                AND finiquitos.consecutivoEmpFiniquito=e.empleadoConsecutivoId
                AND finiquitos.categoriaEmpFiniquito  =e.empleadoCategoriaId
                where entidadFederativaId = '" . mysqli_real_escape_string($this->conn, $entidad) . "'
                and empleadoConsecutivoId = '" . mysqli_real_escape_string($this->conn, $consecutivo) . "'
                and empleadoCategoriaId = '" . mysqli_real_escape_string($this->conn, $categoria) . "'
                GROUP BY idFiniquito
                ORDER BY idFiniquito DESC
                LIMIT 1";

        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $ExistenciaEmpleado[] = $reg;
        }
        return $ExistenciaEmpleado;
    }

     public function GetListaBusqueda($entidad,$consecutivo,$categoria)
    {
        $Busqueda = array();

        $sql = "SELECT concat(e.entidadFederativaId,'-',e.empleadoConsecutivoId,'-',e.empleadoCategoriaId) AS numempleado,
                       concat(e.apellidoPaterno,' ',e.apellidoMaterno,' ',e.nombreEmpleado) AS nomemp,
                       ef.nombreEntidadFederativa,f.estatusFiniquito , di.empleadoEstatusImss,f.netoAlPago,f.diasDeVacaciones,f.fechaBaja,f.netoAlPago,f.diasDeVacaciones
               
                FROM datosimss di
                left join finiquitos f
                on  di.empladoEntidadImss = f.entidadEmpFiniquito
                and di.empleadoConsecutivoImss= f.consecutivoEmpFiniquito
                and di.empleadoCategoriaImss= f.categoriaEmpFiniquito
                left join empleados e
                on di.empladoEntidadImss= e.entidadFederativaId
                and di.empleadoConsecutivoImss= e.empleadoConsecutivoId
                and di.empleadoCategoriaImss=e.empleadoCategoriaId
                left join entidadesfederativas ef
                on e.idEntidadTrabajo= ef.idEntidadFederativa
                where di.empladoEntidadImss = '" . mysqli_real_escape_string($this->conn, $entidad) . "'
                and di.empleadoConsecutivoImss = '" . mysqli_real_escape_string($this->conn, $consecutivo) . "'
                and di.empleadoCategoriaImss = '" . mysqli_real_escape_string($this->conn, $categoria) . "'
                and (f.estatusFiniquito=0 or f.estatusFiniquito=3 or f.estatusFiniquito=4 or f.estatusFiniquito=2 or f.estatusFiniquito=6)";

        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $Busqueda[] = $reg;
        }
        return $Busqueda;
    }

    public function GetListaFlujo($usuario)
    {

        $FiniquitosNegativos = array();
        $sql = "SELECT concat(empleados.entidadFederativaId,'-',empleados.empleadoConsecutivoId,'-',empleados.empleadoCategoriaId)AS numempleado,
                       concat(empleados.apellidoPaterno,' ',empleados.apellidoMaterno,' ',empleados.nombreEmpleado) AS nombreempleado,
                       catalogopuestos.descripcionPuesto, entidadesfederativas.nombreEntidadFederativa, finiquitos.entidadEmpFiniquito, 
                       finiquitos.consecutivoEmpFiniquito, finiquitos.categoriaEmpFiniquito, finiquitos.fechaBaja,finiquitos.fechaAlta,
                       catalogolineanegocio.descripcionLineaNegocio,finiquitos.netoAlPago,finiquitos.diasDeVacaciones, finiquitos.estatusFiniquito,
                       datosimss.empleadoEstatusImss

           
            FROM  finiquitos
            LEFT JOIN  empleados 
            ON finiquitos.entidadEmpFiniquito     =empleados.entidadFederativaId
            AND finiquitos.consecutivoEmpFiniquito=empleados.empleadoConsecutivoId
            AND finiquitos.categoriaEmpFiniquito  =empleados.empleadoCategoriaId
            left join datosimss 
            on  datosimss.empladoEntidadImss     = finiquitos.entidadEmpFiniquito
            and datosimss.empleadoConsecutivoImss= finiquitos.consecutivoEmpFiniquito
            and datosimss.empleadoCategoriaImss  = finiquitos.categoriaEmpFiniquito
            LEFT JOIN  catalogopuestos
            ON empleados.empleadoIdPuesto       =catalogopuestos.idPuesto
            LEFT JOIN entidadesfederativas
            ON empleados.idEntidadTrabajo       =entidadesfederativas.idEntidadFederativa
            LEFT JOIN catalogolineanegocio
            ON empleados.empleadoLineaNegocioId =catalogolineanegocio.idLineaNegocio                         
            where (finiquitos.estatusFiniquito=0 or finiquitos.estatusFiniquito=3 or finiquitos.estatusFiniquito=4 or finiquitos.estatusFiniquito=2 or finiquitos.estatusFiniquito=6)";   

            if($usuario["rol"]=="Lider Unidad" || $usuario["rol"]=="Supervisor" || $usuario["rol"]=="Consulta Supervisor"){
             $sql.=" and";
             
              for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
                  if(!is_array($usuario['lineaNegocioUsuario'])){
                     $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
                    }else{
                        $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
                    } 

              for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                  if(!is_array($usuario['entidadFederativaUsuario'])){
                      $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                  }else{
                      $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                  }
                  if(($i==0) && ($j==0)){
                      $sql.=" ((empleados.empleadoLineaNegocioId='$lineanegocioconsulta' and empleados.idEntidadTrabajo='$entidadparaconsulta')";  
                  }else{
                      $sql.=" or (empleados.empleadoLineaNegocioId='$lineanegocioconsulta' and empleados.idEntidadTrabajo='$entidadparaconsulta')";       
                  }
              }
           }
           $sql.=" )";
          }
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $FiniquitosNegativos[] = $reg;
        }
        return $FiniquitosNegativos;
    }

 public function InsertarHistoricoCoorreo($entidad,$consecutivo,$categoria,$nomemp,$nombreEntidadFederativa,$prestamo,$PrestamoFechaCarga,$infonavit,$InfonavitFechaCarga,$fonacot,$FonacotFechaCarga,$pension,$PensionFechaCarga,$diastrabajados,$DíasTrabajadosFechaCarga,$diasDeVacaciones,$netoAlPago,$EstatusNegociacion,$usuario)
    {
    
        $sql = "insert into HistoricoConsultaEstatusFiniquito(EntEmpConsultado,ConEmpConsultado,CatEmpConsultado,NombreEmp,Entidad,EstatusPrestamo,FechaCargaPrest,EstatusAmortizacion,FechaCargaAmort,EstatusFonacot,FechaCargaFona,EstatusPension,FechaCargaPensi,EstatusDiasTrabajados,FechaCargaDiaTrab,EstatusDiasVacaciones,netoAlPago,EstatusNegociacion,FechaConsultaEstatus,UsuarioConsulta)
       
        values ('$entidad','$consecutivo','$categoria','$nomemp','$nombreEntidadFederativa','$prestamo','$PrestamoFechaCarga','$infonavit','$InfonavitFechaCarga','$fonacot','$FonacotFechaCarga','$pension','$PensionFechaCarga','$diastrabajados','$DíasTrabajadosFechaCarga','$diasDeVacaciones','$netoAlPago','$EstatusNegociacion',now(),'$usuario')";

                $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            //$this -> logger -> LogInfo ("Ocurrio un error al actualizar Estatus Visitante.");
            //$this -> logger -> LogError ("ERRNO:" . mysqli_errno ($this -> conn) . " - " . mysqli_error ($this -> conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
        
    }

     public function GetConsultaHistoricoEstatusFiniquito($fechainicio,$fechafin)
    {
        $GetListaConsultasHistorico = array();
        $sql = "SELECT concat(he.EntEmpConsultado,'-',he.ConEmpConsultado,'-',he.CatEmpConsultado)AS numempleado,
                he.NombreEmp,he.Entidad,he.EstatusPrestamo,he.FechaCargaPrest,he.EstatusAmortizacion,he.FechaCargaAmort,he.EstatusFonacot,he.FechaCargaFona,he.EstatusPension,
                he.FechaCargaPensi,he.EstatusDiasTrabajados,he.FechaCargaDiaTrab,he.EstatusDiasVacaciones,he.netoAlPago,he.EstatusNegociacion,he.FechaConsultaEstatus,he.UsuarioConsulta,
                di.fechaImss,di.fechaBajaImss
                from HistoricoConsultaEstatusFiniquito he
                left join datosimss di on(he.EntEmpConsultado=di.empladoEntidadImss and he.ConEmpConsultado=di.empleadoConsecutivoImss and he.CatEmpConsultado=di.empleadoCategoriaImss)
                where di.fechaBajaImss between '$fechainicio' and '$fechafin'";

        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $GetListaConsultasHistorico[] = $reg;
        }
        return $GetListaConsultasHistorico;
    }

public function GetListaAcuerdos()
    {
        $GetListaAcuerdosSL = array();
        $sql = "SELECT concat(empleados.entidadFederativaId,'-',empleados.empleadoConsecutivoId,'-',empleados.empleadoCategoriaId)AS numempleado,
                       concat(empleados.apellidoPaterno,' ',empleados.apellidoMaterno,' ',empleados.nombreEmpleado) AS nombreempleado,
                       datosimss.fechaImss,
                       datosimss.fechaBajaImss,
                       catalogopuestos.descripcionPuesto,
                       entidadesfederativas.nombreEntidadFederativa,
                       finiquitos.MontoAcordado,
                       finiquitos.estatusFiniquito,
                       finiquitos.netoAlPago,finiquitos.folioBajaImss
                    
            FROM  finiquitos
            LEFT JOIN  empleados
            ON finiquitos.entidadEmpFiniquito=empleados.entidadFederativaId
            AND finiquitos.consecutivoEmpFiniquito=empleados.empleadoConsecutivoId
            AND finiquitos.categoriaEmpFiniquito=empleados.empleadoCategoriaId
            LEFT JOIN  catalogopuestos
            ON empleados.empleadoIdPuesto=catalogopuestos.idPuesto
            LEFT JOIN entidadesfederativas
            ON empleados.idEntidadTrabajo=entidadesfederativas.idEntidadFederativa
            LEFT JOIN datosimss
            ON datosimss.empladoEntidadImss=empleados.entidadFederativaId
            AND datosimss.empleadoConsecutivoImss=empleados.empleadoConsecutivoId
            AND datosimss.empleadoCategoriaImss=empleados.empleadoCategoriaId
            where finiquitos.estatusFiniquito=2";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaAcuerdosSL[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de entidad ".var_export ($entidad, true));
        return $GetListaAcuerdosSL;
    }

    public function GetListaHistoricoFiniquitosDG()
    {
        $GetListaHistoricoFiniquitosDG = array();
        $sql = "SELECT concat(historicofiniquitosdg.EntidadEmpFiniquito,'-',historicofiniquitosdg.ConsecutivoEmpFiniquito,'-',historicofiniquitosdg.CategoriaEmpFiniquito)AS numempleado,
       concat(historicofiniquitosdg.ApellidoPaterno,' ',historicofiniquitosdg.ApellidoMaterno,' ',historicofiniquitosdg.Nombre) AS nombreempleado,
                      
                       catalogopuestos.descripcionPuesto,
                       entidadesfederativas.nombreEntidadFederativa,
                       historicofiniquitosdg.FiniquitoAcordado,
                       historicofiniquitosdg.Estatus,
                       historicofiniquitosdg.FechaAcción
           
           FROM  historicofiniquitosdg            
            
            LEFT JOIN  catalogopuestos
            ON historicofiniquitosdg.Puesto=catalogopuestos.idPuesto
            
            LEFT JOIN  empleados
            ON historicofiniquitosdg.EntidadEmpFiniquito=empleados.entidadFederativaId
            AND historicofiniquitosdg.ConsecutivoEmpFiniquito=empleados.empleadoConsecutivoId
            AND historicofiniquitosdg.CategoriaEmpFiniquito=empleados.empleadoCategoriaId
            
            LEFT JOIN entidadesfederativas
            ON empleados.idEntidadTrabajo=entidadesfederativas.idEntidadFederativa";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaHistoricoFiniquitosDG[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $GetListaHistoricoFiniquitosDG;
    }

    public function GetListaDiasTrabajados()
    {
        $GetListaDiasT = array();
        $sql = " SELECT concat(empleados.entidadFederativaId,'-',empleados.empleadoConsecutivoId,'-',empleados.empleadoCategoriaId)AS numempleado,
                empleados.entidadFederativaId,empleados.empleadoConsecutivoId,empleados.empleadoCategoriaId,
                    concat(empleados.apellidoPaterno,' ',empleados.apellidoMaterno,' ',empleados.nombreEmpleado) AS nombreempleado,
                     catalogopuestos.descripcionPuesto,entidadesfederativas.nombreEntidadFederativa,datosimss.fechaImss,datosimss.fechaBajaImss,finiquitos.fechaAlta,finiquitos.fechaBaja,
                     finiquitos.prestamoFiniquito,finiquitos.infonavitFiniquito,finiquitos.fonacotFiniquito,finiquitos.pensionFiniquito,cuotas_empleados.cuotaDiariaEmpleado,
                    finiquitos.diasTrabajados, finiquitos.separacion, finiquitos.piramidar , finiquitos.antiguedadTotal,
                     finiquitos.diasParaPPVacaciones, finiquitos.diasDeVacaciones,finiquitos.factorPropVacaciones, finiquitos.calculoDiasAguinaldo,
                      finiquitos.factorDiasAguinaldo, finiquitos.propVacaciones,
                     finiquitos.primaVacacionalNeta, finiquitos.proporcionNetaAguinaldo,finiquitos.diasDePago,
                     finiquitos.aumentoGratificacion, finiquitos.calculoBruto, finiquitos.pagoNeto,finiquitos.propVacacionesSA,finiquitos.primaVacacionalSA,
                     finiquitos.propAginaldoSA,finiquitos.diasPagoSA,finiquitos.pagoNetoSA,finiquitos.diferenciaGratificacionSA,finiquitos.ingresoAcumulableSA,finiquitos.limiteInferiorisr,
                     finiquitos.excedenteLimiteSA,finiquitos.tasaAplicable,finiquitos.resultado,finiquitos.cuotaFija,finiquitos.isr,finiquitos.netoAlPago,finiquitos.VacacionesPendientes,finiquitos.PrimaVacacionalPendiente,finiquitos.PpPrimaVacacionalPendiente,datosimss.salarioDiario
            FROM  finiquitos
            LEFT JOIN  empleados
            ON finiquitos.entidadEmpFiniquito=empleados.entidadFederativaId
            AND finiquitos.consecutivoEmpFiniquito=empleados.empleadoConsecutivoId
            AND finiquitos.categoriaEmpFiniquito=empleados.empleadoCategoriaId
            LEFT JOIN datosimss
            ON datosimss.empladoEntidadImss=empleados.entidadFederativaId
            AND datosimss.empleadoConsecutivoImss=empleados.empleadoConsecutivoId
            AND datosimss.empleadoCategoriaImss=empleados.empleadoCategoriaId
            LEFT JOIN cuotas_empleados
            ON cuotas_empleados.empleadoEntidadCuota=finiquitos.entidadEmpFiniquito
            AND cuotas_empleados.empleadoConsecutivoCuota=finiquitos.consecutivoEmpFiniquito
            AND cuotas_empleados.empleadoCategoriaCuota=finiquitos.categoriaEmpFiniquito
            LEFT JOIN  catalogopuestos
            ON empleados.empleadoIdPuesto=catalogopuestos.idPuesto
            LEFT JOIN entidadesfederativas
            ON empleados.idEntidadTrabajo=entidadesfederativas.idEntidadFederativa
            where finiquitos.estatusFiniquito=0
            order by numempleado";      
       // $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaDiasT[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $GetListaDiasT;
    }

    
 public function UPDATEDiasTrabajados($entidadempleado,$consecutivoemp,$categoriaemp,$DiasTrabajados1)
    {
        $GetupdateDiasTrabajados = array();
        $sql = "insert into DiasTrabajados(EntidadEmpDT, ConsecutivoEmpDT,CategoriaEmpDT,DiasTrabajados,FechaCarga,FechaHoraCarga)
                values ('$entidadempleado','$consecutivoemp','$categoriaemp','$DiasTrabajados1', now(),now())";     

        $res = mysqli_query($this->conn, $sql);

        $sql1 = "update finiquitos
                 set diasTrabajados= '" . mysqli_real_escape_string($this->conn, $DiasTrabajados1) . "',
                 EstatusDiasTrabajados ='1'
                 WHERE entidadEmpFiniquito = '" . mysqli_real_escape_string($this->conn, $entidadempleado) . "'
                 AND consecutivoEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $consecutivoemp) . "'
                 AND categoriaEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $categoriaemp) . "'
                 AND estatusFiniquito='0'";
        
        $res1 = mysqli_query($this->conn, $sql1);
    }
    

    public function UPDATEFiniquitoPiramidadoDG($entidademp,$consecutivoemp,$categoriaemp,$netoAlPago,$opcion,$MontoAcordadoCalculado)
    { 
        if($opcion==1){
            $EstatusFin="3";
        } else{
            $EstatusFin="4";
        }


        $sql1 = " INSERT into  HistoricofiniquitosDG (EntidadEmpFiniquito, ConsecutivoEmpFiniquito, CategoriaEmpFiniquito, ApellidoPaterno, ApellidoMaterno, Nombre, Puesto, FiniquitoAcordado, Estatus, FechaAcción) 
                select fi.entidadEmpFiniquito,fi.consecutivoEmpFiniquito,fi.categoriaEmpFiniquito,emp.apellidoPaterno,emp.apellidoMaterno, emp.nombreEmpleado,empleadoIdPuesto,fi.MontoAcordado,'$EstatusFin',now()
                from finiquitos fi
                left join empleados emp 
                on(fi.entidadEmpFiniquito=emp.entidadFederativaId and fi.consecutivoEmpFiniquito=emp.empleadoConsecutivoId and fi.categoriaEmpFiniquito=emp.empleadoCategoriaId)
                WHERE fi.entidadEmpFiniquito = '" . mysqli_real_escape_string($this->conn, $entidademp) . "'
                AND fi.consecutivoEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $consecutivoemp) . "'
                AND fi.categoriaEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $categoriaemp) . "'";

            $res1 = mysqli_query($this->conn, $sql1);

            if ($res1 !== true) {
                $this->logger->LogInfo("Ocurrio un error al actualizarEstatusEmpleado.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }

      $sql = "UPDATE finiquitos";
        if($opcion==1){

             $sql2 ="INSERT into  deudasempleadosfiniquito(EntEmpD,ConEmpD,CatEmpD,DeudaEmp,EstatusDeuda) 
                                                   values('$entidademp','$consecutivoemp','$categoriaemp','$netoAlPago',0)";

                                  $res2 = mysqli_query($this->conn, $sql2);

            if ($res2 !== true) {
                $this->logger->LogInfo("Ocurrio un error al actualizarEstatusEmpleado.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));        
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
            }

            $sql.= " SET estatusFiniquitoPiramidar ='$EstatusFin', estatusFiniquito='0', piramidar= '" . mysqli_real_escape_string($this->conn, $MontoAcordadoCalculado) . "'";

           
//
        }else if($opcion==2){
            $sql.= " SET estatusFiniquito = '$EstatusFin', MontoAcordado= '0'";
        }
//
       $sql.= " WHERE entidadEmpFiniquito = '" . mysqli_real_escape_string($this->conn, $entidademp) . "'
                AND consecutivoEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $consecutivoemp) . "'
                AND categoriaEmpFiniquito ='" . mysqli_real_escape_string($this->conn, $categoriaemp) . "'
                AND estatusFiniquito='2' ";  

     //  $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
       
      $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al actualizarEstatusEmpleado.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
    
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function traeDiasVacaciones($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId)
    {
        $FechaAltaImss = array();

        $sql = "SELECT count(fechaAsistencia) as VacacionesRegistradas FROM asistencia
                where empleadoEntidad='$empleadoEntidadId'
                and empleadoConsecutivo='$empleadoConsecutivoId'
                and empleadoTipo='$empleadoTipoId'
                and (incidenciaAsistenciaId='5' or incidenciaAsistenciaId='6' or incidenciaAsistenciaId='18' or incidenciaAsistenciaId='19')";
       // $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $FechaAltaImss[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $FechaAltaImss;
    }

    public function traeDiasVacacionesAntiguedad($Dias)
    {
        $FechaAltaImss = array();

        $sql = "SELECT DiasVacConf FROM antiguedad
                where Antiguedad='$Dias'";
       //$this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $FechaAltaImss[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $FechaAltaImss;
    }



    public function TraerFechaAltaEmpleado($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId)
    {
        $FechaE = array();
        $sql = "SELECT dim.fechaImss as FechaAltaEmpleado,dim.fechaBajaImss as FechaBajaEmpleado, emp.fechaIngresoEmpleado as FechaAltaEmpleadoEmpleados
                from datosimss dim
                left join empleados emp
                on (dim.empladoEntidadImss=emp.entidadFederativaId and dim.empleadoConsecutivoImss=emp.empleadoConsecutivoId and dim.empleadoCategoriaImss=emp.empleadoCategoriaId)
                where dim.empladoEntidadImss='$empleadoEntidadId'
                and dim.empleadoConsecutivoImss='$empleadoConsecutivoId'
                and dim.empleadoCategoriaImss='$empleadoTipoId' ";      
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $FechaE[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $FechaE;
    }

    public function TraerFechaAltaEmpleadosTotales()
    {
        $FechaE = array();
        $sql = "SELECT dim.empladoEntidadImss as empladoEntidad, dim.empleadoConsecutivoImss as empleadoConsecutivo, dim.empleadoCategoriaImss as empleadoCategoria,
                dim.fechaImss as FechaAltaEmpleado , emp.fechaIngresoEmpleado as FechaAltaEmpleadoEmpleados 
            from datosimss dim
            left join empleados emp
            on (dim.empladoEntidadImss=emp.entidadFederativaId and
             dim.empleadoConsecutivoImss=emp.empleadoConsecutivoId and
             dim.empleadoCategoriaImss=emp.empleadoCategoriaId)
            where (emp.empleadoEstatusId='1' or emp.empleadoEstatusId='2')
            order by dim.fechaImss ";      
       // $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $FechaE[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $FechaE;
    }

    public function ActualizarAsistenciaAniversario($empladoEntidad,$empleadoConsecutivo,$empleadoCategoria,$Aniversario,$FechaSiguente,$FechaAnterior)
    {
        $sql = "update asistencia set Aniversario='" . mysqli_real_escape_string($this->conn, $Aniversario) . "'
                where empleadoEntidad='" . mysqli_real_escape_string($this->conn, $empladoEntidad) . "'
                and empleadoConsecutivo='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
                and empleadoTipo='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'
                and fechaAsistencia BETWEEN '" . mysqli_real_escape_string($this->conn, $FechaAnterior) . "' AND '" . mysqli_real_escape_string($this->conn, $FechaSiguente) . "'
                and ((incidenciaAsistenciaId='5') or (incidenciaAsistenciaId='6') or (incidenciaAsistenciaId='13') or (incidenciaAsistenciaId='12'));";


        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            //$this -> logger -> LogInfo ("Ocurrio un error al actualizar Estatus Visitante.");
            //$this -> logger -> LogError ("ERRNO:" . mysqli_errno ($this -> conn) . " - " . mysqli_error ($this -> conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function TotalDeDiasVacaciones($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$Aniversario)
    {
        $DiasVacaciones1 = array();

        $sql = "SELECT ifnull(sum(ci.valorCobertura),0) as TotalDeDiasVacaciones,ifnull(sum(ci.valorAsistencia),0) as TotalDeDiasVacaciones1
                FROM asistencia a
                left join catalogoincidencias ci on (a.incidenciaAsistenciaId=ci.incidenciaId)
                left join empleados e On (a.empleadoEntidad=e.entidadFederativaId and a.empleadoConsecutivo=e.empleadoConsecutivoId and a.empleadoTipo=e.empleadoCategoriaId)
                where empleadoEntidad='$empleadoEntidadId'
                and empleadoConsecutivo='$empleadoConsecutivoId'
                and empleadoTipo='$empleadoTipoId'
                and ((incidenciaAsistenciaId='5') or (incidenciaAsistenciaId='6') or (incidenciaAsistenciaId='13') or (incidenciaAsistenciaId='12'))
                and Aniversario='$Aniversario'
                and a.fechaAsistencia>e.fechaIngresoEmpleado";
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $DiasVacaciones1[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de DiasVacaciones1 ".var_export ($DiasVacaciones1, true));
        return $DiasVacaciones1;
    }

     public function TraerDiasCorrespondientesALAniversario($Aniversario)
    {
        $DiasAniversario = array();

        $sql = "SELECT DiasVacConf as DiasAniversario FROM antiguedad
                where IdAntiguedad='$Aniversario'";
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $DiasAniversario[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $DiasAniversario;
    }

    public function getRevisionFechaInsertada($DateVacaciones,$empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId)
    {
        $RevisionFechaInsertada1 = array();

        $sql = "SELECT count(fechaAsistencia) as RegistroAsistencia FROM asistencia
                where empleadoEntidad='$empleadoEntidadId'
                and empleadoConsecutivo='$empleadoConsecutivoId'
                and empleadoTipo='$empleadoTipoId'
                and fechaAsistencia = '$DateVacaciones'";
      // $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $RevisionFechaInsertada1[] = $reg;
        }
     //   $this -> logger -> LogInfo ("valor del array de la consulta de RevisionFechaInsertada1 ".var_export ($RevisionFechaInsertada1, true));
        return $RevisionFechaInsertada1;
    }

    public function getFolioVacaciones($incidencia)
    {
        $FolioVacacionesBorrado = array();

        $sql = "SELECT folioVacaciones FROM asistencia
                where empleadoEntidad='" . $this->safeValue($incidencia["empleadoEntidad"]) . "'
                and empleadoConsecutivo='" . $this->safeValue($incidencia["empleadoConsecutivo"]) . "'
                and empleadoTipo='" . $this->safeValue($incidencia["empleadoTipo"]) . "'
                and fechaAsistencia = '" . $this->safeValue($incidencia["fechaAsistencia"]) . "'";
       //$this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $FolioVacacionesBorrado[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $FolioVacacionesBorrado;
    }

    public function BorrarIncidenciaVacacionesByFolio($incidencia, $folioVacaciones)
    {
        $respuesta=true;

        $sql="select NombreArchivo from folioVacaciones
        where folioVacaciones='$folioVacaciones'";
        $res = mysqli_query($this->conn, $sql);
        $NombreArchivo=Array();
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
     
            $NombreArchivo[] = $reg;
        }
        $NombreDelArchivo =$NombreArchivo[0]["NombreArchivo"];
        //$this -> logger -> LogInfo ("valor del array de la NombreDelArchivo ".var_export ($NombreDelArchivo, true));
        $sql1="DELETE FROM folioVacaciones WHERE folioVacaciones = '$folioVacaciones'";
        $res1 = mysqli_query($this->conn, $sql1);
        if($res1==true){
            $sql2 = "DELETE FROM asistencia WHERE 
            empleadoEntidad='" . $this->safeValue($incidencia["empleadoEntidad"]) . "'
            and empleadoConsecutivo='" . $this->safeValue($incidencia["empleadoConsecutivo"]) . "'
            and empleadoTipo='" . $this->safeValue($incidencia["empleadoTipo"]) . "'
            and folioVacaciones = '$folioVacaciones'";
            //$this -> logger -> LogInfo ("Ejecutando deleteAsistenciaFromAsistencia: " . $sql2);
            mysqli_query($this->conn, $sql2);
            if (mysqli_errno($this->conn) == 0) {
              $respuesta=true;
            }else{
            
                $respuesta=false;
            }
            unlink("uploads/DocumentosVacaciones/". $incidencia["empleadoEntidad"]."-". $incidencia["empleadoConsecutivo"]."-". $incidencia["empleadoTipo"]."/".$NombreDelArchivo);
        }
    //$log->LogInfo("Valor de la variable \$respuesta: " . var_export ($path, true));
    return $respuesta;
    }

        public function GetAmortizaciones($entidadEmpFiniquito,$consecutivoEmpFiniquito,$categoriaEmpFiniquito,$fechaBaja,$caso)
    {
        $Amortizaciones = array();
        $FechaActual = date("Y-m-d");
        //$this -> logger -> LogInfo ("Ejecutando FechaActual : " . $FechaActual);

        if($caso=="1"){
            $sql = "select count(idPF) as Prestamo, FechaCarga, FechaHoraCarga from prestamo_finiquito
                    where entidadEmpPF ='$entidadEmpFiniquito'
                    and consecutivoEmpPF='$consecutivoEmpFiniquito'
                    and categoriaEmpPF='$categoriaEmpFiniquito'
                    and FechaCarga between '$fechaBaja' and '$FechaActual'";             
        }else if($caso=="2"){
            $sql = "select count(idIF) as Infonavit, FechaCarga, FechaHoraCarga from infonavit_finiquito
                    where entidadEmpIF ='$entidadEmpFiniquito'
                    and consecutivoEmpIF='$consecutivoEmpFiniquito'
                    and categoriaEmpIF='$categoriaEmpFiniquito'
                    and FechaCarga between '$fechaBaja' and '$FechaActual'"; 
        }else if($caso=="3"){
            $sql = "select count(idPeF) Pension, FechaCarga, FechaHoraCarga from pension_finiquito
                    where entidadEmpPeF ='$entidadEmpFiniquito'
                    and consecutivoEmpPeF='$consecutivoEmpFiniquito'
                    and categoriaEmpPeF='$categoriaEmpFiniquito'
                    and FechaCarga between '$fechaBaja' and '$FechaActual'"; 
        }else if($caso=="4"){
            $sql = "select count(idFF) as Fonacot, FechaCarga, FechaHoraCarga from fonacot_finiquito
                    where entidadEmpFF ='$entidadEmpFiniquito'
                    and consecutivoEmpFF='$consecutivoEmpFiniquito'
                    and categoriaEmpFF='$categoriaEmpFiniquito'
                    and FechaCarga between '$fechaBaja' and '$FechaActual'"; 
        }else if($caso=="5"){
            $sql = "select count(idDT) as DíasTrabajados, FechaCarga, FechaHoraCarga from diastrabajados
                    where EntidadEmpDT ='$entidadEmpFiniquito'
                    and ConsecutivoEmpDT='$consecutivoEmpFiniquito'
                    and CategoriaEmpDT='$categoriaEmpFiniquito'
                    and FechaCarga between '$fechaBaja' and '$FechaActual'";

        }else if($caso=="6"){
            $sql = "select count(idUniformeF) as Uniformesentregados, FechaCarga as FechaCarga, FechaHoraCarga as FechaHoraCarga from Uniformes_Finiquitos
                    where entidadUniF ='$entidadEmpFiniquito'
                    and consecutivoUniF='$consecutivoEmpFiniquito'
                    and categoriaUniF='$categoriaEmpFiniquito'
                    and FechaCarga between '$fechaBaja' and '$FechaActual'";

        }
             
       // $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $Amortizaciones[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de LargoFiniquitos ".var_export ($LargoFiniquitos, true));
        return $Amortizaciones;
    }


    public function obtenerListaDocumentosVacaciones($fecha1,$fecha2)
{
      //  $this -> logger -> LogInfo ("incapacidades en persistencia");
    $LitaPeticionesVacaciones = array();
    try {
        $sql = "SELECT fv.entidadempleadoVac as EntidadEmpleado, fv.consecutivoempleadoVac as ConsecutivoEmpleado, fv.categoriaEmpleadoVac as CategoriaEmpleado,concat_ws(' ',emp.nombreEmpleado,emp.apellidoPaterno,emp.apellidoMaterno) as NombreEmpleado,fv.folioVacaciones,fv.RolOperativo,fv.TipoVacaciones,fv.PeriodoVacaciones as Aniversario,fv.diasVacaciones,fv.fechaInicioVacaciones,fv.NumbreUsuario,fv.fechaInsertVacaciones as FechaPeticion,cev.Descripcion as EstatusVacaciones,fv.NombreArchivo
            from foliovacaciones fv
            left join empleados emp
            on(fv.entidadempleadoVac=emp.entidadFederativaId and fv.consecutivoempleadoVac=emp.empleadoConsecutivoId and fv.categoriaEmpleadoVac=emp.empleadoCategoriaId)
            left join catalogo_estatusvacaciones as cev
            on(fv.StatusFolio=cev.idEstatusVaciones)
            where fv.StatusFolio='1'
            and fv.fechaInicioVacaciones between '" . mysqli_real_escape_string($this->conn, $fecha1) . "' and '" . mysqli_real_escape_string($this->conn, $fecha2) . "'";
      // $this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $LitaPeticionesVacaciones[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
        return $LitaPeticionesVacaciones;
    }catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

 public function UpdateFolioVacaciones($incidencia)
    {
        //$this -> logger -> LogInfo ("Ejecutando. ActualizarAsistenciaAniversario en persistencia");
        $sql = "UPDATE foliovacaciones set StatusFolio = '2'
                where folioVacaciones='" . $this->safeValue($incidencia["Folio"]) . "'
                and entidadempleadoVac='" . $this->safeValue($incidencia["empleadoEntidad"]) . "'
                and consecutivoempleadoVac='" . $this->safeValue($incidencia["empleadoConsecutivo"]) . "'
                and categoriaEmpleadoVac='" . $this->safeValue($incidencia["empleadoTipo"]) . "'";
               // . mysqli_real_escape_string($this->conn, $movimiento["idMovimiento"]) .
       //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusVisitante como" . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            //$this -> logger -> LogInfo ("Ocurrio un error al actualizar Estatus Visitante.");
            //$this -> logger -> LogError ("ERRNO:" . mysqli_errno ($this -> conn) . " - " . mysqli_error ($this -> conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function InsertFolioVacacionesDeclinadas($incidencia)
    {
        //$this -> logger -> LogInfo ("Ejecutando. ActualizarAsistenciaAniversario en persistencia");
        $sql = "INSERT into VacacionesDeclinadas (folioVacacionesDe, entidadempleadoVacDe, consecutivoempleadoVacDe, categoriaEmpleadoVacDe, RolOperativoDe, TipoVacacionesDe,
 PeriodoVacacionesDe, diasVacacionesDe, fechaInicioVacacionesDe, NombreArchivoDe, NumbreUsuarioDe, fechaInsertVacacionesDe, StatusFolioDe)
            select  folioVacaciones, entidadempleadoVac, consecutivoempleadoVac, categoriaEmpleadoVac, RolOperativo, TipoVacaciones, PeriodoVacaciones, diasVacaciones, fechaInicioVacaciones, NombreArchivo, NumbreUsuario, fechaInsertVacaciones, '3' 
            from foliovacaciones
            where folioVacaciones='" . $this->safeValue($incidencia["Folio"]) . "'
            and entidadempleadoVac = '" . $this->safeValue($incidencia["empleadoEntidad"]) . "'
            and consecutivoempleadoVac = '" . $this->safeValue($incidencia["empleadoConsecutivo"]) . "'
            and categoriaEmpleadoVac = '" . $this->safeValue($incidencia["empleadoTipo"]) . "'";
        // . mysqli_real_escape_string($this->conn, $movimiento["idMovimiento"]) .
       //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusVisitante como" . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            //$this -> logger -> LogInfo ("Ocurrio un error al actualizar Estatus Visitante.");
            //$this -> logger -> LogError ("ERRNO:" . mysqli_errno ($this -> conn) . " - " . mysqli_error ($this -> conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function obtenerListaReporteVacaciones($usuario)
{
  //$this -> logger -> LogInfo ("obtenerListaReporteVacaciones en persistencia");
    $LitaReporteVacaciones = array();
    try {
        $sql = " SELECT empleados.nombreEmpleado,empleados.apellidoPaterno,empleados.apellidoMaterno,asistencia.empleadoEntidad,asistencia.empleadoConsecutivo,asistencia.empleadoTipo,foliovacaciones.NombreArchivo,foliovacaciones.StatusFolio,foliovacaciones.folioVacaciones,empleados.RolOperativo,foliovacaciones.TipoVacaciones,foliovacaciones.PeriodoVacaciones,foliovacaciones.diasVacaciones,foliovacaciones.fechaInicioVacaciones,foliovacaciones.NumbreUsuario,foliovacaciones.fechaInsertVacaciones,catalogo_estatusvacaciones.Descripcion,count(asistencia.empleadoEntidad) as VacacionesTomadas,asistencia.incidenciaAsistenciaId as TipoVacaciones1,asistencia.Aniversario,asistencia.usuarioCapturaAsistencia,asistencia.fechaAsistencia,asistencia.comentarioIncidencia
            FROM asistencia
            left join foliovacaciones on(asistencia.folioVacaciones = foliovacaciones.folioVacaciones)
            left join catalogo_estatusvacaciones on(foliovacaciones.StatusFolio = catalogo_estatusvacaciones.idEstatusVaciones)
            left join empleados on(asistencia.empleadoEntidad =empleados.entidadFederativaId and asistencia.empleadoConsecutivo = empleados.empleadoConsecutivoId and asistencia.empleadoTipo = empleados.empleadoCategoriaId)
            where((asistencia.incidenciaAsistenciaId='5') or (asistencia.incidenciaAsistenciaId='6') or (asistencia.incidenciaAsistenciaId='13') or (asistencia.incidenciaAsistenciaId='12'))";

        if($usuario["rol"] =="Lider Unidad" || $usuario["rol"] =="Supervisor" || $usuario["rol"] =="Asistencia Administrativo" || $usuario["rol"] =="Asistencia Administrativa SES" || $usuario["rol"] =="Asistencia Administrativa ST"){//$usuario["usuario"] == "imssgif" || $usuario["usuario"] == "vanessa"

            for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
                if(!is_array($usuario['lineaNegocioUsuario'])){
                    $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
                }else{
                    $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
                } 
                for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                    if(!is_array($usuario['entidadFederativaUsuario'])){
                        $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                    }else{
                        $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                    } 
                    if(($i==0) && ($j==0)){
                        $sql.=" and ((empleados.empleadoLineaNegocioId='$lineanegocioconsulta' and empleados.idEntidadTrabajo='$entidadparaconsulta')";
                    }else{
                        $sql.=" or (empleados.empleadoLineaNegocioId ='$lineanegocioconsulta' and empleados.idEntidadTrabajo='$entidadparaconsulta')";
                    }
                }
            }
            if($usuario["rol"] =="Asistencia Administrativo" || $usuario["rol"] =="Asistencia Administrativa SES" || $usuario["rol"] =="Asistencia Administrativa ST"){
                $sql.= ") and empleados.empleadoCategoriaId='02' ";
            }else{
                $sql.= ") and empleados.empleadoCategoriaId='03'";
            }
            
        }
        $sql.=" group by asistencia.folioVacaciones,asistencia.Aniversario,asistencia.incidenciaAsistenciaId,asistencia.usuarioCapturaAsistencia,asistencia.empleadoEntidad,asistencia.empleadoConsecutivo,asistencia.empleadoTipo";
        $sql.=" UNION
                SELECT empleados.nombreEmpleado,empleados.apellidoPaterno,empleados.apellidoMaterno,asistencia.empleadoEntidad,asistencia.empleadoConsecutivo,asistencia.empleadoTipo,VacacionesDeclinadas.NombreArchivoDe as NombreArchivo,VacacionesDeclinadas.StatusFolioDe as StatusFolio,VacacionesDeclinadas.folioVacacionesDe as folioVacaciones,empleados.RolOperativo,VacacionesDeclinadas.TipoVacacionesDe as TipoVacaciones,VacacionesDeclinadas.PeriodoVacacionesDe as PeriodoVacaciones,VacacionesDeclinadas.diasVacacionesDe as diasVacaciones,VacacionesDeclinadas.fechaInicioVacacionesDe as fechaInicioVacaciones,VacacionesDeclinadas.NumbreUsuarioDe as NumbreUsuario,VacacionesDeclinadas.fechaInsertVacacionesDe as fechaInsertVacaciones,catalogo_estatusvacaciones.Descripcion,count(asistencia.empleadoEntidad) as VacacionesTomadas,asistencia.incidenciaAsistenciaId as TipoVacaciones1,asistencia.Aniversario,asistencia.usuarioCapturaAsistencia,asistencia.fechaAsistencia,asistencia.comentarioIncidencia
                from VacacionesDeclinadas
                left join asistencia on(asistencia.folioVacaciones = VacacionesDeclinadas.folioVacacionesDe)
                 left join catalogo_estatusvacaciones on(VacacionesDeclinadas.StatusFolioDe = catalogo_estatusvacaciones.idEstatusVaciones)
                 left join empleados on(VacacionesDeclinadas.entidadempleadoVacDe =empleados.entidadFederativaId and VacacionesDeclinadas.consecutivoempleadoVacDe = empleados.empleadoConsecutivoId and VacacionesDeclinadas.categoriaEmpleadoVacDe = empleados.empleadoCategoriaId)";

        if($usuario["rol"] =="Lider Unidad" || $usuario["rol"] =="Supervisor" || $usuario["rol"] =="Asistencia Administrativo" || $usuario["rol"] =="Asistencia Administrativa SES" || $usuario["rol"] =="Asistencia Administrativa ST"){//$usuario["usuario"] == "imssgif" || $usuario["usuario"] == "vanessa"
            for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
                if(!is_array($usuario['lineaNegocioUsuario'])){
                    $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
                }else{
                    $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
                } 
                for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                    if(!is_array($usuario['entidadFederativaUsuario'])){
                        $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                    }else{
                        $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                    } 
                    if(($i==0) && ($j==0)){
                        $sql.=" where ((empleados.empleadoLineaNegocioId='$lineanegocioconsulta' and empleados.idEntidadTrabajo='$entidadparaconsulta')";
                    }else{
                        $sql.=" or (empleados.empleadoLineaNegocioId ='$lineanegocioconsulta' and empleados.idEntidadTrabajo='$entidadparaconsulta')";
                    }
                }
            }
            if($usuario["rol"] =="Asistencia Administrativo" || $usuario["rol"] =="Asistencia Administrativa SES" || $usuario["rol"] =="Asistencia Administrativa ST"){
                $sql.= ") and empleados.empleadoCategoriaId='02' ";
            }else {
                $sql.= ") and empleados.empleadoCategoriaId='03'";
            }
        }           
        //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $LitaReporteVacaciones[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la LitaReporteVacaciones ".var_export ($LitaReporteVacaciones, true));
        return $LitaReporteVacaciones;
    }catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}


public function ActualizarDatosImssCampoFiniquito($EstatusFiniquito,$empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId)
    {

        //$this -> logger -> LogInfo ("Ejecutando. confirmaBajaImss en persistencia");

        $sql = "UPDATE datosimss 
        set CreacionFiniquito='$EstatusFiniquito'
        where empladoEntidadImss='$empleadoEntidadId'
        and empleadoConsecutivoImss='$empleadoConsecutivoId'
        and  empleadoCategoriaImss='$empleadoTipoId'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  confirmaBajaImss como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al confirmaBajaImss.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }
        public function obtenerListaConfirmacionVacacionesFini($fechaInicioDiasVacacionesLab,$fechaTerminoDisasVacacionesLab,$caso){
  //$this -> logger -> LogInfo ("obtenerListaReporteVacaciones en persistencia");
    $ListCOnfirmacionFiniquitos = array();
    try {
        $sql = " SELECT  fi.entidadEmpFiniquito, fi.consecutivoEmpFiniquito, fi.categoriaEmpFiniquito ,concat_ws(' ', em.apellidoPaterno, em.apellidoMaterno, em.nombreEmpleado) as  NombreEmpleado, em.roloperativo, fi.fechaAlta as FechaAltaFiniquitos,di.fechaImss as FechaAltaImss,em.fechaIngresoEmpleado as FechaAltaEmpleados, fi.ingresoAcumulableSA as IngresosAcumulables,ce.cuotaDiariaEmpleado,fi.folioBajaImss,di.fechaBajaImss
        from finiquitos fi
        left join empleados em on (fi.entidadEmpFiniquito=em.entidadFederativaId and fi.consecutivoEmpFiniquito=em.empleadoConsecutivoId and fi.categoriaEmpFiniquito=em.empleadoCategoriaId)
        left join datosimss di on(fi.entidadEmpFiniquito= di.empladoEntidadImss and fi.consecutivoEmpFiniquito=di.empleadoConsecutivoImss and fi.categoriaEmpFiniquito=di.empleadoCategoriaImss)
        LEFT JOIN cuotas_empleados ce ON (ce.empleadoEntidadCuota=fi.entidadEmpFiniquito AND ce.empleadoConsecutivoCuota=fi.consecutivoEmpFiniquito AND ce.empleadoCategoriaCuota=fi.categoriaEmpFiniquito)
        where fi.estatusFiniquito='6'";
        if($caso=="4"){
            $sql.=" and di.fechaBajaImss between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicioDiasVacacionesLab) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaTerminoDisasVacacionesLab) . "' AS DATE)";
        }           
      //  $this -> logger -> LogInfo ("ejecutando obtenerListaReporteVacaciones en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $ListCOnfirmacionFiniquitos[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
        return $ListCOnfirmacionFiniquitos;
    }catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function ActualizarFiniquitoVacacionesPendientes($entidad,$consecutivo,$tipo,$TotalDias,$contraseniaInsertadaCifrada,$NumEmpModalVacFin,$usuarioCapturaVac)
    {
        $sql = " UPDATE finiquitos SET estatusFiniquito='0',DiasTotalesVacLaborales='$TotalDias',FechaAcpetacionVacLaborales=now(),NumEmpAcpetacionVacLaborales='$NumEmpModalVacFin',
                    ContraseniaEmpAcpetacionVacLaborales='$contraseniaInsertadaCifrada',UsuarioAcpetacionVacLaborales='$usuarioCapturaVac'
                 where entidadEmpFiniquito='$entidad' and consecutivoEmpFiniquito='$consecutivo' and categoriaEmpFiniquito='$tipo' and estatusFiniquito='6' ";
        $res = mysqli_query($this->conn, $sql);
        //$this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
    }


public function ActualizarFiniquitoCreacionPdfAutomatico($entidademp,$consecutivoemp,$categoriaemp)
    {
        $sql = "UPDATE finiquitos SET estatusFiniquito=1
                where entidadEmpFiniquito='$entidademp'
                AND consecutivoEmpFiniquito='$consecutivoemp'
                AND categoriaEmpFiniquito='$categoriaemp'
                and estatusFiniquito=0";
        $res = mysqli_query($this->conn, $sql);
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
    }


public function obtenerDiasTrabajados($entidadFederativaId,$empleadoConsecutivoId,$empleadoCategoriaId,$fechaBaja)
    {
        $DiasT = array();
        $FechaActual = date("Y-m-d");
 
            $sql = "select count(idDT) as DiasTrabajados1 from diastrabajados
                    where EntidadEmpDT ='$entidadFederativaId'
                    and ConsecutivoEmpDT='$empleadoConsecutivoId'
                    and CategoriaEmpDT='$empleadoCategoriaId'
                    and FechaCarga between '$fechaBaja' and '$FechaActual'";             
             
     //   $this -> logger -> LogInfo ("Ejecutando SQL obtenerDiasTrabajados: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $DiasT[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de LargoFiniquitos ".var_export ($LargoFiniquitos, true));
        return $DiasT;
    }


    public function Getisrmensual($ingresoacumulablesa)
    {
        $GetIsrMensual = array();
        $sql = " SELECT * FROM isrmensual
                 where  $ingresoacumulablesa >=limiteInferior  and   $ingresoacumulablesa<=limiteSuperior";      
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetIsrMensual[] = $reg;
        }
        return $GetIsrMensual;
    }

     public function ActualizarFiniquitosDiasTrabajados($diasdepago,$calculobruto,$pagoneto,$diaspagosa,$pagonetosa,$diferenciagratificacionsa,$ingresoacumulablesa,$limiteinferior,$excedenteLimitesa,$sobreexcedenteliminferior,$resultado,$cuotaqryfloat,$isr,$netoalpago,$entidadempleado,$consecutivoemp,$categoriaemp)
    {
        $sql = " UPDATE finiquitos
            SET diasDePago='$diasdepago',calculoBruto='$calculobruto', pagoNeto='$pagoneto',diasPagoSA='$diaspagosa',pagoNetoSA='$pagonetosa',diferenciaGratificacionSA='$diferenciagratificacionsa',ingresoAcumulableSA='$ingresoacumulablesa',limiteInferiorisr='$limiteinferior',excedenteLimiteSA='$excedenteLimitesa',tasaAplicable='$sobreexcedenteliminferior',resultado='$resultado',cuotaFija='$cuotaqryfloat',isr='$isr',netoAlPago='$netoalpago'
            WHERE entidadEmpFiniquito='$entidadempleado'
            AND consecutivoEmpFiniquito='$consecutivoemp'
            AND categoriaEmpFiniquito='$categoriaemp'
            and estatusFiniquito=0";      
       // $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res = mysqli_query($this->conn, $sql);
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
    }

    public function updateFiniquitoLaborales($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$FechaAltaEmpleadoLaborales)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarFotoEmpleado en persistencia");

         $sql = "UPDATE finiquitos set estatusFiniquito='6',fechaAlta='$FechaAltaEmpleadoLaborales'
                where entidadEmpFiniquito='$empleadoEntidadId'
                and consecutivoEmpFiniquito='$empleadoConsecutivoId'
                and categoriaEmpFiniquito='$empleadoTipoId'
                and estatusFiniquito='0'";
       // $this -> logger -> LogInfo ("Se ejecuto consulta  actualizarFotoEmpleado como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        $errno = mysqli_errno($this->conn);
        if ($errno != 0) {
            $this->logger->LogInfo("Ocurrio un error al actualizarFotoEmpleado.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo($errno);
        }
    }

    public function GetConsultaDiasFestivos()

    {
        $GetConsultaDiasFestivos = array();
        $sql = "SELECT * From  diasfestivos";
   
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
        $GetConsultaDiasFestivos[] = $reg;

        }
        return $GetConsultaDiasFestivos;
    }


    public function GetEmpleadosConVacacionesPendientes($OpcionBusqueda)
    {
        if($OpcionBusqueda=="1"){
            $categoriaEmpleado = "02";
        }else{
            $categoriaEmpleado = "03";

        }
        $getEmpleadosVacacionesP = array();
        $sql = "SELECT e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId,e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado,ef.nombreEntidadFederativa,ln.descripcionLineaNegocio,e.fechaIngresoEmpleado
                from empleados e
                left join entidadesfederativas ef
                on(e.idEntidadTrabajo =ef.idEntidadFederativa)
                left join catalogolineanegocio ln
                on(e.empleadoLineaNegocioId=ln.idLineaNegocio)
                where (empleadoEstatusId = '1' or empleadoEstatusId = '2')
                and empleadoCategoriaId = '$categoriaEmpleado'
                and EstatusRevisionVacaciones != '1'
                order by e.fechaIngresoEmpleado";      
      //  $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $getEmpleadosVacacionesP[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $getEmpleadosVacacionesP;
    }


    public function TraerFechaAltaEmpleadoTablaEmpleados($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId)
    {
        $FechaEmp = array();
        $sql = "SELECT e.fechaIngresoEmpleado as FechaAltaEmpleado, di.fechaImss as FechaAltaEmpleadoImss  
                from empleados e
                left join datosimss di ON (e.entidadFederativaId=di.empladoEntidadImss AND e.empleadoConsecutivoId=di.empleadoConsecutivoImss AND e.empleadoCategoriaId=di.empleadoCategoriaImss)
                where entidadFederativaId='$empleadoEntidadId'
                and empleadoConsecutivoId='$empleadoConsecutivoId'
                and empleadoCategoriaId='$empleadoTipoId' ";      
       // $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $FechaEmp[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $FechaEmp;
    }

    public function InsertarDiasVacacionesPendientes($EmpleadoCategoria,$EmpleadoConsecutivo,$EmpleadoTipo,$FechaVacaciones,$usuarioCapturaVacaciones,$Comentario,$aniversario){
        $incidenciaId= "5";//Indicamos que la incidencidencia es de vacaciones
        $sql = "insert into asistencia(empleadoEntidad, empleadoConsecutivo, empleadoTipo, incidenciaAsistenciaId, fechaAsistencia, fechaRegistroAsistencia, usuarioCapturaAsistencia, comentarioIncidencia, Aniversario,puntoServicioAsistenciaId,supervisorEntidad,supervisorConsecutivo,supervisorTipo)
                values ('$EmpleadoCategoria','$EmpleadoConsecutivo','$EmpleadoTipo','$incidenciaId','$FechaVacaciones', now(), '$usuarioCapturaVacaciones','$Comentario','$aniversario','1602','09','0017','02')";     
      //  $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
                $res = mysqli_query($this->conn, $sql);
    }

    public function InsertarDiasVacacionesPendientesOtrasEmpresas($EmpleadoCategoria,$EmpleadoConsecutivo,$EmpleadoTipo,$usuarioCapturaVacaciones,$Comentario,$vacacionesConfirmadasOtrasEmp){
        $incidenciaId= "5";//Indicamos que la incidencidencia es de vacaciones

        $REgistroVacaciones = array();
        $AniversarioOtrasEmp ="0";
        $sql1 = "SELECT count(idVacacionesOtrasEmp) as VacacionesIngresadas from  vacacionesOtrasEmpresas
               where EmpleadoEntidad='$EmpleadoCategoria'
               and EmpleadoConsecutivo='$EmpleadoConsecutivo'
               and EmpleadoCategoria='$EmpleadoTipo' ";      
      //  $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql1);
        $res = mysqli_query($this->conn, $sql1);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $REgistroVacaciones[] = $reg;
            $Existenvacaciones = $REgistroVacaciones[0]["VacacionesIngresadas"];
        }
  //  $this -> logger -> LogInfo ("valor del array de la consulta de REgistroVacaciones ".var_export ($REgistroVacaciones[0]["VacacionesIngresadas"], true));
        if($Existenvacaciones==0){
            $sql = "INSERT into vacacionesOtrasEmpresas(EmpleadoEntidad, EmpleadoConsecutivo, EmpleadoCategoria, idIncidencia, DiasTotalesVacaciones, FechaREgistro, UsuarioRegistro, Comentario, Aniversario)
                values ('$EmpleadoCategoria','$EmpleadoConsecutivo','$EmpleadoTipo','$incidenciaId','$vacacionesConfirmadasOtrasEmp', now(), '$usuarioCapturaVacaciones','$Comentario','$AniversarioOtrasEmp')";     
        }else{
            $sql=" UPDATE vacacionesOtrasEmpresas set DiasTotalesVacaciones='5',FechaREgistro=now(),UsuarioRegistro='$usuarioCapturaVacaciones'
                where EmpleadoEntidad='$EmpleadoCategoria'
               and EmpleadoConsecutivo='$EmpleadoConsecutivo'
               and EmpleadoCategoria='$EmpleadoTipo'";
        }
     //   $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res = mysqli_query($this->conn, $sql);
    }

    public function InsertarConfirmacionRevisionVacacionesPendientes($entidadEmpFiniquito,$consecutivoEmpFiniquito,$categoriaEmpFiniquito){
        $revisionVac= "1";//Indicamos que la incidencidencia es de vacaciones
            $sql=" UPDATE empleados set EstatusRevisionVacaciones='$revisionVac'
                    where entidadFederativaId='$entidadEmpFiniquito'
                    and empleadoConsecutivoId='$consecutivoEmpFiniquito'
                    and empleadoCategoriaId='$categoriaEmpFiniquito'";
     //   $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res = mysqli_query($this->conn, $sql);
    }

    public function getDiasCorrespondientesAOtrasEmpresas($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId)
    {
        $DiasAniversario = array();

        $sql = "SELECT count(idVacacionesOtrasEmp) as conteoVacOtrasEmp,DiasTotalesVacaciones from vacacionesOtrasEmpresas
                where EmpleadoEntidad = '$empleadoEntidadId'
                and EmpleadoConsecutivo='$empleadoConsecutivoId'
                and EmpleadoCategoria='$empleadoTipoId'";
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $DiasAniversario[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $DiasAniversario;
    }


     public function GetSalarioActual()
    {
        $SalarioAct = array();

        $sql = "SELECT MAX(sAreaA) cuota FROM tblSalarios";

      // $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $SalarioAct[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $SalarioAct;
    }


public function GetObtenerEstatusPAgo($entidadempDeu,$consecutivoempDeu,$categoriaempDeu)

    {
        $GetObtenerEstatusPAgo = array();
        $sql = "SELECT count(idDeudaFiniquito) AS UltimaDeuda, EstatusDeuda,DeudaEmp FROM deudasempleadosfiniquito
                WHERE EntEmpD='$entidadempDeu'
                AND ConEmpD='$consecutivoempDeu'
                AND CatEmpD='$categoriaempDeu'
                AND EstatusDeuda='0'
                and idDeudaFiniquito=(SELECT max(idDeudaFiniquito) FROM deudasempleadosfiniquito 
                WHERE EntEmpD='$entidadempDeu'
                AND ConEmpD='$consecutivoempDeu'
                AND CatEmpD='$categoriaempDeu')";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
        $GetObtenerEstatusPAgo[] = $reg;

        }
        return $GetObtenerEstatusPAgo;
    }

     public function ActualizarDatosDeuda($NombreTempArchivo,$numeroEmpleado)
    {
        //$this -> logger -> LogInfo ("Ejecutando. ActualizarDatosDeuda en persistencia");
        $empleadoidd = explode("-", $numeroEmpleado);
        $empleadoEntidad=$empleadoidd[0];
        $empleadoConsecutivo=$empleadoidd[1];
        $empleadoCategoria=$empleadoidd[2];

        $MaxIdDeuda = array();
        $sql1 = "SELECT max(idDeudaFiniquito) as MaxDeuda FROM deudasempleadosfiniquito 
                WHERE EntEmpD='$empleadoEntidad'
                AND ConEmpD='$empleadoConsecutivo'
                AND CatEmpD='$empleadoCategoria'";      
      //  $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql1);
        $res = mysqli_query($this->conn, $sql1);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $MaxIdDeuda[] = $reg;
            $IdMaxDeuda = $MaxIdDeuda[0]["MaxDeuda"];
        }
       // $this -> logger -> LogInfo ("Ejecutando SQL IdMaxDeuda: " . $IdMaxDeuda);


         $sql = "UPDATE deudasempleadosfiniquito set EstatusDeuda='1',NombreArchivo='$NombreTempArchivo'
                WHERE EntEmpD='$empleadoEntidad'
                AND ConEmpD='$empleadoConsecutivo'
                AND CatEmpD='$empleadoCategoria'
                and idDeudaFiniquito='$IdMaxDeuda'";
     //   $this -> logger -> LogInfo ("Se ejecuto consulta  actualizarFotoEmpleado como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        $errno = mysqli_errno($this->conn);
        if ($errno != 0) {
            $this->logger->LogInfo("Ocurrio un error al actualizarFotoEmpleado.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo($errno);
        }
    }

    public function GetListaAdeudosEmpleados($FechaInicioAdeudo,$FechaFinAdeudo,$Caso)
    {
        $GetListaHistoricosAduedosEmp = array();
        $sql = "SELECT concat_ws('-', emp.entidadFederativaId,emp.empleadoConsecutivoId,emp.empleadoCategoriaId) as NumeroEmpleado,concat_ws(' ', emp.apellidoPaterno,emp.apellidoMaterno,emp.nombreEmpleado) as NombreEmpleado,cl.descripcionLineaNegocio as LineaNegocio,pus.descripcionPuesto as PuestoEmpleado, ef.nombreEntidadFederativa as EntidadEmpleado, emp.roloperativo as RolOperativo,demp.DeudaEmp as DeudaEmpleado,demp.NombreArchivo as NombreArchivo,emp.fechaIngresoEmpleado as fechaReingreso,DEMP.idDeudaFiniquito AS IdEmpleado
                FROM deudasempleadosfiniquito demp
                left join empleados emp on(demp.EntEmpD=emp.entidadFederativaId and demp.ConEmpD=emp.empleadoConsecutivoId and demp.CatEmpD=emp.empleadoCategoriaId)
                left join catalogopuestos pus on (emp.empleadoIdPuesto=pus.idPuesto) 
                left join entidadesfederativas ef on(ef.idEntidadFederativa=emp.idEntidadTrabajo)
                left join catalogolineanegocio cl on(cl.idLineaNegocio = emp.empleadoLineaNegocioId)";

                if($Caso=="1"){
                    $sql.= " where EstatusDeuda='1'
                    and emp.fechaIngresoEmpleado between '$FechaInicioAdeudo' and '$FechaFinAdeudo'";      
                }else{
                    $sql.= " where EstatusDeuda='2'";
                }
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaHistoricosAduedosEmp[] = $reg;
        }
        return $GetListaHistoricosAduedosEmp;
    }

    public function ActualizarListaAdeudosEmpleados($IdEmpleado)
    {
        $sql = "UPDATE deudasempleadosfiniquito set EstatusDeuda='2'
                WHERE idDeudaFiniquito='$IdEmpleado'";
        $res = mysqli_query($this->conn, $sql);
       
    }

    public function TraerConsultaSueldoEmpleadoBaja($entidadFederativaId,$empleadoConsecutivoId,$empleadoCategoriaId)
        {
        // $this-> logger -> LogInfo("traedatosmontoturnos");
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo1: " . $fechaPeriodo1);
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo2: " . $fechaPeriodo2);

            $lista = array();

            $sql = "SELECT count(cuotaDiariaEmpleado) as ExisteEmpleado,cuotaDiariaEmpleado FROM cuotas_empleados
                    where empleadoEntidadCuota='$entidadFederativaId'
                    and empleadoConsecutivoCuota='$empleadoConsecutivoId'
                    and empleadoCategoriaCuota='$empleadoCategoriaId'";

        //$this->logger->LogInfo("datos de montosturnosfacturadosbypuntoserv: " . $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

            return $lista;
        }


 public function TraerElementosXReclutador()
        {
            $ElementosXReclutador = array();

            $sql = "SELECT * FROM catalogodocumentos;";

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $ElementosXReclutador[] = $reg;
            }

            return $ElementosXReclutador;
        }

public function TraerIndiceRotacionGeneral()
        {
            $IndiceRotacionGeneralP = array();

            $sql = "SELECT * FROM catalogotipobajas;";

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $IndiceRotacionGeneralP[] = $reg;
            }

            return $IndiceRotacionGeneralP;
        }

public function GetFiniquitosPrecesados($fechainicio,$fechafin)
    {
      // $this-> logger -> LogInfo("GetFiniquitosPrecesados");
        $TablaParaComplementosFiniquitos = array();

        $sql = "SELECT concat_ws('-',f.entidadEmpFiniquito,f.consecutivoEmpFiniquito,f.categoriaEmpFiniquito) as NumeroEmpleado,
                f.entidadEmpFiniquito as  EntidadEmpleado, f.consecutivoEmpFiniquito as ConsecutivoEmpleado,f.categoriaEmpFiniquito as CategoriaEmlpeado,
                concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as NombreEmpleado,ef.nombreEntidadFederativa as EntidadFederativa ,
                f.fechaAlta,f.fechaBaja,f.netoAlPago,f.EstatusComplemento,f.CantidadComplemento,f.folioBajaImss as FolioFiniquito
                from finiquitos f
                left join empleados e 
                on (f.entidadEmpFiniquito=e.entidadFederativaId and f.consecutivoEmpFiniquito=e.empleadoConsecutivoId and f.categoriaEmpFiniquito=e.empleadoCategoriaId)
                left join entidadesfederativas ef
                on(e.idEntidadTrabajo=ef.idEntidadFederativa)
                where estatusFiniquito='1'
                and fechaBaja between '$fechainicio' and '$fechafin'
                order by NumeroEmpleado";
  //      $this->logger->LogInfo("datos de GetFiniquitosPrecesados: " . $sql);

        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $TablaParaComplementosFiniquitos[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de DiasVacaciones1 ".var_export ($DiasVacaciones1, true));
        return $TablaParaComplementosFiniquitos;
    }

    public function actualizarFiniquitoParaComplemento($montoSolicitadoC,$FolioFiniquito,$numEmpleadoComp)
        {
        //$this-> logger -> LogInfo("actualizaestatuscargaarchivo");
            $NumeroEmpleadoExplode=explode("-", $numEmpleadoComp);
            $entidadEmpComple =  $NumeroEmpleadoExplode[0];
            $consecutivoEmpComple =  $NumeroEmpleadoExplode[1];
            $categoriaEmpComple =  $NumeroEmpleadoExplode[2];
          $sql = "update finiquitos
            set EstatusComplemento=1,CantidadComplemento='$montoSolicitadoC'
            where concat_ws('-',entidadEmpFiniquito,consecutivoEmpFiniquito,categoriaEmpFiniquito)='$numEmpleadoComp'
            and folioBajaImss='$FolioFiniquito'";
            $res = mysqli_query($this->conn, $sql);
        //$this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));
            if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
                throw new Exception("Error de actualización");
            }
        $sql1 = "INSERT into historicoComplementosFiniquitos(entidadEmpleadoC, consecutivoEmpleadoC, categoriaEmpleadoC, folioBajaImss, EstatusComplemento,FechaMovimiento,MontoSolicitado)
                values ('$entidadEmpComple','$consecutivoEmpComple','$categoriaEmpComple','$FolioFiniquito','1',now(),'$montoSolicitadoC')";     
                //   $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res1 = mysqli_query($this->conn, $sql1);

        }

public function getAltasDelMesGrafica($month, $year, $lineaNegocio)
{
       // $this-> logger -> LogInfo("getAltasDelMesGrafica");
    try {
        $sql = "select count(*) as altasMes
        FROM empleados
        left join catalogopuntosservicios cps on (empleados.empleadoIdPuntoServicio = cps.idPuntoServicio)
        where empleadoLineaNegocioId='$lineaNegocio' 
        and cps.idClientePunto !='2'
        and idTipoPuesto='03' 
        and month(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $year) . "'";
           // $this -> logger -> LogInfo ("ejecutando getAltasDelMesGrafica en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $altasMes = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getAltasDelMesGrafica ".var_export ($numeroFolio, true));
        return $altasMes;
    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function getBajasDelMesGrafica($month, $year, $lineaNegocio)
{
    try {
        $sql = "select count(*) as bajasMes
        FROM empleados
        left join catalogopuntosservicios cps on (empleados.empleadoIdPuntoServicio = cps.idPuntoServicio)
        where
        empleadoLineaNegocioId='$lineaNegocio' 
        and cps.idClientePunto !='2'
        and idTipoPuesto='03' and
        month(fechaBajaEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaBajaEmpleado)='" . mysqli_real_escape_string($this->conn, $year) . "'";
         //$this -> logger -> LogInfo ("ejecutando getBajasDelMesGrafica en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $bajasMes = $reg;
        }
        return $bajasMes;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}


public function getNumeroElementosPlantillaGrafica($fecha1, $fecha2,$lineaNegocio)
{
        //$this-> logger -> LogInfo("getNumeroElementosPlantilla");
    try {

        $sql = "SELECT sum(numeroElementos) as elementosVentas
        FROM servicios_plantillas 
        left join catalogopuntosservicios cps on ( servicios_plantillas.puntoServicioPlantillaId=cps.idPuntoServicio)
        where ((estatusPlantilla=1 and fechaInicio <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
        )
        and lineaNegocioRequisicion='$lineaNegocio'
        and cps.idClientePunto!='2'";
          //  $this -> logger -> LogInfo ("ejecutando getNumeroElementosPlantillaGrafica en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $elementosVentas = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getNumeroElementosPlantilla ".var_export ($numeroFolio, true));
        return $elementosVentas;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function getNumeroElementosGifGrafica($fecha1, $fecha2, $lineaNegocio)
{
    try {
        $sql = "SELECT
        ifnull(count(*),0) as numElementosGif
        from empleados e
        left join catalogopuntosservicios cps on ( e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        where e.idTipoPuesto='03' and e.empleadoLineaNegocioId='$lineaNegocio'
        and (((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
        )
        and cps.idClientePunto!='2'";
        //$this -> logger -> LogInfo ("Ejecutando SQL: getNumeroElementosGifGrafica11 " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $numElementosGif = $reg;
        }
        return $numElementosGif;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function ObtenerReclutadoresByLineaNegocioAndMonthGrafica($lineaNegocio, $month, $puesto)
{
    $listaTotal = array();
    $listaTotal = array();
    $totallistaarrayjunto = array();
    $arraytemp = array();
    try {
        $sql = " SELECT  concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
                         concat_ws(' ',apellidoPaterno,nombreEmpleado) as nombreEmpleado
                from empleados e 
                where empleadoLineaNegocioId='$lineaNegocio'
                and empleadoIdPuesto='$puesto'
                and ((year(e.fechaIngresoEmpleado)=year(now())
                    and month(e.fechaIngresoEmpleado)<='$month'
                    and (empleadoEstatusId=1 or empleadoEstatusId=2))
                or (year(e.fechaIngresoEmpleado)<year(now())
                    and (empleadoEstatusId=1 or empleadoEstatusId=2))
                or (empleadoEstatusId=0
                    and month(fechaBajaEmpleado)='$month'
                    and year (fechaBajaEmpleado)=year(now())))
                order by numeroEmpleado asc";
        $res = mysqli_query($this->conn, $sql);
             while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                 $lista[] = $reg;
             }
        $largolistatareclutadore = count($lista);
         

        for($i=0; $i<$largolistatareclutadore;$i++){
            $numeroempleadoreclutador = $lista[$i]["numeroEmpleado"];
            $nombreempleadoreclutador = $lista[$i]["nombreEmpleado"];

            $sql1 = " SELECT count(e.empleadoEstatusId) as conteo,concat_ws('-',e.reclutadorEntidad,e.reclutadorConsecutivoId,e.reclutadorTipo) as NumeroReclutador,
                      concat_ws('-',e.reclutadorEntidad,e.reclutadorConsecutivoId,e.reclutadorTipo,e.nombreEmpleado) as numeroEmpleadoNombre
                      from empleados e 
                      where concat_ws('-',reclutadorEntidad,reclutadorConsecutivoId,reclutadorTipo)='$numeroempleadoreclutador' and
                      month(fechaIngresoEmpleado)='$month'
                      and year(fechaIngresoEmpleado)=year(now())";
           // $this -> logger -> LogInfo ("Ejecutando SQL: ObtenerReclutadoresByLineaNegocioAndMonthGrafica " . $sql1);
        $res = mysqli_query($this->conn, $sql1);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaTotal[] = $reg;
            $listaTotal[$i]["NumEmp"]=$numeroempleadoreclutador;
            $listaTotal[$i]["NomEmp"]=$nombreempleadoreclutador;
        }
        }
        for($j=0; $j<$largolistatareclutadore;$j++){
             $conteo = $listaTotal[$j]["conteo"];
             $NumeroReclutador = $listaTotal[$j]["NumeroReclutador"];
             $nombreempleadoreclutador = $listaTotal[$j]["NomEmp"];
             $NumEmp = $listaTotal[$j]["NumEmp"];

            // $this -> logger -> LogInfo ("valor del array de la j ".var_export ($j, true));
             if($conteo=="" || $conteo==null || $conteo==NULL || $conteo=="null" || $conteo=="NULL"){
                $conteo="0";
             }if($NumeroReclutador=="" || $NumeroReclutador==null || $NumeroReclutador==NULL || $NumeroReclutador=="null" || $NumeroReclutador=="NULL"){
                $NumeroReclutador=$NumEmp;
             }
             if($j=="0"){
                $totallistaarrayjunto[$j]["conteo"]=$conteo;
                $totallistaarrayjunto[$j]["NumeroReclutador"]=$NumeroReclutador;
                $totallistaarrayjunto[$j]["nombreempleadoreclutador"]=$nombreempleadoreclutador;
             }else{
                $totallistaarrayjuntolargo=count($totallistaarrayjunto);
                $entre=1;

                for($k=0; $k<$totallistaarrayjuntolargo;$k++){
                    $conteo1 = $totallistaarrayjunto[$k]["conteo"];
                   // $this -> logger -> LogInfo ("valor del array de la conteo1 ".var_export ($conteo1, true));

                 if($conteo>$conteo1){
                    $entre=2;
                    for($l=$k;$l<$j;$l++){
                        $conteo2 = $totallistaarrayjunto[$l]["conteo"];
                        $NumeroReclutador2 = $totallistaarrayjunto[$l]["NumeroReclutador"];
                $nombreempleadoreclutador2 = $totallistaarrayjunto[$l]["nombreempleadoreclutador"];
                        $arraytemp[$l]["conteo"]=$conteo2;
                        $arraytemp[$l]["NumeroReclutador"]=$NumeroReclutador2;
                        $arraytemp[$l]["nombreempleadoreclutador"]=$nombreempleadoreclutador2;
                    }for($m=$k;$m<$j;$m++){
                        $conteo3 = $arraytemp[$m]["conteo"];
                        $NumeroReclutador3 = $arraytemp[$m]["NumeroReclutador"];
                        $nombreempleadoreclutador3 = $arraytemp[$m]["nombreempleadoreclutador"];
                        $totallistaarrayjunto[$m+1]["conteo"]=$conteo3;
                        $totallistaarrayjunto[$m+1]["NumeroReclutador"]=$NumeroReclutador3;
                $totallistaarrayjunto[$m+1]["nombreempleadoreclutador"]=$nombreempleadoreclutador3;

                    }
                    $totallistaarrayjunto[$k]["conteo"]=$conteo;
                    $totallistaarrayjunto[$k]["NumeroReclutador"]=$NumeroReclutador;
                    $totallistaarrayjunto[$k]["nombreempleadoreclutador"]=$nombreempleadoreclutador;
                    $k=$j;
                 }
                }

                if($entre==1){
                    $totallistaarrayjunto[$j]["conteo"]=$conteo;
                    $totallistaarrayjunto[$j]["NumeroReclutador"]=$NumeroReclutador;
                    $totallistaarrayjunto[$j]["nombreempleadoreclutador"]=$nombreempleadoreclutador;
                }
             }
        }//unset($variable1

        return $totallistaarrayjunto;

    } catch (Exception $e) {

       // $this->logger->LogInfo("getReclutadoresByLineaNegocioAndMonth ERROR:" . $e->getMessage());
    }
}

public function ObtenerElementosByReclutadorGrafica($reclutadorId, $month)
{
        //$this -> logger -> LogInfo ("ObtenerElementosByReclutadorGrafica en persistencia");
    $lista = array();
    try {
        $sql = "select
        concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) as nombreEmpleado,
        empleadoEstatusId
        from empleados e where
        concat_ws('-',reclutadorEntidad,reclutadorConsecutivoId,reclutadorTipo)='" . mysqli_real_escape_string($this->conn, $reclutadorId) . "' and
        month(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaIngresoEmpleado)=year(now())
        group by numeroEmpleado,nombreEmpleado";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la ObtenerElementosByReclutadorGrafica ".var_export ($lista, true));
        return $lista;
    } catch (Exception $e) {
    $this->logger->LogInfo("ObtenerElementosByReclutadorGrafica ERROR:" . $e->getMessage());
    }
}

public function ListaCompletaReclutadoresByLineaNegocioAndMonth($lineaNegocio, $month, $puesto)
{
        //$this -> logger -> LogInfo ("getReclutadoresByLineaNegocioAndMonth en persistencia");
    $lista = array();
    try {
        $sql = "select
        concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        concat_ws('.',apellidoPaterno,nombreEmpleado) as nombreEmpleado
        ,e.fechaIngresoEmpleado
        -- , e.empleadoEstatusId, e.fechaBajaEmpleado
        from empleados e where
        (empleadoLineaNegocioId='" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "'
        and empleadoIdPuesto=" . $puesto . "
        and year(e.fechaIngresoEmpleado)=year(now())
        and month(e.fechaIngresoEmpleado)<='" . mysqli_real_escape_string($this->conn, $month) . "'
        and (empleadoEstatusId=1 or empleadoEstatusId=2))
        or
        (empleadoLineaNegocioId='" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "'
        and empleadoIdPuesto=" . $puesto . "
        and year(e.fechaIngresoEmpleado)<year(now())
        and (empleadoEstatusId=1 or empleadoEstatusId=2))
        or
        (empleadoLineaNegocioId='" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "'
        and empleadoIdPuesto=" . $puesto . "
        and empleadoEstatusId=0
        and month(fechaBajaEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year (fechaBajaEmpleado)=year(now())) order by concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) asc";
   // $this -> logger -> LogInfo ("Ejecutando SQL: getReclutadoresByLineaNegocioAndMonth " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getReclutadoresByLineaNegocioAndMonth ".var_export ($lista, true));
        return $lista;
    } catch (Exception $e) {
       // $this->logger->LogInfo("getReclutadoresByLineaNegocioAndMonth ERROR:" . $e->getMessage());
    }
}

public function ListaCompletaElementosByReclutador($reclutadorId, $month)
{
        //$this -> logger -> LogInfo ("ListaCompletaElementosByReclutador en persistencia");
    $lista = array();
    try {
        $sql = "select
        concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) as nombreEmpleado,
        empleadoEstatusId
        from empleados e where
        concat_ws('-',reclutadorEntidad,reclutadorConsecutivoId,reclutadorTipo)='" . mysqli_real_escape_string($this->conn, $reclutadorId) . "' and
        month(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaIngresoEmpleado)=year(now())
        group by numeroEmpleado,nombreEmpleado";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la ListaCompletaElementosByReclutador ".var_export ($lista, true));
        return $lista;
    } catch (Exception $e) {
        $this->logger->LogInfo("ListaCompletaElementosByReclutador ERROR:" . $e->getMessage());
    }
}

public function GetListaFiniquitosCOmp()
    {
        $GetListaComplementosSolicitado = array();
        $sql = "SELECT concat(empleados.entidadFederativaId,'-',empleados.empleadoConsecutivoId,'-',empleados.empleadoCategoriaId)AS numempleado,
                       concat(empleados.apellidoPaterno,' ',empleados.apellidoMaterno,' ',empleados.nombreEmpleado) AS nombreempleado,
                       catalogopuestos.descripcionPuesto,
                       entidadesfederativas.nombreEntidadFederativa,
                       finiquitos.netoAlPago,finiquitos.folioBajaImss,finiquitos.CantidadComplemento
            FROM  finiquitos
            LEFT JOIN  empleados
            ON finiquitos.entidadEmpFiniquito=empleados.entidadFederativaId
            AND finiquitos.consecutivoEmpFiniquito=empleados.empleadoConsecutivoId
            AND finiquitos.categoriaEmpFiniquito=empleados.empleadoCategoriaId
            LEFT JOIN  catalogopuestos
            ON empleados.empleadoIdPuesto=catalogopuestos.idPuesto
            LEFT JOIN entidadesfederativas
            ON empleados.idEntidadTrabajo=entidadesfederativas.idEntidadFederativa
            LEFT JOIN datosimss
            ON datosimss.empladoEntidadImss=empleados.entidadFederativaId
            AND datosimss.empleadoConsecutivoImss=empleados.empleadoConsecutivoId
            AND datosimss.empleadoCategoriaImss=empleados.empleadoCategoriaId
            where finiquitos.EstatusComplemento=1";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaComplementosSolicitado[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de entidad ".var_export ($entidad, true));
        return $GetListaComplementosSolicitado;
    }

    public function actualizarFiniquitoSolicitudComplemento($numempleado,$folioBaja,$CantidadComplemento,$opcion)
    {
    //$this-> logger -> LogInfo("actualizaestatuscargaarchivo");
        $NumeroEmpleadoExplode1=explode("-", $numempleado);
        $entidadEmpComple1 =  $NumeroEmpleadoExplode1[0];
        $consecutivoEmpComple1 =  $NumeroEmpleadoExplode1[1];
        $categoriaEmpComple1 =  $NumeroEmpleadoExplode1[2];
        if($opcion=="1"){
            $estatusComp = "3";
            $montoSolicitado = $CantidadComplemento;
        }else{
            $estatusComp = "2";
            $montoSolicitado = NULL;
        }
      $sql = "update finiquitos
        set EstatusComplemento='$estatusComp',CantidadComplemento='$montoSolicitado'
        where concat_ws('-',entidadEmpFiniquito,consecutivoEmpFiniquito,categoriaEmpFiniquito)='$numempleado'
        and folioBajaImss='$folioBaja'";
        $res = mysqli_query($this->conn, $sql);
    //$this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));
        if ($res !== true) {
        //$this -> logger -> LogInfo ("Error de actualización");
            throw new Exception("Error de actualización");
        }

        $sql1 = "INSERT into historicoComplementosFiniquitos(entidadEmpleadoC, consecutivoEmpleadoC, categoriaEmpleadoC, folioBajaImss, EstatusComplemento,FechaMovimiento,MontoSolicitado)
                values ('$entidadEmpComple1','$consecutivoEmpComple1','$categoriaEmpComple1','$folioBaja','$estatusComp',now(),'$CantidadComplemento')";     
                //   $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res1 = mysqli_query($this->conn, $sql1);

    }
    public function GetListaFiniquitosCompPorPagar()
    {
        $GetListaComplementosPorPagar = array();
        $sql = "SELECT concat(empleados.entidadFederativaId,'-',empleados.empleadoConsecutivoId,'-',empleados.empleadoCategoriaId)AS numempleado,
                       concat(empleados.apellidoPaterno,' ',empleados.apellidoMaterno,' ',empleados.nombreEmpleado) AS nombreempleado,
                       catalogopuestos.descripcionPuesto,
                       entidadesfederativas.nombreEntidadFederativa,
                       finiquitos.netoAlPago,finiquitos.folioBajaImss,finiquitos.CantidadComplemento
            FROM  finiquitos
            LEFT JOIN  empleados
            ON finiquitos.entidadEmpFiniquito=empleados.entidadFederativaId
            AND finiquitos.consecutivoEmpFiniquito=empleados.empleadoConsecutivoId
            AND finiquitos.categoriaEmpFiniquito=empleados.empleadoCategoriaId
            LEFT JOIN  catalogopuestos
            ON empleados.empleadoIdPuesto=catalogopuestos.idPuesto
            LEFT JOIN entidadesfederativas
            ON empleados.idEntidadTrabajo=entidadesfederativas.idEntidadFederativa
            LEFT JOIN datosimss
            ON datosimss.empladoEntidadImss=empleados.entidadFederativaId
            AND datosimss.empleadoConsecutivoImss=empleados.empleadoConsecutivoId
            AND datosimss.empleadoCategoriaImss=empleados.empleadoCategoriaId
            where finiquitos.EstatusComplemento=3";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaComplementosPorPagar[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de entidad ".var_export ($entidad, true));
        return $GetListaComplementosPorPagar;
    }
   public function actualizareFiniquitoComplementoPagado($numempleado,$folioBaja,$CantidadComplemento)
        {
        //$this-> logger -> LogInfo("actualizaestatuscargaarchivo");
        $NumeroEmpleadoExplode2=explode("-", $numempleado);
        $entidadEmpComple2 =  $NumeroEmpleadoExplode2[0];
        $consecutivoEmpComple2 =  $NumeroEmpleadoExplode2[1];
        $categoriaEmpComple2 =  $NumeroEmpleadoExplode2[2];
          $sql = "update finiquitos
            set EstatusComplemento='4'
            where concat_ws('-',entidadEmpFiniquito,consecutivoEmpFiniquito,categoriaEmpFiniquito)='$numempleado'
            and folioBajaImss='$folioBaja'";
            $res = mysqli_query($this->conn, $sql);
        //$this -> logger -> LogInfo ("ejecutando query ".var_export ($sql, true));
            if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
                throw new Exception("Error de actualización");
            }
        $sql1 = "INSERT into historicoComplementosFiniquitos(entidadEmpleadoC, consecutivoEmpleadoC, categoriaEmpleadoC, folioBajaImss, EstatusComplemento,FechaMovimiento,MontoSolicitado)
                values ('$entidadEmpComple2','$consecutivoEmpComple2','$categoriaEmpComple2','$folioBaja','4',now(),'$CantidadComplemento')";     
                //   $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res1 = mysqli_query($this->conn, $sql1);

        }

        public function GetListaHistoricoComp()
    {
        $GetListaMovimentosHistorico = array();
        $sql = "SELECT concat(e.apellidoPaterno,' ',e.apellidoMaterno,' ',e.nombreEmpleado) AS nombreEmpleado,concat(hcf.entidadEmpleadoC,'-',hcf.consecutivoEmpleadoC,'-',hcf.categoriaEmpleadoC) AS numeroEmpleado,cp.descripcionPuesto,ef.nombreEntidadFederativa,hcf.EstatusComplemento,hcf.FechaMovimiento,hcf.MontoSolicitado
                from historicoComplementosFiniquitos hcf
                LEFT JOIN finiquitos f ON (f.entidadEmpFiniquito=hcf.entidadEmpleadoC AND f.consecutivoEmpFiniquito=hcf.consecutivoEmpleadoC AND f.categoriaEmpFiniquito=hcf.categoriaEmpleadoC)
                LEFT JOIN empleados e on(e.entidadFederativaId=hcf.entidadEmpleadoC and e.empleadoConsecutivoId=hcf.consecutivoEmpleadoC and  e.empleadoCategoriaId=hcf.categoriaEmpleadoC)
                LEFT JOIN  catalogopuestos cp ON e.empleadoIdPuesto=cp.idPuesto
                LEFT JOIN entidadesfederativas ef ON e.idEntidadTrabajo=ef.idEntidadFederativa";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaMovimentosHistorico[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de entidad ".var_export ($entidad, true));
        return $GetListaMovimentosHistorico;
    }

public function getIncidenciasXdiaXcliente($idcliente,$fechadia,$usuario) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    $sql = "select * from catalogoclientes cc 
    left join catalogopuntosservicios cps on(cc.idCliente=cps.idClientePunto)
    left join asistencia a on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
    left join catalogoincidencias ci on( a.incidenciaAsistenciaId=ci.incidenciaId )
    where idCliente='" . $this->safeValue($idcliente) . "'
    and a.fechaAsistencia= '" . $this->safeValue($fechadia) . "' ";
    
    $rs = mysqli_query($this->conn, $sql);
  //  $this -> logger -> LogInfo ("Ejecutando getturnosbyclientetotales: " . $sql);

    $result = array();
    if (!is_bool($rs)) {
        while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {

              //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($reg, true));
           $result[] = $reg;
                //$result[$reg["fechaAsistencia"]]["nomenclaturaIncidencia"] = $reg["nomenclaturaIncidencia"];
       }
   }
  // $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos result: "  . var_export ( $result, true));


       // $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($result, true));
   return $result;
}

public function getIncidenciasdeTurnosDia($idcliente,$fechadia,$accion,$usuario) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
        // $this -> logger -> LogInfo ("Ejecutando usuario: " . var_export ( $usuario["userLog"], true));
    $sql = "select count(*)turnosdiaonoche 
    from catalogopuntosservicios  cps
    left join turnoasistencia ta
    on (cps.idPuntoServicio=ta.puntoServicioTurno)
    left join asistencia a 
    on(ta.entidadEmpTurno=a.empleadoEntidad and ta.consecutivoEmpTurno=a.empleadoConsecutivo  and ta.categoriaEmpTurno=a.empleadoTipo  and ta.fechaTurno=a.fechaAsistencia)
    where cps.idClientePunto='" . $this->safeValue($idcliente) . "'
    and ta.fechaTurno= '" . $this->safeValue($fechadia) . "' ";
    
    if($accion==2){
        //esta accion es para sacar el total de turnos de dia
       $sql .=" and (tipoTurno=1 or tipoTurno=3 or tipoTurno=5 or tipoTurno=7 or tipoTurno=8 or tipoTurno=10 or tipoTurno=12 or tipoTurno=14 or tipoTurno=16 or tipoTurno=18 or tipoTurno=19 )";
   }else if($accion==3){
      //esta accion es para sacar el total de turnos dedia
    $sql.=" and (tipoTurno=2 or tipoTurno=4 or tipoTurno=6 or tipoTurno=7 or tipoTurno=9 or tipoTurno=11 or tipoTurno=13 or tipoTurno=15 or tipoTurno=17 or tipoTurno=18  or tipoTurno=19)";
}
$rs = mysqli_query($this->conn, $sql);
    //  $this -> logger -> LogInfo ("Ejecutando getincidenciasturnosdia1: " . $sql);

$result = array();
if (!is_bool($rs)) {
    while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {

              //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($reg, true));
       $result[] = $reg;
                //$result[$reg["fechaAsistencia"]]["nomenclaturaIncidencia"] = $reg["nomenclaturaIncidencia"];
   }
}
//$this -> logger -> LogInfo ("Ejecutando getturnoscubiertos result: "  . var_export ( $result, true));


       // $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($result, true));
return $result;
}

public function ObtenerDiasSolicitados($PlantillaId,$turnoDiaC,$turnoNocheC)
{

        //$this -> logger -> LogInfo (" getDetalleRequisicionesByPuntoServicioId: " . $puntoServicioId);

    $lista = array();

    $sql = "SELECT $turnoDiaC,$turnoNocheC from diasdetrabajoplantilla
    where servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $PlantillaId) . "'";

       // $this -> logger -> LogInfo ("Ejecutando getDetalleRequisicionesByPuntoServicioId: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function ObteneDatosPlantillasPorPunto($puntoServicioId)
{

        //$this -> logger -> LogInfo (" getDetalleRequisicionesByPuntoServicioId: " . $puntoServicioId);

    $lista = array();

    $sql = "    SELECT * from servicios_plantillas sp
                    where sp.puntoServicioPlantillaId='$puntoServicioId'
                    and estatusPlantilla='1' ";

   //    $this -> logger -> LogInfo ("Ejecutando ObteneDatosPlantillasPorPunto: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function getPuntoServicioXCliente()
    {
        //$this -> logger -> LogInfo ("traeCatalogoClientes en persistencia");
        $listaClientes = array();

        try {

            $sql = "select  idPuntoServicio,puntoServicio
            from catalogopuntosservicios
            where esatusPunto='1'";

            //$this -> logger -> LogInfo ("ejecutando traeCatalogoClientes en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaClientes[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la listaClientes ".var_export ($listaClientes, true));
            return $listaClientes;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }


public function getEntidadesXCliente($ClienteElegido,$casoXgerente,$regionGerente,$LineaNegocioElegida)
    {
        //$this -> logger -> LogInfo ("getEntidadesXCliente en persistencia");
     $listaEnditadesFederativas = array();
     try {
         $sql = "SELECT DISTINCT idEntidadFederativa, nombreEntidadFederativa
                 FROM  entidadesfederativas ef
                 left join catalogopuntosservicios cs ON (ef.idEntidadFederativa=cs.idEntidadPunto)";

                if($casoXgerente=='1') 
                  {
                   $sql.=" left join index_regiones ir on ir.idEntidadI= cs.idEntidadPunto";
                  }

                 $sql.=" where cs.idClientePunto='$ClienteElegido'
                 and cs.esatusPunto='1'";
                 
                 if ($casoXgerente=='1') {
                        $sql.=" and (idRegionI='" . mysqli_real_escape_string($this->conn, $regionGerente) . "' and idLineaNegI='" . mysqli_real_escape_string($this->conn, $LineaNegocioElegida) . "')";
                   }

                 $sql.=" order by idEntidadFederativa";
       //  $this -> logger -> LogInfo ("ejecutando getEntidadesXCliente en persistencia". $sql);
         $res = mysqli_query($this->conn, $sql);
         while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
             $listaEnditadesFederativas[] = $reg;
         }
         return $listaEnditadesFederativas;
        }catch (Exception $e) {
     }
    }

public function getPuntoXentidadCliente($EntidadElegida,$ClienteElegido,$lineaNegocio,$valorgifTipo)
    {
        //$this -> logger -> LogInfo ("getPuntoXentidadCliente en persistencia");
        $listaClientes = array();
        try {
            $sql = "SELECT idPuntoServicio,puntoServicio
                    FROM  catalogopuntosservicios";

                    if ($valorgifTipo==0) 
                    {
                     $sql.=" where idClientePunto='$ClienteElegido'";
                    }
                    if ($valorgifTipo==1) 
                    {
                     $sql.=" where idClientePunto='2'";
                    }

            $sql.=" and idEntidadPunto='$EntidadElegida'
                    and esatusPunto='1'
                    and idLineaNegocioPunto='$lineaNegocio'
                    order by puntoServicio";
            //$this -> logger -> LogInfo ("ejecutando getPuntoXentidadCliente en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaClientes[] = $reg;
            }
            return $listaClientes;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }


public function getSupervisoresXLinea($LineaNegocioElegida,$valorgifTipo,$tipoBusqueda,$entidadElegida)
    {
        //$this -> logger -> LogInfo ("getSupervisoresXLinea en persistencia");
        $supervisores = array();

        try {
                $sql = "SELECT distinct(concat_ws('-',entidadFederativaId, empleadoConsecutivoId, empleadoCategoriaId)) as NumEmpSupervisor,
                               concat_ws(' ',nombreEmpleado, apellidoPaterno, apellidoMaterno) as Nombre
                        FROM empleados e
                        left join supervisor_puntoservicio sps 
                        on (sps.supervisorEntidad= e.entidadFederativaId 
                            and sps.supervisorConsecutivo=e.empleadoConsecutivoId 
                            and sps.supervisorTipo=e.empleadoCategoriaId)
                        left join catalogopuntosservicios cps on(sps.puntoServicioId=cps.idPuntoServicio)
                        where (empleadoIdPuesto='6' or empleadoIdPuesto='88' or empleadoIdPuesto='116' or empleadoIdPuesto='61')
                        and empleadoLineaNegocioId='$LineaNegocioElegida'
                        and (empleadoEstatusId='1' or empleadoEstatusId='2')";

                        if ($tipoBusqueda==0 || $tipoBusqueda==20) 
                        {
                        $sql.=" and idEntidadTrabajo=$entidadElegida";
                        }

                        if($valorgifTipo==0) 
                        {
                         $sql.=" and idClientePunto!='2'";
                        }
                        if($valorgifTipo==1) 
                        {
                         $sql.=" and idClientePunto='2'";
                        }
                        $sql.=" order by Nombre";
          
                        //$this -> logger -> LogInfo ("ejecutando getSupervisoresXLinea en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $supervisores[] = $reg;
            }
            return $supervisores;
        } catch (Exception $e) {
        }
    }

public function getClientesXLinea($LineaNegocioElegida,$valorgifTipo,$casoXgerente,$regionGerente)
    {
       //$this -> logger -> LogInfo ("getClientesXLinea en persistencia");
        $clientes = array();
        try {
            $sql = "select DISTINCT idCliente, razonSocial from catalogoclientes cc
                    left join catalogoPuntosServicios cps on cps.idClientePunto= cc.idCliente";
                    
                    if($casoXgerente=='1') 
                      {
                       $sql.=" left join index_regiones ir on ir.idEntidadI= cps.idEntidadPunto";
                      }

                    $sql.=" where cc.estatusCliente='1'
                    and cps.idLineaNegocioPunto='$LineaNegocioElegida'
                    and idCliente!='47'";

                    if ($valorgifTipo==0) 
                    {
                     $sql.= " and idCliente!='2'";
                    }

                    if ($valorgifTipo==1) 
                    {
                     $sql.= " and idCliente='2'";
                    }

                    if ($casoXgerente=='1') 
                    {
                     $sql.=" and (idRegionI='" . mysqli_real_escape_string($this->conn, $regionGerente) . "' and idLineaNegI='" . mysqli_real_escape_string($this->conn, $LineaNegocioElegida) . "')";
                    }

            $sql.= " order by razonSocial asc";
            //$this -> logger -> LogInfo ("ejecutando getClientesXLinea en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $clientes[] = $reg;
            }
            return $clientes;
        } catch (Exception $e) {
        }
    }
    
    public function getEntidadSupervisor($supervisorElegido,$LineaElegida,$valorgifTipo)
    {
       // $this -> logger -> LogInfo ("getEntidadSupervisor en persistencia");
        $supervisores = array();
        try {
            $sql = "select DISTINCT idEntidadFederativa,nombreEntidadFederativa from catalogopuntosservicios cps 
                    left join supervisor_puntoservicio sup on sup.puntoServicioId=cps.idPuntoServicio 
                    left join entidadesfederativas ef on ef.idEntidadFederativa=cps.idEntidadPunto
                    where concat_ws('-', supervisorEntidad,supervisorConsecutivo,supervisorTipo)='$supervisorElegido'
                    and esatusPunto=1
                    and idLineaNegocioPunto='$LineaElegida'";
                if ($valorgifTipo==0)
                 {
                  $sql.=" and idClientePunto!=2";
                 }
                 if($valorgifTipo==1)
                 {
                  $sql.=" and idClientePunto=2";
                 }
          //  $this -> logger -> LogInfo ("ejecutando getEntidadSupervisor en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $supervisores[] = $reg;
            }
            return $supervisores;
        } catch (Exception $e) {
        }
    }

public function getLineasDeNegocio()
    {
       // $this -> logger -> LogInfo ("getLineasDeNegocio en persistencia");
        $LineasNeg = array();
        try {
            $sql = "SELECT idLineaNegocio, descripcionLineaNegocio
                    FROM catalogolineanegocio";

            //$this -> logger -> LogInfo ("ejecutando getLineasDeNegocio en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $LineasNeg[] = $reg;
            }
            return $LineasNeg;
        } catch (Exception $e) {
        }
    }

    public function GetPuntosParaGeo()
    {
      // $this-> logger -> LogInfo("GetFiniquitosPrecesados");
        $PuntosGeolocalizacion = array();

        $sql = "SELECT  idPuntoServicio,latitudPunto,longitudPunto,puntoServicio
                FROM catalogopuntosservicios
                WHERE esatusPunto='1'";
  //      $this->logger->LogInfo("datos de GetFiniquitosPrecesados: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $PuntosGeolocalizacion[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de DiasVacaciones1 ".var_export ($DiasVacaciones1, true));
        return $PuntosGeolocalizacion;
    }

    public function GetEstatusEmpeladoGeo($numeroEmpleado)
    {
      // $this-> logger -> LogInfo("GetFiniquitosPrecesados");
        $StatusEmplGeo = array();

        $sql = "SELECT * from empleados
                where  concat_ws('-', entidadFederativaId , empleadoConsecutivoId, empleadoCategoriaId) = '$numeroEmpleado'";
  //      $this->logger->LogInfo("datos de GetFiniquitosPrecesados: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $StatusEmplGeo[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de DiasVacaciones1 ".var_export ($DiasVacaciones1, true));
        return $StatusEmplGeo;
    }

    /*SELECT idPuntoServicio,puntoServicio
FROM  catalogopuntosservicios
where idEntidadPunto='09'          trae los puntos de servicio dependiendo de la entidad del supervisor*/



public function getNumeroElementosGifGraficaSoloGif($fecha1, $fecha2, $lineaNegocio,$opcion,$entidadGif,$pservicioGif)
{
if ($opcion=='0') {
    try {
        $sql = "SELECT
        ifnull(count(*),0) as numElementosGif
        from empleados e
        left join catalogopuntosservicios cps on ( e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        where e.idTipoPuesto='03' and e.empleadoLineaNegocioId='$lineaNegocio'
        and (((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
        )
        and cps.idClientePunto ='2'
        and cps.puntoServicio NOT LIKE 'MER%' 
        AND cps.puntoServicio NOT LIKE '%INCAPACIDAD%'
        AND cps.puntoServicio NOT LIKE 'CON%'";
       //$this -> logger -> LogInfo ("Ejecutando SQL: getNumeroElementosGifGraficaSoloGif0 " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $numElementosGif = $reg;
        }
        return $numElementosGif;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
 }

 else if($opcion=='1'){
    try {
        $sql = "SELECT
        ifnull(count(*),0) as numElementosGif
        from empleados e
        left join catalogopuntosservicios cps on ( e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        where e.idTipoPuesto='03' and e.empleadoLineaNegocioId='$lineaNegocio'
        and (((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
        )
        and cps.idClientePunto ='2'
        and cps.idEntidadPunto='$entidadGif'
        and cps.puntoServicio NOT LIKE 'MER%' 
        and cps.puntoServicio NOT LIKE '%INCAPACIDAD%'
        AND cps.puntoServicio NOT LIKE 'CON%'";
        //$this -> logger -> LogInfo ("Ejecutando SQL: getNumeroElementosGifGraficaSoloGif1 " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $numElementosGif = $reg;
        }
        return $numElementosGif;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
 }

 else if($opcion=='2'){
    try {
        $sql = "SELECT
        ifnull(count(*),0) as numElementosGif
        from empleados e
        left join catalogopuntosservicios cps on ( e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        where e.idTipoPuesto='03' and e.empleadoLineaNegocioId='$lineaNegocio'
        and (((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
        )
        and cps.idClientePunto ='2'
        and cps.idEntidadPunto='$entidadGif'
        and cps.idPuntoServicio='$pservicioGif'";
        //$this -> logger -> LogInfo ("Ejecutando SQL: getNumeroElementosGifGraficaSoloGif3" . $sql);
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $numElementosGif = $reg;
        }
        return $numElementosGif;

    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
 }
}

public function getEntidadesPSGif($merma)
    {
        //$this -> logger -> LogInfo ("getEntidadesPSGif en persistencia");
     $supervisores = array();
     if ($merma=='0') {
        try {
            $sql = "SELECT distinct idEntidadPunto, ef.nombreEntidadFederativa
                    FROM catalogopuntosservicios 
                    left join entidadesfederativas ef on (idEntidadPunto= ef.idEntidadFederativa)
                    where idClientePunto='2'
                    and esatusPunto='1'
                    order by idEntidadPunto";
           // $this -> logger -> LogInfo ("ejecutando getEntidadesPSGif en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $supervisores[] = $reg;
            }
            return $supervisores;
        } catch (Exception $e) {
        }
      }else{
            try {
            $sql = " SELECT distinct idEntidadPunto, ef.nombreEntidadFederativa
                    FROM catalogopuntosservicios 
                    left join entidadesfederativas ef on (idEntidadPunto= ef.idEntidadFederativa)
                    where idClientePunto='2'
                    and esatusPunto='1'
                    and puntoServicio LIKE 'MER%' 
                    or puntoServicio LIKE '%INCAPACIDAD%'
                    or puntoServicio LIKE 'CON%'
                    order by idEntidadPunto";
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $supervisores[] = $reg;
            }
            return $supervisores;
        } catch (Exception $e) {
        }

      }
    }

public function entidadesReclutadorSup($merma)
    {
        //$this -> logger -> LogInfo ("getEntidadesPSGif en persistencia");
     $supervisores = array();
        try {
            $sql = "SELECT distinct idEntidadPunto, ef.nombreEntidadFederativa
                    FROM catalogopuntosservicios 
                    left join entidadesfederativas ef on (idEntidadPunto= ef.idEntidadFederativa)
                    where idClientePunto='2'
                    and esatusPunto='1'
                    order by idEntidadPunto";
           // $this -> logger -> LogInfo ("ejecutando getEntidadesPSGif en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $supervisores[] = $reg;
            }
            return $supervisores;
        }catch (Exception $e) {

        }
    }
public function getPuntoServicioGifXentidad($entidadElegidaGif)
    {
        //$this -> logger -> LogInfo ("getPuntoServicioGifXentidad en persistencia");
        $puntosSGif = array();
        try {
            $sql = "SELECT distinct idPuntoServicio,puntoServicio
                    FROM catalogopuntosservicios 
                    left join entidadesfederativas ef on (idEntidadPunto= ef.idEntidadFederativa)
                    where idClientePunto='2'
                    and esatusPunto='1'
                    and idEntidadPunto='$entidadElegidaGif'
                    and puntoServicio NOT LIKE 'MER%' 
                    and puntoServicio NOT LIKE '%INCAPACIDAD%'
                    and puntoServicio NOT LIKE 'CON%'
                    order by idEntidadPunto";
            //$this -> logger -> LogInfo ("ejecutando getPuntoServicioGifXentidad en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $puntosSGif[] = $reg;
            }
            return $puntosSGif;
        } catch (Exception $e) {
        }
    }

     public function getIdClientePorPunto($idpuntoservicio)
    {
        $ListaIdClientexP = array();
        $sql = "SELECT idClientePunto,visiblerh FROM catalogopuntosservicios
                where idPuntoServicio='" . mysqli_real_escape_string($this->conn, $idpuntoservicio) . "'";
     
      //  $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $ListaIdClientexP[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $ListaIdClientexP;
    }

    public function InsertPeticioinAsistenciaMerma($usuario,$empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$empleadoPuntoServicioId,$supervisorEntidadId,$supervisorConsecutivoId,$supervisorTipoId,$incidenciaId,$asistenciaFecha,$comentariIncidencia,$tipoPeriodo,$puestoCubiertoId,$idCliente,$valordia,$plantilladeservicio,$idlineanegocioPunto,$tipoIncidenciaPeticionM,$idPlantillaServicio,$selectMotivoIncidenciaEspecial)
    {

       // $this -> logger -> LogInfo ("Ejecutando. InsertPeticioinAsistenciaMerma en persistencia");

        $sql = "insert into PeticionAsistenciaMerma(EmpEntidadM, EmpConsecutivoM, EmpCategoriaM, idIncidenciaM, idCLienteM, idPuntoServicioM, idPlantillaEmp,idMotivoIncidencia, idPlantillaServicioM, idTipoPeriodoM, IdTipoPuestoM, idLineaNegocioM, fechaAsistenciaM, ComentarioM, turnoAsistenciaM, SupEntidadM, SupConsecutivoM, SupCategoriaM, usuarioCapturaM, fechaPeticion, estatusPeticionM, tipoIncidenciaPeticionM)
        values ( " .
        "'" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $incidenciaId) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $idCliente) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $empleadoPuntoServicioId) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $idPlantillaServicio) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $selectMotivoIncidenciaEspecial) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $plantilladeservicio) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $tipoPeriodo) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $puestoCubiertoId) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $idlineanegocioPunto) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $comentariIncidencia) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $valordia) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $supervisorEntidadId) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $supervisorConsecutivoId) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $supervisorTipoId) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $usuario) . "', " .
        " now(),1, " .
        "'" . mysqli_real_escape_string($this->conn, $tipoIncidenciaPeticionM) . "')";
      //  $this -> logger -> LogInfo ("Se ejecuto consulta  InsertPeticioinAsistenciaMerma como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al InsertPeticioinAsistenciaMerma.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

     public function getPeticionesM($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$asistenciaFecha)
    {
        $LisataPeticionM = array();
        $sql = "SELECT idIncidenciaM as IncidenciaId, turnoAsistenciaM as turnoIncidencia from PeticionAsistenciaMerma
                where EmpEntidadM='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                and EmpConsecutivoM='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                and EmpCategoriaM='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
                and(estatusPeticionM ='1' or estatusPeticionM='2')
                and fechaAsistenciaM='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'
                union
                select asi.incidenciaAsistenciaId as IncidenciaId , ta.tipoTurno as turnoIncidencia from asistencia asi
                left join turnoasistencia ta on(ta.entidadEmpTurno = asi.empleadoEntidad and ta.consecutivoEmpTurno=asi.empleadoConsecutivo and ta.categoriaEmpTurno=asi.empleadoTipo)
                where asi.empleadoEntidad='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                and asi.empleadoConsecutivo='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                and asi.empleadoTipo='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
                and asi.fechaAsistencia='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'
                and ta.fechaTurno='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'
                union
                SELECT incidenciaId,incidenciaId
                FROM incidenciasespeciales 
                where incidenciaFecha ='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'
                and incidenciaEmpleadoEntidad='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                and incidenciaEmpleadoConsecutivo='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                and incidenciaEmpleadoTipo='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'";
     
        //$this -> logger -> LogInfo ("Ejecutando SQL getPeticionesM: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $LisataPeticionM[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $LisataPeticionM;
    }


    public function getListaPeticionesAsistencia()
    {
        $GetListaAsisP = array();
        $sql = " SELECT concat(empleados.entidadFederativaId,'-',empleados.empleadoConsecutivoId,'-',empleados.empleadoCategoriaId)AS numempleado,
                empleados.entidadFederativaId,empleados.empleadoConsecutivoId,empleados.empleadoCategoriaId,
                    concat(empleados.apellidoPaterno,' ',empleados.apellidoMaterno,' ',empleados.nombreEmpleado) AS nombreempleado,
                     catalogopuestos.descripcionPuesto,entidadesfederativas.nombreEntidadFederativa,datosimss.fechaImss,datosimss.fechaBajaImss,finiquitos.fechaAlta,finiquitos.fechaBaja,
                     finiquitos.prestamoFiniquito,finiquitos.infonavitFiniquito,finiquitos.fonacotFiniquito,finiquitos.pensionFiniquito,cuotas_empleados.cuotaDiariaEmpleado,
                    finiquitos.diasTrabajados, finiquitos.separacion, finiquitos.piramidar , finiquitos.antiguedadTotal,
                     finiquitos.diasParaPPVacaciones, finiquitos.diasDeVacaciones,finiquitos.factorPropVacaciones, finiquitos.calculoDiasAguinaldo,
                      finiquitos.factorDiasAguinaldo, finiquitos.propVacaciones,
                     finiquitos.primaVacacionalNeta, finiquitos.proporcionNetaAguinaldo,finiquitos.diasDePago,
                     finiquitos.aumentoGratificacion, finiquitos.calculoBruto, finiquitos.pagoNeto,finiquitos.propVacacionesSA,finiquitos.primaVacacionalSA,
                     finiquitos.propAginaldoSA,finiquitos.diasPagoSA,finiquitos.pagoNetoSA,finiquitos.diferenciaGratificacionSA,finiquitos.ingresoAcumulableSA,finiquitos.limiteInferiorisr,
                     finiquitos.excedenteLimiteSA,finiquitos.tasaAplicable,finiquitos.resultado,finiquitos.cuotaFija,finiquitos.isr,finiquitos.netoAlPago,finiquitos.VacacionesPendientes,finiquitos.PrimaVacacionalPendiente,finiquitos.PpPrimaVacacionalPendiente,datosimss.salarioDiario
            FROM  finiquitos
            LEFT JOIN  empleados
            ON finiquitos.entidadEmpFiniquito=empleados.entidadFederativaId
            AND finiquitos.consecutivoEmpFiniquito=empleados.empleadoConsecutivoId
            AND finiquitos.categoriaEmpFiniquito=empleados.empleadoCategoriaId
            LEFT JOIN datosimss
            ON datosimss.empladoEntidadImss=empleados.entidadFederativaId
            AND datosimss.empleadoConsecutivoImss=empleados.empleadoConsecutivoId
            AND datosimss.empleadoCategoriaImss=empleados.empleadoCategoriaId
            LEFT JOIN cuotas_empleados
            ON cuotas_empleados.empleadoEntidadCuota=finiquitos.entidadEmpFiniquito
            AND cuotas_empleados.empleadoConsecutivoCuota=finiquitos.consecutivoEmpFiniquito
            AND cuotas_empleados.empleadoCategoriaCuota=finiquitos.categoriaEmpFiniquito
            LEFT JOIN  catalogopuestos
            ON empleados.empleadoIdPuesto=catalogopuestos.idPuesto
            LEFT JOIN entidadesfederativas
            ON empleados.idEntidadTrabajo=entidadesfederativas.idEntidadFederativa
            where finiquitos.estatusFiniquito=0
            order by numempleado";      
       // $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaAsisP[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $GetListaAsisP;
    }

public function getPuntoServicioGifXentidadMerma($entidadElegidaGif)
    {
        //$this -> logger -> LogInfo ("getPuntoServicioGifXentidadMerma en persistencia");
        $puntosSGifMerma = array();
        try {
            $sql = "SELECT distinct idPuntoServicio,puntoServicio
                    FROM catalogopuntosservicios 
                    left join entidadesfederativas ef on (idEntidadPunto= ef.idEntidadFederativa)
                    where idEntidadPunto='$entidadElegidaGif'
                    and esatusPunto='1'
                    and idClientePunto='2'
                    and (puntoServicio LIKE 'MER%' 
                    or puntoServicio LIKE '%INCAPACIDAD%'
                    OR puntoServicio LIKE 'CON%')
                    order by puntoServicio";
            //$this -> logger -> LogInfo ("ejecutando getPuntoServicioGifXentidadMerma en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $puntosSGifMerma[] = $reg;
            }
            return $puntosSGifMerma;
        } catch (Exception $e) {
        }
    }


public function getNumeroElementosGifGraficaSoloGifMerma($fecha1, $fecha2, $lineaNegocio,$opcion,$entidadGif,$pservicioGif)
{
if ($opcion=='0') {
    try {
        $sql = "SELECT
        ifnull(count(*),0) as numElementosGif
        from empleados e
        left join catalogopuntosservicios cps on ( e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        where e.idTipoPuesto='03' and e.empleadoLineaNegocioId='$lineaNegocio'
        and (((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
       )
        and cps.idClientePunto ='2'
        and (cps.puntoServicio LIKE 'MER%' 
        OR cps.puntoServicio LIKE '%INCAPACIDAD%'
        OR cps.puntoServicio LIKE 'CON%')";
       //$this -> logger -> LogInfo ("Ejecutando SQL: getNumeroElementosGifGraficaSoloGifMerma0 " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $numElementosGif = $reg;
        }
        return $numElementosGif;

    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
 }

 else if($opcion=='1'){
    try {
        $sql = "SELECT
        ifnull(count(*),0) as numElementosGif
        from empleados e
        left join catalogopuntosservicios cps on ( e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        where e.idTipoPuesto='03' and e.empleadoLineaNegocioId='$lineaNegocio'
        and (((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
        )
        and cps.idClientePunto ='2'
        and cps.idEntidadPunto='$entidadGif'
        and (cps.puntoServicio LIKE 'MER%' 
        OR cps.puntoServicio LIKE '%INCAPACIDAD%'
        OR cps.puntoServicio LIKE 'CON%')";
        //$this -> logger -> LogInfo ("Ejecutando SQL: getNumeroElementosGifGraficaSoloGifMerma1 " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $numElementosGif = $reg;
        }
        return $numElementosGif;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
 }

 else if($opcion=='2'){
    try {
        $sql = "SELECT
        ifnull(count(*),0) as numElementosGif
        from empleados e
        left join catalogopuntosservicios cps on ( e.empleadoIdPuntoServicio=cps.idPuntoServicio)
        where e.idTipoPuesto='03' and e.empleadoLineaNegocioId='$lineaNegocio'
        and (((e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and e.fechaIngresoEmpleado <= CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))
        )
        and cps.idClientePunto ='2'
        and cps.idEntidadPunto='$entidadGif'
        and cps.idPuntoServicio='$pservicioGif'";
        //$this -> logger -> LogInfo ("Ejecutando SQL: getNumeroElementosGifGraficaSoloGifMerma3" . $sql);
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $numElementosGif = $reg;
        }
        return $numElementosGif;

    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
 }
}

public function getListaPeticionesAsistenciaParaMerma($fechaInicioPeriodo,$fechaTerminoPeriodo,$caso)
    {
        $GetListaAsisParaMerm = array();
        $sql = " SELECT concat_ws('-',emp.entidadFederativaId,emp.empleadoConsecutivoId,emp.empleadoCategoriaId) as idEmpleado,concat_ws(' ',emp.nombreEmpleado,emp.apellidoPaterno,emp.apellidoMaterno) as NombreEmpleado,ci.descripcionIncidencia as Incidencia,cie.descripcionIncidenciaEspecial as IncidenciaE,cps.puntoServicio as PuntoServicio,pam.idPlantillaServicioM,idTipoPeriodoM as tipoPeriodo,cp.descripcionPuesto as TipoPuesto,cln.descripcionLineaNegocio as LineaNegocio,pam.fechaAsistenciaM as FechaDelRegistro,pam.ComentarioM as Comentario,pam.turnoAsistenciaM as TipoTurno,concat_ws('-',emps.entidadFederativaId,emps.empleadoConsecutivoId,emps.empleadoCategoriaId) as idSupervisor,concat_ws(' ',emps.nombreEmpleado,emps.apellidoPaterno,emps.apellidoMaterno) as NombreSupervisor,pam.usuarioCapturaM as UsuarioSolicitud,pam.fechaPeticion as FechaPeticion,pam.EmpEntidadM,pam.EmpConsecutivoM,pam.EmpCategoriaM,pam.idIncidenciaM,pam.idPuntoServicioM,pam.IdTipoPuestoM,pam.idLineaNegocioM,pam.SupEntidadM,pam.SupConsecutivoM,pam.SupCategoriaM,pam.idCLienteM, pam.tipoIncidenciaPeticionM,pam.idPlantillaEmp,pam.idMotivoIncidencia
            from PeticionAsistenciaMerma pam
            left join empleados emp on(emp.entidadFederativaId=pam.EmpEntidadM and emp.empleadoConsecutivoId=pam.EmpConsecutivoM and emp.empleadoCategoriaId=pam.EmpCategoriaM)
            left join catalogoincidencias ci on (ci.incidenciaId=pam.idIncidenciaM)
            left join catalogopuntosservicios cps on(pam.idPuntoServicioM=cps.idPuntoServicio)
            left join catalogopuestos cp on(cp.idPuesto=pam.IdTipoPuestoM)
            left join catalogolineanegocio cln on(cln.idLineaNegocio=pam.idLineaNegocioM)
            left join empleados emps on(emps.entidadFederativaId=pam.SupEntidadM and emps.empleadoConsecutivoId=pam.SupConsecutivoM and emps.empleadoCategoriaId=pam.SupCategoriaM)
            left join catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=pam.idIncidenciaM)
            where estatusPeticionM='1'";
            if($caso == "1"){
                $sql.=" and pam.fechaAsistenciaM between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicioPeriodo) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaTerminoPeriodo) . "' AS DATE)";
            }
                
      //  $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaAsisParaMerm[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $GetListaAsisParaMerm;
    }

public function updateEstatusPeticionMerma($EmpEntidadM,$EmpConsecutivoM,$EmpCategoriaM,$idPuntoServicioM,$idIncidenciaM,$FechaDelRegistro,$Comentario,$Opcion)
    {

        //$this -> logger -> LogInfo ("Ejecutando. actualizarEstatusVisitante en persistencia");
        if($Opcion=="1"){//1 indica que fue aceptada la solicitud, 2 indica que fue rechazada
            $sql = "UPDATE PeticionAsistenciaMerma set estatusPeticionM=2
                    where estatusPeticionM=1
                    AND EmpEntidadM='" . mysqli_real_escape_string($this->conn, $EmpEntidadM) . "'
                    AND EmpConsecutivoM='" . mysqli_real_escape_string($this->conn, $EmpConsecutivoM) . "'
                    AND EmpCategoriaM='" . mysqli_real_escape_string($this->conn, $EmpCategoriaM) . "'
                    AND idPuntoServicioM='" . mysqli_real_escape_string($this->conn, $idPuntoServicioM) . "'
                    AND idIncidenciaM='" . mysqli_real_escape_string($this->conn, $idIncidenciaM) . "'
                    AND fechaAsistenciaM='" . mysqli_real_escape_string($this->conn, $FechaDelRegistro) . "'";
        }else{
            $sql = "UPDATE PeticionAsistenciaMerma set estatusPeticionM=3, ComentarioDeclinado='" . mysqli_real_escape_string($this->conn, $Comentario) . "' 
                    where estatusPeticionM=1
                    AND EmpEntidadM='" . mysqli_real_escape_string($this->conn, $EmpEntidadM) . "'
                    AND EmpConsecutivoM='" . mysqli_real_escape_string($this->conn, $EmpConsecutivoM) . "'
                    AND EmpCategoriaM='" . mysqli_real_escape_string($this->conn, $EmpCategoriaM) . "'
                    AND idPuntoServicioM='" . mysqli_real_escape_string($this->conn, $idPuntoServicioM) . "'
                    AND idIncidenciaM='" . mysqli_real_escape_string($this->conn, $idIncidenciaM) . "'
                    AND fechaAsistenciaM='" . mysqli_real_escape_string($this->conn, $FechaDelRegistro) . "'";
        }
        

        //$this -> logger -> LogInfo ("Se ejecuto consulta  actualizarEstatusVisitante como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            //$this -> logger -> LogInfo ("Ocurrio un error al actualizar Estatus Visitante.");
            //$this -> logger -> LogError ("ERRNO:" . mysqli_errno ($this -> conn) . " - " . mysqli_error ($this -> conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

    public function getListaEstatusPeticionesAsistenciaParaMerma($usuario,$CasoBusqueda,$fechaMermaInicio,$fechaMermaFin)
    {
        $GetListaEstatusAsisParaMerm = array();
        $UsuarioSupervisor = $usuario["usuario"];
        $sql = " SELECT concat_ws('-',emp.entidadFederativaId,emp.empleadoConsecutivoId,emp.empleadoCategoriaId) as idEmpleado,concat_ws(' ',emp.nombreEmpleado,emp.apellidoPaterno,emp.apellidoMaterno) as NombreEmpleado,ci.descripcionIncidencia as Incidencia,cie.descripcionIncidenciaEspecial as IncidenciaE,cps.puntoServicio as PuntoServicio,pam.idPlantillaServicioM,idTipoPeriodoM as tipoPeriodo,cp.descripcionPuesto as TipoPuesto,cln.descripcionLineaNegocio as LineaNegocio,pam.fechaAsistenciaM as FechaDelRegistro,pam.turnoAsistenciaM as TipoTurno,concat_ws('-',emps.entidadFederativaId,emps.empleadoConsecutivoId,emps.empleadoCategoriaId) as idSupervisor,concat_ws(' ',emps.nombreEmpleado,emps.apellidoPaterno,emps.apellidoMaterno) as NombreSupervisor,pam.usuarioCapturaM as UsuarioSolicitud,pam.fechaPeticion as FechaPeticion,pam.EmpEntidadM,pam.EmpConsecutivoM,pam.EmpCategoriaM,pam.idIncidenciaM,pam.idPuntoServicioM,pam.IdTipoPuestoM,pam.idLineaNegocioM,pam.SupEntidadM,pam.SupConsecutivoM,pam.SupCategoriaM,pam.idCLienteM,pam.ComentarioDeclinado as ComentarioDecline,pam.estatusPeticionM as EstatusP, ef.nombreEntidadFederativa as EntidadF, pam.tipoIncidenciaPeticionM,pam.ComentarioM as ComentarioSupervisor
            from PeticionAsistenciaMerma pam
            left join empleados emp on(emp.entidadFederativaId=pam.EmpEntidadM and emp.empleadoConsecutivoId=pam.EmpConsecutivoM and emp.empleadoCategoriaId=pam.EmpCategoriaM)
            left join catalogoincidencias ci on (ci.incidenciaId=pam.idIncidenciaM)
            left join catalogopuntosservicios cps on(pam.idPuntoServicioM=cps.idPuntoServicio)
            left join catalogopuestos cp on(cp.idPuesto=pam.IdTipoPuestoM)
            left join catalogolineanegocio cln on(cln.idLineaNegocio=pam.idLineaNegocioM)
            left join entidadesfederativas ef on (emp.idEntidadTrabajo=ef.idEntidadFederativa)
            left join empleados emps on(emps.entidadFederativaId=pam.SupEntidadM and emps.empleadoConsecutivoId=pam.SupConsecutivoM and emps.empleadoCategoriaId=pam.SupCategoriaM)
            left join catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=pam.idIncidenciaM)"; 

            if($CasoBusqueda=="0"){
                if($usuario["rol"]=="Lider Unidad" || $usuario["rol"]=="Supervisor" || $usuario["rol"]=="Consulta Supervisor"){
                    $sql.=" where usuarioCapturaM='$UsuarioSupervisor'";   
                } 
            }else{
                if($usuario["rol"]=="Lider Unidad" || $usuario["rol"]=="Supervisor" || $usuario["rol"]=="Consulta Supervisor"){
                $sql.=" where usuarioCapturaM='$UsuarioSupervisor' and pam.fechaAsistenciaM between CAST('$fechaMermaInicio' AS DATE) and CAST('$fechaMermaFin' AS DATE)";   
                }else{
                    $sql.=" where pam.fechaAsistenciaM between CAST('$fechaMermaInicio' AS DATE) and CAST('$fechaMermaFin' AS DATE)";
                }  
            }   
       // $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaEstatusAsisParaMerm[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $GetListaEstatusAsisParaMerm;
    }

    public function UpdateRegistroPeticionMerma1($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$asistenciaFecha,$valordia,$usuario){

       //$this -> logger -> LogInfo ("Ejecutando. UpdateRegistroPeticionMerma1 en persistencia");
        if($valordia=="borrar"){
            $ComentarioDecl = "Declinado Por El Usuario :". $usuario . ",Al Borrar La Asistencia Desde El Modulo De 'Asistencia'";
            $estatusPeticionC = 5;
        }else{
           $ComentarioDecl = "Declinado Por El Usuario :". $usuario . ",Al Realizar Un Registro En Un Punto De Servicio Distinto Al Solicitado";
            $estatusPeticionC = 4;
        }
        $consultapeticion = array();
        $sql = "SELECT * from PeticionAsistenciaMerma
                where EmpEntidadM='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                and EmpConsecutivoM='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                and EmpCategoriaM='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
                and fechaAsistenciaM='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'
                and (estatusPeticionM='1' or estatusPeticionM='2')";//and turnoAsistenciaM='" . mysqli_real_escape_string($this->conn, $valordia) . "'
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $consultapeticion[] = $reg;
        }
        $largoResultadop = count($consultapeticion);
        if($largoResultadop!="0"){

            $sql=" UPDATE PeticionAsistenciaMerma set estatusPeticionM='" . mysqli_real_escape_string($this->conn, $estatusPeticionC) . "', ComentarioDeclinado='" . mysqli_real_escape_string($this->conn, $ComentarioDecl) . "' 
                    where (estatusPeticionM=1 or estatusPeticionM=2)
                    AND EmpEntidadM='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                    AND EmpConsecutivoM='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                    AND EmpCategoriaM='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
                    AND fechaAsistenciaM='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'";//AND turnoAsistenciaM='" . mysqli_real_escape_string($this->conn, $valordia) . "'
            $res = mysqli_query($this->conn, $sql);   
        }
        //$this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
    }

public function ObtenerTurnosCubiertoSeparadosXPuntos($i, $puntoServicioId) {
        //$this-> logger -> LogInfo("ObtenerTurnosCubiertoSeparadosXPuntos");
    $listTCS = array();
        try {
            $sql = "SELECT * FROM turnoasistencia
                    where puntoServicioTurno='" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "'
                    and fechaTurno = '" . mysqli_real_escape_string($this->conn, $i) . "'";
            //$this -> logger -> LogInfo ("ejecutando ObtenerTurnosCubiertoSeparadosXPuntos en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listTCS[] = $reg;
            }
            return $listTCS;
        } catch (Exception $e) {
        }
}

public function ListaCompletaReclutadoresByEntidad($lineaNegocio, $month, $puesto, $entidadTrabajoRS)
{
        //$this -> logger -> LogInfo ("ListaCompletaReclutadoresByEntidad en persistencia");
    $lista = array();
    try {
        $sql = "select
        concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) as nombreEmpleado
        ,e.fechaIngresoEmpleado
        -- , e.empleadoEstatusId, e.fechaBajaEmpleado
        from empleados e 
        where (empleadoLineaNegocioId='" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "'
        and empleadoIdPuesto=$puesto
        and year(e.fechaIngresoEmpleado)=year(now())
        and month(e.fechaIngresoEmpleado)<='" . mysqli_real_escape_string($this->conn, $month) . "'
        and (empleadoEstatusId=1 or empleadoEstatusId=2)
        and idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadTrabajoRS) . "')
        or
        (empleadoLineaNegocioId='" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "'
        and empleadoIdPuesto=$puesto
        and year(e.fechaIngresoEmpleado)<year(now())
        and (empleadoEstatusId=1 or empleadoEstatusId=2)
         and idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadTrabajoRS) . "')
        or
        (empleadoLineaNegocioId='" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "'
        and empleadoIdPuesto=$puesto
        and empleadoEstatusId=0
        and month(fechaBajaEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year (fechaBajaEmpleado)=year(now())
        and idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadTrabajoRS) . "') 
        order by concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) asc";

   // $this -> logger -> LogInfo ("Ejecutando SQL: ListaCompletaReclutadoresByEntidad " . $sql);

        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
        return $lista;
    } catch (Exception $e) {
        $this->logger->LogInfo("ListaCompletaReclutadoresByEntidad ERROR:" . $e->getMessage());
    }
}

public function obtenerElementosByReclutadorEntidad($reclutadorId, $month)
{
        //$this -> logger -> LogInfo ("obtenerElementosByReclutadorEntidad en persistencia");
    $lista = array();
    try {
        $sql = "select
        concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) as nombreEmpleado,
        empleadoEstatusId
        from empleados e where
        concat_ws('-',reclutadorEntidad,reclutadorConsecutivoId,reclutadorTipo)='" . mysqli_real_escape_string($this->conn, $reclutadorId) . "' and
        month(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaIngresoEmpleado)=year(now())
        group by numeroEmpleado,nombreEmpleado";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
        return $lista;
    } catch (Exception $e) {
        $this->logger->LogInfo("obtenerElementosByReclutadorEntidad ERROR:" . $e->getMessage());
    }
}

public function ObtenerReclutadoresquinceMP($lineaNegocio, $month, $puesto, $selectEntidad)
{
    //$this -> logger -> LogInfo ("ObtenerReclutadoresByLineaNegocioAndMonthGrafica en persistencia");
    $listaTotal = array();
    $listaTotal = array();
    $totallistaarrayjunto = array();
    $arraytemp = array();
    try {
        $sql = " SELECT  concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
                concat_ws(' ',apellidoPaterno,nombreEmpleado) as nombreReclutador
                from empleados e 
                where empleadoLineaNegocioId='$lineaNegocio'
                and idEntidadTrabajo='$selectEntidad'
                and empleadoIdPuesto='$puesto'
                and ((year(e.fechaIngresoEmpleado)=year(now())
                    and month(e.fechaIngresoEmpleado)<='$month'
                    and (empleadoEstatusId=1 or empleadoEstatusId=2))
                or (year(e.fechaIngresoEmpleado)<year(now())
                    and (empleadoEstatusId=1 or empleadoEstatusId=2))
                or (empleadoEstatusId=0
                    and month(fechaBajaEmpleado)='$month'
                    and year (fechaBajaEmpleado)=year(now())))
                order by numeroEmpleado asc";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
        $largolistatareclutadore = count($lista);
         

        for($i=0; $i<$largolistatareclutadore;$i++){
            $numeroempleadoreclutador = $lista[$i]["numeroEmpleado"];
            $nombreempleadoreclutador = $lista[$i]["nombreReclutador"];

            $sql1 = " SELECT count(e.empleadoEstatusId) as conteo,concat_ws('-',e.reclutadorEntidad,e.reclutadorConsecutivoId,e.reclutadorTipo) as NumeroReclutador,

                      concat_ws('-',e.reclutadorEntidad,e.reclutadorConsecutivoId,e.reclutadorTipo,e.nombreEmpleado) as numeroEmpleadoNombre
                      from empleados e 
                      where concat_ws('-',reclutadorEntidad,reclutadorConsecutivoId,reclutadorTipo)='$numeroempleadoreclutador' and
                      month(fechaIngresoEmpleado)='$month'
                      and year(fechaIngresoEmpleado)=year(now())";
           // $this -> logger -> LogInfo ("Ejecutando SQL: ObtenerReclutadoresByLineaNegocioAndMonthGrafica " . $sql1);
        $res = mysqli_query($this->conn, $sql1);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaTotal[] = $reg;
            $listaTotal[$i]["NumEmp"]=$numeroempleadoreclutador;
            $listaTotal[$i]["NomEmp"]=$nombreempleadoreclutador;
        }
        }
        for($j=0; $j<$largolistatareclutadore;$j++){

           //  $nombreempleadoreclutador = $lista[$j]["nombreReclutador"];
             $conteo = $listaTotal[$j]["conteo"];
             $NumeroReclutador = $listaTotal[$j]["NumeroReclutador"];
             $nombreempleadoreclutador = $listaTotal[$j]["NomEmp"];

             $NumEmp = $listaTotal[$j]["NumEmp"];
            // $this -> logger -> LogInfo ("valor del array de la j ".var_export ($j, true));
            
             if($conteo=="" || $conteo==null || $conteo==NULL || $conteo=="null" || $conteo=="NULL"){
                $conteo="0";
             }if($NumeroReclutador=="" || $NumeroReclutador==null || $NumeroReclutador==NULL || $NumeroReclutador=="null" || $NumeroReclutador=="NULL"){
                $NumeroReclutador=$NumEmp;
             }
             if($j=="0"){
                $totallistaarrayjunto[$j]["conteo"]=$conteo;
                $totallistaarrayjunto[$j]["NumeroReclutador"]=$NumeroReclutador;
                $totallistaarrayjunto[$j]["nombreempleadoreclutador"]=$nombreempleadoreclutador;
             }else{
                $totallistaarrayjuntolargo=count($totallistaarrayjunto);
                $entre=1;
                for($k=0; $k<$totallistaarrayjuntolargo;$k++){
                    $conteo1 = $totallistaarrayjunto[$k]["conteo"];
                   // $this -> logger -> LogInfo ("valor del array de la conteo1 ".var_export ($conteo1, true));
                 if($conteo>$conteo1){
                    $entre=2;
                    for($l=$k;$l<$j;$l++){
                        $conteo2 = $totallistaarrayjunto[$l]["conteo"];
                        $NumeroReclutador2 = $totallistaarrayjunto[$l]["NumeroReclutador"];
                        $nombreempleadoreclutador2 = $totallistaarrayjunto[$l]["nombreempleadoreclutador"];
                        $arraytemp[$l]["conteo"]=$conteo2;
                        $arraytemp[$l]["NumeroReclutador"]=$NumeroReclutador2;
                        $arraytemp[$l]["nombreempleadoreclutador"]=$nombreempleadoreclutador2;
                    }for($m=$k;$m<$j;$m++){
                        $conteo3 = $arraytemp[$m]["conteo"];
                        $NumeroReclutador3 = $arraytemp[$m]["NumeroReclutador"];
                        $nombreempleadoreclutador3 = $arraytemp[$m]["nombreempleadoreclutador"];
                        $totallistaarrayjunto[$m+1]["conteo"]=$conteo3;
                        $totallistaarrayjunto[$m+1]["NumeroReclutador"]=$NumeroReclutador3;
                        $totallistaarrayjunto[$m+1]["nombreempleadoreclutador"]=$nombreempleadoreclutador3;
                    }
                    $totallistaarrayjunto[$k]["conteo"]=$conteo;
                    $totallistaarrayjunto[$k]["NumeroReclutador"]=$NumeroReclutador;
                    $totallistaarrayjunto[$k]["nombreempleadoreclutador"]=$nombreempleadoreclutador;
                    $k=$j;
                 }
                }
            //    $this -> logger -> LogInfo ("valor del array de la totallistaarrayjunto ".var_export ($totallistaarrayjunto, true));
                if($entre==1){
                    $totallistaarrayjunto[$j]["conteo"]=$conteo;
                    $totallistaarrayjunto[$j]["NumeroReclutador"]=$NumeroReclutador;
                    $totallistaarrayjunto[$j]["nombreempleadoreclutador"]=$nombreempleadoreclutador;
                }
             //   $this -> logger -> LogInfo ("valor del array de la totallistaarrayjunto ".var_export ($totallistaarrayjunto, true));
             }
        }//unset($variable1

        return $totallistaarrayjunto;
    } catch (Exception $e) {
       // $this->logger->LogInfo("getReclutadoresByLineaNegocioAndMonth ERROR:" . $e->getMessage());
    }
}


public function getElementos15MP($reclutadorId, $month)
{
        //$this -> logger -> LogInfo ("ObtenerElementosByReclutadorGrafica en persistencia");
    $lista = array();
    try {
        $sql = "select
        concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) as numeroEmpleado,
        concat_ws(' ',apellidoPaterno,apellidoMaterno,nombreEmpleado) as nombreEmpleado,
        empleadoEstatusId
        from empleados e where
        concat_ws('-',reclutadorEntidad,reclutadorConsecutivoId,reclutadorTipo)='" . mysqli_real_escape_string($this->conn, $reclutadorId) . "' and
        month(fechaIngresoEmpleado)='" . mysqli_real_escape_string($this->conn, $month) . "'
        and year(fechaIngresoEmpleado)=year(now())
        group by numeroEmpleado,nombreEmpleado";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la getElementosByReclutador ".var_export ($lista, true));
        return $lista;
    } catch (Exception $e) {

        $this->logger->LogInfo("getElementos15MP ERROR:" . $e->getMessage());
    }
}

public function obtenerDetalleRequisicionesByPuntoServicioIdPer($puntoServicioId,$tipoBusqueda,$lineaNegocioElegido,$clienteElegido,$entidadElegida,$supervisorElegido,$clienteElegidoSuperv,$clienteElegidoGral,$casoXgerente,$regionGerente)
{//poner condicion de workbench
    $lista = array();

    $sql = "select
    sp.servicioPlantillaId
    , sp.puntoServicioPlantillaId
    , cps.puntoServicio
    , numeroElementos
    , sp.puntoServicioPlantillaId
    , sp.numeroElementos
    , puestoPlantillaId
    , cp.descripcionPuesto
    , tipoTurnoPlantillaId
    , ct.descripcionTurno
    , sp.turnosPorDia
    , sp.fechaInicio
    -- , sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    left join catalogopuestos cp on cp.idPuesto=sp.puestoPlantillaId
    left join catalogoturnos ct on ct.idTipoTurno=sp.tipoTurnoPlantillaId
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)";
    
     if ($casoXgerente=='1') 
    {
     $sql.=" left join index_regiones ir on ir.idEntidadI= cps.idEntidadPunto";
    }

    if ($tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17) 
    {
     $sql.=" left join supervisor_puntoservicio sup on (sup.puntoServicioId=sp.puntoServicioPlantillaId)";
    }
    
$sql.=" where lineaNegocioRequisicion='$lineaNegocioElegido'";

    if($tipoBusqueda==1 || $tipoBusqueda==3 || $tipoBusqueda==4 || $tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==9 || $tipoBusqueda==10 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17 || $tipoBusqueda==18)
    {
     $sql.="and estatusPlantilla='1'";
    }

    if ($tipoBusqueda==2 || $tipoBusqueda==3)
    {
     $sql.=" and cps.idClientePunto='$clienteElegido'";
    }

    if ($tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17)
    {
     $sql.=" and concat_ws('-', supervisorEntidad,supervisorConsecutivo,supervisorTipo)='$supervisorElegido'";
    }

    if ($tipoBusqueda==3 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==9 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17 || $tipoBusqueda==18)
    {
     $sql.=" and cps.idEntidadPunto='$entidadElegida'";
    }

    if($tipoBusqueda==4 || $tipoBusqueda==8 || $tipoBusqueda==13 || $tipoBusqueda==16) 
    {
     $sql.=" and sp.puntoServicioPlantillaId='" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "'";
    }

    if($tipoBusqueda==1 || $tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==9) 
    {
     $sql.=" and cps.idClientePunto!='2'";
    }

    if($tipoBusqueda==7 || $tipoBusqueda==8) 
    {
     $sql.=" and cps.idClientePunto='$clienteElegidoSuperv'";
    }

    if($tipoBusqueda==10 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17) 
    {
     $sql.=" and cps.idClientePunto='2'";
    }

    if($tipoBusqueda==18) 
    {
     $sql.=" and cps.idClientePunto='$clienteElegidoGral'";
    }

    if ($casoXgerente=='1') 
    {
     $sql.=" and (idRegionI='" . mysqli_real_escape_string($this->conn, $regionGerente) . "' and idLineaNegI='" . mysqli_real_escape_string($this->conn, $lineaNegocioElegido) . "')";
    }

    //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerDetalleRequisicionesByPuntoServicioIdPer " . $sql);

    $res = mysqli_query($this->conn, $sql);

    
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $lista;
}

public function  obtenerTurnosCubiertosByPeriodoFechasAndPuntoServicioPer($fechaInicial,$fechaFinal,$puntoServicioId,$tipoBusqueda,$clienteElegido,$entidadElegida,$supervisorElegido,$clienteElegidoSuperv,$lineaNegocioElegido,$clienteElegidoGral) {

        //$this-> logger -> LogInfo("obtenerTurnosCubiertosByPeriodoFechasAndPuntoServicioPer");
    $sql = "select fechaAsistencia, sum(ci.valorCobertura) as cantidadTurnos 
            from asistencia a 
            inner join catalogoincidencias ci on a.incidenciaAsistenciaId=ci.incidenciaId
            left join catalogopuntosservicios cps on cps.idPuntoServicio=a.PuntoServicioAsistenciaId";

            if($tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17)//Cliente y entidad
            {
             $sql.=" left join supervisor_puntoservicio sup on sup.puntoServicioId=a.PuntoServicioAsistenciaId";
            }

    $sql.=" where fechaAsistencia >= '" . $this->safeValue($fechaInicial) . "' 
            and fechaAsistencia <= '" . $this->safeValue($fechaFinal) . "'";

            if($tipoBusqueda==2 || $tipoBusqueda==3)//Cliente
            {
             $sql.=" and cps.idClientePunto='$clienteElegido'";
            }

            if($tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17)//supervisor y entidad
            {
             $sql.=" and concat_ws('-', sup.supervisorEntidad,sup.supervisorConsecutivo,sup.supervisorTipo)='$supervisorElegido'";
            }

            if($tipoBusqueda==3 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==9 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17 || $tipoBusqueda==18)//Cliente y entidad
            {
             $sql.=" and cps.idEntidadPunto='$entidadElegida'";
            }

            if($tipoBusqueda==4 || $tipoBusqueda==8 || $tipoBusqueda==13 || $tipoBusqueda==16)//punto de servicio
            {
             $sql.=" and PuntoServicioAsistenciaId = '" . $this->safeValue($puntoServicioId) ."'";
            }

            if($tipoBusqueda==1 || $tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==9) 
            {
             $sql.=" and cps.idClientePunto!='2'"; 
            }

            if($tipoBusqueda==7 || $tipoBusqueda==8) 
            {
             $sql.=" and cps.idClientePunto='$clienteElegidoSuperv'"; 
            }

            if($tipoBusqueda==10 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17)//GRAL GIf
            {
             $sql.=" and cps.idClientePunto='2'";
            }

            if($tipoBusqueda==18) 
            {
             $sql.=" and cps.idClientePunto='$clienteElegidoGral'";
            }

    $sql.=" and cps.idLineaNegocioPunto='$lineaNegocioElegido'
            group by fechaAsistencia";

             //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerTurnosCubiertosByPeriodoFechasAndPuntoServicioPer " . $sql);

    $rs = mysqli_query($this->conn, $sql);
    $result = array();
    if (!is_bool($rs)) {
        while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {
           $result[$reg["fechaAsistencia"]]["cantidadTurnos"] = $reg["cantidadTurnos"];
       }
   }
   return $result;

}

public function datosPlantillasPorPuntoPer($puntoServicioId,$tipoBusqueda,$lineaNegocioElegido,$clienteElegido,$entidadElegida,$supervisorElegido,$clienteElegidoSuperv,$clienteElegidoGral,$casoXgerente,$regionGerente)
{
    //$this -> logger -> LogInfo (" datosPlantillasPorPuntoPer: " . $puntoServicioId);
    $lista = array();

    $sql = "SELECT * from servicios_plantillas sp";

        if($tipoBusqueda==1 || $tipoBusqueda==2 || $tipoBusqueda==3 || $tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==9 || $tipoBusqueda==10 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17 || $tipoBusqueda==18)//cliente y cliente-entidad
          {
           $sql.=" left join catalogopuntosservicios cps on cps.idPuntoServicio=sp.puntoServicioPlantillaId";
          }

        if($tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17)
          {
           $sql.=" left join supervisor_puntoservicio sup on sup.puntoServicioId=sp.puntoServicioPlantillaId";
          }

          if($casoXgerente=='1') 
          {
           $sql.=" left join index_regiones ir on ir.idEntidadI= cps.idEntidadPunto";
          }
            
    $sql.=" where estatusPlantilla='1' and sp.lineaNegocioRequisicion='$lineaNegocioElegido'";
         
          if($tipoBusqueda==2 || $tipoBusqueda==3)//cliente y cliente-entidad
          {
           $sql.=" and cps.idClientePunto='$clienteElegido'";
          }

          if($tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17)
          {
           $sql.=" and concat_ws('-',sup.supervisorEntidad,sup.supervisorConsecutivo,sup.supervisorTipo)='$supervisorElegido'";
          }

          if($tipoBusqueda==3 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==9 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17 || $tipoBusqueda==18)
          {
           $sql.=" and cps.idEntidadPunto='$entidadElegida'";
          }
            
          if($tipoBusqueda==4 || $tipoBusqueda==8 || $tipoBusqueda==13 || $tipoBusqueda==16)//cliente punto de servicio
          {
           $sql.=" and sp.puntoServicioPlantillaId= '" . $this->safeValue($puntoServicioId) . "'";
          }
          
          if($tipoBusqueda==1 || $tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==9) 
          {
           $sql.=" and cps.idClientePunto!='2'";
          }

          if($tipoBusqueda==7 || $tipoBusqueda==8) 
          {
           $sql.=" and cps.idClientePunto='$clienteElegidoSuperv'";
          }

          if($tipoBusqueda==10 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17)
          {
           $sql.=" and cps.idClientePunto='2'";
          }

          if($tipoBusqueda==18) 
          {
           $sql.=" and cps.idClientePunto='$clienteElegidoGral'";
          }

          if ($casoXgerente=='1') 
          {
           $sql.=" and (idRegionI='" . mysqli_real_escape_string($this->conn, $regionGerente) . "' and idLineaNegI='" . mysqli_real_escape_string($this->conn, $lineaNegocioElegido) . "')";
          }

    //$this -> logger -> LogInfo ("Ejecutando SQL: datosPlantillasPorPuntoPer " . $sql);
   
    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}

public function ObtenerDiasSolicitadosPER($PlantillaId,$turnoDiaC,$turnoNocheC)
{
    //$this -> logger -> LogInfo (" ObtenerDiasSolicitadosPER: " . $puntoServicioId);
    $lista = array();
    $sql = "SELECT $turnoDiaC,$turnoNocheC 
            from diasdetrabajoplantilla
            where servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $PlantillaId) . "'";
    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $lista;
}

public function TurnosCubiertosSeparadosXPuntos($i, $puntoServicioId,$tipoBusqueda,$clienteElegido,$entidadElegida,$supervisorElegido,$clienteElegidoSuperv,$lineaNegocioElegido,$clienteElegidoGral,$casoXgerente,$regionGerente) {
  //  $this -> logger -> LogInfo ("valor del array de la tipoBusqueda ".var_export ($tipoBusqueda, true));
    $listTCS = array();
        try {
            $sql= "SELECT * FROM turnoasistencia ta
                   left join catalogopuntosservicios cps on cps.idPuntoServicio=ta.puntoServicioTurno";
                    
                    if($tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17)
                    {
                     $sql.=" left join supervisor_puntoservicio sup on sup.puntoServicioId=ta.puntoServicioTurno";
                    }


                    if($casoXgerente=='1') 
                    {
                     $sql.=" left join index_regiones ir on ir.idEntidadI= cps.idEntidadPunto";
                    }

            $sql.=" where fechaTurno ='" . mysqli_real_escape_string($this->conn, $i) . "' 
                    and idLineaNegocioPunto='$lineaNegocioElegido'";
                      
                    if($tipoBusqueda==2 || $tipoBusqueda==3)
                    {
                     $sql.=" and cps.idClientePunto='$clienteElegido'";
                    }

                    if($tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17) 
                    {
                     $sql.=" and concat_ws('-', sup.supervisorEntidad,sup.supervisorConsecutivo,sup.supervisorTipo)='$supervisorElegido'";
                    }

                    if($tipoBusqueda==3 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==9 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17 || $tipoBusqueda==18)
                    {
                     $sql.=" and idEntidadPunto='$entidadElegida'";
                    }

                    if($tipoBusqueda==4 || $tipoBusqueda==8 || $tipoBusqueda==13 || $tipoBusqueda==16)
                    {      
                     $sql.=" and puntoServicioTurno='" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "'";
                    }

                    if($tipoBusqueda==1 || $tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==9) 
                    {
                     $sql.=" and cps.idClientePunto!='2'";
                    }

                    if($tipoBusqueda==7 || $tipoBusqueda==8) 
                    {
                     $sql.=" and cps.idClientePunto='$clienteElegidoSuperv'";
                    }

                    if($tipoBusqueda==10 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17)
                    {
                     $sql.=" and cps.idClientePunto='2'";
                    }
                    
                    if($tipoBusqueda==18) 
                    {
                     $sql.=" and cps.idClientePunto='$clienteElegidoGral'";
                    }

                    if ($casoXgerente=='1') 
                    {
                     $sql.=" and (idRegionI='" . mysqli_real_escape_string($this->conn, $regionGerente) . "' and idLineaNegI='" . mysqli_real_escape_string($this->conn, $lineaNegocioElegido) . "')";
                    }

    //$this -> logger -> LogInfo ("Ejecutando SQL: TurnosCubiertosSeparadosXPuntos " . $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listTCS[] = $reg;
            }
            return $listTCS;
        } catch (Exception $e) {
        }
}

public function getPuntoXentidadSupervisor($EntidadElegida,$supervisorele,$lineaNegocio,$clienteElegidoSupervisor,$valorgifTipo)
    {
        $listaPS = array();
            $sql = "SELECT cps.idPuntoServicio,cps.puntoServicio FROM supervisor_puntoservicio sp
                    left join catalogopuntosservicios cps on sp.puntoServicioId= cps.idPuntoServicio
                    where concat_ws('-', supervisorEntidad,supervisorConsecutivo,supervisorTipo)='$supervisorele'
                    and cps.esatusPunto='1'
                    and cps.idEntidadPunto='$EntidadElegida'
                    and cps.idLineaNegocioPunto='$lineaNegocio'";
                    if ($valorgifTipo==0) 
                    {
                     $sql.=" and cps.idClientePunto!='2'
                             and cps.idClientePunto='$clienteElegidoSupervisor'";
                    }
                    if ($valorgifTipo==1) 
                    {
                     $sql.=" and cps.idClientePunto='2'";
                    }
            $sql.=" order by cps.puntoServicio";
        //$this -> logger -> LogInfo ("ejecutando getPuntoXentidadSupervisor en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaPS[] = $reg;
            }
            return $listaPS;       
    }

public function obtenerTurnosCubiertosRegiones($fechaInicial,$fechaFinal) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    $sql = "select fechaAsistencia, sum(ci.valorCobertura) as cantidadTurnos ";
    $sql .= " from asistencia a ";
    $sql .= "inner join catalogoincidencias ci on a.incidenciaAsistenciaId=ci.incidenciaId ";
    $sql .= "where fechaAsistencia >= '" . $this->safeValue($fechaInicial) . "' ";
    $sql .= "and fechaAsistencia <= '" . $this->safeValue($fechaFinal) . "' ";
    $sql .= "group by fechaAsistencia;";

    $rs = mysqli_query($this->conn, $sql);
      //  $this -> logger -> LogInfo ("Ejecutando aaaaaaaaaaaaaaaaaaa: " . $sql);

    $result = array();
    if (!is_bool($rs)) {
        while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {
              //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($reg, true));
           $result[$reg["fechaAsistencia"]]["cantidadTurnos"] = $reg["cantidadTurnos"];
                //$result[$reg["fechaAsistencia"]]["nomenclaturaIncidencia"] = $reg["nomenclaturaIncidencia"];
       }
   }
      //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos result: "  . var_export ( $result, true));


       // $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($result, true));
   return $result;
}


public function GetRegionesTotales($LineaNegocioRegiones,$i,$casoConsulta,$entidadregion)
    {
        $listaRegionesT = array();

            $sql = "SELECT * FROM index_regiones ir
                    left join entidadesfederativas cef on (ir.idEntidadI=cef.idEntidadFederativa)
                    where idLineaNegI='" . mysqli_real_escape_string($this->conn, $LineaNegocioRegiones) . "'
                    and idRegionI='" . mysqli_real_escape_string($this->conn, $i) . "'";
                    if($casoConsulta=="3"){
                         $sql .= "and ir.idEntidadI = '" . mysqli_real_escape_string($this->conn, $entidadregion) . "' ";
                    }

       // $this -> logger -> LogInfo ("ejecutando GetRegionesTotales en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaRegionesT[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaClientes ".var_export ($listaClientes, true));
            return $listaRegionesT;
       
    }

public function getClientesXSupervisor($EntidadElegida,$supervisorele,$lineaNegocio,$valorgifTipo)
    {
       //$this -> logger -> LogInfo ("getClientesXSupervisor en persistencia");
        $clientes = array();
        try {
            $sql = " SELECT DISTINCT cc.idCliente,cc.razonSocial FROM supervisor_puntoservicio sp
                    left join catalogopuntosservicios cps on sp.puntoServicioId= cps.idPuntoServicio
                    left join catalogoclientes cc on cc.idCliente=cps.idClientePunto
                    where concat_ws('-', supervisorEntidad,supervisorConsecutivo,supervisorTipo)='$supervisorele'
                    and cps.esatusPunto='1'
                    and cps.idEntidadPunto='$EntidadElegida'
                    and cps.idLineaNegocioPunto='$lineaNegocio'";

                    if ($valorgifTipo==0) 
                    {
                    $sql.=" and cps.idClientePunto!='2'";
                    }
                    if ($valorgifTipo==1)
                    { 
                    $sql.=" and cps.idClientePunto='2'";
                    }      
         //$this -> logger -> LogInfo ("ejecutando getClientesXSupervisor en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $clientes[] = $reg;
            }
            return $clientes;
        } catch (Exception $e) {
        }
    }

public function GetElementosPorRegion($listaRegiones,$totalEntidadesPorRegion,$LineaNegocioRegiones,$fechaInicial,$fechaFinal,$entidadregion,$casoConsulta,$casoFechas,$TipoEmp,$casoGif)
    {
        $ListaCobertuaGen = array();

            $sql = "SELECT COUNT(empleadoEstatusId) as TotalElementos
                    FROM empleados 
                    left join catalogopuntosservicios  on (empleados.empleadoIdPuntoServicio = catalogopuntosservicios.idPuntoServicio)
                    where empleadoLineaNegocioId = '" . mysqli_real_escape_string($this->conn, $LineaNegocioRegiones) . "'
                    and idTipoPuesto='" . mysqli_real_escape_string($this->conn, $TipoEmp) . "'";
                    if($casoGif=="1"){
                        $sql.=" and idClientePunto='2'";
                    }else{
                        if($TipoEmp=="03"){
                            $sql.=" and idClientePunto!='2'";
                        }
                    }
                    if($casoFechas=="1"){
                        $sql.=" and (((empleadoEstatusId='1' or empleadoEstatusId='2') and fechaIngresoEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFinal) . "') or (empleadoEstatusId='0' and fechaBajaEmpleado >='" . mysqli_real_escape_string($this->conn, $fechaInicial) . "' and fechaBajaEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFinal) . "')) "; 
                    }else{
                        $sql.=" and (empleadoEstatusId='1' or empleadoEstatusId='2') ";
                    }
                    if($casoConsulta=="1"){
                        $sql.=" and";
                        for ($i=0; $i <$totalEntidadesPorRegion ; $i++) { 
                            $EntidadElementos=$listaRegiones[$i]['idEntidadI'];
                            if(($i==0)){
                                $sql.=" ((idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";    
                            }else{
                                $sql.=" or (idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";       
                            }
                        }
                    }else if($casoConsulta=="3" || $casoConsulta=="2" ){
                        $sql.=" and (idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadregion) . "'";
                    }                             
                    $sql.=")";
        // $this -> logger -> LogInfo ("ejecutando GetElementosPorRegion en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaCobertuaGen[] = $reg;
            }
            return $ListaCobertuaGen;
    }

public function GetPuntosPorRegion($listaRegiones,$totalEntidadesPorRegion,$LineaNegocioRegiones,$fechaInicial,$fechaFinal,$entidadregion,$casoConsulta,$casoFechas)
    {
        $ListaCobertuaGenPuntos = array();

            $sql = "SELECT COUNT(idPuntoServicio) as TotalPuntos
                    FROM catalogopuntosservicios 
                    where idLineaNegocioPunto = '" . mysqli_real_escape_string($this->conn, $LineaNegocioRegiones) . "'
                    and idClientePunto!='2'";
                    if($casoFechas=="1"){
                        $sql.=" and (((esatusPunto='1') and fechaInicioServicio <='" . mysqli_real_escape_string($this->conn, $fechaFinal) . "') or (esatusPunto='0' and fechaTerminoServicio between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicial) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFinal) . "' AS DATE))) "; 
                    }else{
                        $sql.=" and (esatusPunto='1') ";
                    }
                    if($casoConsulta=="1"){
                        $sql.=" and";
                        for ($i=0; $i <$totalEntidadesPorRegion ; $i++) { 
                            $EntidadElementos=$listaRegiones[$i]['idEntidadI'];
                            if(($i==0)){
                                $sql.=" ((idEntidadPunto='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";    
                            }else{
                                $sql.=" or (idEntidadPunto='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";       
                            }
                        }
                    }else if($casoConsulta=="3" || $casoConsulta=="2"){
                        $sql.=" and (idEntidadPunto='" . mysqli_real_escape_string($this->conn, $entidadregion) . "'";
                    }
                    $sql.=")";
       //  $this -> logger -> LogInfo ("ejecutando GetPuntosPorRegion en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaCobertuaGenPuntos[] = $reg;
            }
            return $ListaCobertuaGenPuntos;
       
    }

public function GetIdPuntosPorRegion($listaRegiones,$totalEntidadesPorRegion,$LineaNegocioRegiones,$fechaInicial,$fechaFinal,$entidadregion,$casoConsulta,$casoFechas)
    {
        $ListaCobertuaGenPuntos = array();

            $sql = "SELECT *
                    FROM catalogopuntosservicios 
                    where idLineaNegocioPunto = '" . mysqli_real_escape_string($this->conn, $LineaNegocioRegiones) . "'";
                    if($casoFechas=="1"){
                        $sql.=" and (((esatusPunto='1') and fechaInicioServicio <='" . mysqli_real_escape_string($this->conn, $fechaFinal) . "') or (esatusPunto='0' and fechaTerminoServicio between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicial) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFinal) . "' AS DATE))) "; 
                    }else{
                        $sql.=" and (esatusPunto='1') ";
                    }
                    if($casoConsulta=="1"){
                        $sql.=" and";
                        for ($i=0; $i <$totalEntidadesPorRegion ; $i++) { 
                            $EntidadElementos=$listaRegiones[$i]['idEntidadI'];
                            if(($i==0)){
                                $sql.=" ((idEntidadPunto='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";    
                            }else{
                                $sql.=" or (idEntidadPunto='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";       
                            }
                        }
                    }else if($casoConsulta=="3" || $casoConsulta=="2"){
                        $sql.=" and (idEntidadPunto='" . mysqli_real_escape_string($this->conn, $entidadregion) . "'";
                    }
                    $sql.=")";
    //     $this -> logger -> LogInfo ("ejecutando GetPuntoGetIdPuntosPorRegionsPorRegion en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaCobertuaGenPuntos[] = $reg;
            }
            return $ListaCobertuaGenPuntos;
       
    }

public function GetElementosPorRolOperativo($listaRegiones,$totalEntidadesPorRegion,$LineaNegocioRegiones,$fechaInicial,$fechaFinal,$rolOperativo,$entidadregion,$casoConsulta,$casoFechas)
    {
        
        $sql = "SELECT  count(roloperativo) as RolOperativo
                from empleados
                where empleadoLineaNegocioId = '" . mysqli_real_escape_string($this->conn, $LineaNegocioRegiones) . "'";
                if($casoFechas=="1"){
                         $sql.=" and (((empleadoEstatusId='1' or empleadoEstatusId='2') and fechaIngresoEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFinal) . "') or (empleadoEstatusId='0' and fechaBajaEmpleado between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicial) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFinal) . "' AS DATE))) "; 
                    }else{
                        $sql.=" and (empleadoEstatusId='1' or empleadoEstatusId='2') ";
                    }
                if($rolOperativo=="46" || $rolOperativo=="65" || $rolOperativo=="6" || $rolOperativo=="61" || $rolOperativo=="88"){
                    $sql.=" and empleadoIdPuesto='" . mysqli_real_escape_string($this->conn, $rolOperativo) . "'";
                }else if($rolOperativo=="NO DEFINIDO" || $rolOperativo=="HORARIO OFICINA"){
                    $sql.=" and roloperativo='" . mysqli_real_escape_string($this->conn, $rolOperativo) . "'
                            and empleadoIdPuesto!='46' and empleadoIdPuesto!='6' and empleadoIdPuesto!='65' and empleadoIdPuesto!='61' and empleadoIdPuesto!='88'";
                }else{
                    $sql.=" and roloperativo='" . mysqli_real_escape_string($this->conn, $rolOperativo) . "'";
                }
                if($casoConsulta=="1"){
                    $sql.=" and";
                    for ($i=0; $i <$totalEntidadesPorRegion ; $i++) { 
                        $EntidadElementos=$listaRegiones[$i]['idEntidadI'];
                        if(($i==0)){
                            $sql.=" ((idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";    
                        }else{
                            $sql.=" or (idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";       
                        }
                    }   
                }else if($casoConsulta=="3" || $casoConsulta=="2"){
                        $sql.=" and (idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidadregion) . "'";
                    }
                
                $sql.=") order by RolOperativo";
    //     $this -> logger -> LogInfo ("ejecutando GetElementosPorRolOperativo en persistencia". $sql);
        
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaElementosxRolOp[] = $reg;
            }
            return $ListaElementosxRolOp;
       
    }

public function GetRegionesTotalesSelect($selLineaNegocioRegiones,$selRegiones)
    {
        $listaRegionesT = array();

            $sql = "SELECT * FROM index_regiones ir
                   left join entidadesfederativas ef ON(ef.idEntidadFederativa=ir.idEntidadI)
                   where ir.idLineaNegI='" . mysqli_real_escape_string($this->conn, $selLineaNegocioRegiones) . "'";
            if($selRegiones!="falso"){
                $sql.=" and ir.idRegionI='" . mysqli_real_escape_string($this->conn, $selRegiones) . "'";
            }else{
                $sql.=" group by DescripcionI";
            }


    //    $this -> logger -> LogInfo ("ejecutando GetRegionesTotalesSelect en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaRegionesT[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la listaClientes ".var_export ($listaClientes, true));
            return $listaRegionesT;
       
    }

    public function getTurnoCubiertosIncidenciasEspecialesXDia($fechaInicial,$fechaFinal,$puntoServicioId) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    $sql = "SELECT ie.incidenciaFecha as fechaAsistencia, sum(cie.valorIncidenciaEspecial) as cantidadTurnos
            FROM incidenciasespeciales ie
            inner join catalogoincidenciasespeciales cie ON (cie.incidenciaEspecialId=ie.incidenciaId)
            where ie.incidenciaFecha between CAST('$fechaInicial' AS DATE) and CAST('$fechaFinal' AS DATE)
            and ie.incidenciaPuntoServicio='$puntoServicioId'
            and(ie.incidenciaId='1' or ie.incidenciaId='6')
            group by fechaAsistencia";

    $rs = mysqli_query($this->conn, $sql);
     //   $this -> logger -> LogInfo ("Ejecutando getTurnosCubiertosByPeriodoFechasAndPuntoServicio: " . $sql);

    $result = array();
    if (!is_bool($rs)) {
        while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {

              //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($reg, true));
           $result[$reg["fechaAsistencia"]]["cantidadTurnos"] = $reg["cantidadTurnos"];
                //$result[$reg["fechaAsistencia"]]["nomenclaturaIncidencia"] = $reg["nomenclaturaIncidencia"];
       }
   }
       // $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($result, true));
   return $result;
}

public function getEntidadGeneral($valorgifTipo,$Linea)
    {
      // $this-> logger -> LogInfo("getEntidadGeneral");
        $EntidadesGeneral = array();

        try {
             $sql="select DISTINCT idEntidadFederativa,nombreEntidadFederativa 
                   from entidadesfederativas ef
                   left join catalogopuntosservicios cps on cps.idEntidadPunto= ef.idEntidadFederativa
                   where cps.esatusPunto='1'";
                if($valorgifTipo==0) 
                   {
                    $sql.=" and cps.idClientePunto!=2";
                   }
                if($valorgifTipo==1) 
                  {
                   $sql.=" and cps.idClientePunto=2";
                  }
             
             $sql.=" and cps.idLineaNegocioPunto='$Linea' 
                     order by nombreEntidadFederativa";
        //$this->logger->LogInfo("datos de getEntidadGeneral: " . $sql);
              $res = mysqli_query($this->conn, $sql);
              while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
                  $EntidadesGeneral[] = $reg;
              }
          }catch (Exception $e) {
          }
              return $EntidadesGeneral;
    }

public function TurnosCubiertosIncidenciasSeparadosXPuntos($i, $puntoServicioId,$lineaNegocioElegido,$tipoBusqueda,$clienteElegido,$entidadElegida,$supervisorElegido,$clienteElegidoSuperv,$clienteElegidoGral,$casoXgerente,$regionGerente) {

    $listTCS = array();
        try {

            $sql= "SELECT incidenciaId
                   FROM incidenciasespeciales ie
                   inner join catalogoincidenciasespeciales cie ON (cie.incidenciaEspecialId=ie.incidenciaId)
                   left join catalogopuntosservicios cps on cps.idPuntoServicio=ie.incidenciaPuntoServicio";
                   
                   if($casoXgerente=='1') 
                    {
                     $sql.=" left join index_regiones ir on ir.idEntidadI= cps.idEntidadPunto";
                    }
                   $sql.=" where ie.incidenciaFecha ='$i'";

                   if ($tipoBusqueda==2 || $tipoBusqueda==3 || $tipoBusqueda==4 || $tipoBusqueda==7) {
                    
                      $sql.=" and cps.idClientePunto='$clienteElegido'";
                   }

                   if ($tipoBusqueda==3 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==9 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==15 || $tipoBusqueda==17 || $tipoBusqueda==18){
                       $sql.=" and cps.idEntidadPunto='$entidadElegida'";
                   }
                   
                   if ($tipoBusqueda==4 || $tipoBusqueda==8 || $tipoBusqueda==13 || $tipoBusqueda==16){
                       $sql.=" and ie.incidenciaPuntoServicio='$puntoServicioId'";
                   }
                   
                   if ($tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17){
                       $sql.=" and concat_ws('-',incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo)='$supervisorElegido'";
                   }

                    if ($tipoBusqueda==1 || $tipoBusqueda==2 || $tipoBusqueda==3 || $tipoBusqueda==4 || $tipoBusqueda==5 || $tipoBusqueda==6 || $tipoBusqueda==7 || $tipoBusqueda==8 || $tipoBusqueda==9){
                       $sql.=" and cps.idClientePunto !='2'";
                   }

                   if ($tipoBusqueda==10 || $tipoBusqueda==11 || $tipoBusqueda==12 || $tipoBusqueda==13 || $tipoBusqueda==14 || $tipoBusqueda==15 || $tipoBusqueda==16 || $tipoBusqueda==17){//gif
                       $sql.=" and cps.idClientePunto ='2'";
                   }

                   if ($tipoBusqueda==18) {
                    
                      $sql.=" and cps.idClientePunto='$clienteElegidoGral'";
                   }

                  $sql.=" and (ie.incidenciaId='1' or incidenciaId='6')
                          and idLineaNegocioPunto='$lineaNegocioElegido'";

                 if ($casoXgerente=='1') 
                    {
                     $sql.=" and (idRegionI='" . mysqli_real_escape_string($this->conn, $regionGerente) . "' and idLineaNegI='" . mysqli_real_escape_string($this->conn, $lineaNegocioElegido) . "')";
                    }


             //$this -> logger -> LogInfo ("Ejecutando SQL: TurnosCubiertosIncidenciasSeparadosXPuntos " . $sql);
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
            
             $res = mysqli_query($this->conn, $sql);
             while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) { 
                 $listTCS[] = $reg;
            }
            return $listTCS;
        } catch (Exception $e) {
        }
}
public function GetAsistenciaIncidencaMismoDia($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$asistenciaFecha)
    {
        $AsisIncMismoDia = array();
        $sql = "SELECT incidenciaId
                FROM incidenciasespeciales
                where incidenciaFecha ='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'
                and incidenciaEmpleadoEntidad='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                and incidenciaEmpleadoConsecutivo='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                and incidenciaEmpleadoTipo='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
                and aplicoDiferencia!=1
                union
                SELECT ta.tipoTurno as IncidenciaId from asistencia asi
                left join turnoasistencia ta on(ta.entidadEmpTurno = asi.empleadoEntidad and ta.consecutivoEmpTurno=asi.empleadoConsecutivo and ta.categoriaEmpTurno=asi.empleadoTipo)
                where asi.empleadoEntidad='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                and asi.empleadoConsecutivo='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                and asi.empleadoTipo='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
                and asi.fechaAsistencia='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'
                and ta.fechaTurno='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'";
     
      //  $this -> logger -> LogInfo ("Ejecutando SQL GetAsistenciaIncidencaMismoDia: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $AsisIncMismoDia[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $AsisIncMismoDia;
    }

public function getRegionesXlinea($lineaNegocio)
{
    $regiones= array();
    try {
        $sql = "SELECT DISTINCT DescripcionI, idRegionI 
                FROM index_regiones
                where idLineaNegI='$lineaNegocio'
                order by idRegionI";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $regiones[] = $reg;
        }
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
     return $regiones;
}
public function getEntidadesXRegion($lineaNegocio,$idregion)
{
    try {
        $sql = "SELECT DescripcionI,idEntidadFederativa,nombreEntidadFederativa
                FROM index_regiones reg
                left join entidadesfederativas ef on reg.idEntidadI= ef.idEntidadFederativa
                where idLineaNegI='$lineaNegocio'
                and idRegionI='$idregion'";
        //$this -> logger -> LogInfo ("Ejecutando SQL: getEntidadesXRegion " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $NumRegiones []= $reg;
        }
        return $NumRegiones;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function getConteoElementosPorRegión($totalEntidadesXRegion,$lineaNegocio,$fecha1,$fecha2)
{
    try {
        $sql = "SELECT COUNT(empleadoEstatusId) as TotalElementos
                FROM empleados 
                left join catalogopuntosservicios  on (empleados.empleadoIdPuntoServicio = catalogopuntosservicios.idPuntoServicio)
                where ( ((empleadoEstatusId='1' or empleadoEstatusId='2')
                and fechaIngresoEmpleado <= CAST('2021-04-30' AS DATE)) or  ((empleadoEstatusId='0') and (fechaBajaEmpleado between CAST('" . mysqli_real_escape_string($this->conn, $fecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fecha2) . "' AS DATE))))
                and empleadoLineaNegocioId = '$lineaNegocio' 
                and idClientePunto!='2' 
                and idTipoPuesto='03'";

                for ($i=0; $i < count($totalEntidadesXRegion); $i++) { 
                    $EntidadElementos=$totalEntidadesXRegion[$i]['idEntidadFederativa'];
                        if(($i==0)){
                            $sql.=" and((idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";
                         }else{ 
                               $sql.=" or (idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";
                              }
                    }
                              $sql.= ")";          

      //  $this -> logger -> LogInfo ("Ejecutando SQL: getConteoElementosPorRegión " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $NumRegiones []= $reg;
        }
        return $NumRegiones;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function getClientesXEntidad($LineaNegocioElegida,$EntidadElegida)
    {
       //$this -> logger -> LogInfo ("getClientesXEntidad en persistencia");
        $clientes = array();
        try {
            $sql = "  select distinct cc.idCliente,cc.razonSocial
                      from catalogoclientes cc
                      left join catalogoPuntosServicios cps on cps.idClientePunto=cc.idCliente
                      left join entidadesfederativas ef on ef.idEntidadFederativa= cps.idEntidadPunto
                      where cc.estatusCliente='1'
                      and cps.idLineaNegocioPunto='$LineaNegocioElegida'
                      and ef.idEntidadFederativa='$EntidadElegida'
                      and cc.idCliente!='2'
                      order by razonSocial";

            //$this -> logger -> LogInfo ("ejecutando getClientesXEntidad en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $clientes[] = $reg;
            }
            return $clientes;
        } catch (Exception $e) {
        }
    }

public function ObtenerTTipoTurnoCurbierto($i, $puntoServicioId) {
        //$this-> logger -> LogInfo("ObtenerTTipoTurnoCurbierto");
    $list = array();
        try {
            $sql = "SELECT * from asistencia a 
            where fechaAsistencia = '" . mysqli_real_escape_string($this->conn, $i) . "'
            and PuntoServicioAsistenciaId = '" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "'";
            //$this -> logger -> LogInfo ("ejecutando ObtenerTTipoTurnoCurbierto en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $list[] = $reg;
            }
            return $list;
        } catch (Exception $e) {
        }
}
public function GetvehiculosRegiones($listaRegiones,$totalEntidadesPorRegion,$LineaNegocioRegiones,$fechaInicial,$fechaFinal,$entidadregion,$casoConsulta,$casoFechas)
    {
        $ListaCobertuaGenPuntos = array();

            $sql = "SELECT COUNT(idvehiculo) as TotalVehiculos
                    FROM parquevehicular 
                    where idLineaNegocio = '" . mysqli_real_escape_string($this->conn, $LineaNegocioRegiones) . "'";
                    if($casoFechas=="1"){
                        $sql.=" and (((EstatusDelVehiculo='1') and FechaIngresoVehiculo <='" . mysqli_real_escape_string($this->conn, $fechaFinal) . "') or (EstatusDelVehiculo='0' and FechaBaja between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicial) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFinal) . "' AS DATE))) "; 
                    }else{
                        $sql.=" and (EstatusDelVehiculo='1') ";
                    }
                    if($casoConsulta=="1"){
                        $sql.=" and";
                        for ($i=0; $i <$totalEntidadesPorRegion ; $i++) { 
                            $EntidadElementos=$listaRegiones[$i]['idEntidadI'];
                            if(($i==0)){
                                $sql.=" ((idEntidadFederativa='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";    
                            }else{
                                $sql.=" or (idEntidadFederativa='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";       
                            }
                        }
                    }else if($casoConsulta=="3" || $casoConsulta=="2"){
                        $sql.=" and (idEntidadFederativa='" . mysqli_real_escape_string($this->conn, $entidadregion) . "'";
                    }
                    $sql.=")";
       //  $this -> logger -> LogInfo ("ejecutando GetvehiculosRegiones en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaCobertuaGenPuntos[] = $reg;
            }
            return $ListaCobertuaGenPuntos;
       
    }

public function getTurnosdePlantillas($supervisorNumero,$tipoBusqueda,$lineaNegocioElegido)
{
    $lista = array();

    $sql = "select
    sp.servicioPlantillaId
    , sp.puntoServicioPlantillaId
    , cps.puntoServicio
    , numeroElementos
    , sp.puntoServicioPlantillaId
    , sp.numeroElementos
    , puestoPlantillaId
    , cp.descripcionPuesto
    , tipoTurnoPlantillaId
    , ct.descripcionTurno
    , sp.turnosPorDia
    , sp.fechaInicio
    -- , sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    left join catalogopuestos cp on cp.idPuesto=sp.puestoPlantillaId
    left join catalogoturnos ct on ct.idTipoTurno=sp.tipoTurnoPlantillaId
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    left join supervisor_puntoservicio sup on (sup.puntoServicioId=sp.puntoServicioPlantillaId)
    where lineaNegocioRequisicion='$lineaNegocioElegido'
    and estatusPlantilla='1'
    and concat_ws('-', supervisorEntidad,supervisorConsecutivo,supervisorTipo)='$supervisorNumero'
    and cps.idClientePunto!='2'";
//    $this -> logger -> LogInfo ("Ejecutando SQL: getTurnosdePlantillas " . $sql);
    $res = mysqli_query($this->conn, $sql);
    
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}

public function obtenerDatosPlantillas($supervisorNumero,$tipoBusqueda,$lineaNegocioElegido)
{
    //$this -> logger -> LogInfo (" obtenerDatosPlantillas: " . $puntoServicioId);
    $lista = array();

    $sql = "SELECT * from servicios_plantillas sp
            left join catalogopuntosservicios cps on cps.idPuntoServicio=sp.puntoServicioPlantillaId
            left join supervisor_puntoservicio sup on sup.puntoServicioId=sp.puntoServicioPlantillaId
            where estatusPlantilla='1' and sp.lineaNegocioRequisicion='$lineaNegocioElegido'
            and concat_ws('-',sup.supervisorEntidad,sup.supervisorConsecutivo,sup.supervisorTipo)='$supervisorNumero'
            and cps.idClientePunto!='2'";
    
        //$this -> logger -> LogInfo ("Ejecutando SQL: obtenerDatosPlantillas " . $sql);
   
    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}

public function ObtenerTurnosCubiertosXPuntos($supervisorNumero,$i,$tipoBusqueda,$lineaNegocioElegido) {
  //      $this-> logger -> LogInfo("ObtenerTurnosCubiertosXPuntos");
    $listTCS = array();
        try {
            $sql= "SELECT * FROM turnoasistencia ta
                   left join catalogopuntosservicios cps on cps.idPuntoServicio=ta.puntoServicioTurno
                   left join supervisor_puntoservicio sup on sup.puntoServicioId=ta.puntoServicioTurno
                   where fechaTurno ='" . mysqli_real_escape_string($this->conn, $i) . "' 
                   and idLineaNegocioPunto='$lineaNegocioElegido'
                   and concat_ws('-', sup.supervisorEntidad,sup.supervisorConsecutivo,sup.supervisorTipo)='$supervisorNumero'
                   and cps.idClientePunto!='2'";
            //$this -> logger -> LogInfo ("Ejecutando SQL: ObtenerTurnosCubiertosXPuntos " . $sql);
            
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listTCS[] = $reg;
            }
            return $listTCS;
        } catch (Exception $e) {
        }
}

public function ObtenerTurnosCubiertosIncidencias($supervisorNumero,$i,$lineaNegocioElegido,$tipoBusqueda) {

    $listTCS = array();
        try {
            $sql= "SELECT incidenciaId
                   FROM incidenciasespeciales ie
                   inner join catalogoincidenciasespeciales cie ON (cie.incidenciaEspecialId=ie.incidenciaId)
                   left join catalogopuntosservicios cps on cps.idPuntoServicio=ie.incidenciaPuntoServicio
                   where ie.incidenciaFecha ='$i'
                   and concat_ws('-',incidenciaEmpleadoEntidad,incidenciaEmpleadoConsecutivo,incidenciaEmpleadoTipo)='$supervisorNumero'
                   and cps.idClientePunto !='2'
                   and (ie.incidenciaId='1' or incidenciaId='6')
                   and idLineaNegocioPunto='$lineaNegocioElegido'";

            // $this -> logger -> LogInfo ("Ejecutando SQL: ObtenerTurnosCubiertosIncidencias " . $sql);
            
             $res = mysqli_query($this->conn, $sql);
             while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) { 
                 $listTCS[] = $reg;
            }
            return $listTCS;
        } catch (Exception $e) {
        }
}

public function GetNumeroElementosVentas($listaRegiones,$totalEntidadesPorRegion,$LineaNegocioRegiones,$fechaInicial,$fechaFinal,$entidadregion,$casoConsulta,$casoFechas)
    {
        $ListaElementosVentsaRegiones = array();

            $sql = "SELECT sum(numeroElementos) as elementosVentas
                    FROM servicios_plantillas 
                    left join catalogopuntosservicios cps on ( servicios_plantillas.puntoServicioPlantillaId=cps.idPuntoServicio)
                    where lineaNegocioRequisicion='" . mysqli_real_escape_string($this->conn, $LineaNegocioRegiones) . "'
                    and cps.idClientePunto!='2'";
                    if($casoFechas=="1"){
                        $sql.=" and estatusPlantilla='1' 
                                and fechaInicio <= '" . mysqli_real_escape_string($this->conn, $fechaFinal) . "'"; 
                    }else{
                        $sql.=" and (estatusPlantilla='1') ";
                    }
                    if($casoConsulta=="1"){
                        $sql.=" and";
                        for ($i=0; $i <$totalEntidadesPorRegion ; $i++) { 
                            $EntidadElementos=$listaRegiones[$i]['idEntidadI'];
                            if(($i==0)){
                                $sql.=" ((idEntidadPunto='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";    
                            }else{
                                $sql.=" or (idEntidadPunto='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";       
                            }
                        }
                    }else if($casoConsulta=="3" || $casoConsulta=="2" ){
                        $sql.=" and (idEntidadPunto='" . mysqli_real_escape_string($this->conn, $entidadregion) . "'";
                    }                             
                    $sql.=")";
       //  $this -> logger -> LogInfo ("ejecutando GetNumeroElementosVentas en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaElementosVentsaRegiones[] = $reg;
            }
            return $ListaElementosVentsaRegiones;
       
    }

    public function GetEspacioPlantillaDisminuir($servicioPlantillaId)
{
        //$this-> logger -> LogInfo("getServicioPlantillaById");
    $lista = array();
    try {
        /*$sql = "select count(sp.servicioPlantillaId) as EspacioDisponible
        from servicios_plantillas sp
        where sp.servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "'
        and sp.numeroElementos >(     
        select count(sp.servicioPlantillaId) as ElementosAsignados
        from servicios_plantillas sp
        left join plantilla p on (sp.servicioPlantillaId = p.requisicionId)
        left join empleados e on (p.empleadoEntidadPlantilla=e.entidadFederativaId and p.empleadoConsecutivoPlantilla=e.empleadoConsecutivoId and p.empleadoCategoriaPlantilla = e.empleadoCategoriaId)
        where sp.servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "'
        and (e.empleadoEstatusId = '1' or e.empleadoEstatusId = '2'))";*/
        $sql = "select (sp.numeroElementos - (select count(sp.servicioPlantillaId) as ElementosAsignados
        from servicios_plantillas sp
        left join plantilla p on (sp.servicioPlantillaId = p.requisicionId)
        left join empleados e on (p.empleadoEntidadPlantilla=e.entidadFederativaId and p.empleadoConsecutivoPlantilla=e.empleadoConsecutivoId and p.empleadoCategoriaPlantilla = e.empleadoCategoriaId)
        where sp.servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "'
        and (e.empleadoEstatusId = '1' or e.empleadoEstatusId = '2')))as EspacioDisponible
        from servicios_plantillas sp
        where sp.servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "'";
            //$this -> logger -> LogInfo ("ejecutando getServicioPlantillaById en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        if (count($lista) == 1) {
            return $lista[0];
        } else {
            return null;
        }
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function GetDescasnoFatigaXPunto($i, $puntoServicioId) {
        //$this-> logger -> LogInfo("ObtenerTTipoTurnoCurbierto");
    $list = array();
        try {
            $sql = "SELECT count(incidenciaAsistenciaId) as TotalDescanso from asistencia a 
            where fechaAsistencia = '" . mysqli_real_escape_string($this->conn, $i) . "'
            and PuntoServicioAsistenciaId = '" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "'
            and incidenciaAsistenciaId='1'";
            //$this -> logger -> LogInfo ("ejecutando ObtenerTTipoTurnoCurbierto en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $list[] = $reg;
            }
            return $list;
        } catch (Exception $e) {
        }
}

public function GetempleadosPermanencia($fechai,$fechaf,$lineaNeg,$tipoBusquedaPermanencia)
    {
        $GetEmpleadosPERMAN = array();

        if ($tipoBusquedaPermanencia== 1) {
        $sql = "select concat_ws('-', emp.entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) AS NumeroEmpleado,
                       concat_ws(' ', apellidoPaterno,apellidoMaterno,nombreEmpleado) AS NombreEmpleado,
                       ef.nombreEntidadFederativa as EntidadTrabajo,
                       cps.puntoServicio as puntoServicio,
                       emp.empleadoIdPuntoServicio as idPS,
                       emp.empleadoEstatusId as empleadoEstatus,
                       emp.fechaIngresoEmpleado as fechaIngresoEmpleado,
                       emp.fechaBajaEmpleado as fechaBajaEmpleado,
                       emp.idTipoPuesto as idTipoPuesto
                       from empleados emp 
                       left join catalogopuntosservicios cps on cps.idPuntoServicio= emp.empleadoIdPuntoServicio
                       left join entidadesfederativas ef on ef.idEntidadFederativa = emp.idEntidadTrabajo
                       where emp.fechaIngresoEmpleado between CAST('" . $this->safeValue($fechai) . "' AS DATE) and CAST('" . $this->safeValue($fechaf) . "' AS DATE)
                       and emp.empleadoLineaNegocioId='$lineaNeg'
                       and idTipoPuesto='02'
                       union
                       SELECT concat_ws('-', entidadFedReingreso,ConsecutivoReingreso,CategoriaReingreso) AS NumeroEmpleado,
                       concat_ws(' ', apellidoPaternoR,apellidoMaternoR,nombreEmpleadoR) AS NombreEmpleado,
                       ef.nombreEntidadFederativa as EntidadTrabajo,
                       cps.puntoServicio as puntoServicio,
                       dbe.empleadoIdPuntoServicioR as idPS,
                       dbe.empleadoEstatusIdR as empleadoEstatus,
                       dbe.fechaIngresoEmpleadoR as fechaIngresoEmpleado,
                       dbe.fechaBajaEmpleadoR as fechaBajaEmpleado,
                       dbe.idTipoPuestoR as idTipoPuesto
                       FROM Datos_Baja_De_Reingresos dbe
                       left join catalogopuntosservicios cps on cps.idPuntoServicio= dbe.empleadoIdPuntoServicioR
                       left join entidadesfederativas ef on ef.idEntidadFederativa = dbe.idEntidadTrabajoR
                       where dbe.fechaIngresoEmpleadoR between CAST('" . $this->safeValue($fechai) . "' AS DATE) and CAST('" . $this->safeValue($fechaf) . "' AS DATE)
                       and dbe.empleadoEstatusIdR=0
                       and empleadoLineaNegocioIdR='$lineaNeg'
                       and idTipoPuestoR='02'";   
        } 

        if ($tipoBusquedaPermanencia== 2) {
              $sql = " select concat_ws('-', emp.entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) AS NumeroEmpleado,
                       concat_ws(' ', apellidoPaterno,apellidoMaterno,nombreEmpleado) AS NombreEmpleado,
                       ef.nombreEntidadFederativa as EntidadTrabajo,
                       cps.puntoServicio as puntoServicio,
                       emp.empleadoIdPuntoServicio as idPS,
                       emp.empleadoEstatusId as empleadoEstatus,
                       emp.fechaIngresoEmpleado as fechaIngresoEmpleado,
                       emp.fechaBajaEmpleado as fechaBajaEmpleado,
                       emp.idTipoPuesto as idTipoPuesto
                       from empleados emp 
                       left join catalogopuntosservicios cps on cps.idPuntoServicio= emp.empleadoIdPuntoServicio
                       left join entidadesfederativas ef on ef.idEntidadFederativa = emp.idEntidadTrabajo
                       where emp.fechaIngresoEmpleado between CAST('" . $this->safeValue($fechai) . "' AS DATE) and CAST('" . $this->safeValue($fechaf) . "' AS DATE)
                       and emp.empleadoLineaNegocioId='$lineaNeg'
                       and idTipoPuesto='03'
                       union
                       SELECT concat_ws('-', entidadFedReingreso,ConsecutivoReingreso,CategoriaReingreso) AS NumeroEmpleado,
                       concat_ws(' ', apellidoPaternoR,apellidoMaternoR,nombreEmpleadoR) AS NombreEmpleado,
                       ef.nombreEntidadFederativa as EntidadTrabajo,
                       cps.puntoServicio as puntoServicio,
                       dbe.empleadoIdPuntoServicioR as idPS,
                       dbe.empleadoEstatusIdR as empleadoEstatus,
                       dbe.fechaIngresoEmpleadoR as fechaIngresoEmpleado,
                       dbe.fechaBajaEmpleadoR as fechaBajaEmpleado,
                       dbe.idTipoPuestoR as idTipoPuesto
                       FROM Datos_Baja_De_Reingresos dbe
                       left join catalogopuntosservicios cps on cps.idPuntoServicio= dbe.empleadoIdPuntoServicioR
                       left join entidadesfederativas ef on ef.idEntidadFederativa = dbe.idEntidadTrabajoR
                       where dbe.fechaIngresoEmpleadoR between CAST('" . $this->safeValue($fechai) . "' AS DATE) and CAST('" . $this->safeValue($fechaf) . "' AS DATE)
                       and dbe.empleadoEstatusIdR=0
                       and empleadoLineaNegocioIdR='$lineaNeg'
                       and idTipoPuestoR='03'";

        }
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetEmpleadosPERMAN[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta GetempleadosPermanencia ".var_export ($sql, true));
        return $GetEmpleadosPERMAN;
    }


public function GetTotalEmpleados($lineaNeg)
    {
        $TotalEmp = array();
        $sql = "select count(entidadFederativaId) as TotalEmpleados
                from empleados emp
                left join catalogopuntosservicios cps on cps.idPuntoServicio= emp.empleadoIdPuntoServicio
                where (empleadoEstatusId=1 or empleadoEstatusId=2)
                and empleadoLineaNegocioId='$lineaNeg' 
                UNION
                select count(entidadFederativaId) as TotalEmpOperativos 
                from empleados emp
                left join catalogopuntosservicios cps on cps.idPuntoServicio= emp.empleadoIdPuntoServicio
                where (empleadoEstatusId=1 or empleadoEstatusId=2)
                and empleadoLineaNegocioId='$lineaNeg' 
                and idTipoPuesto=03
                UNION
                select count(entidadFederativaId)
                from empleados emp
                left join catalogopuntosservicios cps on cps.idPuntoServicio= emp.empleadoIdPuntoServicio
                where (empleadoEstatusId=1 or empleadoEstatusId=2)
                and empleadoLineaNegocioId='$lineaNeg' 
                and emp.idTipoPuesto=02";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $TotalEmp[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta GetTotalEmpleados ".var_export ($sql, true));
        return $TotalEmp;
    }

    public function getSupervisorPorEmpleado($idpuntoServicio)
    {
        $TotalEmp = array();
        $sql = "    select concat_WS('-',supervisorEntidad, supervisorConsecutivo, supervisorTipo) as NoSupervisor,
           concat_ws(' ', emp.apellidoPaterno, emp.apellidoMaterno, emp.nombreEmpleado) as SupervisorNombre
                        from supervisor_puntoservicio sup
                        left join empleados emp on (emp.entidadFederativaId=supervisorEntidad and emp.empleadoConsecutivoId=supervisorConsecutivo and emp.empleadoCategoriaId=supervisorTipo)
                        where  sup.puntoServicioId='$idpuntoServicio'                        
                        and sup.idSupervisorPS= (                        
                        select max(idSupervisorPS)
                        from supervisor_puntoservicio sup
                        where sup.puntoServicioId='$idpuntoServicio'
                        and concat_WS('-',sup.supervisorEntidad, sup.supervisorConsecutivo, sup.supervisorTipo) != '09-0017-02')
                        ";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $TotalEmp[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta getSupervisorPorEmpleado ".var_export ($sql, true));
        return $TotalEmp;
    }

        public function GetCoberturaXEmp($fechaIngresoEmp,$fechaBajaEmp,$NumeroEmp)
    {
        $TotalCob = array();
        $sql = "SELECT IFNULL(SUM(cobertura),0) AS TOTAL
                FROM
                (select sum(ci.valorCobertura) as cobertura
                 from asistencia a
                 left join catalogoincidencias ci on ci.incidenciaId = a.incidenciaAsistenciaId
                 where concat_ws('-',a.empleadoEntidad,a.empleadoConsecutivo,a.empleadoTipo)='" . mysqli_real_escape_string($this->conn, $NumeroEmp) . "'
                 and a.fechaAsistencia between CAST('" . $this->safeValue($fechaIngresoEmp) . "' AS DATE) and CAST('" . $this->safeValue($fechaBajaEmp) . "' AS DATE)
                UNION
                 select sum(valorIncidenciaEspecial) as cobertura
                 from incidenciasespeciales ie
                 left join catalogoincidenciasespeciales cie on cie.incidenciaEspecialId= ie.incidenciaId
                 where concat_ws('-', ie.incidenciaEmpleadoEntidad,ie.incidenciaEmpleadoConsecutivo,ie.incidenciaEmpleadoTipo)='" . mysqli_real_escape_string($this->conn, $NumeroEmp) . "'
                 and ie.incidenciaFecha between CAST('" . $this->safeValue($fechaIngresoEmp) . "' AS DATE) and CAST('" . $this->safeValue($fechaBajaEmp) . "' AS DATE)
                )AS XX";  
        
        //$this -> logger -> LogInfo ("valor del array de la consulta GetCoberturaXEmp ".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $TotalCob[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la TotalCob ".var_export ($TotalCob, true));
        return $TotalCob;
    }

    public function obtenerDatosEmpBaja($empleadoidd,$usuariorol)
{
        //$this -> logger -> LogInfo (" obtenerDatosEmpBaja: " . $usuariorol);
    $lista = array();
    $sql = "SELECT concat_ws('-', e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as NumeroEmpleado,concat_ws(' ', e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as NombreEmpleado,
            ef.nombreEntidadFederativa as Estado, cps.puntoServicio as PuntoServicio,cc.nombreComercial as Cliente,concat_ws(' ', em.apellidoPaterno,em.apellidoMaterno,em.nombreEmpleado) as NombreSupervisor
            FROM empleados e
            left join entidadesfederativas ef on(e.idEntidadTrabajo=ef.idEntidadFederativa)
            left join catalogopuntosservicios  cps on(e.empleadoIdPuntoServicio=cps.idPuntoServicio) 
            left join catalogoclientes cc on(cps.idClientePunto=cc.idCliente) 
            left join supervisor_puntoservicio sp on(e.empleadoIdPuntoServicio=sp.puntoServicioId) 
            left join empleados em on(sp.supervisorEntidad = em.entidadFederativaId and sp.supervisorConsecutivo = em.empleadoConsecutivoId and sp.supervisorTipo = em.empleadoCategoriaId) 
            where concat_ws('-', e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId)='" . mysqli_real_escape_string($this->conn, $empleadoidd) . "'";
            if($usuariorol != "Asistencia Administrativo" && $usuariorol != "Asistencia Administrativa SES"){
                $sql.=" and (em.empleadoEstatusId=1 or em.empleadoEstatusId=2)
                        and sp.idSupervisorPS=(SELECT idSupervisorPS FROM supervisor_puntoservicio where puntoServicioId=e.empleadoIdPuntoServicio and supervisorEntidad=e.idEntidadResponsableAsistencia
                        and supervisorConsecutivo=e.consecutivoResponsableAsistencia
                        and supervisorTipo=e.tipoResponsableAsistencia) 
                        and sp.supervisorEntidad=e.idEntidadResponsableAsistencia
                        and sp.supervisorConsecutivo=e.consecutivoResponsableAsistencia
                        and sp.supervisorTipo=e.tipoResponsableAsistencia";
            }
       //$this -> logger -> LogInfo ("Ejecutando obtenerDatosEmpBaja: " . $sql);

            
    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function InsertRegistoArchivoBajaEmpleado($MotivoBaja,$especifiqueMotivo1,$empleadoEntidadFirma,$empleadoConsecutivoFirma,$empleadoCategoriaFirma,$FirmaInterna,$asistenciaFecha,$FechaBajaEmpModal,$empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$usuarioRegistroFirma,$NombreEmpleado,$Estado,$PuntoServicio,$Cliente,$NombreSupervisor,$ModuloBaja,$FirmaInternaGuardiaRh)
{

    $sql = "INSERT INTO folosbajaemplados (EntidadEmpBaja, ConsecutivoEmpBaja, CaegoriaEmpBaja, NombreEmpBaja, EstadoEmpBaja, ServicioClienteEmpBaja, FirmaCifradaElementoBaja, PuntoServicioEmpBaja1, SupervisorNombreEmpBaja, MotivoEmpBaja, ComentarioEmpBaja, EntidadFirmaEmpBaja, ConsecutivoFirmaEmpBaja, CategoriaFirmaEmpBaja, FirmaCifradaEmpBaja, FechaRegistroSolicitud, FechaSolicitudBaja, UsuarioCapturaBaja,ModuloBaja)
            VALUES ('" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "',
                    '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "',
                    '" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "',
                    '" . mysqli_real_escape_string($this->conn, $NombreEmpleado) . "',
                    '" . mysqli_real_escape_string($this->conn, $Estado) . "',
                    '" . mysqli_real_escape_string($this->conn, $Cliente) . "',
                    '" . mysqli_real_escape_string($this->conn, $FirmaInternaGuardiaRh) . "',
                    '" . mysqli_real_escape_string($this->conn, $PuntoServicio) . "',
                    '" . mysqli_real_escape_string($this->conn, $NombreSupervisor) . "',
                    '" . mysqli_real_escape_string($this->conn, $MotivoBaja) . "',
                    '" . mysqli_real_escape_string($this->conn, $especifiqueMotivo1) . "',
                    '" . mysqli_real_escape_string($this->conn, $empleadoEntidadFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $empleadoCategoriaFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $FirmaInterna) . "',
                    now(),
                    '" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "',
                    '" . mysqli_real_escape_string($this->conn, $usuarioRegistroFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $ModuloBaja) . "')";

    $res = mysqli_query($this->conn, $sql);
      //  $this -> logger -> LogInfo ("Se ejecuto el isert como " . $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar Registro Del Archivo De Baja.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}
    public function UpdateDeleteArchivosBajaEmpleado($numeroEmpleado,$fechaBaja,$caso,$usuarioProcesarBaja){

        if($caso=="1"){
            $sql=" UPDATE folosbajaemplados set FechaAceptacionBaja=now(),UsuarioAceptacionBaja='" . mysqli_real_escape_string($this->conn, $usuarioProcesarBaja) . "'
                    where concat_ws('-',EntidadEmpBaja,ConsecutivoEmpBaja,CaegoriaEmpBaja)='" . mysqli_real_escape_string($this->conn, $numeroEmpleado) . "'
                    AND FechaSolicitudBaja='" . mysqli_real_escape_string($this->conn, $fechaBaja) . "'";//AND turnoAsistenciaM='" . mysqli_real_escape_string($this->conn, $valordia) . "'
        }else{
             $sql = "DELETE FROM folosbajaemplados 
                    where concat_ws('-',EntidadEmpBaja,ConsecutivoEmpBaja,CaegoriaEmpBaja)='" . mysqli_real_escape_string($this->conn, $numeroEmpleado) . "'
                    AND FechaSolicitudBaja='" . mysqli_real_escape_string($this->conn, $fechaBaja) . "'";//AND turnoAsistenciaM='" . mysqli_real_escape_string($this->conn, $valordia) . "'
            //unlink("uploads/ArchivosBaja/". $numeroEmpleado ."/ArchivoBaja_" . $fechaBaja."_". $numeroEmpleado."");
        }
            $res = mysqli_query($this->conn, $sql);   
        }

    public function obtenerListaArchivosBajasEmp()
{
  //$this -> logger -> LogInfo ("obtenerListaReporteVacaciones en persistencia");
    $LitaReporteBajaEmp = array();
    try {
        $sql = " SELECT concat_ws('-',fe.EntidadEmpBaja,fe.ConsecutivoEmpBaja, fe.CaegoriaEmpBaja) as NumeroEmpleado, concat_ws(' ',e.nombreEmpleado,e.apellidoPaterno, e.apellidoMaterno) as NombreEmpleado, 
                ef.nombreEntidadFederativa as EntidadTrabajo, cp.descripcionPuesto as PuestoEmpleado, cps.puntoServicio as PuntosServicio, FechaRegistroSolicitud as FechaRegistro, UsuarioCapturaBaja as UsuarioSolicitud,
                FechaSolicitudBaja as fechaSolicitud, UsuarioAceptacionBaja as UsuarioAceptacion, FechaAceptacionBaja as FechaAcpetacion,NombreArchivoBaja,fe.ModuloBaja,descripcionRolUsuario as rolUsuario,fe.NombreArchivoBaja
                FROM folosbajaemplados fe
                left join empleados e on (fe.EntidadEmpBaja=e.entidadFederativaId and fe.ConsecutivoEmpBaja=e.empleadoConsecutivoId and fe.CaegoriaEmpBaja=e.empleadoCategoriaId)
                left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
                left join entidadesfederativas ef on (e.idEntidadTrabajo=ef.idEntidadFederativa)
                left join catalogopuntosservicios cps on (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
                left join usuarios us on (fe.UsuarioCapturaBaja=us.usuario)
                left join catalogorolesusuarios cr on (us.usuarioRolId=cr.idRolUsuario)";
      //  $this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $LitaReporteBajaEmp[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
        return $LitaReporteBajaEmp;
    }catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function GetListaReportesDocumentos($FechaInicioDoc,$FechaFinDoc)
    {
        $GetListaReportesDocumetnosemp = array();
        $sql = "SELECT concat_ws('-', ed.idEntidadEmpladoDocumento,ed.empleadoConsecutivoDocumento,ed.empleadoTipoDocumento) as NumeroEmpleado, concat_ws(' ', e.nombreEmpleado,e.apellidoPaterno,e.apellidoMaterno) as NombreEmpleado,cee.descripcionEstatusEmpleado as EstatusEmpleado,cd.nombreDocumento as NombreDocumento,ctd.decripcionTipoDocumento as TipoDocumetno,ced.descripcionEstatusDocumento as EstatusDocumento
            FROM empleadosregistrodocumentacion ed
            left join empleados e on (e.entidadFederativaId=ed.idEntidadEmpladoDocumento and e.empleadoConsecutivoId=ed.empleadoConsecutivoDocumento and e.empleadoCategoriaId=ed.empleadoTipoDocumento)
            left join catalogoestatusempleados cee on(cee.estatusEmpleadoId=e.empleadoEstatusId)
            left join catalogodocumentos cd on (cd.idDocumento=ed.idDocumento)
            left join catalogotipodocumentos ctd on (ctd.idTipoDocumento=ed.idTipoDocumento)
            left join catalogoestatusdocumentos ced on (ced.idEstatusDocumento=ed.idEstatusDocumentos)
            where (((empleadoEstatusId='1' or empleadoEstatusId='2') and fechaIngresoEmpleado between CAST('" . mysqli_real_escape_string($this->conn, $FechaInicioDoc) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $FechaFinDoc) . "' AS DATE) or (empleadoEstatusId='0' and fechaBajaEmpleado between CAST('" . mysqli_real_escape_string($this->conn, $FechaInicioDoc) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $FechaFinDoc) . "' AS DATE))));";

        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaReportesDocumetnosemp[] = $reg;
        }
        return $GetListaReportesDocumetnosemp;
    }

 public function GetHistoricoAlm($tipo,$estatusEmpleado,$fechaconsultaInicial,$fechaconsultaFin)
    {
        $GetHistoricoAlm = array();
        $sql = "select concat_ws('-',ha.entidadEmpAlm,ha.ConsecutivoEmpAlm,ha.CategoriaEmpAlm) as numeroEmpleado,
                concat_ws(' ',emp.apellidoPaterno,emp.apellidoMaterno,emp.nombreEmpleado) as nombreEmpleado, 
                emp.fechaIngresoEmpleado,
                emp.fechaBajaEmpleado,
                ctu.descripcionTipo,
                ha.cantidadUniformeHis,
                ha.fechaAsignacionHis,
                ha.estatusUniformeRecibido,
                ha.entidadRecepcionHis,
                ha.fechaRecibidoHis,
                ha.tipoMovimiento
                from historico_Almacen ha
                left join catalogotiposuniforme ctu on (ctu.idTipoUniforme=ha.claveUniAsignacionHis) or (ctu.idTipoUniforme=ha.idUniformeRecibidoHis)
                left join empleados emp on (emp.entidadFederativaId=ha.entidadEmpAlm and emp.empleadoConsecutivoId=ha.ConsecutivoEmpAlm and emp.empleadoCategoriaId=ha.CategoriaEmpAlm)";  

                if ($tipo=='1') {
                   $sql.= "where emp.idTipoPuesto='02'
                           AND fechaAsignacionHis between cast('" . mysqli_real_escape_string($this->conn, $fechaconsultaInicial) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaconsultaFin) . "' as date)";
                } else if($tipo=='2'){
                    $sql.= "where emp.idTipoPuesto='03'
                    AND fechaAsignacionHis between cast('" . mysqli_real_escape_string($this->conn, $fechaconsultaInicial) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaconsultaFin) . "' as date)";
                }   

                if($estatusEmpleado=='0') {
                    $sql.=" AND emp.empleadoEstatusId='$estatusEmpleado'";
                }else if($estatusEmpleado=='1'){
                    $sql.=" AND (emp.empleadoEstatusId='1' OR empleadoEstatusId='2')";
                } 
        $this -> logger -> LogInfo ("valor del array de la consulta de GetHistoricoAlm ".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetHistoricoAlm[] = $reg;
        }
        return $GetHistoricoAlm;
    }
    
public function getCantidadStock($uniformeSeleccionado,$EntidadSeleccionada,$sucursalSeleccionada)
{

    $cantidadStock = array();
    $sql  = "SELECT cantidadUniformes
             FROM stockuniforme su
             LEFT JOIN catalogotiposuniforme ctu ON su.claveUniforme=ctu.idTipoUniforme
             WHERE entidadUniforme='$EntidadSeleccionada'
             AND claveUniforme='$uniformeSeleccionado'
             AND sucursalUniformeStock='$sucursalSeleccionada'";
    $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $cantidadStock[] = $reg;
        }
       // $this -> logger -> LogInfo ("valor del array de la cantidadStock ".var_export ($sql, true));
    return $cantidadStock;

}

public function BorradoDeRegistros($empleado,$asistenciaFecha)
{
$sql = "DELETE  FROM turnoasistencia
        where entidadEmpTurno='" . mysqli_real_escape_string($this->conn, $empleado["entidadId"]) . "'
        and consecutivoEmpTurno='" . mysqli_real_escape_string($this->conn, $empleado["consecutivoId"]) . "'
        and categoriaEmpTurno='" . mysqli_real_escape_string($this->conn, $empleado["tipoId"]) . "'
        and fechaTurno=CAST('" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "' AS DATE)";
        //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);
$sql1 = "DELETE  FROM incidenciasespeciales
        where incidenciaEmpleadoEntidad='" . mysqli_real_escape_string($this->conn, $empleado["entidadId"]) . "'
        and incidenciaEmpleadoConsecutivo='" . mysqli_real_escape_string($this->conn, $empleado["consecutivoId"]) . "'
        and incidenciaEmpleadoTipo='" . mysqli_real_escape_string($this->conn, $empleado["tipoId"]) . "'
        and incidenciaFecha=CAST('" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "' AS DATE)";
        //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql1);
$sql2 = "DELETE  FROM foliovacaciones
        where entidadempleadoVac='" . mysqli_real_escape_string($this->conn, $empleado["entidadId"]) . "'
        and consecutivoempleadoVac='" . mysqli_real_escape_string($this->conn, $empleado["consecutivoId"]) . "'
        and categoriaEmpleadoVac='" . mysqli_real_escape_string($this->conn, $empleado["tipoId"]) . "'
        and fechaInicioVacaciones=CAST('" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "' AS DATE)";
        //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql2);

$sql3 = "DELETE FROM foliosincapacidades
        where entidadempleadoInc='" . mysqli_real_escape_string($this->conn, $empleado["entidadId"]) . "'
        and consecutivoempleadoInc='" . mysqli_real_escape_string($this->conn, $empleado["consecutivoId"]) . "'
        and categoriaEmpleadoInc='" . mysqli_real_escape_string($this->conn, $empleado["tipoId"]) . "'
        and ((fechaInicioIncapacidad=CAST('" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "' AS DATE)) or (fechaFInIncapacidad=CAST('" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "' AS DATE)))";
        //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql3);

    mysqli_query($this->conn, $sql);
    mysqli_query($this->conn, $sql1);
    mysqli_query($this->conn, $sql2);
    mysqli_query($this->conn, $sql3);
}
public function ObtenerPreguntasPorCasos($caso,$pregunta1,$pregunta2)
    {
        //$this-> logger -> LogInfo("obtenerMunicipiosPorEntidadNacimiento");
        $listaPreguntasFirma = array();
        $sql = "SELECT * FROM CatalogoPreguntasRecuperacion";
        if($caso=="2"){
            $sql.=" where idPregunta !='" . mysqli_real_escape_string($this->conn, $pregunta1) . "'";

        }else if($caso=="3"){
            $sql.=" where idPregunta !='" . mysqli_real_escape_string($this->conn, $pregunta1) . "'
                    and idPregunta !='" . mysqli_real_escape_string($this->conn, $pregunta2) . "'";

        }
        //$this -> logger -> LogInfo ("Ejecutando listaMunicipios: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaPreguntasFirma[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la listaMunicipios ".var_export ($listaMunicipios, true));
        return $listaPreguntasFirma;
    }

    public function InsertFirmaElectronica($idEntidadEmpleadoFirma,$consecutivoEmpleadoFirma,$tipoResponsableEmpleadoFirma,$selPreguntaUnoFirma,$impPrimerPregunta,$selPreguntaDosFirma,$impSegundaPregunta,$selPreguntaTresFirma,$impTerceraPregunta,$ContraseniaFirma,$usuarioRegistroFirma)
{
    $sql = "INSERT INTO FirmaInterna (EntidadFirma, ConsecutivoFirma, CategoriaFirma, ContraseniaFirma, FechaCreacionFirma, UsuarioCapturaFirma, idPrimerPregunta, RespPrimerPregunta, idSegundaPregunta, RespSegundaPregunta, idTercerPregunta, RespTercerPregunta,EstatusFirmaInterna)
            VALUES ('" . mysqli_real_escape_string($this->conn, $idEntidadEmpleadoFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $consecutivoEmpleadoFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $tipoResponsableEmpleadoFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $ContraseniaFirma) . "',
                    now(),
                    '" . mysqli_real_escape_string($this->conn, $usuarioRegistroFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $selPreguntaUnoFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $impPrimerPregunta) . "',
                    '" . mysqli_real_escape_string($this->conn, $selPreguntaDosFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $impSegundaPregunta) . "',
                    '" . mysqli_real_escape_string($this->conn, $selPreguntaTresFirma) . "',
                    '" . mysqli_real_escape_string($this->conn, $impTerceraPregunta) . "',
                    '1')";

    $res = mysqli_query($this->conn, $sql);
       // $this -> logger -> LogInfo ("Se ejecuto el insert como " . $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar Registro De la Firma Electronica.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }

}

public function RevisionRegistroPrevioDeFirma1($idEntidadEmpleadoFirma,$consecutivoEmpleadoFirma,$tipoResponsableEmpleadoFirma)
    {
        $RevisionFirmaEmpleado = array();
        $sql = "SELECT count(idFirmaI) as REgistrosPreviosFirma FROM FirmaInterna
                where EntidadFirma='" . mysqli_real_escape_string($this->conn, $idEntidadEmpleadoFirma) . "'
                and ConsecutivoFirma='" . mysqli_real_escape_string($this->conn, $consecutivoEmpleadoFirma) . "'
                and CategoriaFirma='" . mysqli_real_escape_string($this->conn, $tipoResponsableEmpleadoFirma) . "'";
                //$this -> logger -> LogInfo ("Ejecutando RevisionRegistroPrevioDeFirma1: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $RevisionFirmaEmpleado[] = $reg;
        }
        return $RevisionFirmaEmpleado;
    }

    public function InsertTMPPer($idUniforme, $cantidadUni, $empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria, $usuarioCaptura,$entidadUniforme,$idTipoMercans,$costoIngresado1,$sucursalSeleccionada)
{
    $sql = "INSERT INTO asignacion_uniforme_temporal (entidadUniformeAsigT,
            sucursalUnifAsigTMP,
            TipoUniAsignacionTMP,
            claveUniAsignaciontmp,
            cantidadUniformetmp,
            entidadEmpAsignaciontmp,
            consecutivoEmpAsignaciontmp,
            categoriaEmpAsignaciontmp, 
            fechaAsignaciontmp,
            usuarioAsignaciontmp";

            if($idTipoMercans=="5") {
                $sql.=", montoDeudaAUT)";
            }else{
                $sql.=")";
            }
            
            $sql.="VALUES ('" . mysqli_real_escape_string($this->conn, $entidadUniforme) . "',
            " . $sucursalSeleccionada . ",
            " . $idTipoMercans . ",
            " . $idUniforme . ",
            " . $cantidadUni . ",
            '" . $empleadoEntidad . "',
            '" . $empleadoConsecutivo . "',
            '" . $empleadoCategoria . "',
            now(),
            '" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "'";
            if($idTipoMercans=="5") {
                $sql.=",'$costoIngresado1')";
            }else{
                $sql.=")";
            }
            
        //$this -> logger -> LogInfo ("Se ejecuto consulta InsertTMPPer como " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function getAsignacionesByEmpleadotmp($entidad, $consecutivo, $categoria,$orden)
{
    $listaAsignacionestmp = array();
    $sql = "SELECT nombreHA,tallaUniforme, descripcionUnif, cantidadUniformeHis, fechaAsignacionHis, nombreEmpAlm, firmaEmpAlmacen, firmaGuardia,montoDeudaHA
            FROM historico_almacen
            where entidadEmpAlm='$entidad'
            and ConsecutivoEmpAlm='$consecutivo'
            and CategoriaEmpAlm='$categoria'
            and ordenID='$orden'";
    //$this -> logger -> LogInfo ("Se ejecuto consulta consultaProveedores como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaAsignacionestmp[] = $reg;
              }
          }
    return $listaAsignacionestmp;
}

public function ObtenerDatosFirmaAlmacenada($numeroEmpleado)
    {
        //$this-> logger -> LogInfo("obtenerMunicipiosPorEntidadNacimiento");
        $listaFatosfirmaGuardada = array();
        $sql = "SELECT * from FirmaInterna fi
                left join directorio dr on (fi.EntidadFirma=dr.entidadEmpleadoDirectorio and fi.ConsecutivoFirma=dr.consecutivoEmpleadoDirectorio and fi.CategoriaFirma=dr.categoriaEmpleadoDirectorio)
                where concat_ws('-', fi.EntidadFirma,fi.ConsecutivoFirma,fi.CategoriaFirma) ='" . mysqli_real_escape_string($this->conn, $numeroEmpleado) . "'";
        //$this -> logger -> LogInfo ("Ejecutando ObtenerDatosFirmaAlmacenada: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaFatosfirmaGuardada[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la listaFatosfirmaGuardada ".var_export ($listaFatosfirmaGuardada, true));
        return $listaFatosfirmaGuardada;
    }

public function restaurarContraseniaFrimaElectronicaint1($contrasenia,$entidadEmpleadoFirma, $consecutivoEmpleadoFirma, $tipoEmpleadoFirma)
{
    $sql = "UPDATE FirmaInterna set ContraseniaFirma=MD5('" . mysqli_real_escape_string($this->conn, $contrasenia) . "'), FehcaEditedFirma = now()
            where EntidadFirma='" . mysqli_real_escape_string($this->conn, $entidadEmpleadoFirma) . "'
            and ConsecutivoFirma='" . mysqli_real_escape_string($this->conn, $consecutivoEmpleadoFirma) . "'
            and CategoriaFirma='" . mysqli_real_escape_string($this->conn, $tipoEmpleadoFirma) . "'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta restaurarContraseniaFrimaElectronicaint1 como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al restaurar contraseña.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function eliminarTMPPer($usuario)
{
 $listaid = array();

 $sql = "select idAsignacionUniformeTMP from asignacion_uniforme_temporal
         where usuarioAsignacionTMP='$usuario'";
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaid[] = $reg;
              }
          for($i=0; $i <count($listaid); $i++) { 
               $id = $listaid[$i]["idAsignacionUniformeTMP"];
               $sql1 = "DELETE FROM asignacion_uniforme_temporal
               WHERE idAsignacionUniformeTMP = '$id'";
               //$this -> logger -> LogInfo ("valor del array de la sql1 ".var_export ($sql1, true));
               $res1 = mysqli_query($this->conn, $sql1);
             }
}

public function getMaxId(){
  $sql = "SELECT ifnull(max(ordenID),0) as idMax
          FROM historico_almacen";
  //$this -> logger -> LogInfo ("Ejecutando getMaxId: " . $sql);
  $res = mysqli_query($this->conn, $sql);
  while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
        $idmax = $reg;
       }
  return $idmax;
}

public function getAsignacionesTemporales($NumeroEmpleado,$usuarioCaptura){

  $ListaAsignacionesTemporales = array();
  $sql ="select ctu.codigoUniforme,
                ctu.descripcionTipo,
                aut.cantidadUniformeTMP,
                claveUniAsignacionTMP,
                TipoUniAsignacionTMP,
                entidadUniformeAsigT,
                montoDeudaAUT,
                sucursalUnifAsigTMP
                from asignacion_uniforme_temporal aut 
                LEFT JOIN catalogotiposuniforme ctu ON (aut.claveUniAsignacionTMP=ctu.idTipoUniforme) 
                where concat_ws('-', aut.entidadEmpAsignacionTMP,aut.consecutivoEmpAsignacionTMP,aut.categoriaEmpAsignacionTMP)='$NumeroEmpleado'
                and usuarioAsignacionTMP='$usuarioCaptura'";

  $res = mysqli_query($this->conn, $sql);
  if(!is_bool($res)){
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $ListaAsignacionesTemporales[] = $reg;
           }
    }
    //$this -> logger -> LogInfo ("valor del array de la getAsignacionesTemporales ".var_export ($getAsignacionesTemporales, true));
    return $ListaAsignacionesTemporales;
}

public function obtenerFirmaSolicitada($NumEmpModal, $constraseniaFirma){
 $lista = array();
 $sql = "SELECT * FROM firmainterna fi
         left join empleados em on (fi.EntidadFirma =em.entidadFederativaId and fi.ConsecutivoFirma=em.empleadoConsecutivoId and fi.CategoriaFirma=em.empleadoCategoriaId)
         where concat_ws('-',fi.EntidadFirma,fi.ConsecutivoFirma,fi.CategoriaFirma)='" . mysqli_real_escape_string($this->conn, $NumEmpModal) . "'
            and ContraseniaFirma=md5('" . mysqli_real_escape_string($this->conn, $constraseniaFirma) . "')";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $lista;
}

public function obtenerEmpleadoPorIdFirmaBaja($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo){     
      //$this -> logger -> LogInfo ("obtenerEmpleadoPorIdFirmaBaja en persistencia");
        $empleado = array();
        $sql = "SELECT * FROM firmainterna
        where EntidadFirma='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
        and  ConsecutivoFirma='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "' 
        and CategoriaFirma='" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "' ";
    //$this -> logger -> LogInfo ("valor del array de la sql ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $empleado[] = $reg;
    }
    return $empleado;
}

public function getOrdenesbyEMp($empleadoEntidad, $empleadoConsecutivo,$empleadoCategoria)
    {
        $ordenAsignacionesXemp = array();
        $sql = "select ordenID,fechaAsignacionHis,sum(cantidadUniformeHis) as cantidadAsignados,tipoMovimiento,nombreEmpAlm as NombreEncargado, firmaEmpAlmacen as FirmaEncargado,firmaGuardia from historico_Almacen
                where entidadEmpAlm='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
                and ConsecutivoEmpAlm='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
                and CategoriaEmpAlm='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'
                and ordenID=0
                group by tipoMovimiento
                union
            select ordenID,fechaAsignacionHis,sum(cantidadUniformeHis) as cantidadAsignados,tipoMovimiento,nombreEmpAlm as NombreEncargado, firmaEmpAlmacen as FirmaEncargado,firmaGuardia from historico_Almacen
                where entidadEmpAlm='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
                and ConsecutivoEmpAlm='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
                and CategoriaEmpAlm='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'
                and ordenID!=0
                group by ordenID";  
        //$this -> logger -> LogInfo ("valor del array de la consulta de getOrdenesbyEMp ".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $ordenAsignacionesXemp[] = $reg;
        }
        return $ordenAsignacionesXemp;
    }

public function getInfoAsigXEmp($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
    {     
       //$this -> logger -> LogInfo ("getInfoAsigXEmp en persistencia");
        $empleado = array();
        $sql = "select entidadFederativaId, empleadoConsecutivoId, empleadoCategoriaId, apellidoPaterno,apellidoMaterno, nombreEmpleado, fechaIngresoEmpleado, fechaBajaEmpleado,idEntidadTrabajo
                from empleados 
                where entidadFederativaId = '$empleadoEntidad'
                and empleadoConsecutivoId = '$empleadoConsecutivo'
                and empleadoCategoriaId = '$empleadoTipo'";
        //$this -> logger -> LogInfo ("valor del array de la consulta de getInfoAsigXEmp ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $empleado[] = $reg;
    }
    return $empleado;
}
public function obtenerDatosEmpBajaFolioBaja($empleadoidd)
{
    // $this -> logger -> LogInfo (" obtenerDatosEmpBajaFolioBaja: " . $puntoServicioId);
    $lista = array();
    $sql = "SELECT * FROM folosbajaemplados f
            left join empleados e on(f.EntidadFirmaEmpBaja=e.entidadFederativaId and f.ConsecutivoFirmaEmpBaja=e.empleadoConsecutivoId and f.CategoriaFirmaEmpBaja=e.empleadoCategoriaId)
            where concat_ws('-', f.EntidadEmpBaja,f.ConsecutivoEmpBaja,f.CaegoriaEmpBaja)='" . mysqli_real_escape_string($this->conn, $empleadoidd) . "'
            and f.idFolioBajaEmp = (SELECT max(idFolioBajaEmp) FROM folosbajaemplados where concat_ws('-', EntidadEmpBaja,ConsecutivoEmpBaja,CaegoriaEmpBaja)='" . mysqli_real_escape_string($this->conn, $empleadoidd) . "')";
     //   $this -> logger -> LogInfo ("Ejecutando obtenerDatosEmpBajaFolioBaja: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $lista;
}

   public function obtenerDatosEmpBajaFolioBajaHistorico($empleadoidd,$fechaSolicitud)
{
    // $this -> logger -> LogInfo (" obtenerDatosEmpBajaFolioBaja: " . $puntoServicioId);
    $lista = array();
    $sql = "SELECT * FROM folosbajaemplados f
            left join empleados e on(f.EntidadFirmaEmpBaja=e.entidadFederativaId and f.ConsecutivoFirmaEmpBaja=e.empleadoConsecutivoId and f.CategoriaFirmaEmpBaja=e.empleadoCategoriaId)
            where concat_ws('-', f.EntidadEmpBaja,f.ConsecutivoEmpBaja,f.CaegoriaEmpBaja)='" . mysqli_real_escape_string($this->conn, $empleadoidd) . "'
            and f.FechaSolicitudBaja = '" . mysqli_real_escape_string($this->conn, $fechaSolicitud) . "'";
     //   $this -> logger -> LogInfo ("Ejecutando obtenerDatosEmpBajaFolioBaja: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $lista;
}


public function ConsultaUniformesAsigPer($usuarioCaptura)
{
    $listaUnif = array();
    $sql = "select claveUniAsignacionTMP,sum(cantidadUniformeTMP) as suma,entidadUniformeAsigT,sucursalUnifAsigTMP 
            from asignacion_uniforme_temporal
            where usuarioAsignacionTMP='" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "'
            group by claveUniAsignacionTMP,entidadUniformeAsigT
            order by idAsignacionUniformeTMP";
    //$this -> logger -> LogInfo ("Se ejecuto consulta ConsultaUniformesAsigPer como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaUnif[] = $reg;
              }
          }
    return $listaUnif;
}

public function EliminarUltimoRegPer($usuarioCaptura)
{
    $listaUnif1 = array();

    $sql = "SELECT MAX(idAsignacionUniformeTMP) as idM
            FROM asignacion_uniforme_temporal
            where usuarioAsignacionTMP='" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "'";
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaUnif1[] = $reg;
              }
          $a = $listaUnif1[0]["idM"];
          $sql1 = "DELETE FROM asignacion_uniforme_temporal
             WHERE idAsignacionUniformeTMP='$a'";
             //$this -> logger -> LogInfo ("valor del array de la sql1 ".var_export ($sql1, true));
             $res1 = mysqli_query($this->conn, $sql1);
}

public function getEntregadosByGuardiaHistorico($entidadEmpleado, $consecutivoEmpleado, $categoriaEmpleado,$tipoMovimiento)
{
    $listaRecepciones = array();
    $sql              = "SELECT *
                         FROM historico_almacen ha 
                         LEFT JOIN catalogotiposuniforme ctu ON (ha.idUniformeRecibidoHis=ctu.idTipoUniforme)
                         WHERE ha.entidadEmpAlm='$entidadEmpleado' 
                         AND ha.ConsecutivoEmpAlm='$consecutivoEmpleado' 
                         AND ha.CategoriaEmpAlm='$categoriaEmpleado' 
                         AND ha.tipoMovimiento='" . mysqli_real_escape_string($this->conn, $tipoMovimiento) . "'
                         order by ha.idHistoricoAlm";
        //$this -> logger -> LogInfo ("Se ejecuto consulta getEntregadosByGuardiaHistorico como: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaRecepciones[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la getEntregadosByGuardiaHistorico ".var_export ($getEntregadosByGuardiaHistorico, true));
    return $listaRecepciones;
}

public function insertDatosAlmFinPER($empleadoEntidad,$empleadoConsecutivo,$empleadoCategoria)
{
 $sql = "insert into almacen_finiquito (entidadEmpAlmF,consecutivoEmpAlmF,categoriaEmpAlmF,fechaCargaDoc,horaCargaDoc)
         values('$empleadoEntidad','$empleadoConsecutivo','$empleadoCategoria',now(),now());";
         $res = mysqli_query($this->conn, $sql);
}
public function traeCatalogoEntidadesFederativasFrima()
    {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
        $listaEnditadesFederativas = array();

        try {

            $sql = "Select idEntidadFederativa, nombreEntidadFederativa, claveEntidadF from entidadesfederativas where idEntidadFederativa!=50";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaEnditadesFederativas[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
            return $listaEnditadesFederativas;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

public function insertRecepcionTMPPER($idUniforme,$empleadoEntidad,$empleadoConsecutivo,$empleadoCategoria,$estatusRecepcion,$entidadUsuario,$usuarioCaptura,$fechaAsignacion,$tipoMerca,$monto,$idUniformeSupervisor,$porcentajeCobro,$coberturaEmpleado,$costoActualUniforme,$sucursalUsuario){
$sql="insert into recepcion_uniforme_temporal
        (idUniformeSup,
        entidadRecepcionTMP,
        TipoUniRecepcionTMP,
        claveUniRecepcionTMP,
        entidadEmpRecepcionTMP,
        consecutivoEmpRecepcionTMP,
        categoriaEmpRecepcionTMP,
        fechaAsigancionUniRUT,
        fechaRecepcionTMP,
        estatusUniformeRecepcionTMP,
        usuarioRecepcionTMP,
        montoDeudaRUT,
        porcentajeCobrado,
        precioDelUniforme,
        coberturaEmpleado)
    values('" . mysqli_real_escape_string($this->conn, $idUniformeSupervisor) . "',
           '" . mysqli_real_escape_string($this->conn, $entidadUsuario) . "',
           '" . mysqli_real_escape_string($this->conn, $tipoMerca) . "',
           '" . mysqli_real_escape_string($this->conn, $idUniforme) . "',
           '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "',
           '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "',
           '" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "',
           '" . mysqli_real_escape_string($this->conn, $fechaAsignacion) . "',
           now(),
           '" . mysqli_real_escape_string($this->conn, $estatusRecepcion) . "',
           '" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "',
           '" . mysqli_real_escape_string($this->conn, $monto) . "',
           '" . mysqli_real_escape_string($this->conn, $porcentajeCobro) . "',
           '" . mysqli_real_escape_string($this->conn, $costoActualUniforme) . "',
           '" . mysqli_real_escape_string($this->conn, $coberturaEmpleado) . "')";
$res = mysqli_query($this->conn, $sql);
//$this -> logger -> LogInfo ("valor insertRecepcionTMPPER".var_export ($sql, true));
}
  
public function obtenerUniformeARecibirPER($usuarioLogeado)
{
 //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
 $listaUnifTMP = array();
 try{
     $sql = "select rut.idUniformeSup,ctu.codigoUniforme,montoDeudaRUT,descripcionTipo,entidadEmpRecepcionTMP,consecutivoEmpRecepcionTMP,categoriaEmpRecepcionTMP,claveUniRecepcionTMP,estatusUniformeRecepcionTMP,fechaAsigancionUniRUT,usuarioRecepcionTMP,entidadRecepcionTMP,fechaRecepcionTMP,porcentajeCobrado,precioDelUniforme,coberturaEmpleado 
             from recepcion_uniforme_temporal rut
             left join catalogotiposuniforme ctu on rut.claveUniRecepcionTMP=ctu.idTipoUniforme
             where usuarioRecepcionTMP='" . mysqli_real_escape_string($this->conn, $usuarioLogeado) . "'";
     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listaUnifTMP[] = $reg;
           }
     return $listaUnifTMP;
    }catch (Exception $e) {
     //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
 }
}

public function eliminarRecpUniTMPPer($usuario)
{
 $listaid = array();

 $sql = "select idRecepcionUniformeTMP from recepcion_uniforme_temporal
         where usuarioRecepcionTMP='$usuario'";
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaid[] = $reg;
              }
          for($i=0; $i <count($listaid); $i++) { 
               $id = $listaid[$i]["idRecepcionUniformeTMP"];
               $sql1 = "DELETE FROM recepcion_uniforme_temporal
               WHERE idRecepcionUniformeTMP = '$id'";
               //$this -> logger -> LogInfo ("valor del array de la sql1 ".var_export ($sql1, true));
               $res1 = mysqli_query($this->conn, $sql1);
             }
}  

public function insertDeudasUniforme($nombreGuardia,$empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria, $idUniforme, $cantidadUni, $usuarioCaptura, $entidadUsuario,$costoIngresado1,$FirmaGuardia,$numEmpAlmacen,$FirmaEmpAlmacen,$NombreEmpAlmacen,$maxid,$descripcionTipoUnif,$sucursalUnifAsigTMP){
    //ACTUALIZAR
 $sql = "INSERT INTO DeudaUniformes(idordenDU,nombreDeudor,entidadEmpDeudaU,consecutivoEmpDeudaU,categoriaEmpDeudaU,claveUnifDeuda,descripcionUniDeuda,cantidadUnifDeuda,FechaAsigUnifD,usuarioAsigDeuda,EntidadAsignacion,sucursalAsignacion,montoDeuda,estatusDeuda,firmaDeudor,nombreEmpAsigDeudar,numempAlmDU,firmaEmpAsigDeuda)
         VALUES('$maxid','$nombreGuardia','$empleadoEntidad','$empleadoConsecutivo','$empleadoCategoria','$idUniforme','$descripcionTipoUnif','1',now(),'$usuarioCaptura','$entidadUsuario','$sucursalUnifAsigTMP','$costoIngresado1','0','$FirmaGuardia','$NombreEmpAlmacen','$numEmpAlmacen','$FirmaEmpAlmacen')";//entidad usuario es la entidad del uniforme donde fue tomada
$this -> logger -> LogInfo ("valor del array de la insertDeudasUniforme ".var_export ($sql, true));
         $res = mysqli_query($this->conn, $sql);

    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al insertar deudas unifomres.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }    
}

public function insertDeudasUniformeRecepcion($nombreGuardia,$empleadoEntidad,$empleadoConsecutivo,$empleadoCategoria,$idUniforme, $cantidadUni,$usuarioCaptura,$entidadUsuario,$costoIngresado1,$FirmaGuardia,$numEmpAlmacen,$FirmaEmpAlmacen,$NombreEmpAlmacen,$maxid,$descripcionTipoUnif,$fechaAsignacion,$fechaRecepcionTMP,$porcentajeCobrado,$precioDelUniforme,$coberturaEmpleado,$sucursalUsr){

 $sql = "insert into DeudaUniformes(idordenDU,
                                    nombreDeudor,
                                    entidadEmpDeudaU,
                                    consecutivoEmpDeudaU,
                                    categoriaEmpDeudaU,
                                    claveUnifDeuda,
                                    descripcionUniDeuda,
                                    cantidadUnifDeuda,
                                    FechaAsigUnifD,
                                    usuarioAsigDeuda,
                                    EntidadAsignacion,
                                    sucursalAsignacion,
                                    montoDeuda,
                                    porcentajeAcobrar,
                                    precioUniformeDeuda,
                                    coberturaAlRecibir,
                                    estatusDeuda,
                                    firmaDeudor,
                                    nombreEmpAsigDeudar,
                                    numempAlmDU,
                                    firmaEmpAsigDeuda,
                                    fechaRecepcionUnifDeuda) 
        values('" . mysqli_real_escape_string($this->conn, $maxid) . "',
               '" . mysqli_real_escape_string($this->conn, $nombreGuardia) . "',
               '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "',
               '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "',
               '" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "',
               '" . mysqli_real_escape_string($this->conn, $idUniforme) . "',
               '" . mysqli_real_escape_string($this->conn, $descripcionTipoUnif) . "',
               '1',
               '" . mysqli_real_escape_string($this->conn, $fechaAsignacion) . "',
               '" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "',
               '" . mysqli_real_escape_string($this->conn, $entidadUsuario) . "',
               '" . mysqli_real_escape_string($this->conn, $sucursalUsr) . "',
               '" . mysqli_real_escape_string($this->conn, $costoIngresado1) . "',
               '" . mysqli_real_escape_string($this->conn, $porcentajeCobrado) . "',
               '" . mysqli_real_escape_string($this->conn, $precioDelUniforme) . "',
               '" . mysqli_real_escape_string($this->conn, $coberturaEmpleado) . "',
               '0',
               '" . mysqli_real_escape_string($this->conn, $FirmaGuardia) . "',
               '" . mysqli_real_escape_string($this->conn, $NombreEmpAlmacen) . "',
               '" . mysqli_real_escape_string($this->conn, $numEmpAlmacen) . "',
               '" . mysqli_real_escape_string($this->conn, $FirmaEmpAlmacen) . "',
               '" . mysqli_real_escape_string($this->conn, $fechaRecepcionTMP) . "')";
       $res = mysqli_query($this->conn, $sql);
      $this -> logger -> LogInfo ("valor del array de la insertDeudasUniformeRecepcion ".var_export ($sql, true));
}

public function obtenerUnifAsigDeudaPER()
{
 $listaUnifDeuda = array();
 try{
     $sql = "select idDeudaUni,
                    concat_ws('-',du.entidadEmpDeudaU,du.consecutivoEmpDeudaU,du.categoriaEmpDeudaU) as numeroEmpDeuda,
                    concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpDeuda,
                    ctu.descripcionTipo,
                    du.cantidadUnifDeuda,
                    du.usuarioAsigDeuda,
                    ef.nombreEntidadFederativa,
                    du.FechaAsigUnifD,
                    du.montoDeuda,
                    du.entidadEmpDeudaU,
                    du.consecutivoEmpDeudaU,
                    du.categoriaEmpDeudaU                    
             from DeudaUniformes du
             left join empleados e on  e.entidadFederativaId=du.entidadEmpDeudaU and e.empleadoConsecutivoId=du.consecutivoEmpDeudaU and e.empleadoCategoriaId=du.categoriaEmpDeudaU
             left join catalogotiposuniforme ctu on ctu.idTipoUniforme=du.claveUnifDeuda
             left join entidadesfederativas ef on ef.idEntidadFederativa=du.EntidadAsignacion 
             where du.estatusDeuda='0'
              and montoDeuda >'0'";

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listaUnifDeuda[] = $reg;
           }
     return $listaUnifDeuda;
    }catch (Exception $e) {
 }
}

public function actualizarestatusdeudaUniformesPER($entidadEmpDeudaU,$consecutivoEmpDeudaU,$categoriaEmpDeudaU,$idDeudaUni)
{
 $sql = "UPDATE DeudaUniformes set estatusDeuda=1,FechaPagoUnifD=now() 
         where entidadEmpDeudaU='$entidadEmpDeudaU'
         and consecutivoEmpDeudaU='$consecutivoEmpDeudaU'
         and categoriaEmpDeudaU='$categoriaEmpDeudaU'
         and idDeudaUni='$idDeudaUni'";

 $res = mysqli_query($this->conn, $sql);
     //   $this -> logger -> LogInfo ("Se ejecuto consulta actualizarestatusdeudaUniformesPER como" . $sql);
 
}

public function obtenerEntidadTrabajoEmpleadoQueAsignaPER($numEmpAlmacen){
  $sql = "SELECT distinct ef.nombreEntidadFederativa
          FROM usuario_empleado uemp
          left join empleados emp on emp.entidadFederativaId=uemp.entidadEmpleadoUsuario
          and emp.empleadoConsecutivoId=uemp.consecutivoEmpleadoUsuario
          and emp.empleadoCategoriaId=uemp.categoriaEmpleadoUsuario 
          left join entidadesfederativas ef on emp.idEntidadTrabajo=ef.idEntidadFederativa
          where concat_ws('-',emp.entidadFederativaId, emp.empleadoConsecutivoId, empleadoCategoriaId)='$numEmpAlmacen'";
  //$this -> logger -> LogInfo ("Ejecutando getMaxId: " . $sql);
  $res = mysqli_query($this->conn, $sql);
  while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
        $idmax = $reg;
       }
  return $idmax;
}

public function getEmpleadosProcesoFiniquitoParaAlmacen($usuario){
    $lista = array();
    $sql = "SELECT concat_ws('-',fi.entidadEmpFiniquito,fi.consecutivoEmpFiniquito,fi.categoriaEmpFiniquito) as NumEmpleado, concat_ws(' ',emp.nombreEmpleado,emp.apellidoPaterno,emp.apellidoMaterno) as NombreEmpleado,
            concat_ws('-',em.entidadFederativaId,em.empleadoConsecutivoId,em.empleadoCategoriaId) as NumRecluetador, concat_ws(' ',em.nombreEmpleado,em.apellidoPaterno,em.apellidoMaterno) as NombreReclutador,di.fechaBajaImss as FechaBajaEmpleado
            from finiquitos fi
            left join Uniformes_Finiquitos uf on (fi.entidadEmpFiniquito = uf.entidadUniF and fi.consecutivoEmpFiniquito = uf.consecutivoUniF and fi.categoriaEmpFiniquito = uf.categoriaUniF)
            left join datosimss di on (fi.entidadEmpFiniquito = di.empladoEntidadImss and fi.consecutivoEmpFiniquito = di.empleadoConsecutivoImss and fi.categoriaEmpFiniquito = di.empleadoCategoriaImss)
            left join empleados emp on (fi.entidadEmpFiniquito = emp.entidadFederativaId and fi.consecutivoEmpFiniquito = emp.empleadoConsecutivoId and fi.categoriaEmpFiniquito = emp.empleadoCategoriaId)
            left join empleados em on (emp.reclutadorEntidad = em.entidadFederativaId and emp.reclutadorConsecutivoId = em.empleadoConsecutivoId and emp.reclutadorTipo = em.empleadoCategoriaId)
            where (fi.estatusFiniquito='0' or fi.estatusFiniquito='6')
            and (uf.idUniformeF is null";
            if($usuario["usuario"]!="cis*1"){
           $sql.=") and";
           for($j=0;$j<count($usuario['lineaNegocioUsuario']);$j++){
              if(!is_array($usuario['lineaNegocioUsuario'])){
                  $lineanegocioconsulta=$usuario['lineaNegocioUsuario'];
              }else{
                  $lineanegocioconsulta=$usuario['lineaNegocioUsuario'][$j];
              }  
              for($i=0;$i<count($usuario['entidadFederativaUsuario']);$i++){
                  if(!is_array($usuario['entidadFederativaUsuario'])){
                      $entidadparaconsulta=$usuario['entidadFederativaUsuario'];
                  }else{
                      $entidadparaconsulta=$usuario['entidadFederativaUsuario'][$i];
                  }  
                  if(($i==0) && ($j==0)){
                      $sql.=" ((emp.empleadoLineaNegocioId='$lineanegocioconsulta' and emp.idEntidadTrabajo='$entidadparaconsulta')";    
                  }else{
                      $sql.=" or (emp.empleadoLineaNegocioId='$lineanegocioconsulta' and emp.idEntidadTrabajo='$entidadparaconsulta')";       
                  }
              }
            }  
        }
        $sql.=")  order by NumEmpleado";
        $this -> logger -> LogInfo ("Se ejecuto consulta getEmpleadosProcesoFiniquitoParaAlmacen4444444444444444444 como: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $lista;
}

public function obtenerDeudaCalzadoPEr($entidadEmpDeuda, $consecutivoEmpDeuda, $categoriaEmpDeuda,$idDeudaUni)
{
    $listaDeudaCalzado = array();
    $sql = "SELECT idordenDU,
            nombreDeudor,
            concat_ws('-',du.entidadEmpDeudaU, du.consecutivoEmpDeudaU, du.categoriaEmpDeudaU) as numeroDeudor,
            du.FechaAsigUnifD, 
            du.montoDeuda, 
            du.firmaDeudor,
            du.nombreEmpAsigDeudar, 
            du.firmaEmpAsigDeuda,
            cps.puntoServicio,
            du.fechaRecepcionUnifDeuda
            FROM deudauniformes du
            left join empleados emp on emp.entidadFederativaId=du.entidadEmpDeudaU and emp.empleadoConsecutivoId=du.consecutivoEmpDeudaU and emp.empleadoCategoriaId=du.categoriaEmpDeudaU
            left join catalogopuntosservicios cps on cps.idPuntoServicio= emp.empleadoIdPuntoServicio
            where entidadEmpDeudaU='$entidadEmpDeuda'
            and consecutivoEmpDeudaU='$consecutivoEmpDeuda'
            and categoriaEmpDeudaU='$categoriaEmpDeuda'
            and idDeudaUni='$idDeudaUni'";//aqui
        //$this -> logger -> LogInfo ("Se ejecuto consulta getEntregadosByGuardiaHistorico como: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaDeudaCalzado[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la getEntregadosByGuardiaHistorico ".var_export ($getEntregadosByGuardiaHistorico, true));
    return $listaDeudaCalzado;
}


public function getEstatusEmpladoParaFirmaFniquitoUni($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo)
    {     
      //  $this -> logger -> LogInfo ("obtenerEmpleadoPorId en persistencia");
        $empleado = array();
        $sql = "SELECT * from datosimss di
                left join finiquitos fi on (di.empladoEntidadImss = fi.entidadEmpFiniquito and di.empleadoConsecutivoImss = fi.consecutivoEmpFiniquito and di.empleadoCategoriaImss = fi.categoriaEmpFiniquito)
                left join uniformes_finiquitos uf on (di.empladoEntidadImss = uf.entidadUniF and di.empleadoConsecutivoImss = uf.consecutivoUniF and di.empleadoCategoriaImss = uf.categoriaUniF)
                where di.empladoEntidadImss = '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
                and di.empleadoConsecutivoImss = '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "' 
                and di.empleadoCategoriaImss = '" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'
                and fi.idFiniquito = (select max(idFiniquito) from finiquitos
                where entidadEmpFiniquito = '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
                and consecutivoEmpFiniquito = '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "' 
                and categoriaEmpFiniquito = '" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "')";       
//$this -> logger -> LogInfo ("valor del array de la sql ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $empleado[] = $reg;
    }
    return $empleado;
}

public function InsertdeudaDirectaFiniquitoPER($empleadoEntidad,$empleadoConsecutivo,$empleadoCategoria,$TotalACobro){

 $sql = "insert into uniformes_finiquitos (entidadUniF, consecutivoUniF, categoriaUniF, montoUniF, FechaCarga, FechaHoraCarga) 
        values('" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "',
        '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "',
        '" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "',
        '" . mysqli_real_escape_string($this->conn, $TotalACobro) . "',now(),now());";

         $res = mysqli_query($this->conn, $sql);
      //   $this -> logger -> LogInfo ("valor del array de la InsertdeudaDirectaFiniquitoPER ".var_export ($sql, true));
}

public function InserthistoricoBajasDirectasAlmPER($empleadoEntidad,$empleadoConsecutivo,$empleadoCategoria,$empleadoEntidadGuardia,$empleadoConsecutivoGuardia,$empleadoCategoriaGuardia,$FirmaEmp){
 $sql = "insert into historicobajasdirectasalmacen (EntidadEmpBajaDirAlmacen, 
                      ConsecutivoEmpBajaDirAlmacen, 
                      CaegoriaEmpBajaDirAlmacen, 
                      FechaRegistroDirAlmacen, 
                      EntidadFirmaBajaDirAlmacen, 
                      ConsecutivoFirmaBajaDirAlmacen, 
                      CaegoriaFirmaBajaDirAlmacen, 
                      FirmaCifradaDirectaAlamcen) 
                    values('" . mysqli_real_escape_string($this->conn, $empleadoEntidadGuardia) . "',
                    '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoGuardia) . "',
                    '" . mysqli_real_escape_string($this->conn, $empleadoCategoriaGuardia) . "',
                    now(),
                    '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "',
                    '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "',
                    '" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "',
                    '" . mysqli_real_escape_string($this->conn, $FirmaEmp) . "')";

         $res = mysqli_query($this->conn, $sql);
      //   $this -> logger -> LogInfo ("valor del array de la InserthistoricoBajasDirectasAlmPER ".var_export ($sql, true));
}


public function consultarDatosFiniquitoUpdate($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo,$montoDur,$valRsi)
    {  
    //$this -> logger -> LogInfo ("consultarDatosFiniquitoUpdate en persistencia");
        $empleado = array();
        $sql = "SELECT * FROM finiquitos f
                left join fonacot_finiquito ff on (f.entidadEmpFiniquito=ff.entidadEmpFF and f.consecutivoEmpFiniquito=ff.consecutivoEmpFF and f.categoriaEmpFiniquito=ff.categoriaEmpFF)
                left join prestamo_finiquito pf on (f.entidadEmpFiniquito=pf.entidadEmpPF and f.consecutivoEmpFiniquito=pf.consecutivoEmpPF and f.categoriaEmpFiniquito=pf.categoriaEmpPF)
                left join pension_finiquito pef on (f.entidadEmpFiniquito=pef.entidadEmpPeF and f.consecutivoEmpFiniquito=pef.consecutivoEmpPeF and f.categoriaEmpFiniquito=pef.categoriaEmpPeF)
                left join infonavit_finiquito inf on (f.entidadEmpFiniquito=inf.entidadEmpIF and f.consecutivoEmpFiniquito=inf.consecutivoEmpIF and f.categoriaEmpFiniquito=inf.categoriaEmpIF)
                where entidadEmpFiniquito='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
                and consecutivoEmpFiniquito='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
                and categoriaEmpFiniquito='" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'
                and (estatusFiniquito ='0' or f.estatusFiniquito ='6')
                group by idFiniquito";       
    //$this -> logger -> LogInfo ("valor del array de la sql ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $empleado[] = $reg;
    }
    //$this -> logger -> LogInfo ("valor del array de la empleado ".var_export ($empleado, true));
    $empleado2 = array();
            $sql2 = "SELECT ifnull(sum(DeudaFiniquito),0) as TotalACobrarF FROM asignacion_uniforme_Supervisores
                     where entidadSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "' 
                     and consecutivoSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
                     and categoriaSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'
                     and EstatusFiniquito='0'";       
   // $this -> logger -> LogInfo ("valor del array de la sql2 ".var_export ($sql2, true));
        $res2 = mysqli_query($this->conn, $sql2);
        while (($reg2 = mysqli_fetch_array($res2, MYSQLI_ASSOC))) {
            $empleado2[] = $reg2;
        }
   // $this -> logger -> LogInfo ("valor del array de la empleado2 ".var_export ($empleado2, true));
     $TotalACobrarFIN = $empleado2[0]["TotalACobrarF"];
    if ($valRsi=='0') {
        $montoDur='0';
    }
    $SumaTotal = $TotalACobrarFIN+$montoDur;
    $netoAlPago = $empleado[0]["netoAlPago"];
    $idFF = $empleado[0]["idFF"];
    $idPF = $empleado[0]["idPF"];
    $idPeF = $empleado[0]["idPeF"];
    $idIF = $empleado[0]["idIF"];
    $prestamoFiniquito = $empleado[0]["prestamoFiniquito"];
    if($netoAlPago=="" || $netoAlPago== "null" || $netoAlPago== null || $netoAlPago== NULL || $netoAlPago== "NULL"){
        $netoAlPago=0;
    }
    if($idFF=="" || $idFF== "null" || $idFF== null || $idFF== NULL || $idFF== "NULL"){
        $idFF=0;
    }
    if($idPF=="" || $idPF== "null" || $idPF== null || $idPF== NULL || $idPF== "NULL"){
        $idPF=0;
    }
    if($idPeF=="" || $idPeF== "null" || $idPeF== null || $idPeF== NULL || $idPeF== "NULL"){
        $idPeF=0;
    }
    if($idIF=="" || $idIF== "null" || $idIF== null || $idIF== NULL || $idIF== "NULL"){
        $idIF=0;
    }
    //$this -> logger -> LogInfo ("valor del array de la netoAlPago ".var_export ($netoAlPago, true));
    //$this -> logger -> LogInfo ("valor del array de la SumaTotal ".var_export ($SumaTotal, true));
    $totalAIngresar = $netoAlPago - $SumaTotal;
    $totalPrestamo = $prestamoFiniquito + $montoDur;
    //$this -> logger -> LogInfo ("valor del array de la totalAIngresar ".var_export ($totalAIngresar, true));

    $sql1 = "update finiquitos set uniformesFiniquito = '" . mysqli_real_escape_string($this->conn, $SumaTotal) . "',
            netoAlPago = '" . mysqli_real_escape_string($this->conn, $totalAIngresar) . "'";
    if($idFF!="0" && $idPF!="0" && $idPeF!="0" && $idIF!="0"){
        $sql1.=" ,prestamoFiniquito = '" . mysqli_real_escape_string($this->conn, $totalPrestamo) . "'";
            }
    $sql1.=" where entidadEmpFiniquito='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
            and consecutivoEmpFiniquito='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
            and categoriaEmpFiniquito='" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'
            and (estatusFiniquito ='0' or estatusFiniquito ='6')";
    //$this -> logger -> LogInfo ("valor del array de la sql1 ".var_export ($sql1, true));
    $res1 = mysqli_query($this->conn, $sql1);

    if ($res1 !== true) {
        //$this -> logger -> LogInfo ("Error de actualización");
        throw new Exception("Error de actualización");
    }
    $sql3 = "update asignacion_uniforme_Supervisores set EstatusFiniquito = 1
            where entidadSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "' 
            and consecutivoSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
            and categoriaSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'
            and EstatusFiniquito='0'";
   // $this -> logger -> LogInfo ("valor del array de la sql3 ".var_export ($sql3, true));
    $res3 = mysqli_query($this->conn, $sql3);

    if ($res3 !== true) {
        //$this -> logger -> LogInfo ("Error de actualización");
        throw new Exception("Error de actualización");
    }
    return $SumaTotal;
}

public function obtenerlargorecepcionesTMPPERLARGOPER($usuarioLogeado)
    {     
        $larg = array();
        $sql = "SELECT count(idRecepcionUniformeTMP) as largo
                FROM recepcion_uniforme_temporal
                where usuarioRecepcionTMP='" . mysqli_real_escape_string($this->conn, $usuarioLogeado) . "'";       
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $larg[] = $reg;
    }
    return $larg;
}

public function obtenerUnifPagadosBYcontabilidadPER()
{
 $listaUnifDeuda = array();
 try{
     $sql = "select idDeudaUni,
                    concat_ws('-',du.entidadEmpDeudaU,du.consecutivoEmpDeudaU,du.categoriaEmpDeudaU) as numeroEmpDeuda,
                    concat_ws(' ',e.apellidoPaterno,e.apellidoMaterno,e.nombreEmpleado) as nombreEmpDeuda,
                    ctu.descripcionTipo,
                    du.cantidadUnifDeuda,
                    du.usuarioAsigDeuda,
                    ef.nombreEntidadFederativa,
                    du.FechaAsigUnifD,
                    du.montoDeuda,
                    du.entidadEmpDeudaU,
                    du.consecutivoEmpDeudaU,
                    du.categoriaEmpDeudaU,
                    du.FechaPagoUnifD,
                    du.estatusDeuda
             from DeudaUniformes du
             left join empleados e on  e.entidadFederativaId=du.entidadEmpDeudaU and e.empleadoConsecutivoId=du.consecutivoEmpDeudaU and e.empleadoCategoriaId=du.categoriaEmpDeudaU
             left join catalogotiposuniforme ctu on ctu.idTipoUniforme=du.claveUnifDeuda
             left join entidadesfederativas ef on ef.idEntidadFederativa=du.EntidadAsignacion 
             where du.estatusDeuda='1'";

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listaUnifDeuda[] = $reg;
           }
     return $listaUnifDeuda;
    }catch (Exception $e) {
 }
}

public function restauracionContraseniaOaraGuardia($contrasenia,$usuarioGuardia,$correo)
{
    $sql = "UPDATE usuarios set contrasenia=MD5('" . mysqli_real_escape_string($this->conn, $contrasenia) . "'), fechaCreacion=now() ,correoElectronico='" . mysqli_real_escape_string($this->conn, $correo) . "'
            where usuario='" . mysqli_real_escape_string($this->conn, $usuarioGuardia) . "'";

        //$this -> logger -> LogInfo ("Se ejecuto consulta restaurarContraseniaFrimaElectronicaint1 como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al restaurar contraseña.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function consultacatalogoUniformesSolicitudPER()
{
    $uniformessolicitud = array();

    $sql = "SELECT * FROM catalgo_tipouniformesolicitudalmacen";
    //$this -> logger -> LogInfo ("Ejecutando consultacatalogoUniformesSolicitudPER: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $uniformessolicitud[] = $reg;
    }
    return $uniformessolicitud;
}//

 public function GetSolicitudUniforme()
    {
        $GetSolicitUni = array();
        $sql = "SELECT concat_ws('-',se.EntidadSolUniforme,se.ConsecutivoSolUniforme,se.CategoriaSolUniforme) as NumeroEmpleado,
                concat_ws(' ',em.nombreEmpleado,em.apellidoPaterno,em.apellidoMaterno) as NombrEmpleado,ps.puntoServicio as Servicio,ct.descripcionTurno as Turno,cu.Descripcion as Uniforme,
                se.CantidadSolUniforme as Cantidadem,em.tallaCEmpleado TallaCamisa,em.tallaPEmpleado as TallaPantalon,em.numCalzadoEmpleado as TallaCalzado,em.fechaIngresoEmpleado as FechaIngreso,idSolicitudUniforme
                from SolicitudUniformesAlmacen se
                left join empleados em on (se.EntidadSolUniforme=em.entidadFederativaId and se.ConsecutivoSolUniforme=em.empleadoConsecutivoId and se.CategoriaSolUniforme= em.empleadoCategoriaId)
                left join catalogopuntosservicios ps on (em.empleadoIdPuntoServicio=ps.idPuntoServicio)
                left join catalogoturnos ct on(ct.idTipoTurno=em.empleadoIdTurno)
                left join Catalgo_TipoUniformeSolicitudAlmacen cu on(se.TipoUniSolicitado=cu.TipoUniformeSol) 
                where se.EstatusSolUniforme='1'";  
        //$this -> logger -> LogInfo ("valor del array de la consulta de GetSolicitUni ".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetSolicitUni[] = $reg;
        }
        return $GetSolicitUni;
    }

public function insertsolicitudUniformePER($empleadoEntidad,$empleadoConsecutivo,$empleadoCategoria,$tipouniSolicitud,$cantidadsolicitud){
 
 $sql = "insert into solicituduniformesalmacen (EntidadSolUniforme, ConsecutivoSolUniforme, CategoriaSolUniforme, TipoUniSolicitado, CantidadSolUniforme, EstatusSolUniforme) 
        values('" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "',
        '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "',
        '" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "',
        '" . mysqli_real_escape_string($this->conn, $tipouniSolicitud) . "',
        '" . mysqli_real_escape_string($this->conn, $cantidadsolicitud) . "',
        '1')";

        $res = mysqli_query($this->conn, $sql);
        //$this -> logger -> LogInfo ("valor del array de la insertsolicitudUniformePER ".var_export ($sql, true));
}

public function obtenerUniformesParaRecibirPER($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria)
{

    $listaAsignacionesrecibir = array();
    $sql               = "SELECT ifnull(sum(cantidadUniforme),0) as totaluniformesARecibir
                          FROM asignacion_uniforme au 
                          LEFT JOIN catalogotiposuniforme ctu ON (au.claveUniAsignacion=ctu.idTipoUniforme) 
                          WHERE entidadEmpAsignacion='" . $empleadoEntidad . "' 
                          AND consecutivoEmpAsignacion='" . $empleadoConsecutivo . "' 
                          AND categoriaEmpAsignacion='" . $empleadoCategoria . "' 
                          and ctu.idTipoMercancia!= '5'";//aqui
        //$this -> logger -> LogInfo ("Se ejecuto consulta obtenerUniformesParaRecibirPER" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaAsignacionesrecibir[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la listaProveedores ".var_export ($listaProveedores, true));
    return $listaAsignacionesrecibir;

}


public function ConfirmarManualmenteSolicitudPER($idSolicitudUniforme)
{
    $sql = "UPDATE SolicitudUniformesAlmacen 
            SET EstatusSolUniforme='0'
            WHERE idSolicitudUniforme='" . mysqli_real_escape_string($this->conn, $idSolicitudUniforme) . "'";
        //$this -> logger -> LogInfo ("Se ejecuto consulta ConfirmarManualmenteSolicitudPER como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al actualizar Estatus.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

 public function datosEmpleadoPER($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo,$Usuario){     
        //$this -> logger -> LogInfo ("datosEmpleadoPER en persistencia");
$empleado = array();
$sql = "select apellidoPaterno, apellidoMaterno, nombreEmpleado,
               cps.puntoServicio, fotoEmpleado,empleadoEstatusId,
               tallaCEmpleado, tallaPEmpleado, numCalzadoEmpleado,idTipoPuesto
               from empleados
               left join catalogopuntosservicios cps on cps.idPuntoServicio= empleadoIdPuntoServicio
               where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
               and empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
               and empleadoCategoriaId  ='" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'
               and idTipoPuesto='03'";

           for($j=0;$j<count($Usuario['lineaNegocioUsuario']);$j++){
              if(!is_array($Usuario['lineaNegocioUsuario'])){
                  $lineanegocioconsulta=$Usuario['lineaNegocioUsuario'];
              }else{
                  $lineanegocioconsulta=$Usuario['lineaNegocioUsuario'][$j];
              }  
              for($i=0;$i<count($Usuario['entidadFederativaUsuario']);$i++){
                  if(!is_array($Usuario['entidadFederativaUsuario'])){
                      $entidadparaconsulta=$Usuario['entidadFederativaUsuario'];
                  }else{
                      $entidadparaconsulta=$Usuario['entidadFederativaUsuario'][$i];
                  }  
                  if(($i==0) && ($j==0)){
                      $sql.="and ((empleadoLineaNegocioId='$lineanegocioconsulta' and idEntidadTrabajo='$entidadparaconsulta')";    
                  }else{
                      $sql.=" or (empleadoLineaNegocioId='$lineanegocioconsulta' and idEntidadTrabajo='$entidadparaconsulta')";       
                  }
              }
            }
        $sql.=")";
      //  $this -> logger -> LogInfo ("valor del array de la datosEmpleadoPER ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $empleado[] = $reg;
        }
    return $empleado;
}

public function stockSupervisorPER($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria){     
        //$this -> logger -> LogInfo ("datosEmpleadoPER en persistencia");
        //$this -> logger -> LogInfo ("valor del array de la sql ".var_export ($sql, true));
$empleado = array();
$sql = "SELECT ctu.codigoUniforme,
                      ctu.idTipoMercancia,
                      ctu.descripcionTipo as descUniforme,
                      claveUniAsignacionSup as idUniforme,
                      cantidadUniformeSup,
                      fechaAsignacionASup,
                      aus.costoUniformeACTUALIZADO,
                      idAsignacionUniformeASupervisor
                      FROM asignacion_uniforme_Supervisores aus
                      LEFT JOIN catalogotiposuniforme ctu ON (aus.claveUniAsignacionSup=ctu.idTipoUniforme)
                      where entidadSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
                      and consecutivoSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
                      and categoriaSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'
                      and EstatusAsignacionASup= '0'";

               // $this->logger->LogInfo("Ejecutando stockSupervisorPER: " . $sql);
            $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $empleado[] = $reg;
        }
    return $empleado;
}

public function GetEmpleadoestabetado($entidadempDeu,$consecutivoempDeu,$categoriaempDeu)

    {
        $GetObtenerEstatusPAgo = array();
        $sql = "SELECT EstatusReingreso,MotivoReingreso,ModuloBaja FROM empleados e
                left join folosbajaemplados f on(f.EntidadEmpBaja=e.entidadFederativaId and f.ConsecutivoEmpBaja=e.empleadoConsecutivoId and f.CaegoriaEmpBaja=e.empleadoCategoriaId)
                where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $entidadempDeu) . "'
                and empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $consecutivoempDeu) . "'
                and empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $categoriaempDeu) . "'
                and f.idFolioBajaEmp = (SELECT max(idFolioBajaEmp) FROM folosbajaemplados where concat_ws('-', EntidadEmpBaja,ConsecutivoEmpBaja,CaegoriaEmpBaja)='" . mysqli_real_escape_string($this->conn, $entidadempDeu) . "-" . mysqli_real_escape_string($this->conn, $consecutivoempDeu) . "-" . mysqli_real_escape_string($this->conn, $categoriaempDeu) . "')";
             //   $this->logger->LogInfo("Ejecutando updateEstatusEmpleadoOperaciones: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
        $GetObtenerEstatusPAgo[] = $reg;

        }
        return $GetObtenerEstatusPAgo;
    }

public function updateEstatusEmpleadoOperacionesBetado($empleado,$banderaBetado,$ComentarioBetado)
    { 
        //$this-> logger -> LogInfo("updateEstatusEmpleadoOperaciones");
    $sql = "update empleados " .
    "set EstatusReingreso='" . $this->safeValue($banderaBetado) . "',MotivoReingreso='" . $this->safeValue($ComentarioBetado) . "' " .
    "where entidadFederativaId='" . $this->safeValue($empleado["entidadId"]) . "'" .
    " and  empleadoConsecutivoId='" . $this->safeValue($empleado["consecutivoId"]) . "'" .
    " and  empleadoCategoriaId='" . $this->safeValue($empleado["tipoId"]) . "';";
    $res = mysqli_query($this->conn, $sql);

    if (mysqli_errno($this->conn) == 0) {
        return true;
    }
    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

    return false;
}

   public function obtenerDatosEmpleadoVetado($empleadoidd)
{
    // $this -> logger -> LogInfo (" obtenerDatosEmpBajaFolioBaja: " . $puntoServicioId);
    $lista = array();
    $sql = "SELECT concat_ws('-',f.EntidadEmpBaja, f.ConsecutivoEmpBaja,f.CaegoriaEmpBaja) as NumeroEmpleadoVetado,concat_ws(' ',e.nombreEmpleado,e.apellidoPaterno,e.apellidoMaterno) as NombreEmpleadoVetado,concat_ws(' ',em.nombreEmpleado,em.apellidoPaterno,em.apellidoMaterno) as NombreFirma, e.MotivoReingreso as MotivoVetado,f.FirmaCifradaElementoBaja as FirmaEmpleado,f.FirmaCifradaEmpBaja as FirmaSupervisor,f.FechaRegistroSolicitud
            FROM folosbajaemplados f
            left join empleados e on(f.EntidadEmpBaja=e.entidadFederativaId and f.ConsecutivoEmpBaja=e.empleadoConsecutivoId and f.CaegoriaEmpBaja=e.empleadoCategoriaId)
            left join empleados em on(f.EntidadFirmaEmpBaja=em.entidadFederativaId and f.ConsecutivoFirmaEmpBaja=em.empleadoConsecutivoId and f.CategoriaFirmaEmpBaja=em.empleadoCategoriaId)
            where concat_ws('-', f.EntidadEmpBaja,f.ConsecutivoEmpBaja,f.CaegoriaEmpBaja)='" . mysqli_real_escape_string($this->conn, $empleadoidd) . "'
            and f.idFolioBajaEmp = (SELECT max(idFolioBajaEmp) FROM folosbajaemplados where concat_ws('-', EntidadEmpBaja,ConsecutivoEmpBaja,CaegoriaEmpBaja)='" . mysqli_real_escape_string($this->conn, $empleadoidd) . "')";
     //   $this -> logger -> LogInfo ("Ejecutando obtenerDatosEmpBajaFolioBaja: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $lista;
}

public function obtenerUniformesElegidosPER($idcheckUniforme){

  $ListaAsignacionesTemporales = array();
  $sql ="SELECT entidadUniformeAsigSup,
         aus.TipoUniAsignacionSup,
         aus.claveUniAsignacionSup,
         aus.cantidadUniformeSup,
         ctu.codigoUniforme,
         ctu.descripcionTipo,
         aus.cantidadUniformeSupiNICIAL
         FROM asignacion_uniforme_Supervisores aus
         LEFT JOIN catalogotiposuniforme ctu ON (aus.claveUniAsignacionSup=ctu.idTipoUniforme) 
         where idAsignacionUniformeASupervisor='" . $this->safeValue($idcheckUniforme) . "'";
  $res = mysqli_query($this->conn, $sql);
  if(!is_bool($res)){
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $ListaAsignacionesTemporales[] = $reg;
           }
    }
   // $this -> logger -> LogInfo ("Ejecutando obtenerUniformesElegidosPER: " . $sql);
    return $ListaAsignacionesTemporales;
}



public function asignarUniformeSupervisorPER($nombreGuardia,$idUniforme, $cantidadUni, $empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria, $usuarioCaptura,$maxid,$codigoUnif,$talla,$descripcionTipoUnif, $EntidadEmpleadoUSR,$numEmpAlmacen,$FirmaEmpAlmacen,$FirmaGuardia,$NombreEmpAlmacen,$costoIngresado1,$tipoUniforme,$entidadUniforme,$rolUsuario){


 if($tipoUniforme!=5){
     $sql="INSERT INTO asignacion_uniforme (claveUniAsignacion,cantidadUniforme,entidadEmpAsignacion,consecutivoEmpAsignacion,categoriaEmpAsignacion,fechaAsignacion,usuarioAsignacion) 
           VALUES(" . $idUniforme . ",'1','" . $empleadoEntidad . "','" . $empleadoConsecutivo . "','" . $empleadoCategoria . "',now(),'" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "')";
       //  $this -> logger -> LogInfo ("Se ejecuto consulta asignarUniformeSUP como " . $sql);
         $res = mysqli_query($this->conn, $sql);
     if($res !== true){
         $this->logger->LogInfo("Ocurrio un error al asignarUniforme.");
         $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
         $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
       }
  }
     $sql1="insert into historico_Almacen(ordenID,nombreHA,entidadEmpAlm,ConsecutivoEmpAlm,CategoriaEmpAlm,claveUniAsignacionHis,codigoUnifAsig,tallaUniforme,descripcionUnif,cantidadUniformeHis,EntidadUniforme,montoDeudaHA,fechaAsignacionHis,usuarioAsignacionHis,tipoMovimiento,nombreEmpAlm,entidadEmpAlmAsig,numempAlm,firmaEmpAlmacen,firmaGuardia) values('$maxid','$nombreGuardia','$empleadoEntidad','$empleadoConsecutivo','$empleadoCategoria','$idUniforme','$codigoUnif','$talla','$descripcionTipoUnif','1','$entidadUniforme','$costoIngresado1',now(),'" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "',";

    if($rolUsuario=="Supervisor") {
        $sql1.="'4'";
      }if($rolUsuario=="Consulta Supervisor") {
          $sql1.="'5'";
         }
          if($rolUsuario=="Reclutador") {
             $sql1.="'6'";
            }
     $sql1.=",'$NombreEmpAlmacen','$EntidadEmpleadoUSR','$numEmpAlmacen','$FirmaEmpAlmacen','$FirmaGuardia')";

         // $this -> logger -> LogInfo ("Se ejecuto consulta historicoNOSUP como " . $sql1);
         $res1 = mysqli_query($this->conn, $sql1);
        if($res1 !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar en el historico.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
}

public function actualizarStockSupervisor($costoIngresado1,$idcheckUniforme,$cantidadUni,$cantidadUniINICIAL){

    if($cantidadUni==1 && $cantidadUniINICIAL==1) {
        $sql = "UPDATE asignacion_uniforme_Supervisores 
                SET EstatusAsignacionASup='1', costoUniformeACTUALIZADO=(costoUniformeACTUALIZADO-('" . mysqli_real_escape_string($this->conn, $costoIngresado1) . "')) ,
                cantidadUniformeSup='0' 
                WHERE idAsignacionUniformeASupervisor='" . mysqli_real_escape_string($this->conn, $idcheckUniforme) . "'";
                //$this -> logger -> LogInfo ("Se ejecuto consulta updateStockUniforme11 como " . $sql);
             $res = mysqli_query($this->conn, $sql);
             if($res !== true) {
                $this->logger->LogInfo("Ocurrio un error al actualizarStockSuperviso11r.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
              }
        }else if($cantidadUni==2 && $cantidadUniINICIAL==2){
            $sql1="UPDATE asignacion_uniforme_Supervisores 
                   SET costoUniformeACTUALIZADO=(costoUniformeACTUALIZADO-('" . mysqli_real_escape_string($this->conn, $costoIngresado1) . "')) ,
                       cantidadUniformeSup='1'
                   WHERE idAsignacionUniformeASupervisor='" . mysqli_real_escape_string($this->conn, $idcheckUniforme) . "'";
                  // $this -> logger -> LogInfo ("Se ejecuto consulta updateStockUniforme2 como " . $sql1);
             $res1 = mysqli_query($this->conn, $sql1);
             if($res1 !== true) {
                $this->logger->LogInfo("Ocurrio un error al actualizarStockSupervisor22.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
              }

        }else if($cantidadUni==1 && $cantidadUniINICIAL==2){
            $sql2="UPDATE asignacion_uniforme_Supervisores 
                   SET costoUniformeACTUALIZADO=(costoUniformeACTUALIZADO-('" . mysqli_real_escape_string($this->conn, $costoIngresado1) . "')) ,
                       cantidadUniformeSup='0',
                       EstatusAsignacionASup='1'
                   WHERE idAsignacionUniformeASupervisor='" . mysqli_real_escape_string($this->conn, $idcheckUniforme) . "'";
                 //  $this -> logger -> LogInfo ("Se ejecuto consulta updateStockUniforme3 como " . $sql2);
             $res1 = mysqli_query($this->conn, $sql2);
             if($res1 !== true) {
                $this->logger->LogInfo("Ocurrio un error al actualizarStockSupervisor33.");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
              }
        }

}

public function obtenerPuntosServSupPER($Usuario){     
        //$this -> logger -> LogInfo ("obtenerPuntosServSupPER en persistencia");
$empleado = array();
$sql = "SELECT puntoServicioId FROM supervisor_puntoservicio
        where concat_ws('-',supervisorEntidad,supervisorConsecutivo,supervisorTipo)='" . mysqli_real_escape_string($this->conn, $Usuario['empleadoId']) . "'";

  //  $this -> logger -> LogInfo ("valor del array de la obtenerPuntosServSupPER ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $empleado[] = $reg;
        }
    return $empleado;
}

public function datosEmpleadoXSupPER($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo,$PuntosServ){     
        //$this -> logger -> LogInfo ("datosEmpleadoXSupPER en persistencia");
$empleado = array();
$sql = "select apellidoPaterno, apellidoMaterno, nombreEmpleado,
               cps.puntoServicio, fotoEmpleado,empleadoEstatusId,
               tallaCEmpleado, tallaPEmpleado, numCalzadoEmpleado,idTipoPuesto
               from empleados
               left join catalogopuntosservicios cps on cps.idPuntoServicio= empleadoIdPuntoServicio
               where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
               and empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
               and empleadoCategoriaId  ='" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'
               and idTipoPuesto='03'
               and (";

             for($i=0;$i<count($PuntosServ);$i++){
                if(!is_array($PuntosServ)){
                    $puntoServSup=$PuntosServ["puntoServicioId"];
                }else{
                    $puntoServSup=$PuntosServ[$i]["puntoServicioId"];
                }
                if($i==0){
                    $sql.="empleadoIdPuntoServicio='" . mysqli_real_escape_string($this->conn, $puntoServSup) . "'";
                }else{
                      $sql.=" or empleadoIdPuntoServicio='" . mysqli_real_escape_string($this->conn, $puntoServSup) . "'";
                     }
            }
        $sql.=")";
        //$this -> logger -> LogInfo ("valor del array de la datosEmpleadoXSupPER ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $empleado[] = $reg;
        }
    return $empleado;
}

public function ObtenerPlantillasByPuntoServiciosEntidades($clientes,$entidades)
{
        //$this -> logger -> LogInfo ("valor del array de la entidades ".var_export ($entidades, true));
        //$this -> logger -> LogInfo ("valor del array de la clientes ".var_export ($clientes, true));
    $lista = array();
    $sql = "select
    cps.idPuntoServicio
    , cps.puntoServicio
    , cps.idEntidadPunto
    , ef.nombreEntidadFederativa
    ,cps.numeroCentroCosto
    , cps.idClientePunto
    , ifnull(c1.elementosContratados,0) elementosContratados
    , ifnull(c2.elementosSolicitados,0 ) elementosSolicitados
    ,cc.razonsocial
    , ifnull(c3.elementosAsignados,0) elementosAsignados
    from catalogopuntosservicios cps
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    left join entidadesfederativas ef on (ef.idEntidadFederativa=cps.idEntidadPunto)
    left join (
    -- consulta elementos contratados en el punto de servicio
    select count(e.empleadoNumeroSeguroSocial) as elementosContratados, e.empleadoIdPuntoServicio,cps.idPuntoServicio, cps.puntoservicio, cc.razonSocial
    from empleados e
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=e.empleadoIdPuntoServicio)
    left join catalogoclientes cc on (cps.idClientePunto=cc.idCliente)
    where (e.empleadoEstatusId= 2 or e.empleadoEstatusId=1) and e.idTipoPuesto='03'
    group by cps.puntoservicio
    ) c1 on (c1.idPuntoServicio=cps.idPuntoServicio)
    left join (
    -- consulta elementos soliitados en requisiciones por ventas
    select
    sp.servicioPlantillaId
    , sp.puntoServicioPlantillaId
    , sp.numeroElementos
    , sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    where sp.estatusPlantilla='1'
    group by puntoServicioPlantillaId
    ) c2 on puntoServicioPlantillaId=cps.idPuntoServicio
    left join (
    select p.plantillaId
    , p.requisicionId
    , p.empleadoEntidadPlantilla
    , p.empleadoConsecutivoPlantilla
    , p.empleadoCategoriaPlantilla
    , sp.puntoServicioPlantillaId
    , cps.puntoServicio
    , cps.idPuntoServicio
    , cc.idCliente
    , cc.razonSocial
    , count(p.plantillaId) elementosAsignados
    from plantilla p
    left join servicios_plantillas sp on (sp.servicioPlantillaId=p.requisicionId)
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
    left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
    where (e.empleadoEstatusId=1 or e.empleadoEstatusId=2) and (e.estatusEmpleadoOperaciones=1 or e.estatusEmpleadoOperaciones=4 )
    group by idCliente, sp.puntoServicioPlantillaId
    )c3 on (c3.puntoServicioPlantillaId=cps.idPuntoServicio)
    where cps.esatusPunto=1 
    and cps.puntoServicio NOT LIKE 'MER%' 
    AND cps.puntoServicio NOT LIKE '%INCAPACIDAD%'
    AND cps.puntoServicio NOT LIKE 'CON%'and ( ";
    for ($i=0; $i <count($clientes) ; $i++) {
        if($i=="0"){
            $sql.= " cc.idCliente=" . mysqli_real_escape_string($this->conn, $clientes[$i]) . "";
        }else{
            $sql.= " or cc.idCliente=" . mysqli_real_escape_string($this->conn, $clientes[$i]) . " ";
        }
    }
    if($entidades != ""){
        $sql.= " ) and (";
        for ($i=0; $i <count($entidades) ; $i++) {
            if($i=="0"){
                $sql.= " cps.idEntidadPunto='" . mysqli_real_escape_string($this->conn, $entidades[$i]) . "'";
            }else{
                $sql.= " or cps.idEntidadPunto='" . mysqli_real_escape_string($this->conn, $entidades[$i]) . "'";
            }
        }  
    }
    $sql.= ") order by cc.razonsocial asc";
       //$this -> logger -> LogInfo ("Ejecutando getPlantillasByPuntoServiciosCliente: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;

}

public function obtenerUniformesParaPlantillaPER($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria){
    $listaAsignacionesrecibir = array();
    $sql = "SELECT ifnull(sum(cantidadUniformeSup),0) as totaluniformesARecibir
            FROM asignacion_uniforme_Supervisores aus
            where aus.entidadSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
            and aus.consecutivoSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
            and aus.categoriaSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'
            and aus.EstatusAsignacionASup='0'";//aqui
        //$this -> logger -> LogInfo ("Se ejecuto consulta consulta obtenerUniformesParaPlantillaPER como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaAsignacionesrecibir[] = $reg;
        }
    }
    return $listaAsignacionesrecibir;
}

public function obtenerCardexSupPlantillaPER($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria){

    $listaAsignaciones = array();
    $sql = "SELECT aus.idAsignacionUniformeASupervisor,ctu.codigoUniforme,ctu.idTipoMercancia,ctu.descripcionTipo as descUniforme,aus.claveUniAsignacionSup as idUniforme,
            aus.cantidadUniformeSup as cantidadUniforme,aus.fechaAsignacionASup as fechaAsignacion,aus.costoUniformeACTUALIZADO as costoUniforme,ctu.costoUniforme as costoReal
            FROM asignacion_uniforme_Supervisores aus
            LEFT JOIN catalogotiposuniforme ctu ON (aus.claveUniAsignacionSup=ctu.idTipoUniforme)
            where aus.entidadSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
            and aus.consecutivoSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
            and aus.categoriaSupAsignacion='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'
            and EstatusAsignacionASup='0'";
        //$this -> logger -> LogInfo ("Se ejecuto obtenerCardexSupPlantillaPER como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaAsignaciones[] = $reg;
        }
    }
    return $listaAsignaciones;
}

public function recibirUniformeSupPlantilla($idUniformeSup,$cantidadUniformeSup,$montoDur,$estatusImssemp,$estatusRecibo,$porcentajeCobrado,$precioDelUniforme,$coberturaEmpleado){

    if($cantidadUniformeSup==1){
       $sql = "UPDATE asignacion_uniforme_Supervisores 
               SET EstatusAsignacionASup='1', 
                   costoUniformeACTUALIZADO=(costoUniformeACTUALIZADO-('" . mysqli_real_escape_string($this->conn, $montoDur) . "')),
                   cantidadUniformeSup='0',
                   porcentajeCobradoUniforme1= '" . mysqli_real_escape_string($this->conn, $porcentajeCobrado) . "',
                   coberturaAlRecibirUniforme1= '" . mysqli_real_escape_string($this->conn, $coberturaEmpleado) . "'";
                    
      if($estatusImssemp=='7' && $estatusRecibo!='0') {
        $sql.=",DeudaFiniquito = (DeudaFiniquito + ('" . mysqli_real_escape_string($this->conn, $montoDur) . "'))";
      }

        $sql.=" WHERE idAsignacionUniformeASupervisor='" . mysqli_real_escape_string($this->conn, $idUniformeSup) . "'";
              // $this -> logger -> LogInfo ("Se ejecuto consulta recibirUniformeSupPlantilla como " . $sql);
            $res = mysqli_query($this->conn, $sql);
            if($res !== true) {
                $this->logger->LogInfo("Ocurrio un error al recibir uniforme recibirUniformeSupPlantilla");
                $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
              }
    }else if($cantidadUniformeSup==2) {
                 $sql = "UPDATE asignacion_uniforme_Supervisores 
                         SET costoUniformeACTUALIZADO=(costoUniformeACTUALIZADO-('" . mysqli_real_escape_string($this->conn, $montoDur) . "')),
                         cantidadUniformeSup='1',
                         porcentajeCobradoUniforme2= '" . mysqli_real_escape_string($this->conn, $porcentajeCobrado) . "',
                         coberturaAlRecibirUniforme2= '" . mysqli_real_escape_string($this->conn, $coberturaEmpleado) . "'";

                         if ($estatusImssemp=='7' && $estatusRecibo!='0') {
                              $sql.=",DeudaFiniquito = (DeudaFiniquito + ('" . mysqli_real_escape_string($this->conn, $montoDur) . "'))";
                              }
                        $sql.=" WHERE idAsignacionUniformeASupervisor='" . mysqli_real_escape_string($this->conn, $idUniformeSup) . "'";
                       //$this -> logger -> LogInfo ("Se ejecuto consulta recibirUniformeSupPlantilla2 como " . $sql);
                     $res = mysqli_query($this->conn, $sql);
                     if($res !== true) {
                         $this->logger->LogInfo("Ocurrio un error al recibir uniforme recibirUniformeSupPlantilla2");
                         $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                         $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                       }
                 }
}

public function insertBajasEHistorico($empleadoEntidad, $empleadoConsecutivo, $empleadoCategoria,$fechaAsignacion, $idUniforme, $estatusRecibo, $usuarioCaptura, $entidadRecepcion,$codigoUniforme,$talla,$descripcionUni,$montoDur,$NombreEmp,$FirmaEmp,$FirmaGuardia,$orden,$NombreGuardia,$NumeroEmpFirma,$sucursalUsr){

    $sql = "INSERT INTO bajas_uniforme(idUniformeRecibido, estatusUniforme, entidadEmpleadoRecep, consecutivoEmpleadoRecep, categoriaEmpleadoRecep, entidadRecepcion,sucursalRecepcion, fechaRecibido, usuarioRecepcion) 
            values('" . mysqli_real_escape_string($this->conn, $idUniforme) . "',
                   '" . mysqli_real_escape_string($this->conn, $estatusRecibo) . "',
                   '" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "',
                   '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "',
                   '" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "',
                   '" . mysqli_real_escape_string($this->conn, $entidadRecepcion) . "',
                   '" . mysqli_real_escape_string($this->conn, $sucursalUsr) . "',
                   now(),
                   '" . mysqli_real_escape_string($this->conn, $usuarioCaptura) . "')";
       $this -> logger -> LogInfo ("Se ejecuto consulta  insertBajasEHistorico como " . $sql);


    $res = mysqli_query($this->conn, $sql);
    if($res !== true) {
       $this->logger->LogInfo("Ocurrio un error al insertar bajas uniforme.");
       $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
       $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
      }
      if($estatusRecibo=="0"){
        $montoDur="0";
      }

    $sql1="insert into historico_Almacen(ordenID,nombreHA,entidadEmpAlm,ConsecutivoEmpAlm,CategoriaEmpAlm,idUniformeRecibidoHis,codigoUnifAsig,tallaUniforme,descripcionUnif,cantidadUniformeHis,montoDeudaHA,estatusUniformeRecibido,entidadRecepcionHis,fechaRecibidoHis,usuarioRecepcionHis,tipoMovimiento,nombreEmpAlm,numempAlm,firmaEmpAlmacen,firmaGuardia) 
          values('$orden','$NombreGuardia','$empleadoEntidad','$empleadoConsecutivo','$empleadoCategoria','$idUniforme','$codigoUniforme','$talla','$descripcionUni','1','$montoDur','$estatusRecibo','$entidadRecepcion',now(),'$usuarioCaptura','7','$NombreEmp','$NumeroEmpFirma','$FirmaEmp','$FirmaGuardia')";
       $this -> logger -> LogInfo ("Se ejecuto consulta  insertBajasEHistorico 1 como " . $sql1);

    $res1 = mysqli_query($this->conn, $sql1);
    if($res1 !== true) {
       $this->logger->LogInfo("Ocurrio un error al insertar historico movimiento 7");
       $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
       $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
      }
}

public function insertarStockUniformeDesdeSUP($claveUniforme, $entidadUniforme, $cantidadUniformes,$sucursalUsr){

    $sql = "SELECT *
            FROM stockuniforme 
            WHERE claveUniforme='" . mysqli_real_escape_string($this->conn, $claveUniforme) . "'
            AND entidadUniforme='" . mysqli_real_escape_string($this->conn, $entidadUniforme) . "'
            AND sucursalUniformeStock='" . mysqli_real_escape_string($this->conn, $sucursalUsr) . "'";
            $this -> logger -> LogInfo ("Se ejecuto consulta select insertarStockUniformeDesdeSUP como " . $sql);
    $res = mysqli_query($this->conn, $sql);

    if((($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)))){
        
        $sql = "UPDATE stockUniforme 
                SET cantidadUniformes=cantidadUniformes+" . mysqli_real_escape_string($this->conn, $cantidadUniformes) . "
                WHERE claveUniforme='" . mysqli_real_escape_string($this->conn, $claveUniforme) . "' 
                AND entidadUniforme='" . mysqli_real_escape_string($this->conn, $entidadUniforme) . "'
                AND sucursalUniformeStock='" . mysqli_real_escape_string($this->conn, $sucursalUsr) . "'";
            $this -> logger -> LogInfo ("Se ejecuto consulta select insertarStockUniformeDesdeSUP 2 como " . $sql);

        $res = mysqli_query($this->conn, $sql);
        if($res !== true){
           $this->logger->LogInfo("Ocurrio un error al ACTUALIZAR STOCK.");
           $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
           $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
         }
     }else{
        $sql = "INSERT INTO stockuniforme 
                VALUES ('" . mysqli_real_escape_string($this->conn, $claveUniforme) . "',
                '" . mysqli_real_escape_string($this->conn, $entidadUniforme) . "',
                '" . mysqli_real_escape_string($this->conn, $cantidadUniformes) . "',
                ". mysqli_real_escape_string($this->conn, $sucursalUsr) . ")";
            $this -> logger -> LogInfo ("Se ejecuto consulta select insertarStockUniformeDesdeSUP 3 como " . $sql);

        $res = mysqli_query($this->conn, $sql);
        if ($res !== true){
            $this->logger->LogInfo("Ocurrio un error al INSERTAR STOCK.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }
}

public function obtenerDatosUniformeSupervisorPER($idUniformeSup){
    $listaCant = array();
    $sql = "SELECT cantidadUniformeSup FROM asignacion_uniforme_Supervisores
            where idAsignacionUniformeASupervisor='" . mysqli_real_escape_string($this->conn, $idUniformeSup) . "'";
      //  $this -> logger -> LogInfo ("Se ejecuto consulta consulta obtenerDatosUniformeSupervisorPER como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaCant[] = $reg;
        }
    }
    return $listaCant;
}

public function obtenerListaHistoricoAsignacionesSupPER($Nosupervisor,$tipoBusqueda)
    {
        $GetListaHistoricoAsigSup = array();
        $sql = "SELECT concat_ws('-',entidadEmpAlm,ConsecutivoEmpAlm,CategoriaEmpAlm) as numeroGuardia,
        nombreHA,
        fechaAsignacionHis,
        descripcionUnif,
        tallaUniforme,
        cantidadUniformeHis
                FROM historico_almacen ha 
                where numempAlm='" . mysqli_real_escape_string($this->conn, $Nosupervisor) . "'
                and tipoMovimiento='" . mysqli_real_escape_string($this->conn, $tipoBusqueda) . "'";      
        //$this -> logger -> LogInfo ("Ejecutando obtenerListaHistoricoAsignacionesSupPER: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaHistoricoAsigSup[] = $reg;
        }
       // $this -> logger -> LogInfo ("valor del array de la GetListaHistoricoAsigSup ".var_export ($GetListaHistoricoAsigSup, true));
        return $GetListaHistoricoAsigSup;
    }

public function obtenerRepse()
    {     
      //  $this -> logger -> LogInfo ("obtenerEmpleadoPorId en persistencia");
        $repse = array();
        $sql = "SELECT * FROM catalogorepse
                where idRepse=(select max(idRepse) from catalogorepse)";
//$this -> logger -> LogInfo ("valor del array de la sql ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $repse[] = $reg;
    }
    return $repse;
}

public function GetTiposContratosClientes()
{
//$this-> logger -> LogInfo("traerListaContratos");
    $listaContratos = array();
    try {
        $sql = "SELECT * FROM CatalogoTiposContratoClientes";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaContratos[] = $reg;
        }
        return $listaContratos;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function GetEntidades()
    {
        //$this -> logger -> LogInfo ("GetEntidades en persistencia");
        $listaEnditadesFederativas = array();
        try {
            $sql = "Select idEntidadFederativa, nombreEntidadFederativa, claveEntidadF from entidadesfederativas where idEntidadFederativa!=50";
            //$this -> logger -> LogInfo ("ejecutando GetEntidades en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaEnditadesFederativas[] = $reg;
            }
            return $listaEnditadesFederativas;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }

 public function ObtenerMunicipiosCliente($txtEntidadCliente)
{
    //$this-> logger -> LogInfo("obtenerDireccionPorCodigoPostal");
    $listamunicipios = array();
    $sql = "select * from catalogomunicipios where idEstado='" . mysqli_real_escape_string($this->conn, $txtEntidadCliente) . "'";
    //$this -> logger -> LogInfo ("Ejecutando listaDirecciones: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $listamunicipios[] = $reg;
    }
    //$this -> logger -> LogInfo ("valor del array de la listaDirecciones ".var_export ($listaDirecciones, true));
    return $listamunicipios;
}

 public function ObtenerColoniasCliente($txtMunicipio)
{
    //$this-> logger -> LogInfo("obtenerDireccionPorCodigoPostal");
    $listaColonias = array();
    $sql = " select * from asentamientos where municipioAsentamiento='" . mysqli_real_escape_string($this->conn, $txtMunicipio) . "'";
    //$this -> logger -> LogInfo ("Ejecutando listaDirecciones: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $listaColonias[] = $reg;
    }
    //$this -> logger -> LogInfo ("valor del array de la listaDirecciones ".var_export ($listaDirecciones, true));
    return $listaColonias;
}

public function obtenerLisCatalogoContratosDeClientesPER()
    {
        $GetListaContratos = array();
        $sql = "SELECT * FROM catalogotiposcontratoclientes";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaContratos[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $GetListaContratos;
    }

public function updateContratosClientesPER($descContrato,$idContrato,$i,$usuario){
$sql="UPDATE catalogotiposcontratoclientes set Descripcion='" . mysqli_real_escape_string($this->conn, $descContrato[$i]) . "',UsuarioEditTipocontrato='" . mysqli_real_escape_string($this->conn, $usuario) . "',fechaEdicionTipocontrato=NOW()
         where idTipoContrato='" . mysqli_real_escape_string($this->conn, $idContrato[$i]) . "'";
$res = mysqli_query($this->conn, $sql);
$this -> logger -> LogInfo ("valor updateContratosClientesPER".var_export ($sql, true));
}

public function insertContratoPER($descContrato,$usuario){
$sql="insert into catalogotiposcontratoclientes(Descripcion, UsuarioCreacionTipocontrato,fechaCreacionTipocontrato)
             values('" . mysqli_real_escape_string($this->conn, $descContrato) . "','" . mysqli_real_escape_string($this->conn, $usuario) . "',now())";
$res = mysqli_query($this->conn, $sql);
$this -> logger -> LogInfo ("valor updateContratosClientesPER".var_export ($sql, true));
}


public function insertOpinionInfonavitPER($registro,$mes,$anio,$nombrearchivo){
$sql="insert into Catalogo_OpinionCumplimientos_infonavit(mesOpInf, añoOpImss, idregistroP, nombreDocOpinionInf)
values('" . mysqli_real_escape_string($this->conn, $mes) . "','" . mysqli_real_escape_string($this->conn, $anio) . "','" . mysqli_real_escape_string($this->conn, $registro) . "','" . mysqli_real_escape_string($this->conn, $nombrearchivo) . "')";
$res = mysqli_query($this->conn, $sql);
//this -> logger -> LogInfo ("valor insertOpinionInfonavitPER".var_export ($sql, true));
}


public function insertOpinionIMSSPER($mes,$anio,$nombrearchivo){
$sql="insert into Catalogo_OpinionCumplimientos_imss(mesOpImss, añoOpImss, nombreDocOpinionImss)
values('" . mysqli_real_escape_string($this->conn, $mes) . "','" . mysqli_real_escape_string($this->conn, $anio) . "','" . mysqli_real_escape_string($this->conn, $nombrearchivo) . "')";
$res = mysqli_query($this->conn, $sql);
$this -> logger -> LogInfo ("valor insertOpinionIMSSPER".var_export ($sql, true));
}

public function consultaPDFPER($registro,$mes,$anio)
    {
        $GetPDF = array();
        $sql = "select ifnull(sum(idOpinionCumplimientoInfonavit),0) resultado from Catalogo_OpinionCumplimientos_infonavit
                where mesOpInf='" . mysqli_real_escape_string($this->conn, $mes) . "'
                and añoOpImss='" . mysqli_real_escape_string($this->conn, $anio) . "'
                and idregistroP='" . mysqli_real_escape_string($this->conn, $registro) . "'";   
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetPDF[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta consultaPDFPER".var_export ($sql, true));
        return $GetPDF;
    }

public function consultaPDFPERIMSS($mes,$anio){
    
// nombreDocOpinionImss
    $GetPDFimss = array();
    $sql = "SELECT ifnull(sum(idOpinionCumplimientoImss),0) resultado 
            FROM Catalogo_OpinionCumplimientos_imss
            WHERE mesOpImss='" . mysqli_real_escape_string($this->conn, $mes) . "'
            AND añoOpImss='" . mysqli_real_escape_string($this->conn, $anio) . "'";   
    $res = mysqli_query($this->conn, $sql);
    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $GetPDFimss[] = $reg;
    }
    $this -> logger -> LogInfo ("valor del array de la consulta consultaPDFPER".var_export ($sql, true));
    return $GetPDFimss;
}

public function DetalleTrabajadoresPER($fechaInicio,$fechaFin){
$listadetalleTrab = array();
try{
    $sql="select concat_ws(' ' ,e.nombreEmpleado,e.apellidoPaterno,e.apellidoMaterno) as nombre,
                 concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as noEmpleado,
                 cee.descripcionEstatusEmpleado as estatusEmpleado,
                 di.registroPatronal,
                 e.empleadoNumeroSeguroSocial as noImss,
                 e.fechaIngresoEmpleado as fechaIngreso,
                 e.fechaBajaEmpleado as fechaBaja,
                 e.lastDateEdited as fechaEdicion,
                 e.fechaBajaOperaciones as fechaBajaOperaciones,
                 'empleados' as origen,
                 cps.puntoServicio,
                 e.empleadoIdPuntoServicio as idPuntoServ,
                 di.empleadoEstatusImss as estatusImss,
                 e.empleadoEstatusId as estatusID,
                 e.entidadFederativaId,
                 e.empleadoConsecutivoId,
                 e.empleadoCategoriaId,
                 e.empleadoEstatusId as tipoEdicionEMp
        from empleados e
        left join datospersonales dp on dp.empleadoEntidadPersonal=e.entidadFederativaId and dp.empleadoConsecutivoPersonal=e.empleadoConsecutivoId and dp.empleadoCategoriaPersonal=e.empleadoCategoriaId
        left join datosimss di on di.empladoEntidadImss=e.entidadFederativaId and di.empleadoConsecutivoImss=e.empleadoConsecutivoId and di.empleadoCategoriaImss=e.empleadoCategoriaId
        left join catalogopuntosservicios cps on cps.idPuntoServicio=e.empleadoIdPuntoServicio
        left join catalogoestatusempleados cee on cee.estatusEmpleadoId=e.empleadoEstatusId
        where (((e.fechaBajaEmpleado between cast('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' as date)) and (di.empleadoEstatusImss ='5' or di.empleadoEstatusImss ='6' or di.empleadoEstatusImss ='7'))
        OR ((e.fechaIngresoEmpleado between cast('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' as date)) and (di.empleadoEstatusImss ='3')))
            and e.idTipoPuesto='03'
    union all
        SELECT concat_ws(' ' ,ee.nombreE,ee.apellidoPaternoE,ee.apellidoMaternoE) as nombre,
                 concat_ws('-',ee.entidadFederativaEmpleadoEdited,ee.consecutivoEmpleadoEdited,ee.categoriaEmpleadoEdited) as noEmpleado,
                 cee.descripcionEstatusEmpleado as estatusEmpleado,
                 di.registroPatronal,
                 ee.empleadoNumeroImssE as noImss,
                 ee.empleadoFechaIngresoE as fechaIngreso,
                 ee.empleadoFechaBajaE as fechaBaja,
                 ee.empleadoFechaCapturaE as fechaEdicion,
                 ee.fechaConfirmacion as fechaBajaOperaciones,
                 'empleadosEdit' as origen,
                 cps.puntoServicio,
                 ee.empleadoIdPuntoServicioE as idPuntoServ,
                 di.empleadoEstatusImss as estatusImss,
                 ee.empleadoEstatusIdE as estatusID,
                 ee.entidadFederativaEmpleadoEdited,
                 ee.consecutivoEmpleadoEdited,
                 ee.categoriaEmpleadoEdited
                 ,ee.tipoEdicion
        FROM empleadosedited ee
        left join datospersonales dp on dp.empleadoEntidadPersonal=ee.entidadFederativaEmpleadoEdited and dp.empleadoConsecutivoPersonal=ee.consecutivoEmpleadoEdited and dp.empleadoCategoriaPersonal=ee.categoriaEmpleadoEdited
        left join datosimss di on di.empladoEntidadImss=ee.entidadFederativaEmpleadoEdited and di.empleadoConsecutivoImss=ee.consecutivoEmpleadoEdited and di.empleadoCategoriaImss=ee.categoriaEmpleadoEdited
        left join catalogopuntosservicios cps on cps.idPuntoServicio=ee.empleadoIdPuntoServicioE
        left join catalogoestatusempleados cee on cee.estatusEmpleadoId=ee.empleadoEstatusIdE
        where ee.tipoEdicion!='0'
        and ((ee.empleadoFechaBajaE between cast('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' as date)
        and (ee.empleadoEstatusIdE ='0')) 
        OR (ee.empleadoFechaIngresoE between cast('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' as date)
        and (ee.empleadoEstatusIdE ='1' or ee.empleadoEstatusIdE ='2')))
        and ee.empleadoIdTipoPuestoE='03'";

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listadetalleTrab[] = $reg;
           }

     $this -> logger -> LogInfo ("valor del array de la consulta DetalleTrabajadoresPER".var_export ($sql, true));
     return $listadetalleTrab;
    }
    catch (Exception $e) {
 }
}


public function DetalleContratoPER($fechaInicio,$fechaFin,$usuario){
$listadetalleCont = array();

try{
    $sql="SELECT con.IdClienteC,
                   con.RfcContratante,
                   concat(con.NumeroContrato,con.AnexoNumCliente) as NumeroContrato ,
                   ctc.Descripcion,
                   con.ObjetoContrato,
                   con.MontoContrato,
                   concat(con.VigenciaAnios, ' anos y ',con.ViegenciaMeses,' meses')as vigencia,
                   con.FechaInicioC,
                   con.FechaFinalC,
                   cat.rfcCliente,
                   cat.razonSocial,
                   con.RegistroPatronal,
                   con.CallePrincipaC,
                   con.NumeroExteriorC,
                   con.NumeroInterirC,
                   con.PrimerCalle,
                   con.SegundaCalle,
                   asen.nombreAsentamiento,
                   con.CodigoPostalC,
                   cm.nombreMunicipio,
                   ef.nombreEntidadFederativa,
                   cat.correoCliente,
                   cat.telefonoFijoCliente,
                   con.claveClienteNominaCliente,
                   con.NombreArchivo,
                   con.estatusValidacion,
                   con.idContratoCliente,
                   ifnull(con.estatusRevisionPdf,0) as estatusRevisionPdf
            FROM contratosclientes con
            LEFT JOIN catalogoclientes cat on con.IdClienteC=cat.idCliente
            LEFT JOIN catalogotiposcontratoclientes ctc on ctc.idTipoContrato=con.TipoContrato
            LEFT JOIN entidadesfederativas ef on ef.idEntidadFederativa= con.EntidadC
            LEFT JOIN catalogomunicipios cm on cm.idMunicipio=con.MunicipioC
            LEFT JOIN asentamientos asen on asen.idAsentamiento=con.ColoniaC
            WHERE FechaInicioC between cast('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' as date)";

            if($usuario!='mirandam') {
               $sql.=" AND con.estatusValidacion='1'";//SOLO LOS QUE YA FUERON VALIDADOS POR MARIO(VENTAS)
            }

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listadetalleCont[] = $reg;
           }

    //$this -> logger -> LogInfo ("valor del array de la consulta DetalleContratoPER".var_export ($sql, true));
     return $listadetalleCont;
    }
    catch (Exception $e) {
 }
}

public function empleadosContratoPERSISTENCIA($idCliente,$fechaInicio,$fechaFin){

$listaEmpleadosXcliente = array();

try{
    $sql="SELECT ifnull(sum(sp.numeroElementos),0) as elementos 
          FROM catalogopuntosservicios cps
          left join servicios_plantillas sp on sp.puntoServicioPlantillaId= cps.idPuntoServicio
          WHERE idClientePunto='" . mysqli_real_escape_string($this->conn, $idCliente) . "'
          and cps.fechaInicioServicio between  cast('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' as date)
          and sp.fechaInicio between  cast('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' as date)";

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listaEmpleadosXcliente[] = $reg;
           }

     //$this -> logger -> LogInfo ("valor del array de la consulta empleadosContratoPERSISTENCIA".var_export ($sql, true));
     return $listaEmpleadosXcliente;
    }
    catch (Exception $e) {
 }
}

public function infoDetalleSujetoObligadoPER(){
$listadetalleSujetoOb = array();
try{
    $sql="select razonSocial,correoCliente,telefonoFijoCliente,RegistroPatronal,CallePrincipaCliente,NumeroExteriorCliente,NumeroInterirCliente,PrimerCalleCliente,SegundaCalleCliente,nombreAsentamiento,CodigoPostalCliente,nombreMunicipio,nombreEntidadFederativa
          FROM catalogoclientes cat
          left join contratosclientes con on con.IdClienteC= cat.idCliente
          left join entidadesfederativas ef on cat.EntidadCliente=ef.idEntidadFederativa
          left join catalogomunicipios cm on cm.idMunicipio=cat.MunicipioCliente
          left join asentamientos a on a.idAsentamiento= cat.ColoniaCliente
          where idCliente='2'";//directo el cliente 13 por que es gif

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listadetalleSujetoOb[] = $reg;
           }
    //$this -> logger -> LogInfo ("valor del array de la consulta infoDetalleSujetoObligadoPER".var_export ($sql, true));
     return $listadetalleSujetoOb;
    }
    catch (Exception $e) {
 }
}

public function registrosPatronalesSujetoObligadoPERSISTENCIA(){
$listaRegPat = array();
try{
    $sql="SELECT * 
          FROM catalogoregistrospatronales";

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listaRegPat[] = $reg;
           }
     //$this -> logger -> LogInfo ("valor del array de la consulta registrosPatronalesSujetoObligadoPERSISTENCIA".var_export ($sql, true));
     return $listaRegPat;
    }
    catch (Exception $e) {
 }
}

public function infoEscrituraPublicaPER($fechaFin){
$listadetalleSujetoOb = array();
try{
    $sql="SELECT idEscrituraP,representantelegal,administradorunico,numerodeescritura,nombreDelNotarioPublico,numeroNotarioPublico,fechaEscrituraPublica,folioMercantil
          FROM escritura_publica
          where fechaEscrituraPublica <= '" . mysqli_real_escape_string($this->conn, $fechaFin) . "'
          order by idEscrituraP desc
          limit 1";

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listadetalleSujetoOb[] = $reg;
           }
     //$this -> logger -> LogInfo ("valor del array de la consulta infoEscrituraPublicaPER".var_export ($sql, true));
     return $listadetalleSujetoOb;
    }
    catch (Exception $e) {
 }
}

public function obtenerRepsePER(){
$listadetalleSujetoOb = array();
try{
    $sql="SELECT * FROM catalogorepse
          order by idRepse  
          limit 1";

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listadetalleSujetoOb[] = $reg;
           }
    //$this -> logger -> LogInfo ("valor del array de la consulta obtenerRepsePER".var_export ($sql, true));
     return $listadetalleSujetoOb;
    }
    catch (Exception $e) {
 }
}

public function puntoservYCoberturaMaximaXempPERSISTENCIA($entidadFederativaId,$empleadoConsecutivoId,$empleadoCategoriaId,$fechaIngreso,$fechaBaja){
$listaPS = array();
try{
    $sql="SELECT concat_ws('',cc.NumeroContrato,cc.AnexoNumCliente) as numeroContratoCompleto,
                 cps.puntoServicio,
                 cps.CallePrincipaPuntoS,
                 cps.NumeroExteriorPuntoS,
                 cps.NumeroInterirPuntoS,
                 asent.nombreAsentamiento,
                 cps.CodigoPostalPuntoS,
                 cm.nombreMunicipio,
                 ef.nombreEntidadFederativa,
                 a.puntoServicioAsistenciaId,
                 sum(ci.valorCobertura ) + (select ifnull(sum(cie.valorIncidenciaEspecial),0) as incidenciasEspeciales
                                            from incidenciasespeciales ie
                                            left join catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
                                            where ie.incidenciaEmpleadoEntidad ='" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "'
                                            and ie.incidenciaEmpleadoConsecutivo = '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                                            and ie.incidenciaEmpleadoTipo = '" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'
                                            and incidenciaFecha between cast('" . mysqli_real_escape_string($this->conn, $fechaIngreso) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaBaja) . "' as date)
                                            and (ie.incidenciaId=1 or ie.incidenciaId=6)
                                            and ie.incidenciaPuntoServicio=a.puntoServicioAsistenciaId) as turnosCubiertos
                FROM asistencia a
                left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
                left join catalogopuntosservicios cps on cps.idPuntoServicio=a.PuntoServicioAsistenciaId
                left join contratosclientes cc on cc.IdClienteC=cps.idClientePunto
                left join entidadesfederativas ef on cps.EntidadPuntoS=ef.idEntidadFederativa
                left join catalogomunicipios cm on cm.idMunicipio=cps.MunicipioPuntoS
                left join asentamientos asent on asent.idAsentamiento= cps.ColoniaPuntoS
                where a.empleadoEntidad = '" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "'
                and a.empleadoConsecutivo = '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                and a.empleadoTipo = '" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'
                and fechaAsistencia between cast('" . mysqli_real_escape_string($this->conn, $fechaIngreso) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaBaja) . "' as date)
                and ci.valorCobertura!='0'
                group by a.puntoServicioAsistenciaId
                order by turnosCubiertos desc
                limit 1";
            
     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listaPS[] = $reg;
           }
    // $this -> logger -> LogInfo ("valor del array de la consulta puntoservYCoberturaMaximaXempPERSISTENCIA".var_export ($sql, true));
     return $listaPS;
    }
    catch (Exception $e) {
 }
}

public function infoPSyContratoXEmpPERSISTENCIA($idPuntoServ){
$listaPS = array();
try{
    $sql="SELECT concat_ws('',cc.NumeroContrato,cc.AnexoNumCliente) as numeroContratoCompleto,
                 cps.CallePrincipaPuntoS,
                 cps.NumeroExteriorPuntoS,
                 cps.NumeroInterirPuntoS,
                 a.nombreAsentamiento,
                 cps.CodigoPostalPuntoS,
                 cm.nombreMunicipio,
                 ef.nombreEntidadFederativa
            FROM catalogopuntosservicios cps
            left join contratosclientes cc on cc.IdClienteC=cps.idClientePunto
            left join entidadesfederativas ef on cps.EntidadPuntoS=ef.idEntidadFederativa
            left join catalogomunicipios cm on cm.idMunicipio=cps.MunicipioPuntoS
            left join asentamientos a on (a.idAsentamiento= cps.ColoniaPuntoS)
            where idPuntoServicio='" . mysqli_real_escape_string($this->conn, $idPuntoServ) . "'";

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listaPS[] = $reg;
           }
    //$this -> logger -> LogInfo ("valor del array de la consulta infoPSyContratoXEmpPERSISTENCIA".var_export ($sql, true));
     return $listaPS;
    }
    catch (Exception $e) {
 }
}


public function ObtenerDatosClientesPorClave($claveNomina,$NumeroEditarCliente,$AnexoEditarCliente,$Tipo)
{
    //$this-> logger -> LogInfo("obtenerDireccionPorCodigoPostal");
    $DatosClienteXClav = array();
    $sql = " SELECT * FROM catalogoclientes CataC
             left join ContratosCLientes ContC ON(CataC.idCliente=ContC.IdClienteC)
             where CataC.claveClienteNomina='" . mysqli_real_escape_string($this->conn, $claveNomina) . "'";
             if($Tipo=="0"){
                $sql.="  and ContC.NumeroContrato='" . mysqli_real_escape_string($this->conn, $NumeroEditarCliente) . "'
                        and ContC.AnexoNumCliente='" . mysqli_real_escape_string($this->conn, $AnexoEditarCliente) . "'";
             }
             

   // $this -> logger -> LogInfo ("Ejecutando listaDirecciones: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $DatosClienteXClav[] = $reg;
    }
    //$this -> logger -> LogInfo ("valor del array de la listaDirecciones ".var_export ($listaDirecciones, true));
    return $DatosClienteXClav;
}

public function ActualizarInsertarContratosClientes($cliente)
{

    if($this->safeValue($cliente["BanderaCliente"]) == "1" || $this->safeValue($cliente["BanderaCliente"]) == "4"){

       $sql1 = "INSERT INTO ContratosCLientes(IdClienteC, claveClienteNominaCliente, NumeroContrato, AnexoNumCliente, TipoContrato, ObjetoContrato, VigenciaAnios, ViegenciaMeses, FechaInicioC, FechaFinalC, RegistroPatronal, CodigoPostalC, Asentamiento, EntidadC, MunicipioC, ColoniaC, CallePrincipaC, NumeroInterirC, NumeroExteriorC, PrimerCalle, SegundaCalle, MontoContrato, NombreArchivo, RfcContratante, NombreContratante,
    PrimerApellidoContratante, SegundoApellidoContratante, CorreoContratante, TelefonoMovilContratante, TelefonoFijoContratante, UsuarioInsert, FechaInsert, noEmpInsert, pwdFirmaEmpInsert, estatusValidacion) 
                VALUES (
                        '" . mysqli_real_escape_string($this->conn, $cliente["idCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["NumeroClienteEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["NumeroEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["AnexoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["TipoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["ObjetoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["VigenciaAnioEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["VigenciaMesEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["FechaInicioEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["FechafinEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["RegistroPatronalEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["CpContratoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["ColoniaEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["EntidadEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["MunicipioEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["ColoniaEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["CallePrincipalEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["NumeroInteriroEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["NumeroExteriorEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["Calle1EditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["Calle2EditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["MontotxtCorreoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["ArchivoContrato"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["RfcContratantetxtCorreoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["NombreContratantetxtCorreoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["PrimerApellidoContratantetxtCorreoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["SegundoApellidoContratantetxtCorreoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["CorreoContratantetxtCorreoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["TelMovilContratantetxtCorreoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["TelFijoContratantetxtCorreoEditarCliente"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, $cliente["personaCapturaCliente"]) . "', 
                        now(), 
                        '" . mysqli_real_escape_string($this->conn, $cliente["NumEmpModalNC"]) . "', 
                        '" . mysqli_real_escape_string($this->conn, md5($cliente["contraseniaInsertadaCifrada"])) . "', 
                        '0')";
        // $this -> logger -> LogInfo ("valor InsertContratosClientes1".var_export ($sql1, true));
        $res1 = mysqli_query($this->conn, $sql1);
        if ($res1 !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar EL Contrato Del Cliente.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }
    else  if($this->safeValue($cliente["BanderaCliente"]) == "2" || $this->safeValue($cliente["BanderaCliente"]) == "3"){

        $sql="UPDATE contratosclientes set TipoContrato='" . mysqli_real_escape_string($this->conn, $cliente["TipoEditarCliente"]) . "'
                ,ObjetoContrato='" . mysqli_real_escape_string($this->conn, $cliente["ObjetoEditarCliente"]) . "'
                ,RegistroPatronal='" . mysqli_real_escape_string($this->conn, $cliente["RegistroPatronalEditarCliente"]) . "'
                ,MontoContrato='" . mysqli_real_escape_string($this->conn, $cliente["MontotxtCorreoEditarCliente"]) . "'
                ,RfcContratante='" . mysqli_real_escape_string($this->conn, $cliente["RfcContratantetxtCorreoEditarCliente"]) . "'
                ,NombreContratante='" . mysqli_real_escape_string($this->conn, $cliente["NombreContratantetxtCorreoEditarCliente"]) . "'
                ,PrimerApellidoContratante='" . mysqli_real_escape_string($this->conn, $cliente["PrimerApellidoContratantetxtCorreoEditarCliente"]) . "'
                ,SegundoApellidoContratante='" . mysqli_real_escape_string($this->conn, $cliente["SegundoApellidoContratantetxtCorreoEditarCliente"]) . "'
                ,CorreoContratante='" . mysqli_real_escape_string($this->conn, $cliente["CorreoContratantetxtCorreoEditarCliente"]) . "'
                ,TelefonoMovilContratante='" . mysqli_real_escape_string($this->conn, $cliente["TelMovilContratantetxtCorreoEditarCliente"]) . "'
                ,TelefonoFijoContratante='" . mysqli_real_escape_string($this->conn, $cliente["TelFijoContratantetxtCorreoEditarCliente"]) . "'
                ,UsuarioEdited='" . mysqli_real_escape_string($this->conn, $cliente["personaCapturaCliente"]) . "'
                ,FechaEdited=NOW()
                ,estatusRevisionPdf ='0'
                ,noEmpEdit ='" . mysqli_real_escape_string($this->conn, $cliente["NumEmpModalNC"]) . "'
                ,pwdFirmaEmpEdit  ='" . mysqli_real_escape_string($this->conn, md5($cliente["contraseniaInsertadaCifrada"])) . "'
                ,estatusValidacion ='0'
            where claveClienteNominaCliente='" . mysqli_real_escape_string($this->conn, $cliente["NumeroClienteEditarCliente"]) . "'
            and NumeroContrato='" . mysqli_real_escape_string($this->conn, $cliente["NumeroEditarCliente"]) . "'
            and AnexoNumCliente='" . mysqli_real_escape_string($this->conn, $cliente["AnexoEditarCliente"]) . "'";
        // $this -> logger -> LogInfo ("valor updateContratosClientesPER2".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);

    }
    else  if($this->safeValue($cliente["BanderaCliente"]) == "5"){
        $sql2="UPDATE catalogoclientes set contactoCliente='" . mysqli_real_escape_string($this->conn, $cliente["NombreContactoEditarCliente"]) . "'
                ,telefonoFijoCliente='" . mysqli_real_escape_string($this->conn, $cliente["TelefonoFijoEditarCliente"]) . "'
                ,telefonoMovilCliente='" . mysqli_real_escape_string($this->conn, $cliente["TelefonoMovilEditarCliente"]) . "'
                ,correoCliente='" . mysqli_real_escape_string($this->conn, $cliente["CorreoEditarCliente"]) . "'
                ,CodigoPostalCliente='" . mysqli_real_escape_string($this->conn, $cliente["CpContratoEditarCliente"]) . "'
                ,AsentamientoCliente='" . mysqli_real_escape_string($this->conn, $cliente["ColoniaEditarCliente"]) . "'
                ,EntidadCliente='" . mysqli_real_escape_string($this->conn, $cliente["EntidadEditarCliente"]) . "'
                ,MunicipioCliente='" . mysqli_real_escape_string($this->conn, $cliente["MunicipioEditarCliente"]) . "'
                ,ColoniaCliente='" . mysqli_real_escape_string($this->conn, $cliente["ColoniaEditarCliente"]) . "'
                ,CallePrincipaCliente='" . mysqli_real_escape_string($this->conn, $cliente["CallePrincipalEditarCliente"]) . "'
                ,NumeroInterirCliente='" . mysqli_real_escape_string($this->conn, $cliente["NumeroInteriroEditarCliente"]) . "'
                ,NumeroExteriorCliente='" . mysqli_real_escape_string($this->conn, $cliente["NumeroExteriorEditarCliente"]) . "'
                ,PrimerCalleCliente='" . mysqli_real_escape_string($this->conn, $cliente["Calle1EditarCliente"]) . "'
                ,SegundaCalleCliente='" . mysqli_real_escape_string($this->conn, $cliente["Calle2EditarCliente"]) . "'
                ,UsuarioEdited='" . mysqli_real_escape_string($this->conn, $cliente["personaCapturaCliente"]) . "'
                ,FechaEdited=NOW()
            where idCliente='" . mysqli_real_escape_string($this->conn, $cliente["idCliente"]) . "'";
        // $this -> logger -> LogInfo ("valor updateContratosClientesPER3".var_export ($sql2, true));  
        $res2 = mysqli_query($this->conn, $sql2);
    }
       
}

public function RevisarElementosActivosEnELPunto($idPuntoServicio)
    {
      //  $this -> logger -> LogInfo ("RevisarElementosActivosEnELPunto en persistencia");
        $EmpladosActivosPunto = array();

        try {

            $sql = "SELECT * from empleados
                    where empleadoIdPuntoServicio='" . mysqli_real_escape_string($this->conn, $idPuntoServicio) . "'
                    and (empleadoEstatusId='1' or empleadoEstatusId='2')";

        //    $this -> logger -> LogInfo ("ejecutando traeCatalogoClientes en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $EmpladosActivosPunto[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la listaClientes ".var_export ($listaClientes, true));
            return $EmpladosActivosPunto;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }


public function getEmpleadoByCorreoParaFirmaInterna($correo)
{
        //$this-> logger -> LogInfo("getEmpleadoByCorreo");

    $empleado = array();

    $sql = "select concat_ws('-',e.entidadFederativaId, e.empleadoConsecutivoId, e.empleadoCategoriaId) as numeroEmpleado ,e.empleadoEstatusId, dir.correoEmpleado
            from empleados e
            left join directorio dir on ( e.entidadFederativaId= dir.entidadEmpleadoDirectorio and e.empleadoConsecutivoId=dir.consecutivoEmpleadoDirectorio and
            e.empleadoCategoriaId=dir.categoriaEmpleadoDirectorio)
            where dir.correoEmpleado='" . $this->safeValue($correo) . "'";

        //$this -> logger -> LogInfo ("Ejecutando getEmpleadoByCorreo: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $empleado[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la getEmpleadoByCorreo ".var_export ($empleado, true));

    return $empleado;
}


public function obtenerSupervisoresXLineaNegocioPERSISTENCIA($LineaNegocioElegida,$noSupervisor,$caso,$entidades){
    //$this -> logger -> LogInfo ("obtenerSupervisoresXLineaNegocioPERSISTENCIA en persistencia");
    $supervisores = array();
    try {
        $sql = "SELECT concat_ws('-',entidadFederativaId, empleadoConsecutivoId, empleadoCategoriaId) as NumEmpSupervisor,
                       concat_ws(' ',nombreEmpleado, apellidoPaterno, apellidoMaterno) as Nombre
                FROM empleados e";
                if($LineaNegocioElegida==1){
                  $sql.=" where empleadoIdPuesto='6'";
                }if($LineaNegocioElegida==2){
                  $sql.=" where (empleadoIdPuesto='61' or empleadoIdPuesto='116')";//el 116 es supervisor administrativo
                }if($LineaNegocioElegida==3){
                  $sql.=" where empleadoIdPuesto='88'";
                }
                $sql.=" and (empleadoEstatusId='1' or empleadoEstatusId='2') ";

                if ($caso=='1') {//por supervisor,consulta supervisor
                $sql.=" and concat_ws('-',entidadFederativaId, empleadoConsecutivoId, empleadoCategoriaId)='".mysqli_real_escape_string($this->conn, $noSupervisor)."'";

                }else if ($caso=='3') {//por region(gerente regional)
                    for($i=0; $i <count($entidades) ; $i++) { 
                        $EntidadRegion=$entidades[$i]['idEntidadFederativa'];
                        if(($i==0)){
                            $sql.=" and ((idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $EntidadRegion) . "')";    
                        }else{
                            $sql.=" or (idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $EntidadRegion) . "')";       
                        } 
                    }
                 $sql.=")";
                }
                 $sql.=" order by Nombre";
          
            //$this -> logger -> LogInfo ("ejecutando obtenerSupervisoresXLineaNegocioPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $supervisores[] = $reg;
            }
            return $supervisores;
        } catch (Exception $e) {
        }
    }
 
public function ObtenerPSxSupCompletaPERSISTENCIA($lineaNegocio,$fechaInicio,$fechaFin,$listaEntidades,$noSupervisor){
    $listaRegionesT = array();
    $sql = "SELECT idPuntoServicio,puntoServicio
                    FROM catalogopuntosservicios cps
                    left join supervisor_puntoservicio sps on sps.puntoServicioId=cps.idPuntoServicio
                    where idLineaNegocioPunto = '".mysqli_real_escape_string($this->conn, $lineaNegocio)."'
                    and (((esatusPunto='1') and fechaInicioServicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (esatusPunto='0' and fechaTerminoServicio between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE))";
                    for ($i=0; $i <count($listaEntidades) ; $i++) { 
                        $EntidadElementos=$listaEntidades[$i]['idEntidadFederativa'];
                        if(($i==0)){
                            $sql.=") and ((idEntidadPunto='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";    
                        }else{
                            $sql.=" or (idEntidadPunto='" . mysqli_real_escape_string($this->conn, $EntidadElementos) . "')";       
                        } 
                    }
                    $sql.=") and concat_ws('-', sps.supervisorEntidad,sps.supervisorConsecutivo,sps.supervisorTipo)='".mysqli_real_escape_string($this->conn, $noSupervisor)."'
                    and cps.idClientePunto!='2'";
            //$this -> logger -> LogInfo ("ejecutando ObtenerPSxSupCompletaPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listaRegionesT[] = $reg;
            }
            return $listaRegionesT;
    }

public function ObtenerPSxSupPERSISTENCIA($lineaNegocio,$fechaInicio,$fechaFin,$entidad,$noSupervisor){
    $listaPSxSup = array();
    $sql = "SELECT idPuntoServicio,puntoServicio
                    FROM catalogopuntosservicios cps
                    left join supervisor_puntoservicio sps on sps.puntoServicioId=cps.idPuntoServicio
                    where idLineaNegocioPunto = '".mysqli_real_escape_string($this->conn, $lineaNegocio)."'
                    and (((esatusPunto='1') and fechaInicioServicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (esatusPunto='0' and fechaTerminoServicio between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE))) 
                    and idEntidadPunto='".mysqli_real_escape_string($this->conn, $entidad)."'
                    and concat_ws('-', sps.supervisorEntidad,sps.supervisorConsecutivo,sps.supervisorTipo)='".mysqli_real_escape_string($this->conn, $noSupervisor)."'
                    and cps.idClientePunto!='2'";
            //$this -> logger -> LogInfo ("ejecutando ObtenerPSxSupPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listaPSxSup[] = $reg;
            }
            return $listaPSxSup;
    }

public function ObtenerINFOEntidadesSupPERSISTENCIA($noSupervisor,$fechaInicio,$fechaFin){
    $listaInfEnt = array();
    $sql = "select DISTINCT idEntidadFederativa,nombreEntidadFederativa,sum(sp.numeroElementos) as elementosVentas 
                from catalogopuntosservicios cps 
                    left join supervisor_puntoservicio sup on sup.puntoServicioId=cps.idPuntoServicio 
                    left join entidadesfederativas ef on ef.idEntidadFederativa=cps.idEntidadPunto
                    left join servicios_plantillas sp on sup.puntoServicioId=sp.puntoServicioPlantillaId
                    where concat_ws('-', supervisorEntidad,supervisorConsecutivo,supervisorTipo)='".mysqli_real_escape_string($this->conn, $noSupervisor)."'
                    and (((estatusPlantilla='1') and fechaInicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (estatusPlantilla='0' and fechaTerminoPlantilla between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE))) 
                    and cps.idClientePunto!='2'
                    and (((esatusPunto='1') and fechaInicioServicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (esatusPunto='0' and fechaTerminoServicio between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE)))
                    group by idEntidadFederativa
                    order by idEntidadFederativa";
            //$this -> logger -> LogInfo ("ejecutando ObtenerINFOEntidadesSupPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listaInfEnt[] = $reg;
            }
            return $listaInfEnt;
    }

public function ObtenerElementosVentasXPSPERSISTENCIA($puntoS,$fechaInicio,$fechaFin){
    $listElementosVentasXPS = array();
    $sql = "select DISTINCT sum(sp.numeroElementos) as elementosVentasXpS 
                from catalogopuntosservicios cps 
                    left join servicios_plantillas sp on cps.idPuntoServicio=sp.puntoServicioPlantillaId
                    and (((esatusPunto='1') and fechaInicioServicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (esatusPunto='0' and fechaTerminoServicio between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE)))
                    and (((estatusPlantilla='1') and fechaInicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (estatusPlantilla='0' and fechaTerminoPlantilla between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE)))  
                    and cps.idPuntoServicio='".mysqli_real_escape_string($this->conn, $puntoS)."'";
            //$this -> logger -> LogInfo ("ejecutando ObtenerElementosVentasXPSPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listElementosVentasXPS[] = $reg;
            }
            return $listElementosVentasXPS;
    }

public function ObtenerFuerzaOperativaPERSISTENCIA($entidad,$noSupervisor,$lineaNegocio,$fechaInicio,$fechaFin){

        $ListaFO = array();

            $sql = "SELECT COUNT(empleadoEstatusId) as TotalElementosFuerzaOperativa
                    FROM empleados 
                    left join catalogopuntosservicios  cps on (empleados.empleadoIdPuntoServicio = cps.idPuntoServicio)
                    left join supervisor_puntoservicio sup on sup.puntoServicioId=cps.idPuntoServicio
                    where  concat_ws('-', supervisorEntidad,supervisorConsecutivo,supervisorTipo)='".mysqli_real_escape_string($this->conn, $noSupervisor)."'
                    and empleadoLineaNegocioId = '".mysqli_real_escape_string($this->conn, $lineaNegocio)."'
                    and idTipoPuesto='03'
                    and idClientePunto!='2'
                    and (((esatusPunto='1') and fechaInicioServicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (esatusPunto='0' and fechaTerminoServicio between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE)))
                    and (((empleadoEstatusId='1' or empleadoEstatusId='2') and fechaIngresoEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "') or (empleadoEstatusId='0' and fechaBajaEmpleado >='" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' and fechaBajaEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "'))
                    and idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidad) . "'";    
                         
            //$this -> logger -> LogInfo ("ejecutando ObtenerFuerzaOperativaPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaFO[] = $reg;
            }
            return $ListaFO;
    }

public function ObtenerFuerzaOperativaPSPERSISTENCIA($puntoS,$lineaNegocio,$fechaInicio,$fechaFin){

        $ListaFOPS = array();

            $sql = "SELECT COUNT(empleadoEstatusId) as TotalElementosFuerzaOperativaXPS
                    FROM empleados 
                    left join catalogopuntosservicios  cps on (empleados.empleadoIdPuntoServicio = cps.idPuntoServicio)
                    where empleadoLineaNegocioId = '".mysqli_real_escape_string($this->conn, $lineaNegocio)."'
                    and idTipoPuesto='03'
                    and idPuntoServicio='" . mysqli_real_escape_string($this->conn, $puntoS) . "'
                    and (((empleadoEstatusId='1' or empleadoEstatusId='2') and fechaIngresoEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "') or (empleadoEstatusId='0' and fechaBajaEmpleado >='" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' and fechaBajaEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "'))
                    and (((esatusPunto='1') and fechaInicioServicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (esatusPunto='0' and fechaTerminoServicio between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE)))";    
                         
            //$this -> logger -> LogInfo ("ejecutando ObtenerFuerzaOperativaPSPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaFOPS[] = $reg;
            }
            return $ListaFOPS;
    }

public function ObtenerFuerzaCubrePERSISTENCIA($entidad,$noSupervisor,$lineaNegocio,$fechaInicio,$fechaFin){

        $fuerzaCubre = array();

            $sql = "SELECT COUNT(empleadoEstatusId) as TotalElementosFuerzaCubre
                    FROM empleados 
                    left join catalogopuntosservicios  cps on (empleados.empleadoIdPuntoServicio = cps.idPuntoServicio)
                    left join supervisor_puntoservicio sup on sup.puntoServicioId=cps.idPuntoServicio
                    where  concat_ws('-', supervisorEntidad,supervisorConsecutivo,supervisorTipo)='" . mysqli_real_escape_string($this->conn, $noSupervisor) . "'
                    and empleadoLineaNegocioId = '".mysqli_real_escape_string($this->conn, $lineaNegocio)."'
                    and idTipoPuesto='03'
                    and idClientePunto='2'
                    and puntoServicio  like '%CUBRE%'
                    and (((esatusPunto='1') and fechaInicioServicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (esatusPunto='0' and fechaTerminoServicio between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE)))
                    and (((empleadoEstatusId='1' or empleadoEstatusId='2') and fechaIngresoEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "') or (empleadoEstatusId='0' and fechaBajaEmpleado >='" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' and fechaBajaEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "'))
                    and idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidad) . "'
                    and concat_ws('-',idEntidadResponsableAsistencia,consecutivoResponsableAsistencia,tipoResponsableAsistencia)='" . mysqli_real_escape_string($this->conn, $noSupervisor) . "'";

       // $this -> logger -> LogInfo ("ejecutando ObtenerFuerzaCubrePERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $fuerzaCubre[] = $reg;
            }
            return $fuerzaCubre;
    }

public function ObtenerTurnosMermaPERSISTENCIA($entidad,$lineaNegocio,$fechaInicio,$fechaFin,$noSupervisor){

 $ListaCubre = array();

 $sql = "SELECT count(pm.idAsistenciaM) as turnosMerma
FROM peticionasistenciamerma pm
left join catalogopuntosservicios cps ON(pm.idPuntoServicioM=cps.idPuntoServicio)
where concat_ws('-',pm.SupEntidadM,pm.SupConsecutivoM,pm.SupCategoriaM) ='" . mysqli_real_escape_string($this->conn, $noSupervisor) . "' 
and pm.estatusPeticionM='2'
and pm.idLineaNegocioM='" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "'
and cps.idEntidadPunto='" . mysqli_real_escape_string($this->conn, $entidad) . "'
and pm.fechaAsistenciaM between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' AS DATE)";

     $res = mysqli_query($this->conn, $sql);
     while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
         $ListaCubre[] = $reg;
     }
     return $ListaCubre;
}

public function ElementosPorRolOperativoPERSISTENCIA($entidad,$lineaNegocio,$DescripcionRolOp,$fechaInicio,$fechaFin,$noSupervisor){
//$this -> logger -> LogInfo ("valor de enti ".var_export ($entidad, true));
        $ListaElementosXRolOperativo = array();
        $sql = "SELECT  count(roloperativo) as RolOperativo
                from empleados emp
                left join catalogopuntosservicios cps on cps.idPuntoServicio=emp.empleadoIdPuntoServicio
                left join supervisor_puntoservicio sps on sps.puntoServicioId=cps.idPuntoServicio
                where empleadoLineaNegocioId = '" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "'
                and (((empleadoEstatusId='1' or empleadoEstatusId='2') and fechaIngresoEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "') or (empleadoEstatusId='0' and fechaBajaEmpleado between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' AS DATE)))
                and roloperativo='" . mysqli_real_escape_string($this->conn, $DescripcionRolOp) . "'
                and idEntidadTrabajo='" . mysqli_real_escape_string($this->conn, $entidad) . "'
                and (((esatusPunto='1') and fechaInicioServicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (esatusPunto='0' and fechaTerminoServicio between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE)))
                and cps.idClientePunto!='2'
                and concat_ws('-', sps.supervisorEntidad,sps.supervisorConsecutivo,sps.supervisorTipo)='" . mysqli_real_escape_string($this->conn, $noSupervisor) . "'";
            //$this -> logger -> LogInfo ("ejecutando ElementosPorRolOperativoPERSISTENCIA en persistencia". $sql);
        
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaElementosXRolOperativo[] = $reg;
            }
            return $ListaElementosXRolOperativo;
    }

public function ElementosPorRolOperativoPsPERSISTENCIA($puntoS,$lineaNegocio,$DescripcionRolOp,$fechaInicio,$fechaFin){

        $ListaElementosXRolOperativoPS = array();
        $sql = "SELECT  count(roloperativo) as RolOperativo
                from empleados emp
                left join catalogopuntosservicios cps on cps.idPuntoServicio=emp.empleadoIdPuntoServicio
                where empleadoLineaNegocioId = '" . mysqli_real_escape_string($this->conn, $lineaNegocio) . "'
                and (((empleadoEstatusId='1' or empleadoEstatusId='2') and fechaIngresoEmpleado <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "') or (empleadoEstatusId='0' and fechaBajaEmpleado between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' AS DATE)))
                and roloperativo='" . mysqli_real_escape_string($this->conn, $DescripcionRolOp) . "'
                and empleadoIdPuntoServicio='" . mysqli_real_escape_string($this->conn, $puntoS) . "'
                and (((esatusPunto='1') and fechaInicioServicio <='".mysqli_real_escape_string($this->conn, $fechaFin)."') or (esatusPunto='0' and fechaTerminoServicio between CAST('".mysqli_real_escape_string($this->conn, $fechaInicio)."' AS DATE) and CAST('".mysqli_real_escape_string($this->conn, $fechaFin)."' AS DATE)))";
            //$this -> logger -> LogInfo ("ejecutando ElementosPorRolOperativoPsPERSISTENCIA en persistencia". $sql);
        
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaElementosXRolOperativoPS[] = $reg;
            }
            return $ListaElementosXRolOperativoPS;
    }

public function plantillasXPuntoPERSISTENCIA($puntoServicioId,$fechaInicio,$fechaFin){
    $lista = array();
    $sql = "SELECT * from servicios_plantillas sp
            where sp.puntoServicioPlantillaId='" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "'
            and (((estatusPlantilla='1') and fechaInicio <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "') or (estatusPlantilla='0' and fechaTerminoPlantilla between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' AS DATE)))";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
        //$this -> logger -> LogInfo ("valor de plantillasXPuntoPERSISTENCIA ".var_export ($lista, true));
    return $lista;
}

public function diasSolicitadosPERSISTENCIA($PlantillaId,$turnoDiaC,$turnoNocheC){
    $listadiasSolic = array();

    $sql = "SELECT $turnoDiaC,$turnoNocheC from diasdetrabajoplantilla
    where servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $PlantillaId) . "'";

        //$this -> logger -> LogInfo ("Ejecutando diasSolicitadosPERSISTENCIA: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listadiasSolic[] = $reg;
        }
    }
    return $listadiasSolic;
}

public function vehiculosAsignadosXSupPERSISTENCIA($entidad,$fechaInicio,$fechaFin,$noSupervisor){
    $ListaVehiculosXSup = array();

    $sql = "SELECT idAsignacionC as a,FechaAsignacionC as b,idvehiculoC as c,NumeroPlacaC as placa 
                FROM asignacionesparquevehicular av
                left join parquevehicular pv on pv.idvehiculo=av.idvehiculoC 
                where concat_ws('-',entidadFederativaIdC,empleadoConsecutivoIdC,empleadoCategoriaIdC)='" . mysqli_real_escape_string($this->conn, $noSupervisor) . "'
                and FechaAsignacionC  <='" . mysqli_real_escape_string($this->conn, $fechaFin) . "'
                and idEntidadTrabajoC='" . mysqli_real_escape_string($this->conn, $entidad) . "'
            union 
                SELECT idHistoricoAsignacion as a, FechaInsercionAlHistorico as b, idvehiculoHistorico as c ,NumeroPlacaHistorico as placa
                FROM historicoasignacionparquevehicular hav
                left join parquevehicular pv on pv.idvehiculo=hav.idvehiculoHistorico
                where concat_ws('-',entidadFederativaIdHistorico,empleadoConsecutivoIdHistorico,empleadoCategoriaIdHistorico)='" . mysqli_real_escape_string($this->conn, $noSupervisor) . "'
                and FechaAsignacionHistorico between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' AS DATE)
                and idEntidadTrabajoHistorico='" . mysqli_real_escape_string($this->conn, $entidad) . "'";
         //$this -> logger -> LogInfo ("ejecutando vehiculosAsignadosXSupPERSISTENCIA en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $ListaVehiculosXSup[] = $reg;
            }
            return $ListaVehiculosXSup;
    }

public function infoPSxSupPERSISTENCIA($puntoS){
    $listainfoPSXsup = array();
    $sql = "SELECT longitudPunto,latitudPunto FROM catalogopuntosservicios
            where idPuntoServicio='" . mysqli_real_escape_string($this->conn, $puntoS) . "'";
            //$this -> logger -> LogInfo ("ejecutando infoPSxSupPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listainfoPSXsup[] = $reg;
            }
            return $listainfoPSXsup;
    }

public function coberturaXPSPERSISTENCIA($puntoS,$fechaInicio,$fechaFin){

    $sql = "select ifnull(sum(turnosCubiertos),0) as totalTurnosCubiertos
            from
            (
            SELECT
            sum(ci.valorCobertura ) turnosCubiertos
            FROM asistencia a
            left join catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
            left join empleados e on (e.entidadFederativaId=a.empleadoEntidad and e.empleadoConsecutivoId=a.empleadoConsecutivo and e.empleadoCategoriaId=a.empleadoTipo)
            left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
            where fechaAsistencia between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' AS DATE)
            and puntoServicioAsistenciaId=" . mysqli_real_escape_string($this->conn, $puntoS) . "
            UNION
              select
              sum(cie.valorIncidenciaEspecial) as turnosCubiertos
              from incidenciasespeciales ie
              left join catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
              left join empleados e on (e.entidadFederativaId=ie.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=ie.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=ie.incidenciaEmpleadoTipo)
              left join catalogopuestos cp on (cp.idPuesto=e.empleadoIdPuesto)
              where
              incidenciaFecha between CAST('" . mysqli_real_escape_string($this->conn, $fechaInicio) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaFin) . "' AS DATE)
              and incidenciaPuntoServicio=" . mysqli_real_escape_string($this->conn, $puntoS) . "
              and (ie.incidenciaId=1 or ie.incidenciaId=6)
        ) as totalTurnos";

        //$this -> logger -> LogInfo ("Ejecutando coberturaXPSPERSISTENCIA: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if (!is_bool($res)) {
            $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);
            $turnosCubiertos = $reg;
        }
        return $turnosCubiertos;
    }

public function obtenerAmortizacionEmpleadosEva($empladoEntidad,$empleadoConsecutivo,$empleadoCategoria, $fechaPeriodo1, $fechaPeriodo2)
    {
        $listaEmpleados = array();
        $sql = "SELECT ifnull(sum(montoIN),0) as Amortizacion FROM infonavit_nomina
                where entidadEmpIN = '" . mysqli_real_escape_string($this->conn, $empladoEntidad) . "'
                and consecutivoEmpIN = '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
                and categoriaEmpIN = '" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'
                and FechaCarga between CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE);";

        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaEmpleados[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));
        return $listaEmpleados;
    }

    public function getCatalogoTipoTurnos()
    {
        $listTipoTurnos = array();
        $sql = "SELECT * FROM catalogoturnos";
       // $this -> logger -> LogInfo ("Ejecutando SQL traeCatalogoPuestosPorTipo: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listTipoTurnos[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $listTipoTurnos;
    }
    public function getRolesOperativos($TipoTurno)
    {
        $listaRoles = array();
        $sql = "SELECT * FROM CatalogoRoleOperativo where IdTipoTurno = '" . mysqli_real_escape_string($this->conn, $TipoTurno) . "'
        order by DescripcioRolOP";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaRoles[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $listaRoles;
    }

public function obtenerEntidadesDeRegiionXentTrabajoPERSISTENCIA($LineaNegocio,$entidadGerente){

    $entidadesCob = array();
    try {
        $sql = "SELECT distinct idEntidadFederativa,nombreEntidadFederativa
                FROM index_regiones ir
                left join entidadesfederativas ef on ef.idEntidadFederativa=ir.idEntidadI
                left join catalogopuntosservicios cps on cps.idEntidadPunto= ef.idEntidadFederativa
                WHERE idRegionI=(select distinct idRegionI
                       from index_regiones
                       where idEntidadI='" . mysqli_real_escape_string($this->conn, $entidadGerente) . "'
                       and idLineaNegI='" . mysqli_real_escape_string($this->conn, $LineaNegocio) . "')";
          
            //$this -> logger -> LogInfo ("ejecutando obtenerEntidadesDeRegiionXentTrabajoPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $entidadesCob[] = $reg;
            }
            return $entidadesCob;
        } catch (Exception $e) {
        }
    }

public function insertarRolOperativo($idTipoT,$descContrato,$usuario){
    $sql="insert into CatalogoRoleOperativo(IdTipoTurno, DescripcioRolOP, FechaRegistroRolOp, UsuarioRegistroRolOp)
             values('" . mysqli_real_escape_string($this->conn, $idTipoT) . "','" . mysqli_real_escape_string($this->conn, $descContrato) . "',now(),'" . mysqli_real_escape_string($this->conn, $usuario) . "')";
    $res = mysqli_query($this->conn, $sql);
    //$this -> logger -> LogInfo ("valor updateContratosClientesPER".var_export ($sql, true));
}

public function obtenerRegionGerentePERSISTENCIA($LineaNegocio,$entidadGerente){

    $regionGR = array();
    try {
        $sql = "SELECT idRegionI
                FROM index_regiones
                where idEntidadI='" . mysqli_real_escape_string($this->conn, $entidadGerente) . "'
                 and idLineaNegI='" . mysqli_real_escape_string($this->conn, $LineaNegocio) . "'";
            //$this -> logger -> LogInfo ("ejecutando obtenerRegionGerentePERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $regionGR[] = $reg;
            }
            return $regionGR;
        } catch (Exception $e) {
        }
    }
// ya fue modificado
public function GetIdRolesOperativos($PlantillaIdRol)
    {
        $listaRoles = array();
        $sql = "SELECT * FROM servicios_plantillas where servicioPlantillaId = '" . mysqli_real_escape_string($this->conn, $PlantillaIdRol) . "'";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $listaRoles[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $listaRoles;
    }

public function obtenerUltimaEscrituraPublicaPERSISTENCIA(){
        $escrituraP = array();
            $sql = "select * from escritura_publica 
                    order by idEscrituraP desc
                    limit 1";
            //$this -> logger -> LogInfo ("ejecutando obtenerEscrituraPublicaPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $escrituraP[] = $reg;
            }
            return $escrituraP;
        
    }

public function GetPlantillaParaAdmin($tipoTurnoPlantillaId,$puntoServicioPlantillaId,$puestoPlantillaId)
{
        //$this-> logger -> LogInfo("selectPlantillaRequisicion");
    $lista = array();

    try {

        $sql = "SELECT *
            FROM servicios_plantillas sp
            left join catalogoroleoperativo cro ON(sp.IdRolOperativoPlantilla=cro.idRolOperativo)
            left join Catalogo_Horarios co ON(sp.idHorarioPlantilla=co.idHorarios)
            where sp.estatusPlantilla='1'
            and sp.tipoTurnoPlantillaId='" . mysqli_real_escape_string($this->conn, $tipoTurnoPlantillaId) . "'
            and sp.puntoServicioPlantillaId='" . mysqli_real_escape_string($this->conn, $puntoServicioPlantillaId) . "'
            and sp.puestoPlantillaId='" . mysqli_real_escape_string($this->conn, $puestoPlantillaId) . "'";

            $this -> logger -> LogInfo ("ejecutando selectPlantillaRequisicion en persistencia". $sql);

        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $lista[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

        return $lista;

    } catch (Exception $e) {

        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function updateDatosEscrituraPublicaPERSISTENCIA($RepresentanteLegal,$AdministradorUnico,$NumeroEscritura,$NombreNotarioPublico,$NumeroNotarioPublico,$FechaEscrituraPublica,$FolioMercantil,$nombreDocumento){

$sql="insert into escritura_publica(representantelegal,administradorunico,numerodeescritura,nombreDelNotarioPublico,numeroNotarioPublico,fechaEscrituraPublica,folioMercantil,fechaCargaEscritura,nombreDocumento)
values('" . mysqli_real_escape_string($this->conn, $RepresentanteLegal) . "','" . mysqli_real_escape_string($this->conn, $AdministradorUnico) . "','" . mysqli_real_escape_string($this->conn, $NumeroEscritura) . "','" . mysqli_real_escape_string($this->conn, $NombreNotarioPublico) . "','" . mysqli_real_escape_string($this->conn, $NumeroNotarioPublico) . "','" . mysqli_real_escape_string($this->conn, $FechaEscrituraPublica) . "','" . mysqli_real_escape_string($this->conn, $FolioMercantil) . "',now(), '" . mysqli_real_escape_string($this->conn, $nombreDocumento) . "')";

$res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
            throw new Exception("Error de actualización Escritura Publica");
        }
    //$this -> logger -> LogInfo ("valor updateDatosEscrituraPublicaPERSISTENCIA".var_export ($sql, true));
}

public function obtenerMaxIdEscrituraPersistencia(){

    $lista = array();
    try {
        $sql = "select ifnull(count(idEscrituraP),0) as idEscrituraActual 
                from escritura_publica 
                order by idEscrituraP desc
                limit 1";

        //$this -> logger -> LogInfo ("ejecutando obtenerMaxIdEscrituraPersistencia en persistencia". $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
        return $lista;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }

}

public function ObtenerCierrePeridoParaBtnBorrar()
{
    $FechaCierre = array();
    try {
        $sql = "SELECT * FROM cierresperiodos
                where fechaInicioPeriodo = (SELECT max(fechaInicioPeriodo) FROM cierresperiodos)";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $FechaCierre[] = $reg;
        }
        return $FechaCierre;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function obtenerRolesOperativosExistentesPERSISTENCIA(){
    $listaRegionesT = array();
    $sql = "SELECT idRolOperativo,DescripcioRolOP 
            FROM catalogoroleoperativo
            where ((IdTipoTurno != '4' AND IdTipoTurno != '5'))
            order by DescripcioRolOP";
            //$this -> logger -> LogInfo ("ejecutando obtenerRolesOperativosExistentesPERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $listaRegionesT[] = $reg;
            }
            return $listaRegionesT;
    }

public function getSupervisoresXPuntoFati($idClientePunto,$rangoFecha1,$rangoFecha2)
{
        //$this-> logger -> LogInfo("getSupervisoresXPuntoFati");

    $supervisoresOperativos = array();

    $sql = "SELECT cp.idPuntoServicio as puntoServicioId,cp.puntoServicio, ifnull(cp.cobraDescansos,0) as cobraDescansos , ifnull(cp.cobraDiaFestivo,0) as cobraDiaFestivo,
 ifnull(cp.cobra31,0) as cobra31,cp.idEntidadPunto,sp.supervisorEntidad,sp.supervisorConsecutivo,sp.supervisorTipo,ef.nombreEntidadFederativa,ef.idEntidadFederativa,
 em.nombreEmpleado,em.apellidoPaterno,em.apellidoMaterno
        FROM catalogopuntosservicios cp
        left join supervisor_puntoservicio sp ON(sp.puntoServicioId=cp.idPuntoServicio)
        left join entidadesfederativas ef ON(ef.idEntidadFederativa=cp.idEntidadPunto)
        left join empleados em ON(sp.supervisorEntidad = em.entidadFederativaId and sp.supervisorConsecutivo = em.empleadoConsecutivoId and sp.supervisorTipo=em.empleadoCategoriaId)
        where cp.idClientePunto= '" . mysqli_real_escape_string($this->conn, $idClientePunto) . "' 
        and (((cp.esatusPunto='1') and cp.fechaInicioServicio <='" . mysqli_real_escape_string($this->conn, $rangoFecha2) . "') or (cp.esatusPunto='0' and cp.fechaTerminoServicio between CAST('" . mysqli_real_escape_string($this->conn, $rangoFecha1) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $rangoFecha2) . "' AS DATE)))
        order by cp.idEntidadPunto,cp.puntoServicio";

        //$this -> logger -> LogInfo ("Ejecutando getSupervisoresXPuntoFati: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $supervisoresOperativos[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerSupervisoresOperativos ".var_export ($supervisoresOperativos, true));

    return $supervisoresOperativos;
}

public function consultaRepsePERSISTENCIA(){
    $reps = array();
    $sql = "SELECT * From  catalogorepse
    where estatusEliminado='0'";
            //$this -> logger -> LogInfo ("ejecutando consultaRepsePERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                    $reps[] = $reg;
            }
            return $reps;
    }

public function eliminarRepsePERSISTENCIA($idRep){
    
    $sql="UPDATE catalogorepse 
          set estatusEliminado='1',fechaEliminacionREPSE=now()
             where idRepse = '" . mysqli_real_escape_string($this->conn, $idRep) . "'";

        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
            throw new Exception("Error al eliminar REPSE");
        }
    //$this -> logger -> LogInfo ("valor eliminarRepsePERSISTENCIA".var_export ($sql, true));
    }

public function updateRepsePERSISTENCIA($noAcuerdo,$noFolioIn,$idRepse){
    
    $sql="UPDATE catalogorepse 
          set NumAcuerdo='" . mysqli_real_escape_string($this->conn, $noAcuerdo) . "', NumFolioIngreso='" . mysqli_real_escape_string($this->conn, $noFolioIn) . "',fechaEdicionREPSE=now()
          where idRepse='" . mysqli_real_escape_string($this->conn, $idRepse) . "'";

        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
            throw new Exception("Error al actualizar REPSE");
        }
        //$this -> logger -> LogInfo ("valor updateRepsePERSISTENCIA".var_export ($sql, true));
    }

public function insertRepsePERSISTENCIA($noAcuerdo,$noFolioIn,$nombreDocumento){
    
    $sql="insert into catalogorepse(NumAcuerdo, NumFolioIngreso,fechaCargaREPSE,nombreDocumento)
            values('" . mysqli_real_escape_string($this->conn, $noAcuerdo) . "','" . mysqli_real_escape_string($this->conn, $noFolioIn) . "',now(),'" . mysqli_real_escape_string($this->conn, $nombreDocumento) . "')";

        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
            throw new Exception("Error al insertar REPSE");
        }
    //$this -> logger -> LogInfo ("valor insertRepsePERSISTENCIA".var_export ($sql, true));
    }

public function GetUniformesParaFiniq()
    {
        $GetListaUniformesPaHistoricos = array();
        $sql = "SELECT concat_ws('-', ha.entidadEmpAlm,ha.ConsecutivoEmpAlm,ha.CategoriaEmpAlm) as NumeroEmpleado, ha.nombreHA, ha.descripcionUnif,
                ha.montoDeudaHA, ha.fechaRecibidoHis,ce.DescripcionEstatusUni, 'porcentaje' as porciento,ha.estatusUniformeRecibido as EstatusR,cu.costoUniforme as CostoUniforme,
                ha.entidadEmpAlm,ha.ConsecutivoEmpAlm,ha.CategoriaEmpAlm
                FROM historico_almacen ha
                left join catalogo_estatus_uniforme_recibido ce on (ha.estatusUniformeRecibido=ce.idEstatusUniR)
                left join catalogotiposuniforme cu ON(cu.codigoUniforme = ha.codigoUnifAsig)
                where (tipoMovimiento='2' or tipoMovimiento='7')";      
        
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaUniformesPaHistoricos[] = $reg;
        }
        return $GetListaUniformesPaHistoricos;
    }

public function obtenerIncapacidadesDetalleTrabPERSISTENCIA($entidadFederativaId,$empleadoConsecutivoId,$empleadoCategoriaId,$fechaIngreso,$fechaBaja){
$listaInc = array();
try{
    $sql="SELECT count(incidenciaAsistenciaId) as incapacidades
          FROM asistencia a
          where a.empleadoEntidad = '" . mysqli_real_escape_string($this->conn, $entidadFederativaId) . "'
          and a.empleadoConsecutivo = '" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
          and a.empleadoTipo = '" . mysqli_real_escape_string($this->conn, $empleadoCategoriaId) . "'
          and fechaAsistencia between cast('" . mysqli_real_escape_string($this->conn, $fechaIngreso) . "' as date) and cast('" . mysqli_real_escape_string($this->conn, $fechaBaja) . "' as date)
          and incidenciaAsistenciaId='8'";

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listaInc[] = $reg;
           }
    // $this -> logger -> LogInfo ("valor del array de la consulta obtenerIncapacidadesDetalleTrabPERSISTENCIA".var_export ($sql, true));
     return $listaInc;
    }
    catch (Exception $e) {
 }
}

public function obtenerRFCSujetoObligadoPERSISTENCIA(){
$listadetalleSujetoOb = array();
try{
    $sql="SELECT rfc as rfcCliente,razonSocial
          FROM empresa
          WHERE idEmpresa='1'";//directo el cliente 13 por que es gif

     $res = mysqli_query($this->conn, $sql);
     while(($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))){
            $listadetalleSujetoOb[] = $reg;
           }
    //$this -> logger -> LogInfo ("valor del array de la consulta obtenerRFCSujetoObligadoPERSISTENCIA".var_export ($sql, true));
     return $listadetalleSujetoOb;
    }
    catch (Exception $e) {
 }
}

public function GetCoberturaXEmpLab($FechaAlta,$FechaBaja,$entidadEmpAlm,$ConsecutivoEmpAlm,$CategoriaEmpAlm)
    {
        $TotalCob = array();
        $sql = "SELECT IFNULL(SUM(cobertura),0) AS TOTAL
                FROM
                (select sum(ci.valorCobertura) as cobertura
                 from asistencia a
                 left join catalogoincidencias ci on ci.incidenciaId = a.incidenciaAsistenciaId
                 where a.empleadoEntidad ='" . mysqli_real_escape_string($this->conn, $entidadEmpAlm) . "'
                 and a.empleadoConsecutivo ='" . mysqli_real_escape_string($this->conn, $ConsecutivoEmpAlm) . "'
                 and a.empleadoTipo ='" . mysqli_real_escape_string($this->conn, $CategoriaEmpAlm) . "'
                 and a.fechaAsistencia between CAST('" . mysqli_real_escape_string($this->conn, $FechaAlta) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $FechaBaja) . "' AS DATE)
                UNION
                 select sum(valorIncidenciaEspecial) as cobertura
                 from incidenciasespeciales ie
                 left join catalogoincidenciasespeciales cie on cie.incidenciaEspecialId= ie.incidenciaId
                 where ie.incidenciaEmpleadoEntidad ='" . mysqli_real_escape_string($this->conn, $entidadEmpAlm) . "'
                 and ie.incidenciaEmpleadoConsecutivo ='" . mysqli_real_escape_string($this->conn, $ConsecutivoEmpAlm) . "'
                 and ie.incidenciaEmpleadoTipo = '" . mysqli_real_escape_string($this->conn, $CategoriaEmpAlm) . "'
                 and ie.incidenciaFecha between CAST('" . mysqli_real_escape_string($this->conn, $FechaAlta) . "' AS DATE) and CAST('" . mysqli_real_escape_string($this->conn, $FechaBaja) . "' AS DATE)
                )AS XX";  
        
       // $this -> logger -> LogInfo ("valor del array de la consulta GetCoberturaXEmp ".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $TotalCob[] = $reg;
        }
      //  $this -> logger -> LogInfo ("valor del array de la TotalCob ".var_export ($TotalCob, true));
        return $TotalCob;
    }

public function obtenerIDrangoCoberturaPERSISTENCIA($cobertura){
    $rango = array();
    $sql = "SELECT idRango 
            FROM catalogo_rangosporcentajealmacen
            where rangoInicio <='" . mysqli_real_escape_string($this->conn, $cobertura) . "' and rangoFin >='" . mysqli_real_escape_string($this->conn, $cobertura) . "';";  
    
    // $this -> logger -> LogInfo ("valor del array de la consulta obtenerIDrangoCoberturaPERSISTENCIA ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
          $rango[] = $reg;
    }
    return $rango;
}

public function obtenerPorcentajesXUniformeyTipoRecepcionPERSISTENCIA($columnaAConsultar,$idUniforme){
    $porcentajesCobro = array();
    $sql= "select $columnaAConsultar as porcentajeCorrespondiente
            from catalogotiposuniforme
            where idTipoUniforme='".mysqli_real_escape_string($this->conn, $idUniforme)."'";  
    
    // $this -> logger -> LogInfo ("valor del array de la consulta obtenerPorcentajesXUniformeyTipoRecepcionPERSISTENCIA ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
          $porcentajesCobro[] = $reg;
    }
    return $porcentajesCobro;
}


public function obtenerSalarioActualContyratoPERSISTENCIA(){
    $porcentajesCobro = array();
    $sql= "SELECT sAreaA
           FROM tblsalarios
           order by idSalarios desc
           limit 1";  
    
    //$this -> logger -> LogInfo ("valor del array de la consulta obtenerSalarioActualContyratoPERSISTENCIA ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
          $porcentajesCobro[] = $reg;
    }
    return $porcentajesCobro;
}


public function obtenerUltimorepsePERSISTENCIA(){
        $docRepse = array();
            $sql = "SELECT * 
                    FROM catalogorepse
                    where estatusEliminado='0'
                    order by idRepse desc
                    limit 1";
            //$this -> logger -> LogInfo ("ejecutando obtenerUltimorepsePERSISTENCIA en persistencia". $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $docRepse[] = $reg;
            }
            return $docRepse;
        
    }

public function GetIdUltimoArchivoDeudoresFini($documento)
    {
        $UltimoArchivFini = array();
        $sql = "SELECT *,count(idArchivosDeudoresF) as contador FROM ArchivosDeudoresFini
                where NombreArchivoDFinOriginal='" . mysqli_real_escape_string($this->conn, $documento) . "'";
        
       // $this -> logger -> LogInfo ("valor del array de la consulta GetCoberturaXEmp ".var_export ($sql, true));
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $UltimoArchivFini[] = $reg;
        }
       // $this -> logger -> LogInfo ("valor del array de la UltimoArchivFini ".var_export ($UltimoArchivFini, true));
        return $UltimoArchivFini;
    }


public function AlmacenarIdUltimoArchivoDeudoresFini($documento,$target_file,$NombreCompuesto,$NombreOriginal)
    {
         //$this -> logger -> LogInfo ("Ejecutando. insertarVisitante en persistencia");

        $sql = "insert into ArchivosDeudoresFini(NombreArchivoDFin, NombreArchivoDFinOriginal, NombreArchivoDFinCompuesto, RutaArchivoDFinCompuesto, FechaCargaArchivoDFini) " .
        "values ('" . mysqli_real_escape_string($this->conn, $documento) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $NombreOriginal) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $NombreCompuesto) . "', " .
        "'" . mysqli_real_escape_string($this->conn, $target_file) . "', " .
        " now())";

        //"'". mysqli_real_escape_string($this -> conn,  $visitante["horarioEntrada"])."')";

        //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarVisitante como" . $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertar.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));

            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }



 public function obtenerRegistroPatronalXempleadoPERSISTENCIA($empleadoEntidad, $empleadoConsecutivo,$empleadoTipo)
    {     
        $regP = array();
        $sql = "SELECT registroPatronal
                FROM datosimss
                WHERE empladoEntidadImss='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
                AND empleadoConsecutivoImss='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
                AND empleadoCategoriaImss='" . mysqli_real_escape_string($this->conn, $empleadoTipo) . "'";
        $this -> logger -> LogInfo ("valor del array de la sql ".var_export ($sql, true));
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $regP[] = $reg;
    }
    return $regP;
}

public function getPeticionesCapacitacion($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$asistenciaFecha)
    {
        $LisataPeticionCapacita = array();
        $sql = "SELECT * FROM peticionesturnoscapacitacion
                where entidadEmpCap='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                and consecutivoEmpCap='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                and categoriaEmpCap='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
                and fechaTurnoCap='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'
                and (estatusPeticion='1' or estatusPeticion='2' or estatusPeticion='5')";
     
      //  $this -> logger -> LogInfo ("Ejecutando SQL LisataPeticionCapacita: " . $sql);

        $res = mysqli_query($this->conn, $sql);

        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $LisataPeticionCapacita[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
        return $LisataPeticionCapacita;
    }

public function registrarpeticionCapacitacion($DatosCapacitacion){
    $sql="insert into peticionesturnoscapacitacion(entidadEmpCap, consecutivoEmpCap, categoriaEmpCap, fechaTurnoCap, fechaPeticion, estatusPeticion, idPuntoServEmpCap, idPlantillaCap, idPlantillaEmpCap, idPuestoEmpCap, entidadSupCap, consecutivoSupCap, categoriaSupCap, usuarioCapturaPeticion)
             values('" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["empleadoEntidadId"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["empleadoConsecutivoId"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["empleadoTipoId"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["asistenciaFecha"]) . "',now(),1,'" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["empleadoPuntoServicioId"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["idPlantillaServicio"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["plantilladeservicio"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["puestoCubiertoId"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["supervisorEntidadId"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["supervisorConsecutivoId"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["supervisorTipoId"]) . "','" . mysqli_real_escape_string($this->conn, $DatosCapacitacion["usuario"]) . "')";
    $res = mysqli_query($this->conn, $sql);
   // $this -> logger -> LogInfo ("valor registrarpeticionCapacitacion".var_export ($sql, true));
}

public function UpdatePeticionCapacitacion($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$asistenciaFecha,$EstatusCap,$usuario){

        //$this -> logger -> LogInfo ("Ejecutando. UpdateRegistroPeticionMerma1 en persistencia");
        $PeticionID = array();
        if($EstatusCap=="4"){
            $ComentarioDecl = "Declinado Por El Usuario :". $usuario . ",Al Borrar La Asistencia Desde El Modulo De 'Asistencia'";
        }else{
           $ComentarioDecl = "Declinado Por El Usuario :". $usuario . ",Al Realizar Un Registro En Un Punto De Servicio Distinto Al Solicitado";
        }

        $sql2 = "select max(idPeticion) AS idpeticion
            from peticionesturnoscapacitacion 
            where estatusPeticion != 3 
            AND entidadEmpCap='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
            AND consecutivoEmpCap='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
            AND categoriaEmpCap='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
            AND fechaTurnoCap='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'";
        //$this -> logger -> LogInfo ("Se ejecuto consulta  sql2 como" . $sql2);

            $res2 = mysqli_query($this->conn, $sql2);
            while (($reg2 = mysqli_fetch_array($res2, MYSQLI_ASSOC))) {
                $PeticionID[] = $reg2;
            }
            $idpeticion=$PeticionID[0]["idpeticion"];
        $sql=" UPDATE peticionesturnoscapacitacion set estatusPeticion='" . mysqli_real_escape_string($this->conn, $EstatusCap) . "', comentarioAccion='" . mysqli_real_escape_string($this->conn, $ComentarioDecl) . "', usuarioCapturaPeticion='" . mysqli_real_escape_string($this->conn, $usuario) . "', fechaAccion=now()
            where estatusPeticion != 3 
            AND entidadEmpCap='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
            AND consecutivoEmpCap='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
            AND categoriaEmpCap='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
            AND fechaTurnoCap='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'
            AND idPeticion='$idpeticion'";
            $res = mysqli_query($this->conn, $sql);   
    //    $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
    }

public function UpdateCampoCapacitacionEnAsistencia($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$asistenciaFecha,$comentariIncidencia){

        //$this -> logger -> LogInfo ("Ejecutando. UpdateRegistroPeticionMerma1 en persistencia");
        $sql=" update asistencia set Capacitacion=null,comentarioIncidencia='" . mysqli_real_escape_string($this->conn, $comentariIncidencia) . "'
                where empleadoEntidad='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                and empleadoConsecutivo='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                and empleadoTipo='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
                and fechaAsistencia='" . mysqli_real_escape_string($this->conn, $asistenciaFecha) . "'";
            $res = mysqli_query($this->conn, $sql);   
       // $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
}

public function getListaPeticionesCapacitacionParaCerrar()
    {
        $GetListaCapacitaParaCerrar = array();
        $sql = " SELECT * FROM peticionesturnoscapacitacion
                where estatusPeticion='1'";  
     //   $this -> logger -> LogInfo ("Ejecutando SQL : " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $GetListaCapacitaParaCerrar[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($ListaPeriodos, true));
        return $GetListaCapacitaParaCerrar;
    }

public function obtenerEstatusOperacionesPersistencia($empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId)
    {
        $getestatusOp = array();
        $sql = " SELECT estatusEmpleadoOperaciones 
                 FROM empleados
                 where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
                 and empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
                 and empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'";  
        $res = mysqli_query($this->conn, $sql);
        while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
            $getestatusOp[] = $reg;
        }
                //$this -> logger -> LogInfo ("Se ejecuto consulta  obtenerEstatusOperacionesPersistencia como" . $sql);
        return $getestatusOp;
    }

public function consultaRegistrosPatronalesPER($idCliente,$fechaPeriodo1,$fechaPeriodo2)
{

    $lista = array();

    $sql = "select distinct di.registroPatronal
            from empleados e
            left join catalogopuntosservicios cp on (e.empleadoIdPuntoServicio=cp.idPuntoServicio)
            left join datosimss di ON (e.entidadFederativaId=di.empladoEntidadImss AND e.empleadoConsecutivoId=di.empleadoConsecutivoImss AND e.empleadoCategoriaId=di.empleadoCategoriaImss)
            left join catalogoclientes cc on (cp.idClientePunto=cc.idCliente)
            left join catalogoTurnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
            where ((di.empleadoEstatusImss=7 AND di.fechaBajaImss >= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo1) . "' AS DATE) 
            AND di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE)) 
            OR (di.empleadoEstatusImss=3 AND di.fechaImss <= CAST('" . mysqli_real_escape_string($this->conn, $fechaPeriodo2) . "' AS DATE) ))";

    if($idCliente!=2){

     $sql.=" and cc.idCliente=" . $idCliente . " ";       
 }
 $sql.=" order by puntoServicio,nombreEmpleado";
 // $this -> logger -> LogInfo ("Ejecutando consultaRegistrosPatronalesPER: " . $sql);
 $res = mysqli_query($this->conn, $sql);
 if (!is_bool($res)) {
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $lista[] = $reg;
    }
}
return $lista;
}


public function consultaRegistrosPatronalesInfonavitPER($mesPost,$anioPost){

    $lista = array();
    $sql = "SELECT idregistroP 
            FROM catalogo_opinioncumplimientos_infonavit
            WHERE mesOpInf='" . mysqli_real_escape_string($this->conn, $mesPost) . "'           
            AND añoOpImss='" . mysqli_real_escape_string($this->conn, $anioPost) . "'";
    
 // $this -> logger -> LogInfo ("Ejecutando consultaRegistrosPatronalesInfonavitPER: " . $sql);
 $res = mysqli_query($this->conn, $sql);
 if (!is_bool($res)) {
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $lista[] = $reg;
    }
}
return $lista;
}

public function verificarIutDeTarjetaDespensa($idEndidadFederativaContratacion)
{
    //$this -> logger -> LogInfo ("verificarNumeroCuentaClabeDuplicado en persistencia");
    $NumIutTarjetaDespensa = array();
    try {
        $sql = "SELECT * from TarjetaDespensa
            where idEstatusTarjeta ='1'
            and idEstatusAsignacionEntidad='1'
            and (IdEstatusAsignacionEmpleado is null or IdEstatusAsignacionEmpleado='0')
            and IdTarjetaDespensa=(select min(IdTarjetaDespensa) from TarjetaDespensa  
                                    where idEstatusTarjeta ='1'
                                    and idEstatusAsignacionEntidad='1'
                                    and (IdEstatusAsignacionEmpleado is null or IdEstatusAsignacionEmpleado='0')
                                    and idEntidadAsignada='" . mysqli_real_escape_string($this->conn, $idEndidadFederativaContratacion) . "')
            and idEntidadAsignada='" . mysqli_real_escape_string($this->conn, $idEndidadFederativaContratacion) . "'";
            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $NumIutTarjetaDespensa[] = $reg;
        }
        //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));
        return $NumIutTarjetaDespensa;
    } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
    }
}

public function ObtenerLaSiguienteTarjetaDeDespensa($IdTarjetaDespensa,$idEndidadFederativaContratacion,$ComentarioIut,$contraseniaBajaTarjeta,$NumEmpBajaTarjeta,$usuario)
{
    $NumIutTarjetaDespensa = array();
    $EstatusExtravio = "3";//Se pone 3 ya que en el catalogo indica que 3 es para un extravio interno 
    try {

        $sql1=" update TarjetaDespensa set idEstatusTarjeta='" . mysqli_real_escape_string($this->conn, $EstatusExtravio) . "',NumeroFirmaBajaTarjeta='" . mysqli_real_escape_string($this->conn, $NumEmpBajaTarjeta) . "',ContraseniaFirmaBajaTarjeta='" . mysqli_real_escape_string($this->conn, $contraseniaBajaTarjeta) . "',UsuarioBajaTarjeta='" . mysqli_real_escape_string($this->conn, $usuario) . "',FechaBajaTarjeta=now(),ComentarioBajaTarjeta='" . mysqli_real_escape_string($this->conn, $ComentarioIut) . "'
                where IdTarjetaDespensa='" . mysqli_real_escape_string($this->conn, $IdTarjetaDespensa) . "'";
            $res1 = mysqli_query($this->conn, $sql1);   
        //$this -> logger -> LogInfo ("Ejecutando SQL : " . $sql1);

        $sql = "SELECT * from TarjetaDespensa
            where idEstatusTarjeta ='1'
            and idEstatusAsignacionEntidad='1'
            and (IdEstatusAsignacionEmpleado is null or IdEstatusAsignacionEmpleado='0')
            and IdTarjetaDespensa=(select min(IdTarjetaDespensa) from TarjetaDespensa  
                                    where idEstatusTarjeta ='1'
                                    and idEstatusAsignacionEntidad='1'
                                    and (IdEstatusAsignacionEmpleado is null or IdEstatusAsignacionEmpleado='0')
                                    and idEntidadAsignada='" . mysqli_real_escape_string($this->conn, $idEndidadFederativaContratacion) . "')
            and idEntidadAsignada='" . mysqli_real_escape_string($this->conn, $idEndidadFederativaContratacion) . "'";
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $NumIutTarjetaDespensa[] = $reg;
        }
        return $NumIutTarjetaDespensa;
    } catch (Exception $e) {
    }
}

public function ActualizarBajaTarjetaDespensa($NumEmpModal, $constraseniaFirma,$ComentarioBajaTarjeta,$txtnumeroIutEdited,$usuario)
    {
        $this -> logger -> LogInfo ("ActualizarBajaTarjetaDespensa en persistencia");
        $estatusTarjeta = "2";//Indica que viene de un extravio empleado
        $estatusTarjetaEmp = "0";//Indica que Queda Sin asignacion
        $sql = "update TarjetaDespensa set idEstatusTarjeta='" . mysqli_real_escape_string($this->conn, $estatusTarjeta) . "',IdEstatusAsignacionEmpleado='" . mysqli_real_escape_string($this->conn, $estatusTarjetaEmp) . "',NumeroFirmaQuitoDelElemento='" . mysqli_real_escape_string($this->conn, $NumEmpModal) . "',ContraseniaFirmaQuitoDelElemento='" . mysqli_real_escape_string($this->conn, $constraseniaFirma) . "',usuarioQueQuitoDelElemento='" . mysqli_real_escape_string($this->conn, $usuario) . "',FechaEnQuitoDelElemento=now(),ComentarioBajaTarjeta='" . mysqli_real_escape_string($this->conn, $ComentarioBajaTarjeta) . "'
                where idIutTarjeta='" . mysqli_real_escape_string($this->conn, $txtnumeroIutEdited) . "'
                and idEstatusTarjeta='1'";
$this -> logger -> LogInfo ("Ejecutando ActualizarBajaTarjetaDespensa: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        if ($res !== true) {
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
        $IdNumeroTarjetaDespensa = array();
        $sql1 = "SELECT * FROM TarjetaDespensa
                where idIutTarjeta='" . mysqli_real_escape_string($this->conn, $txtnumeroIutEdited) . "'";
        $res1 = mysqli_query($this->conn, $sql1);
        while (($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC))) {

            $IdNumeroTarjetaDespensa[] = $reg1;
        }
        $EntidadEmpleadoTarjeta = $IdNumeroTarjetaDespensa[0]["EntidadEmpleadoTarjeta"];
        $ConsecutivoEmpleadoTarjeta = $IdNumeroTarjetaDespensa[0]["ConsecutivoEmpleadoTarjeta"];
        $TipoEmpleadoTarjeta = $IdNumeroTarjetaDespensa[0]["TipoEmpleadoTarjeta"];
        $sql2 = "update empleados set IdTarjetaDespensa='" . mysqli_real_escape_string($this->conn, $estatusTarjetaEmp) . "'
                where entidadFederativaId='" . mysqli_real_escape_string($this->conn, $EntidadEmpleadoTarjeta) . "'
                and empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $ConsecutivoEmpleadoTarjeta) . "'
                and empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $TipoEmpleadoTarjeta) . "'";
        $res2 = mysqli_query($this->conn, $sql2);
        if ($res2 !== true) {
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }


public function consultaEstatusTarjetaPERSISTENCIA($empleadoEntidad,$empleadoConsecutivo,$empleadoCategoria){

    $lista = array();

    $sql = "SELECT e.IdTarjetaDespensa,td.idEstatusTarjeta
            FROM empleados e
            LEFT JOIN tarjetadespensa td on (e.IdTarjetaDespensa=td.IdTarjetaDespensa)
            WHERE e.entidadFederativaId='" . mysqli_real_escape_string($this->conn, $empleadoEntidad) . "'
            AND e.empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivo) . "'
            AND e.empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $empleadoCategoria) . "'";
    
  // $this -> logger -> LogInfo ("Ejecutando consultaEstatusTarjetaPERSISTENCIA: " . $sql);
 $res = mysqli_query($this->conn, $sql);
 if (!is_bool($res)) {
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $lista[] = $reg;
    }
}
return $lista;
}


public function updateTarjetaDespensa($numempleadoFirmahiddenRh,$FirmaInterna,$empleadoEntidadId,$empleadoConsecutivoId,$empleadoTipoId,$usuarioRegistroFirma)
{
    $GetIdTarjetaDespensa = array();
    $sql1 = " SELECT * from empleados e
            left join TarjetaDespensa Td ON (e.IdTarjetaDespensa = Td.IdTarjetaDespensa)
             where e.entidadFederativaId='" . mysqli_real_escape_string($this->conn, $empleadoEntidadId) . "'
             and e.empleadoConsecutivoId='" . mysqli_real_escape_string($this->conn, $empleadoConsecutivoId) . "'
             and e.empleadoCategoriaId='" . mysqli_real_escape_string($this->conn, $empleadoTipoId) . "'
             and Td.idEstatusTarjeta='1'";  
    $res1 = mysqli_query($this->conn, $sql1);
    while ($reg1 = mysqli_fetch_array($res1, MYSQLI_ASSOC)) {
        $GetIdTarjetaDespensa[] = $reg1;
    }
    if(count($GetIdTarjetaDespensa) > "0"){
        $estatusTarjeta = "4";//Indica que Sera para proceso de baja empleado
        $estatusTarjetaEmp = "0";//Indica que Queda Sin asignacion
        $IdTarjetaDespensa = $GetIdTarjetaDespensa[0]["IdTarjetaDespensa"];
        $Comentario = "Tarjeta Despensa Dada De Baja Desde Consulta Personal";
        $sql2=" UPDATE TarjetaDespensa set idEstatusTarjeta='" . mysqli_real_escape_string($this->conn, $estatusTarjeta) . "',NumeroFirmaBajaTarjeta='" . mysqli_real_escape_string($this->conn, $numempleadoFirmahiddenRh) . "',ContraseniaFirmaBajaTarjeta='" . mysqli_real_escape_string($this->conn, $FirmaInterna) . "',UsuarioBajaTarjeta='" . mysqli_real_escape_string($this->conn, $usuarioRegistroFirma) . "',FechaBajaTarjeta=now(),ComentarioBajaTarjeta='" . mysqli_real_escape_string($this->conn, $Comentario) . "',IdEstatusAsignacionEmpleado='" . mysqli_real_escape_string($this->conn, $estatusTarjetaEmp) . "'
            where IdTarjetaDespensa='" . mysqli_real_escape_string($this->conn, $IdTarjetaDespensa) . "'";
        $res2 = mysqli_query($this->conn, $sql2);   
    }
}

public function consultaDocumentoSATPersistencia($anioPost,$mesPost,$documento){

    $lista = array();

    if($documento=='1'){

        $sql="SELECT nombreDocDecISR as nombrePdfSAT
           FROM catalogoDeclaracionISR
           WHERE mesDecISR='" . mysqli_real_escape_string($this->conn, $mesPost) . "'
           AND anioDecISR='" . mysqli_real_escape_string($this->conn, $anioPost) . "'
           AND estatusDecISR='1'";
    }

    if($documento=='2'){

        $sql="SELECT nombreDocDecIVA as nombrePdfSAT
              FROM catalogoDeclaracionIVA
              WHERE mesDecIVA='" . mysqli_real_escape_string($this->conn, $mesPost) . "'
              AND anioDecIVA='" . mysqli_real_escape_string($this->conn, $anioPost) . "'
              AND estatusDecIVA='1'";
        
          }
    if($documento=='3'){

        $sql="SELECT nombreDocPagoISR as nombrePdfSAT
           FROM catalogoPagosISR
           WHERE mesPagoISR='" . mysqli_real_escape_string($this->conn, $mesPost) . "'
           AND anioPagoISR='" . mysqli_real_escape_string($this->conn, $anioPost) . "'
           AND estatusDocPagoISR='1'";

    }
    if($documento=='4'){

        $sql="SELECT nombreDocPagoIVA as nombrePdfSAT
              FROM catalogoPagosIVA
              WHERE mesPagoIVA='" . mysqli_real_escape_string($this->conn, $mesPost) . "'
              AND anioPagoIVA='" . mysqli_real_escape_string($this->conn, $anioPost) . "'
              AND estatusDocPagoIVA='1'";

    }
    if($documento=='5'){

        $sql="SELECT nombreDocOpinionSAT as nombrePdfSAT
              FROM catalogoOpinionSAT
              WHERE mesOpinionSAT='" . mysqli_real_escape_string($this->conn, $mesPost) . "'
              AND anioOpinionSAT='" . mysqli_real_escape_string($this->conn, $anioPost) . "'
              AND estatusDocOpinionSAT='1'";

    }
    if($documento=='6'){

        $sql="SELECT nombreDocConstanciaSitFis as nombrePdfSAT 
              FROM catalogoConstanciaSituacionFiscal
              WHERE mesConstanciaSitFis='" . mysqli_real_escape_string($this->conn, $mesPost) . "'
              AND anioConstanciaSitFis='" . mysqli_real_escape_string($this->conn, $anioPost) . "'
              AND estatusDecISR='1'";
    }
     if($documento=='7'){

        $sql="SELECT nombreDocAFFIDAVIT as nombrePdfSAT 
              FROM catalogoAFFIDAVIT
              WHERE mesAFFIDAVIT='" . mysqli_real_escape_string($this->conn, $mesPost) . "'
              AND anioAFFIDAVIT='" . mysqli_real_escape_string($this->conn, $anioPost) . "'
              AND estatusDocAFFIDAVIT='1'";
    }
    
   // $this -> logger -> LogInfo ("Ejecutando consultaDocumentoSATPersistencia: " . $sql);
 $res = mysqli_query($this->conn, $sql);
 if (!is_bool($res)) {
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $lista[] = $reg;
    }
}
return $lista;
}

////////////////Cambios De Sucursal Y Datos Fiscales //////////////////////

public function obtenerSucursalesIngresadas($EndidadFederativa)
{
    $Sucarusales = array();
    try {
        $sql ="SELECT * FROM  sucursalesinternas 
                where idEntidadPerteneciente='$EndidadFederativa'";
            //$this -> logger -> LogInfo ("Ejecutando SQL: verificarNumeroCuentaClabeDuplicado " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $Sucarusales[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la verificarNumeroCuentaClabeDuplicado ".var_export ($empleado, true));
        return $Sucarusales;
    } catch (Exception $e) {

        $this->logger->LogInfo("getCatalogoMediosInformacion ERROR:" . $e->getMessage());
    }
}

public function CargarSelectoresDatosFiscales($Caso)
{
    //$this-> logger -> LogInfo("obtenerEmpleadoPorId");
    $DatosSelect = array();
    if($Caso=="1"){
        $sql = "SELECT * FROM entidadesfederativas where idEntidadFederativa!='50'";
    }else if($Caso=="2"){
        $sql = "SELECT * FROM catalogomunicipios";
    }else{
        $sql = "SELECT * FROM asentamientos";
    }
    //$this -> logger -> LogInfo ("Ejecutando obtenerPuntosServiciosPorEntidad: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $DatosSelect[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la puntosServicios ".var_export ($puntosServicios, true));
    return $DatosSelect;
}

public function CargarMunicipiosPorEntidad($EntidadDatosFiscales)
{
    //$this-> logger -> LogInfo("obtenerEmpleadoPorId");
    $DatosSelect = array();
    $sql = "SELECT * FROM catalogomunicipios
        where idEstado='" . mysqli_real_escape_string($this->conn, $EntidadDatosFiscales) . "'";
    //$this -> logger -> LogInfo ("Ejecutando obtenerPuntosServiciosPorEntidad: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $DatosSelect[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la puntosServicios ".var_export ($puntosServicios, true));
    return $DatosSelect;
}

public function CargarLocalidadPorMunicipio($MunicipioDatosFiscales)
{
    //$this-> logger -> LogInfo("obtenerEmpleadoPorId");
    $DatosSelect = array();
    $sql = "SELECT * FROM asentamientos
            where municipioAsentamiento='" . mysqli_real_escape_string($this->conn, $MunicipioDatosFiscales) . "'";
    //$this -> logger -> LogInfo ("Ejecutando obtenerPuntosServiciosPorEntidad: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $DatosSelect[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la puntosServicios ".var_export ($puntosServicios, true));
    return $DatosSelect;
}

public function ObtenerCpFiscal($LocalidadDatosFiscales)
{
    //$this-> logger -> LogInfo("obtenerEmpleadoPorId");
    $DatosSelect = array();
    $sql = "SELECT * FROM asentamientos
            where idAsentamiento='" . mysqli_real_escape_string($this->conn, $LocalidadDatosFiscales) . "'";
    //$this -> logger -> LogInfo ("Ejecutando obtenerPuntosServiciosPorEntidad: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $DatosSelect[] = $reg;
    }
        //$this -> logger -> LogInfo ("valor del array de la puntosServicios ".var_export ($puntosServicios, true));
    return $DatosSelect;
}

public function ObtenerEmpleadoSiExisteParaDatosFiscales($FolioPreseleccionDatosFiscales)
{
    $EmpleadoParaDatosFiscales = array();
    $sql = "SELECT * FROM empleados
        where foliopreseleccion='" . mysqli_real_escape_string($this->conn, $FolioPreseleccionDatosFiscales) . "'";
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $EmpleadoParaDatosFiscales[] = $reg;
    }
    return $EmpleadoParaDatosFiscales;
}

public function ObtenerEmpleadoYaHaSidoRegistradoDatosFiscales($datosEmpleado)
{
    $EmpleadoParaDatosFiscales = array();
    $sql = "SELECT count(idDatosFiscales) as LargoEmpleado FROM datosfiscales
            where EntidadEMpDF='" . mysqli_real_escape_string($this->conn, $datosEmpleado["entidadFederativa"]) . "'
            and ConsecutivoEmpDF='" . mysqli_real_escape_string($this->conn, $datosEmpleado["empleadoConsecutivo"]) . "'
            and CategoriaEmpDF='" . mysqli_real_escape_string($this->conn, $datosEmpleado["empleadoCategoria"]) . "'";
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $EmpleadoParaDatosFiscales[] = $reg;
    }
    return $EmpleadoParaDatosFiscales;
}

public function insertaDatosFiscales($datosFiscales)
    {
        //$this -> logger -> LogInfo ("Ejecutando. insertaDatosImss en persistencia");
        //$this -> logger -> LogInfo ("valor del array de la datosFiscales ".var_export ($datosFiscales, true));
        $sql = "INSERT INTO datosfiscales (EntidadEMpDF, ConsecutivoEmpDF, CategoriaEmpDF, FolioPreDF, CodigoPostalDF, EntidadFedDF, MunicipioDF, LocalidadDF, ColoniaDF, VialidadDF, TipoVialidadDF, NumeroExternoDF, NumeroInternoDF, EstadoDeDomicilioDF, UsuarioCreacionDF, FechacreacionDF) VALUES (
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["entidadFederativaId"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["empleadoConsecutivoId"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["empleadoCategoriaId"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["FolioPreseleccionDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["CodigoPostalDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["EntidadDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["MunicipioDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["LocalidadDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["ColoniaDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["VialidadDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["TipoVidalidadDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["NumExternoDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["NumInternoDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["EstadoDoicilioDatosFiscales"]) . "',
        '" . mysqli_real_escape_string($this->conn, $datosFiscales["usuario"]) . "',
        now())";
       // $this -> logger -> LogInfo ("Se ejecuto consulta  insertaDatosImss como" . $sql);
        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al insertaDatosFiscales.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

public function ActualizarDatosFiscales($datosFiscales)
{
   // $this -> logger -> LogInfo ("Ejecutando. ActualizarDatosFiscales en persistencia");
    //$this -> logger -> LogInfo ("valor del array de la datosFiscales ".var_export ($datosFiscales, true));
    $sql = "UPDATE datosfiscales set
            CodigoPostalDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["CodigoPostalDatosFiscales"]) . "',
            EntidadFedDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["EntidadDatosFiscales"]) . "',
            MunicipioDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["MunicipioDatosFiscales"]) . "',
            LocalidadDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["LocalidadDatosFiscales"]) . "',
            ColoniaDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["ColoniaDatosFiscales"]) . "',
            VialidadDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["VialidadDatosFiscales"]) . "',
            TipoVialidadDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["TipoVidalidadDatosFiscales"]) . "',
            NumeroExternoDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["NumExternoDatosFiscales"]) . "',
            NumeroInternoDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["NumInternoDatosFiscales"]) . "',
            EstadoDeDomicilioDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["EstadoDoicilioDatosFiscales"]) . "',
            UsuarioEdicionDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["usuario"]) . "',
            FechaEdicionDF=now()
            where EntidadEMpDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["entidadFederativaId"]) . "'
            and ConsecutivoEmpDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["empleadoConsecutivoId"]) . "'
            and CategoriaEmpDF='" . mysqli_real_escape_string($this->conn, $datosFiscales["empleadoCategoriaId"]) . "'";
   // $this -> logger -> LogInfo ("Se ejecuto consulta  insertaDatosImss como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}

public function ObtenerDatosFiscalesGeneralTemporal($numeroEmpleado){
 $lista = array();
 $sql = "SELECT * FROM datosfiscales
        where concat_ws('-',EntidadEMpDF,ConsecutivoEmpDF,CategoriaEmpDF)='" . mysqli_real_escape_string($this->conn, $numeroEmpleado) . "'";
        $this -> logger -> LogInfo ("Ejecutando ObtenerDatosFiscalesGeneralTemporal: " . $sql);
    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));
    return $lista;
}

public function traeListaSucursalesinternas()
    {
        //$this -> logger -> LogInfo ("traeCatalogoEntidadesFederativas en persistencia");
        $listaEnditadesFederativas = array();

        try {

            $sql = "Select * from sucursalesinternas ORDER BY nombreSucursal";
            //$this -> logger -> LogInfo ("ejecutando traeCatalogoEntidadesFederativas en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listaEnditadesFederativas[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la traeCatalogoEntidadesFederativas ".var_export ($listaEnditadesFederativas, true));
            return $listaEnditadesFederativas;
        } catch (Exception $e) {
            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }
    }


public function obtenerDatosEmpleadoNomina($NumeroempleadoOr)
{
        //$this-> logger -> LogInfo("consultarEmpleadoById");

    $aspirante = array();

    $sql = "SELECT concat_ws(' ',nombreEmpleado,apellidoPaterno,apellidoMaterno) as NombreEmpleado,entidadesfederativas.nombreEntidadFederativa as Entidad 
            from empleados
            left join entidadesfederativas ON(entidadesfederativas.idEntidadFederativa=empleados.idEntidadTrabajo)
            where concat_ws('-',entidadFederativaId,empleadoConsecutivoId,empleadoCategoriaId) ='" . mysqli_real_escape_string($this->conn, $NumeroempleadoOr) . "' ";

        //$this -> logger -> LogInfo ("Ejecutando consultarEmpleadoById: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $aspirante[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de lista de aspirantes ".var_export ($aspirante, true));

    return $aspirante;
}

public function getChecksDocumentos($empleado)
{
        //$this-> logger -> LogInfo("obtenerReclutadoresByLineaNegocio");
    $documentoschecks = array();
    try {
        $sql = "SELECT * FROM empleadosregistrodocumentacion
                where concat_ws('-',idEntidadEmpladoDocumento,empleadoConsecutivoDocumento,empleadoTipoDocumento)='$empleado'";

            //$this -> logger -> LogInfo ("Ejecutando obtenerReclutadoresByLineaNegocio: " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $documentoschecks[] = $reg;
        }
            //$this -> logger -> LogInfo ("valor del array de la obtenerReclutadoresByLineaNegocio ".var_export ($reclutadores, true));
        return $documentoschecks;
    } catch (Exception $e) {
        $this->logger->LogInfo("obtenerReclutadoresByLineaNegocio ERROR:" . $e->getMessage());
    }
}

public function DeleteEntregaDocumentacion($documentacion)
    {

        //$this -> logger -> LogInfo ("Ejecutando. DeleteEntregaDocumentacion en persistencia");
        $sql = "DELETE FROM empleadosregistrodocumentacion 
                    where idEntidadEmpladoDocumento='" . mysqli_real_escape_string($this->conn, $documentacion["idEntidadEmpladoDocumento"]) . "'
                    and empleadoConsecutivoDocumento='" . mysqli_real_escape_string($this->conn, $documentacion["empleadoConsecutivoDocumento"]) . "'
                    and empleadoTipoDocumento='" . mysqli_real_escape_string($this->conn, $documentacion["empleadoTipoDocumento"]) . "'";
        //$this -> logger -> LogInfo ("Ejecutando DeleteEntregaDocumentacion: " . $sql);
        mysqli_query($this->conn, $sql);

        $res = mysqli_query($this->conn, $sql);

        if ($res !== true) {
            $this->logger->LogInfo("Ocurrio un error al eliminar Los Documentos.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

public function getVigenciaplantilla($idPlantillaServicio)
{
        $this-> logger -> LogInfo("getVigenciaplantilla");
    $listafecha1 = array();
    $sql = "SELECT * FROM servicios_plantillas
            where servicioPlantillaId='" . $this->safeValue($idPlantillaServicio) . "'";
         $this -> logger -> LogInfo ("Ejecutando getEmpleadosEstatusOperaciones1: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listafecha1[] = $reg;
        }
    }
       $this -> logger -> LogInfo ("valor del array de la listafecha1 ".var_export ($listafecha1, true));
    return $listafecha1;

}
public function UpdateBajaPlantilla($servicioPlantillaId,$contraseniaInsertadaCifrada,$NumEmpModalBaja,$usuario,$idMoivoBajaForzada)
{
    $sql = "UPDATE servicios_plantillas set fechaTerminoPlantilla=now(),estatusPlantilla='0',UsuariobajaPlant='" . $this->safeValue($usuario) . "',FechaBaja=now(),NumEmpBaja='" . $this->safeValue($NumEmpModalBaja) . "',ContraseniaEmpBaja='" . $this->safeValue($contraseniaInsertadaCifrada) . "',motivoBajaForzada='" . $this->safeValue($idMoivoBajaForzada) . "' where servicioPlantillaId='" . $this->safeValue($servicioPlantillaId) . "';";

    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
            //$this -> logger -> LogInfo ("Error de actualización");
        throw new Exception("Error de actualización");
    }
}


public function ActualizarRequisicionCosto($usuario,$servicioPlantillaId,$contraseniaInsertadaCifrada,$NumEmpModalBaja,$TotalFacturaEdited,$CostoTurnoEdited)
{

        $this -> logger -> LogInfo ("Ejecutando. updateRequisicion en persistencia");
    $sql = "update servicios_plantillas  " .
    "set usuarioCapturaPlantilla='" . mysqli_real_escape_string($this->conn, $usuario) . "'," .
    "NumEmpEdicion='" . mysqli_real_escape_string($this->conn, $NumEmpModalBaja) . "'," .
    "ContraseniaEmpEdicion='" . mysqli_real_escape_string($this->conn, $contraseniaInsertadaCifrada) . "'," .
    "costoPorTurno='" . mysqli_real_escape_string($this->conn, $CostoTurnoEdited) . "', " .
    "costoNetoFactura='" . mysqli_real_escape_string($this->conn, $TotalFacturaEdited) . "', " .
    "lastEdited=now() " .
    "where servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "'";

        $this -> logger -> LogInfo ("Se ejecuto consulta  updateRequisicion como" . $sql);
    $res = mysqli_query($this->conn, $sql);
    if ($res !== true) {
        $this->logger->LogInfo("Ocurrio un error al updateRequisicion.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
    $sql1 = " INSERT INTO HistoricoCostosPlantillas(idServicioPlantilla, costoTurno, fechaRegistro, usuarioCaptura, NumEmpEdicionHist, ContraseniaEmpEdicionHist)VALUES(
            '" . mysqli_real_escape_string($this->conn, $servicioPlantillaId) . "',
            '" . mysqli_real_escape_string($this->conn, $CostoTurnoEdited) . "',
            now(),
            '" . mysqli_real_escape_string($this->conn, $usuario) . "',
            '" . mysqli_real_escape_string($this->conn, $NumEmpModalBaja) . "',
            '" . mysqli_real_escape_string($this->conn, $contraseniaInsertadaCifrada) . "')";
    $this -> logger -> LogInfo ("Se ejecuto consulta  updateRequisicion como" . $sql1);
    $res1 = mysqli_query($this->conn, $sql1);
    if ($res1 !== true) {
        $this->logger->LogInfo("Ocurrio un error al registroDatosPlantilla.");
        $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
        $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
    }
}


public function getRequisicionesByFechaVencimientoXMes($FechaActual)
    {
        // $this-> logger -> LogInfo("getRequisicionesByFechaVencimiento");
        $lista = array();

        try {

            $sql = "select sp.servicioPlantillaId, sp.puntoServicioPlantillaId,
            sp.puestoPlantillaId, cp.descripcionPuesto, sp.tipoTurnoPlantillaId,sp.costoNetoFactura,
            ct.descripcionTurno,sp.folio,fechaRegistroPlantilla,
            sp.fechaInicio,sp.fechaTerminoPlantilla,sp.numeroElementos,
            sp.turnosPorDia,sp.costoPorTurno,
            sp.cobraDescanso,sp.cobraFestivos,sp.cobraDia31,
            sp.usuarioCapturaPlantilla,sp.lastEdited, sp.estatusPlantilla, sp.comentarioRequisicion,sp.recursosMateriales,
            cps.puntoservicio,
            cps.fechaInicioServicio
            ,cps.fechaTerminoServicio
            ,cc.razonSocial, cps.cobraDescansos, cps.cobraDiaFestivo, cps.cobra31
            ,cps.idLineaNegocioPunto
            from servicios_plantillas sp
            left join catalogopuestos cp on (cp.idPuesto=sp.puestoPlantillaId)
            left join catalogoturnos ct on (ct.idTipoTurno=sp.tipoTurnoPlantillaId)
            left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
            left join catalogoclientes cc on (cc.idCliente=cps.idClientePunto)
            where estatusPlantilla=1  and numeroElementos > '0' and fechaTerminoPlantilla<=  CAST('$FechaActual' AS DATE)";

            // $this -> logger -> LogInfo ("ejecutando getRequisicionesByFechaVencimiento en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

            return $lista;

        } catch (Exception $e) {

            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }

    }

public function obtenerDetalleRequisicionesByPuntoServicioIdFATIGA($puntoServicioId,$fechaInicial,$fechaFinal,$caso)
{
    //$this -> logger -> LogInfo ("valor del array de la caso ".var_export ($caso, true));
    $lista = array();  
    $sql = "select  
    sp.servicioPlantillaId
    , sp.puntoServicioPlantillaId
    , cps.puntoServicio
    , numeroElementos
    , sp.puntoServicioPlantillaId
    , sp.numeroElementos
    , puestoPlantillaId
    , cp.descripcionPuesto
    , tipoTurnoPlantillaId
    , ct.descripcionTurno
    , sp.turnosPorDia
    , sp.fechaInicio
    ,sp.rolOperativoPlantilla
    ,sp.fechaTerminoPlantilla
    ,sp.estatusPlantilla
    -- , sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    left join catalogopuestos cp on cp.idPuesto=sp.puestoPlantillaId
    left join catalogoturnos ct on ct.idTipoTurno=sp.tipoTurnoPlantillaId
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    where sp.puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "
    and ((sp.estatusPlantilla=1 and sp.fechaInicio<=cast('" . $this->safeValue($fechaFinal) . "' as date ))
    or(sp.estatusPlantilla=0 and sp.fechaInicio<=cast('" . $this->safeValue($fechaFinal) . "' as date ) and sp.fechaTerminoPlantilla>=cast('" . $this->safeValue($fechaInicial) . "' as date ) ))";

    //$this -> logger -> LogInfo ("ejecutando obtenerDetalleRequisicionesByPuntoServicioIdFATIGA en persistencia". $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}
public function ObteneDatosPlantillasPorPuntoFATIGA($puntoServicioId,$fechaInicial, $fechaFinal)
{
    $lista = array();
    $sql = "SELECT * from servicios_plantillas sp
     where sp.puntoServicioPlantillaId=" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "
    and ((sp.estatusPlantilla=1 and sp.fechaInicio<=cast('" . $this->safeValue($fechaInicial) . "' as date ))
    or(sp.estatusPlantilla=0 and sp.fechaInicio<=cast('" . $this->safeValue($fechaInicial) . "' as date ) and sp.fechaTerminoPlantilla>=cast('" . $this->safeValue($fechaInicial) . "' as date ) ))";
    //$this -> logger -> LogInfo ("Ejecutando ObteneDatosPlantillasPorPuntoFATIGA: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}

public function UpdateReplicacionPlantilla($txtTotalFacturaReplicacionplantilla,$txtCostoTurnoReplicacionplantilla,$FechaMontajeReplicacionplantilla,$servicioPlantillaId,$contraseniaInsertadaCifrada,$NumEmpModalBaja,$usuario,$idPuntoServicio)
{

     $this-> logger -> LogInfo("UpdateReplicacionPlantilla");
    $FolioPlantilla = array();
    $PlantillaActual = array();
    $Elementosplantillas = array();
// Se realiza la busqueda del siguiente numero de folio autoincrementable para la nueva plantilla
    $sql = "select  LPAD(IF(MAX( folio ) IS NULL , 1, MAX( folio ) + 1 ), 4, 0)  AS 'folioRequisicion' from servicios_plantillas;";
    $this -> logger -> LogInfo ("Ejecutando ObteneDatosPlantillasPorPuntoFATIGA: sql " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $FolioPlantilla[] = $reg;
    }
    $this -> logger -> LogInfo ("valor del array de la FolioPlantilla ".var_export ($FolioPlantilla, true));
    $FolioP = $FolioPlantilla[0]["folioRequisicion"];

// Se realiza la insercion de la nueva plantilla replicando la anterior con una subc consulta y se agregan los valores que se pidieron desde el js para ser reemplazados
    $sql1 = "INSERT INTO servicios_plantillas (puntoServicioPlantillaId,puestoPlantillaId,tipoTurnoPlantillaId,folio,fechaRegistroPlantilla,fechaInicio,numeroElementos,turnosPorDia,costoPorTurno,cobraDescanso,cobraFestivos,cobraDia31,NumEmpEdicion,ContraseniaEmpEdicion,usuarioCapturaPlantilla,estatusPlantilla,tipoRequisicion,comentarioRequisicion,lineaNegocioRequisicion,costoNetoFactura,recursosMateriales,fechaTerminoPlantilla,IdRolOperativoPlantilla,rolOperativoPlantilla,replicada)
        SELECT puntoServicioPlantillaId,puestoPlantillaId,tipoTurnoPlantillaId,'$FolioP',now(),'$FechaMontajeReplicacionplantilla',numeroElementos,turnosPorDia,'$txtCostoTurnoReplicacionplantilla',cobraDescanso,cobraFestivos,cobraDia31,'$NumEmpModalBaja','$contraseniaInsertadaCifrada','$usuario','1',tipoRequisicion,comentarioRequisicion,lineaNegocioRequisicion,'$txtTotalFacturaReplicacionplantilla',recursosMateriales,fechaTerminoPlantilla,IdRolOperativoPlantilla,rolOperativoPlantilla,'2'
        FROM servicios_plantillas
        where servicioPlantillaId='" . $this->safeValue($servicioPlantillaId) . "'";
    $this -> logger -> LogInfo ("Ejecutando ObteneDatosPlantillasPorPuntoFATIGA: sql1 " . $sql1);
         $res1 = mysqli_query($this->conn, $sql1);

// Se consulta el maximo id del punto de servicio para obtener el id de la nueva plantilla que acabamos de insertar 
    $sql2 = "SELECT max(servicioPlantillaId) as IdPlantillaActual FROM servicios_plantillas
            where puntoServicioPlantillaId='" . $this->safeValue($idPuntoServicio) . "'";
    $this -> logger -> LogInfo ("Ejecutando ObteneDatosPlantillasPorPuntoFATIGA: sql2 " . $sql2);
    $res2 = mysqli_query($this->conn, $sql2);
    while (($reg2 = mysqli_fetch_array($res2, MYSQLI_ASSOC))) {
        $PlantillaActual[] = $reg2;
    }
    $this -> logger -> LogInfo ("valor del array de la PlantillaActual ".var_export ($PlantillaActual, true));
    $IdPlantillaActualI = $PlantillaActual[0]["IdPlantillaActual"];

// Se obtiene a todos los elementos que estan asignados a la plantilla plantilla original que se esta sustituyendo para poder cambiar el id de la plantilla y asignarle la nueva plantilla ingresada 
    $sql4 = "SELECT * FROM plantilla p 
            left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
            where p.requisicionId='" . $this->safeValue($servicioPlantillaId) . "'
            and (e.empleadoEstatusId='1' or e.empleadoEstatusId='2')";
    $this -> logger -> LogInfo ("Ejecutando ObteneDatosPlantillasPorPuntoFATIGA: sql4 " . $sql4);
    $res4 = mysqli_query($this->conn, $sql4);
    while (($reg4 = mysqli_fetch_array($res4, MYSQLI_ASSOC))) {
        $Elementosplantillas[] = $reg4;
    }
    $this -> logger -> LogInfo ("valor del array de la Elementosplantillas ".var_export ($Elementosplantillas, true));
// Se realiza el for dependiendo de el la cantidad de elementos que tenian asignados en la plantilla anterior para sustituirlos a la nueva plantilla tomando unicamente a los elementos activos y reingresos
    for ($i=0; $i < count($Elementosplantillas) ; $i++) { 
        $empleadoEntidadPlantilla = $Elementosplantillas[0]["empleadoEntidadPlantilla"];
        $empleadoConsecutivoPlantilla = $Elementosplantillas[0]["empleadoConsecutivoPlantilla"];
        $empleadoCategoriaPlantilla = $Elementosplantillas[0]["empleadoCategoriaPlantilla"];

// se cambian de plantilla a la nueva plantilla replicada
        $sql3 = "UPDATE plantilla set requisicionId='$IdPlantillaActualI'
                where requisicionId='" . $this->safeValue($servicioPlantillaId) . "'
                and empleadoEntidadPlantilla='" . $this->safeValue($empleadoEntidadPlantilla) . "'
                and empleadoConsecutivoPlantilla='" . $this->safeValue($empleadoConsecutivoPlantilla) . "'
                and empleadoCategoriaPlantilla='" . $this->safeValue($empleadoCategoriaPlantilla) . "'";
                $this -> logger -> LogInfo ("Ejecutando ObteneDatosPlantillasPorPuntoFATIGA: sql3 " . $sql3);
        $res3 = mysqli_query($this->conn, $sql3);
        if ($res3 !== true) {
            $this->logger->LogInfo("Ocurrio un error al updateRequisicion.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }

// Se realiza la inservcion de los dias a trabajar con la replicacion de los dias a trabajar de l apantilla original sustituyendo unicamente el id de la plantilla 
    $sql5 = "INSERT INTO DiasDeTrabajoPlantilla (servicioPlantillaId, DescansoMismoDia, LunesTurnoDia, LunesTurnoNoche, MartesTurnoDia, MartesTurnoNoche, MiercolesTurnoDia, MiercolesTurnoNoche, JuevesTurnoDia, JuevesTurnoNoche, ViernesTurnoDia, ViernesTurnoNoche, SabadoTurnoDia, SabadoTurnoNoche, DomingoTurnoDia, DomingoTurnoNoche)
        SELECT '$IdPlantillaActualI', DescansoMismoDia, LunesTurnoDia, LunesTurnoNoche, MartesTurnoDia, MartesTurnoNoche, MiercolesTurnoDia, MiercolesTurnoNoche, JuevesTurnoDia, JuevesTurnoNoche, ViernesTurnoDia, ViernesTurnoNoche, SabadoTurnoDia, SabadoTurnoNoche, DomingoTurnoDia, DomingoTurnoNoche
        FROM diasdetrabajoplantilla
        where servicioPlantillaId='" . $this->safeValue($servicioPlantillaId) . "'";
    $this -> logger -> LogInfo ("Ejecutando ObteneDatosPlantillasPorPuntoFATIGA: sql5" . $sql5);
         $res5 = mysqli_query($this->conn, $sql5);

// Se actualiza la plantilla original dandola de baja pcambiendo el estatus y se cambia l afecha de termino por la actual tambien se inserta el usuario y el empleado que esta realizando el movimiento
    $sql6 = "UPDATE servicios_plantillas set estatusPlantilla='0',fechaTerminoPlantilla='$FechaMontajeReplicacionplantilla',UsuariobajaPlant='$usuario',FechaBaja=now(),NumEmpBaja='$NumEmpModalBaja',      ContraseniaEmpBaja='$contraseniaInsertadaCifrada',replicada='1'
                where servicioPlantillaId='" . $this->safeValue($servicioPlantillaId) . "'";
        $this -> logger -> LogInfo ("Se ejecuto consulta  updateRequisicion como sql6" . $sql6);
        $res6 = mysqli_query($this->conn, $sql6);
        if ($res6 !== true) {
            $this->logger->LogInfo("Ocurrio un error al updateRequisicion.");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
// Actualizar Por Empleados Activos Unicamente
}

public function TurnosCubiertoXPsPersistencia($i, $puntoServicioId) {
  //  $this -> logger -> LogInfo ("valor del array de la tipoBusqueda ".var_export ($tipoBusqueda, true));
    $listTCS = array();
        try {
            $sql= "SELECT ta.tipoTurno,pl.requisicionId FROM turnoasistencia ta
                   left join catalogopuntosservicios cps on cps.idPuntoServicio=ta.puntoServicioTurno
                   left join plantilla pl on (pl.empleadoEntidadPlantilla = ta.entidadEmpTurno and pl.empleadoConsecutivoPlantilla=ta.consecutivoEmpTurno and pl.empleadoCategoriaPlantilla=ta.categoriaEmpTurno)
                   WHERE ta.fechaTurno ='" . mysqli_real_escape_string($this->conn, $i) . "' 
                   AND ta.puntoServicioTurno='" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "'";

    // $this -> logger -> LogInfo ("Ejecutando SQL: TurnosCubiertoXPsPersistencia " . $sql);
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listTCS[] = $reg;
            }
            return $listTCS;
        } catch (Exception $e) {
        }
}

public function TurnosCubiertoIncidenciasSeparadosXPSPersistencia($i,$puntoServicioId,$idClientePunto) {

    $listTCS = array();
        try {

            $sql= "SELECT ie.incidenciaId,pl.requisicionId
                   FROM incidenciasespeciales ie
                   INNER JOIN catalogoincidenciasespeciales cie ON (cie.incidenciaEspecialId=ie.incidenciaId)
                   LEFT JOIN catalogopuntosservicios cps ON cps.idPuntoServicio=ie.incidenciaPuntoServicio
                   LEFT JOIN plantilla pl ON (pl.empleadoEntidadPlantilla = ie.incidenciaEmpleadoEntidad and pl.empleadoConsecutivoPlantilla=ie.incidenciaEmpleadoConsecutivo and pl.empleadoCategoriaPlantilla=ie.incidenciaEmpleadoTipo)
                   WHERE ie.incidenciaFecha ='$i'
                   AND cps.idClientePunto='$idClientePunto'
                   AND ie.incidenciaPuntoServicio='$puntoServicioId'
                   AND cps.idClientePunto !='2'
                   AND (ie.incidenciaId='1' or ie.incidenciaId='6')";

             // $this -> logger -> LogInfo ("Ejecutando SQL: TurnosCubiertoIncidenciasSeparadosXPSPersistencia " . $sql);
        //$this -> logger -> LogInfo ("valor del array de la consulta de puestos ".var_export ($listaPuestos, true));
            
             $res = mysqli_query($this->conn, $sql);
             while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) { 
                 $listTCS[] = $reg;
            }
            return $listTCS;
        } catch (Exception $e) {
        }
}


public function getTurnosCubiertos($fecha1, $fecha2, $puntoServicioId, $puestoId, $rolOperativo)
{
       // $this -> logger -> LogInfo ("getTurnosCubiertos en persistencia");

    $lista = array();

    try {

        $sql = "select
        a. empleadoEntidad
        , a.empleadoConsecutivo
        , a.empleadoTipo
        , a.incidenciaAsistenciaId
        , ci.nomenclaturaIncidencia
        , ci.descripcionIncidencia
        ,ci.valorCobertura
        , a.fechaAsistencia
        , a.puntoServicioAsistenciaId
        , cps.puntoServicio
        ,a.puestoCubiertoId
        ,cp.descripcionPuesto
        ,a.roloperativo
        from asistencia a
        left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
        left join  catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
        left join catalogopuestos cp on (cp.idPuesto=a.puestoCubiertoId)
        where
        a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and a.puntoServicioAsistenciaId=" . $this->safeValue($puntoServicioId) . "
        and puestoCubiertoId=" . $this->safeValue($puestoId) . "
        and a.roloperativo='" . $this->safeValue($rolOperativo) . "'
        union
        select
        ie. incidenciaEmpleadoEntidad
        , ie.incidenciaEmpleadoConsecutivo
        , ie.incidenciaEmpleadoTipo
        , ie.incidenciaId
        , ci.nomenclaturaIncidenciaEspecial
        , ci.descripcionIncidenciaEspecial
        ,ci.valorIncidenciaEspecial
        , ie.incidenciaFecha
        , ie.incidenciaPuntoServicio
        , cps.puntoServicio
        ,ie.incidenciaPuesto
        ,cp.descripcionPuesto
        ,ie.roloperativo
        from incidenciasespeciales ie
        left join  catalogoincidenciasespeciales ci on (ci.incidenciaEspecialId=ie.incidenciaId)
        left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
        left join catalogopuestos cp on (cp.idPuesto=ie.incidenciaPuesto)
        where
        (ie.incidenciaId=1 or ie.incidenciaId=5 or ie.incidenciaId=6)
        and ie.incidenciaFecha between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and ie.incidenciaPuntoServicio=" . $this->safeValue($puntoServicioId) . "
        and ie.incidenciaPuesto=" . $this->safeValue($puestoId) . "
        and ie.roloperativo='" . $this->safeValue($rolOperativo) . "'";

        $this -> logger -> LogInfo ("Ejecutando SQL: getTurnosCubiertos " . $sql);

        $res = mysqli_query($this->conn, $sql);
        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }
        return $lista;
    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR:" . $e->getMessage());
    }
}

public function getCatalogoMotivoBajaForzada()
{
    $listaPuestos = array();
    $sql = "SELECT * from CatalogoMotivoBajaPlantilla where estatusMotivoBajaP='1'";   
    $res = mysqli_query($this->conn, $sql);
    while ($reg = mysqli_fetch_array($res, MYSQLI_ASSOC)) {
        $listaPuestos[] = $reg;
    }
    return $listaPuestos;
}

public function RevisarElementosAsignadosAEstaPantilla($servicioPlantillaId)
    {
        // $this -> logger -> LogInfo ("RevisarElementosActivosEnELPunto en persistencia");
        $EmpladosActivosPunto = array();

        try {

            $sql = "SELECT * FROM plantilla p 
                    left join empleados e on (e.entidadFederativaId=p.empleadoEntidadPlantilla and e.empleadoConsecutivoId=p.empleadoConsecutivoPlantilla and e.empleadoCategoriaId=p.empleadoCategoriaPlantilla)
                    where p.requisicionId='" . $this->safeValue($servicioPlantillaId) . "'
                    and (e.empleadoEstatusId='1' or e.empleadoEstatusId='2')";

            //$this -> logger -> LogInfo ("ejecutando traeCatalogoClientes en persistencia". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $EmpladosActivosPunto[] = $reg;

            }
            //$this -> logger -> LogInfo ("valor del array de la listaClientes ".var_export ($listaClientes, true));
            return $EmpladosActivosPunto;
        } catch (Exception $e) {
            $this->logger->LogInfo("ERROR:" . $e->getMessage());
        }
    }

public function obtenerBancoByClabePER($numeroCtaClabe){

    $banco = array();
    $sql = "SELECT idCuentaBanco 
            FROM bancos_empresa
            WHERE idCuentaBanco='$numeroCtaClabe'";
        // $this -> logger -> LogInfo ("Ejecutando obtenerBancoByClabePER: " . $sql);
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $banco[] = $reg;
    }
    return $banco;
}

public function insertBeneficiarios($Entidad,$Consecutivo,$Tipo,$parentescoB,$nombreB,$porcentajeB,$usuario,$i,$idBeneficiario){
        //$this -> logger -> LogInfo ("Ejecutando. insertarDatosFamiliares en persistencia");

    if($i=='1') {// si no va a estar eliminando cada vez que entre
        $sql1="DELETE FROM datosfamiliares
               WHERE idEntidadEmpleadoFamiliar = $Entidad
               AND idConsecutivoEmpleadoFamiliar = $Consecutivo
               AND idCategoriaEmpleadoFamiliar = $Tipo";
        // $this -> logger -> LogInfo ("ejecutando insertBeneficiarios1 en persistencia". $sql1);
        $res1 = mysqli_query($this->conn, $sql1);
        if($res1==true){
           $sql2 = "INSERT INTO datosfamiliares (idEntidadEmpleadoFamiliar, idConsecutivoEmpleadoFamiliar, idCategoriaEmpleadoFamiliar, nombreFamiliar, idParentescoFamiliar, descripcionParentesco,beneficiario,porcentajeBeneficiario,usuarioCapturaDatoFamiliar,fechaCapturaDatoFamiliar) VALUES ('$Entidad','$Consecutivo','$Tipo','$nombreB','$idBeneficiario','$parentescoB','1','$porcentajeB','$usuario',now())";
        // $this -> logger -> LogInfo ("ejecutando insertBeneficiarios2 en persistencia". $sql2);
                $res2 = mysqli_query($this->conn, $sql2);
                if($res2 !== true) {
                   $this->logger->LogInfo("Ocurrio un error al insertarDatosFamiliares.");
                   $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                   $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }
            //$this -> logger -> LogInfo ("Se ejecuto consulta  insertarDatosFamiliaresStore como" . $sql);
        }else{
            $this->logger->LogInfo("Ocurrio un error al Actualizar beneficiarios");
            $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
            $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
        }
    }else{
        $sql2 = "INSERT INTO datosfamiliares (idEntidadEmpleadoFamiliar, idConsecutivoEmpleadoFamiliar, idCategoriaEmpleadoFamiliar, nombreFamiliar, idParentescoFamiliar, descripcionParentesco,beneficiario,porcentajeBeneficiario,usuarioCapturaDatoFamiliar,fechaCapturaDatoFamiliar) VALUES ('$Entidad','$Consecutivo','$Tipo','$nombreB','$idBeneficiario','$parentescoB','1','$porcentajeB','$usuario',now())";
        $this -> logger -> LogInfo ("ejecutando insertBeneficiarios2 en persistencia". $sql2);

                $res2 = mysqli_query($this->conn, $sql2);

                if($res2 !== true) {
                   $this->logger->LogInfo("Ocurrio un error al insertarDatosFamiliares2.");
                   $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                   $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }
    }
}


public function obtenerBeneficiariosXEmp($empleadoEntidad, $empleadoConsecutivo, $empleadoTipo){

    $beneficiarios = array();

    $sql = "SELECT nombreFamiliar,porcentajeBeneficiario 
            FROM datosfamiliares
            WHERE idEntidadEmpleadoFamiliar  = '$empleadoEntidad'
            AND idConsecutivoEmpleadoFamiliar= '$empleadoConsecutivo'
            AND idCategoriaEmpleadoFamiliar  = '$empleadoTipo'
            LIMIT 3";

        //$this -> logger -> LogInfo ("Ejecutando obtenerBeneficiariosXEmp: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $beneficiarios[] = $reg;
    }
    return $beneficiarios;
}







///////////////////////////////////////////////////////////////////////////


public function obtenerSupervisoresOperativosXNoEmpleado($usuario)
{
        //$this-> logger -> LogInfo("obtenerSupervisoresOperativosXNoEmpleado");

    $supervisoresOperativos = array();

    $sql = "select e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId, concat_ws('-',e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId) as supervisorId , concat( e.nombreEmpleado, ' ', e.apellidoPaterno, ' ', e.apellidoMaterno) AS nombre
    FROM empleados e
    where (empleadoIdPuesto=6 or empleadoIdPuesto=88 or empleadoIdPuesto=61) and e.empleadoEstatusId<>0
    and concat_ws('-',e.entidadFederativaId, e.empleadoConsecutivoId,e.empleadoCategoriaId)='$usuario'
    order by e.nombreEmpleado asc";

        //$this -> logger -> LogInfo ("Ejecutando obtenerSupervisoresOperativosXNoEmpleado: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $supervisoresOperativos[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerSupervisoresOperativosXNoEmpleado ".var_export ($supervisoresOperativos, true));

    return $supervisoresOperativos;

}

public function insertandupdatefolioincapacidadAdmimn($folioIncapacidad,$asistenciaFecha,$fechafinalincidencia,$empleado,$tipoIncapacidad,$diasIncapacidad,$opcion)
            {
                if($opcion==0){
                    $sql="select * from foliosincapacidades
                    where folioIncapacidad='$folioIncapacidad'";

                    $res = mysqli_query($this->conn, $sql);
                    $lista=Array();
                    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                        $lista[] = $reg;
                    }
            //$this -> logger -> LogInfo ("valor del array de la getRequisicionesFromVentas ".var_export ($lista, true));

                    return $lista;


                }else if ($opcion==1) {

                   $sql = "update asistencia
                   set folioIncapacidad='$folioIncapacidad'
                   where (fechaAsistencia between '$asistenciaFecha' and  '$fechafinalincidencia')
                   and incidenciaAsistenciaId=8
                   and empleadoEntidad='".$empleado["entidadId"]."'
                   and empleadoConsecutivo='".$empleado["consecutivoId"]."'
                   and empleadoTipo='".$empleado["tipoId"]."'
                   and puntoServicioAsistenciaId='".$empleado["puntoServicioId"]."' ";

                   $res=mysqli_query($this->conn, $sql);


                   if ($res !== true) {
                    $this->logger->LogInfo("Ocurrio un error al actualizar folio en asistencia");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }else{

                 $sql1 = "INSERT INTO foliosincapacidades(folioIncapacidad,tipoIncapacidad,entidadempleadoInc, consecutivoempleadoInc, categoriaEmpleadoInc,diasIncapacidad,fechaInicioIncapacidad,fechaFInIncapacidad,st7,st2)values('$folioIncapacidad','$tipoIncapacidad','".$empleado["entidadId"]."','".$empleado["consecutivoId"]."','".$empleado["tipoId"]."','$diasIncapacidad','$asistenciaFecha','$fechafinalincidencia','".$empleado["st7"]."','".$empleado["st2"]."');";

                 $res1=mysqli_query($this->conn, $sql1);
                 if ($res1 !== true) {
                    $this->logger->LogInfo("Ocurrio un error al insertar folio en foliosincapacidades");
                    $this->logger->LogError("ERRNO:" . mysqli_errno($this->conn) . " - " . mysqli_error($this->conn));
                    $this->throwExceptionFromErrNo(mysqli_errno($this->conn));
                }

            }
        }else if($opcion==2){

            $sql="select * from  foliosincapacidades
            where idincapacidad=(select max(idincapacidad) from foliosincapacidades where entidadempleadoInc='".$empleado["entidadId"]."' and consecutivoempleadoInc='".$empleado["consecutivoId"]."' and categoriaEmpleadoInc='".$empleado["tipoId"]."' and tipoIncapacidad=2)";


            $res = mysqli_query($this->conn, $sql);
            $lista=Array();
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            
            return $lista;



        }else if($opcion==3){

            $sql="select * from  foliosincapacidades
            where idincapacidad=(select max(idincapacidad) from foliosincapacidades where entidadempleadoInc='".$empleado["entidadId"]."' and consecutivoempleadoInc='".$empleado["consecutivoId"]."' and categoriaEmpleadoInc='".$empleado["tipoId"]."' )";


            $res = mysqli_query($this->conn, $sql);
            $lista=Array();
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            
            return $lista;



        }
    }



public function obtenerGerenteSup($gerenteEntidad, $gerenteConsecutivo, $gerenteCategoria) 
    {    
        $nombreGerente = array();
        $sql = "SELECT concat_ws(' ',nombreEmpleado,apellidoPaterno,apellidoMaterno) as nombreGerenteSup
                FROM empleados 
                WHERE entidadFederativaId = '$gerenteEntidad' 
                AND empleadoConsecutivoId = '$gerenteConsecutivo'
                AND empleadoCategoriaId = '$gerenteCategoria'";
        
    $res = mysqli_query($this->conn, $sql);
    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
        $nombreGerente[] = $reg;
    }
    return $nombreGerente;
}

public function CatalogoDepartamentos(){
    
    $listaDepartamentos = array();

    try{

        $sql = "SELECT idDepartamentoOrg as idDepto,descripcionDepartamento as nombreDepto
                FROM catalogo_organigramadepartamentos
                WHERE lineaNegocio='1'
                ORDER BY descripcionDepartamento";

        //$this -> logger -> LogInfo("Ejecuntando Consulta departamentos " . $sql);
        $res = mysqli_query($this->conn, $sql);
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $listaDepartamentos[] = $reg;
        }
        //$this -> logger ->LogInfo("valor del array departamentos". var_export($listaDepartamentos, true));
        return $listaDepartamentos;

    } catch (Exception $e) {
        $this->logger->LogInfo("ERROR" . $e->getMessage());
    }
}

public function getCatalogoPuntosServiciosConOpciones($banderaBusquedaPuntos)
    {
        // $this-> logger -> LogInfo("traerCatalogoPuntosServicios"); 

        try {

            $sql = "select  idPuntoServicio,
            numeroCentroCosto,
            numeroOrden,
            puntoServicio,
            cc.razonSocial,
            ef.nombreEntidadFederativa,
            direccionPuntoServicio,
            esatusPunto,
            fechaInicioServicio,
            fechaTerminoServicio,
            contactoFacturacion,
            telefonoFijoFacturacion,
            telefonoMovilFacturacion,
            correoFacturacion,
            contactoTesoreria,
            telefonoFijoTesoreria,
            telefonoMovilTesoreria,
            correoTesoreria,
            contactoOperativo,
            telefonoFijoOperativo,
            telefonoMovilOperativo,
            correoOperativo,
            terminoFacturacion,
            idClientePunto,
            idEntidadPunto,
            cobraDescansos,
            cobraDiaFestivo,
            cobra31,
            latitudPunto,
            longitudPunto,
            nombrePuntoFacturacion,
            centroCostoFacturacion,
            turnosFlat,
            visiblerh,cubredescanso,
            cps.idLineaNegocioPunto,
            cln.descripcionLineaNegocio,
            cps.idIncrementRegionPuntoServ,
            ir.idRegionI,ir.DescripcionI,
            cps.municipiodelegacion,
            cps.unidad,
            cps.EntidadPuntoS,
            cps.MunicipioPuntoS,
            cps.ColoniaPuntoS,
            cps.AsentamientoPuntoS, 
            cps.CallePrincipaPuntoS, 
            cps.NumeroInterirPuntoS, 
            cps.NumeroExteriorPuntoS, 
            cps.PrimerCallePuntoS, 
            cps.SegundaCallePuntoS,
            cps.CodigoPostalPuntoS,
            cps.RangoAsistencia,
            efe.nombreEntidadFederativa,
            cm.nombreMunicipio,
            ca.nombreAsentamiento
            from catalogopuntosservicios cps
            left join catalogoclientes cc ON (cc.idCliente = cps.idClientePunto)
            left join entidadesfederativas ef ON (ef.idEntidadFederativa = cps.idEntidadPunto)
            left join index_regiones ir on(cps.idIncrementRegionPuntoServ=ir.idIncrementI)
            left join catalogolineanegocio cln on (cps.idLineaNegocioPunto=cln.idLineaNegocio)
            left join entidadesfederativas efe ON (cps.EntidadPuntoS = efe.idEntidadFederativa)
            left join catalogomunicipios cm ON (cps.MunicipioPuntoS =cm.idMunicipio)
            left join asentamientos ca ON (cps.ColoniaPuntoS =ca.idAsentamiento)
            where idPuntoServicio!= '1747'";
            if($banderaBusquedaPuntos == "2" || $banderaBusquedaPuntos == 2){//se busca con 1 ya que indica que es activo
                $sql.=" and cps.esatusPunto='1' order by puntoServicio";
            }else if($banderaBusquedaPuntos == "3" || $banderaBusquedaPuntos == 3){//se busca con 0 ya que indica que es inactivo
                $sql.=" and cps.esatusPunto='0' order by puntoServicio";
            }else{// indica que es para todos por lo cual no se pone la condicion
                $sql.=" order by puntoServicio";
            }
            
            // $this -> logger -> LogInfo ("ejecutando traerCatalogoPuntosServicios en persistencia ". $sql);

            $res = mysqli_query($this->conn, $sql);

            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

                $lista[] = $reg;
            }
            //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

            return $lista;

        } catch (Exception $e) {

            //$this -> logger -> LogInfo ("ERROR:" . $e->getMessage() );
        }

    }

   public function ConsultaDescansosDisponibles($idPlantillaServicio){
    //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    
    $sql="select *
        from servicios_plantillas
        left join catalogoroleoperativo on (catalogoroleoperativo.idRolOperativo=servicios_plantillas.IdRolOperativoPlantilla)
        where servicioPlantillaId='" . $this->safeValue($idPlantillaServicio) . "'";
            $this -> logger -> LogInfo ("ejecutando ConsultaDescansosDisponibles en sql ". $sql);
        
    $rs1 = mysqli_query($this->conn, $sql);
    $DescansosDisponibles=array();
    while (($reg1 = mysqli_fetch_array($rs1, MYSQLI_ASSOC))) {
        $DescansosDisponibles[]= $reg1;
    }
    return $DescansosDisponibles;   
}

public function ConsultaTurnosCubiertosDiaYNoche($idPlantillaServicio,$asistenciaFecha,$FechaFin){
    //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    
    $sql="select count(*) as desacansodiaonoche 
            from asistencia a
            left join turnoasistencia ta
            on (a.empleadoEntidad=ta.entidadEmpTurno and a.empleadoConsecutivo=ta.consecutivoEmpTurno   and a. empleadoTipo=ta.categoriaEmpTurno  and a.fechaAsistencia=ta.fechaTurno)
            where a.idPlantillaAsis='" . $this->safeValue($idPlantillaServicio) . "' ";
            if($FechaFin != 100 && $FechaFin != "100"){
                $sql.=" and ta.fechaTurno between '" . $this->safeValue($asistenciaFecha) . "' and '" . $this->safeValue($FechaFin) . "'";
            }else{
                $sql.=" and ta.fechaTurno='" . $this->safeValue($asistenciaFecha) . "'";
            }
            $sql.=" and (ta.tipoTurno = '8' or ta.tipoTurno = '9')";
            // $this -> logger -> LogInfo ("ejecutando ConsultaTurnosCubiertosDiaYNoche en sql ". $sql);
    $rs1 = mysqli_query($this->conn, $sql);
    $DescansosCubiertos=array();
    while (($reg1 = mysqli_fetch_array($rs1, MYSQLI_ASSOC))) {
        $DescansosCubiertos[]= $reg1;
    }
    // $this -> logger -> LogInfo ("valor del array de la DescansosCubiertos ".var_export ($DescansosCubiertos, true));   
    return $DescansosCubiertos;
}

public function getcatalogoMotivoIncidenciasEspeciales()
{

        //$this-> logger -> LogInfo("getCatalogoIncidenciasEspeciales");

    $lista = array();

    $sql = "select * from catalogoMotivoIncidenciasEspeciales";

        //$this -> logger -> LogInfo ("Ejecutando getCatalogoIncidenciasEspeciales: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }

        //$this -> logger -> LogInfo ("valor del array de la lista ".var_export ($lista, true));

    return $lista;
}


////////////////////////////////////////// se reutilizan las consultas por separados ya que se necesitan hacer camnbiso y no se sabe cuanto sformularios se verian efectados es para fatiga /////////////////////////


public function getDetalleRequisicionesByPuntoServicioIdParaFatiga($puntoServicioId,$IdPlantillaServ,$caso)
{
    $lista = array();
    $sql = "select  
    sp.servicioPlantillaId
    , sp.puntoServicioPlantillaId
    , cps.puntoServicio
    , numeroElementos
    , sp.puntoServicioPlantillaId
    , sp.numeroElementos
    , puestoPlantillaId
    , cp.descripcionPuesto
    , tipoTurnoPlantillaId
    , ct.descripcionTurno
    , sp.turnosPorDia
    , sp.fechaInicio
    ,sp.rolOperativoPlantilla
    -- , sum(numeroElementos) as elementosSolicitados
    from servicios_plantillas sp
    left join catalogopuestos cp on cp.idPuesto=sp.puestoPlantillaId
    left join catalogoturnos ct on ct.idTipoTurno=sp.tipoTurnoPlantillaId
    left join catalogopuntosservicios cps on (cps.idPuntoServicio=sp.puntoServicioPlantillaId)
    where sp.estatusPlantilla='1' ";
    for ($i=0; $i < count($IdPlantillaServ) ; $i++) { 
        $idPlantillaUn = $IdPlantillaServ[$i];
        if($i==0){
            $sql.=" and (sp.servicioPlantillaId='" . $this->safeValue($idPlantillaUn) . "'"; 
        }else{
            $sql.=" or sp.servicioPlantillaId='" . $this->safeValue($idPlantillaUn) . "'"; 
        }
    }
    $sql.=") ";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}


public function getTurnosCubiertosByPeriodoFechasAndPuntoServicioParaFatiga($fechaInicial,$fechaFinal,$puntoServicioId,$IdPlantillaServ) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    $sql = "select fechaAsistencia, sum(ci.valorCobertura) as cantidadTurnos 
    from asistencia a 
    inner join catalogoincidencias ci on a.incidenciaAsistenciaId=ci.incidenciaId 
    where fechaAsistencia  between CAST('" . $this->safeValue($fechaInicial) . "' AS DATE) and CAST('" . $this->safeValue($fechaFinal) . "' AS DATE)
    and PuntoServicioAsistenciaId = '" . $this->safeValue($puntoServicioId) . "' ";
    for ($i=0; $i < count($IdPlantillaServ) ; $i++) { 
        $idPlantillaUn = $IdPlantillaServ[$i];
        if($i==0){
            $sql.=" and (idPlantillaAsis='" . $this->safeValue($idPlantillaUn) . "'"; 
        }else{
            $sql.=" or idPlantillaAsis='" . $this->safeValue($idPlantillaUn) . "'"; 
        }
    }
    $sql.=") group by fechaAsistencia";

    $rs = mysqli_query($this->conn, $sql);
     //   $this -> logger -> LogInfo ("Ejecutando getTurnosCubiertosByPeriodoFechasAndPuntoServicio: " . $sql);

    $result = array();
    if (!is_bool($rs)) {
        while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {

              //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($reg, true));
           $result[$reg["fechaAsistencia"]]["cantidadTurnos"] = $reg["cantidadTurnos"];
                //$result[$reg["fechaAsistencia"]]["nomenclaturaIncidencia"] = $reg["nomenclaturaIncidencia"];
       }
   }
   return $result;
}
 
public function getTurnoCubiertosIncidenciasEspecialesXDiaParaFatiga($fechaInicial,$fechaFinal,$puntoServicioId,$IdPlantillaServ) {
        //$this-> logger -> LogInfo("getTurnosCubiertosByPeriodoFechasAndPuntoServicio");
    $sql = "SELECT ie.incidenciaFecha as fechaAsistencia, sum(cie.valorIncidenciaEspecial) as cantidadTurnos
            FROM incidenciasespeciales ie
            inner join catalogoincidenciasespeciales cie ON (cie.incidenciaEspecialId=ie.incidenciaId)
            where ie.incidenciaFecha between CAST('$fechaInicial' AS DATE) and CAST('$fechaFinal' AS DATE)
            and ie.incidenciaPuntoServicio='$puntoServicioId' ";
            for ($i=0; $i < count($IdPlantillaServ) ; $i++) { 
                $idPlantillaUn = $IdPlantillaServ[$i];
                if($i==0){
                    $sql.=" and (ie.incidenciaIdPlantilla='" . $this->safeValue($idPlantillaUn) . "'"; 
                }else{
                    $sql.=" or ie.incidenciaIdPlantilla='" . $this->safeValue($idPlantillaUn) . "'"; 
                }
            }
            $sql.=") and(ie.incidenciaId='1' or ie.incidenciaId='6')
            group by fechaAsistencia";

    $rs = mysqli_query($this->conn, $sql);
     //   $this -> logger -> LogInfo ("Ejecutando getTurnosCubiertosByPeriodoFechasAndPuntoServicio: " . $sql);

    $result = array();
    if (!is_bool($rs)) {
        while (($reg = mysqli_fetch_array($rs, MYSQLI_ASSOC))) {

              //  $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($reg, true));
           $result[$reg["fechaAsistencia"]]["cantidadTurnos"] = $reg["cantidadTurnos"];
                //$result[$reg["fechaAsistencia"]]["nomenclaturaIncidencia"] = $reg["nomenclaturaIncidencia"];
       }
   }
       // $this -> logger -> LogInfo ("Ejecutando getturnoscubiertos resuñt: "  . var_export ($result, true));
   return $result;
}


public function ObteneDatosPlantillasPorPuntoParaFatiga($puntoServicioId,$IdPlantillaServ)
{
    $lista = array();
    $sql = "    SELECT * from servicios_plantillas sp
                    where sp.puntoServicioPlantillaId='$puntoServicioId' ";
                    for ($i=0; $i < count($IdPlantillaServ) ; $i++) { 
                        $idPlantillaUn = $IdPlantillaServ[$i];
                        if($i==0){
                            $sql.=" and (sp.incidenciaIdPlantilla='" . $this->safeValue($idPlantillaUn) . "'"; 
                        }else{
                            $sql.=" or sp.incidenciaIdPlantilla='" . $this->safeValue($idPlantillaUn) . "'"; 
                        }
                    }
                    $sql.=") and estatusPlantilla='1' ";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}

public function ObtenerDiasSolicitadosParaFatiga($PlantillaId,$turnoDiaC,$turnoNocheC)
{
    $lista = array();
    $sql = "SELECT $turnoDiaC,$turnoNocheC from diasdetrabajoplantilla
    where servicioPlantillaId='" . mysqli_real_escape_string($this->conn, $PlantillaId) . "'";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;
}

public function ObtenerTurnosCubiertoSeparadosXPuntosParaFatiga($i, $puntoServicioId,$IdPlantillaServ) {
    $listTCS = array();
        try {
            $sql = "SELECT * FROM turnoasistencia
                    left join asistencia on (asistencia.empleadoEntidad=turnoasistencia.entidadEmpTurno and asistencia.empleadoConsecutivo=turnoasistencia.consecutivoEmpTurno and asistencia.empleadoTipo=turnoasistencia.categoriaEmpTurno and asistencia.fechaAsistencia=turnoasistencia.fechaTurno and asistencia.puntoServicioAsistenciaId=turnoasistencia.puntoServicioTurno)
                    where puntoServicioTurno='" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "' ";
                    for ($i=0; $i < count($IdPlantillaServ) ; $i++) { 
                        $idPlantillaUn = $IdPlantillaServ[$i];
                        if($i==0){
                            $sql.=" and (idPlantillaAsis='" . $this->safeValue($idPlantillaUn) . "'"; 
                        }else{
                            $sql.=" or idPlantillaAsis='" . $this->safeValue($idPlantillaUn) . "'"; 
                        }
                    }
                    $sql.=") and fechaTurno = '" . mysqli_real_escape_string($this->conn, $i) . "'";
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $listTCS[] = $reg;
            }
            return $listTCS;
        } catch (Exception $e) {
        }
}

public function ObtenerTTipoTurnoCurbiertoParaFatiga($i, $puntoServicioId,$IdPlantillaServ) {
    $list = array();
        try {
            $sql = "SELECT * from asistencia a 
            where fechaAsistencia = '" . mysqli_real_escape_string($this->conn, $i) . "'
            and PuntoServicioAsistenciaId = '" . mysqli_real_escape_string($this->conn, $puntoServicioId) . "' ";
            for ($i=0; $i < count($IdPlantillaServ) ; $i++) { 
                $idPlantillaUn = $IdPlantillaServ[$i];
                if($i==0){
                    $sql.=" and (idPlantillaAsis='" . $this->safeValue($idPlantillaUn) . "'"; 
                }else{
                    $sql.=" or idPlantillaAsis='" . $this->safeValue($idPlantillaUn) . "'"; 
                }
            }
            $sql.=") ";
            $res = mysqli_query($this->conn, $sql);
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $list[] = $reg;
            }
            return $list;
        } catch (Exception $e) {
        }
}

public function getTurnosExtrasFatigaPlantilla($fecha1, $fecha2, $puntoservicio,$idplantillaPunto)
{
    $lista = array();
    $sql = "select ie. incidenciaEmpleadoEntidad
        , ie.incidenciaEmpleadoConsecutivo
        , ie.incidenciaEmpleadoTipo
        , ie.incidenciaPuntoServicio
        , ie.incidenciaId
        , ie.incidenciaComentario
        , ie.incidenciaFechaRegistro
        , cie.nomenclaturaIncidenciaEspecial
        , cie.descripcionIncidenciaEspecial
        , ie.incidenciaFecha
        , cps.puntoServicio
        , cie.valorIncidenciaEspecial
        , concat_ws('-', ie.incidenciaEmpleadoEntidad
        , ie.incidenciaEmpleadoConsecutivo
        , ie.incidenciaEmpleadoTipo) as numeroEmpleado
        , concat_ws(' ',e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
        , ie.incidenciaComentario,ie.incidenciaIdPlantilla
        ,cpPlant.descripcionPuesto AS PuestoPlantilla,croloppla.DescripcioRolOP as RolPlantilla
        from incidenciasespeciales ie
        left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
        left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
        left join empleados e on (e.entidadFederativaId=ie.incidenciaEmpleadoEntidad and e.empleadoConsecutivoId=ie.incidenciaEmpleadoConsecutivo and e.empleadoCategoriaId=ie.incidenciaEmpleadoTipo)
        left join catalogopuestos cp on(ie.incidenciaPuesto=cp.idPuesto)
        left join servicios_plantillas servp on (ie.incidenciaIdPlantilla = servp.servicioPlantillaId)
        left join catalogopuestos cpPlant on(servp.puestoPlantillaId = cpPlant.idPuesto)
        left join catalogoroleoperativo croloppla on (servp.IdRolOperativoPlantilla = croloppla.idRolOperativo)
        where
        ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
        and ie.incidenciaPuntoServicio='" . $this->safeValue($puntoservicio) . "' ";
        for ($i=0; $i < count($idplantillaPunto) ; $i++) { 
            $idPlantillaUn = $idplantillaPunto[$i];
            if($i==0){
                $sql.=" and (ie.incidenciaIdPlantilla='" . $this->safeValue($idPlantillaUn) . "'"; 
            }else{
                $sql.=" or ie.incidenciaIdPlantilla='" . $this->safeValue($idPlantillaUn) . "'"; 
            }
        }
        $sql.=") and (ie.incidenciaId=1 or ie.incidenciaId=6) order by incidenciaFecha";
        $res = mysqli_query($this->conn, $sql);
        if (!is_bool($res)) {
            while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
                $lista[] = $reg;
            }
        }
        return $lista;
}

public function getEmpleadoForFatigaPorPlantilla($fecha1, $fecha2, $puntoservicio,$idplantillaPunto) 
{

    $lista = array();

    $sql="select DISTINCT a.empleadoEntidad, a.empleadoConsecutivo, a.empleadoTipo
    ,concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreEmpleado
    ,concat_ws('-',e.entidadFederativaId,e.empleadoConsecutivoId,e.empleadoCategoriaId) as numeroEmpleado
    ,ct.descripcionTurno
    , cp.descripcionPuesto
    ,e.entidadFederativaId
    ,e.empleadoConsecutivoId
    ,e.empleadoCategoriaId,e.roloperativo, 
    concat_ws(' ', em.apellidoPaterno, em.apellidoMaterno, em.nombreEmpleado) as nombresupervisor,cps.puntoServicio,ef.nombreEntidadFederativa as entidadpunto ,e.roloperativo,a.idPlantillaAsis as IdPlantilla
    from asistencia a
    left join empleados e on(a.empleadoEntidad=e.entidadFederativaId and a.empleadoConsecutivo=e.empleadoConsecutivoId and a.empleadoTipo=e.empleadoCategoriaId)
    left join empleados em on(  e.idEntidadResponsableAsistencia=em.entidadFederativaId and e.consecutivoResponsableAsistencia=em.empleadoConsecutivoId and e.tipoResponsableAsistencia=em.empleadoCategoriaId)
    left join catalogoturnos ct on (e.empleadoIdTurno=ct.idTipoTurno)
    left join catalogopuestos cp on (e.empleadoIdPuesto=cp.idPuesto)
    left join catalogopuntosservicios cps on(e.empleadoIdPuntoServicio=cps.idPuntoServicio)
    left join entidadesfederativas ef on (cps.idEntidadPunto=ef.idEntidadFederativa)
    where a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and a.puntoServicioAsistenciaId='" . $this->safeValue($puntoservicio) . "' ";
    for ($i=0; $i < count($idplantillaPunto) ; $i++) { 
        $idPlantillaUn = $idplantillaPunto[$i];
        if($i==0){
            $sql.=" and (a.idPlantillaAsis='" . $this->safeValue($idPlantillaUn) . "'"; 
        }else{
            $sql.=" or a.idPlantillaAsis='" . $this->safeValue($idPlantillaUn) . "'"; 
        }
    }
    $sql.=") order by nombreEmpleado asc";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[] = $reg;
        }
    }
    return $lista;

}


public function getAsistenciaByEmpleadoPuntoServicioFatigaPorPlantilla($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $puntoServicio,$idplantillaPunto)
    {
    $lista = array();
    $sql = "select a. empleadoEntidad
    , a.empleadoConsecutivo
    , a.empleadoTipo
    , a.puntoServicioAsistenciaId
    , a.incidenciaAsistenciaId
    , a.comentarioIncidencia
    , ci.nomenclaturaIncidencia
    , ci.descripcionIncidencia
    ,ci.valorAsistencia
    ,ci.valorCobertura
    , a.fechaAsistencia
    , cps.puntoServicio
    , a.idPlantillaAsis
    , a.idPlantillaAsis as IdPlantilla
    from asistencia a
    left join  catalogoincidencias ci on (ci.incidenciaId=a.incidenciaAsistenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=a.puntoServicioAsistenciaId)
    where
    a.fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and a.puntoServicioAsistenciaId='" . $this->safeValue($puntoServicio) . "'
    and a.empleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and a.empleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and a.empleadoTipo='" . $this->safeValue($empleadoTipo) . "'
    and a.idPlantillaAsis='" . $this->safeValue($idplantillaPunto) . "'
    and a.Capacitacion is null";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista[$reg["fechaAsistencia"]] = $reg;
        }
    }
    return $lista;
}

public function getSumaDiasFestivosFatigaPorPlantilla($fecha1, $fecha2, $empleadoEntidad, $empleadoConsecutivo, $empleadoTipo, $puntoServicioI,$idplantillaPunto)
{
    $lista = array();
    $sql = "select ie. incidenciaEmpleadoEntidad
    , ie.incidenciaEmpleadoConsecutivo
    , ie.incidenciaEmpleadoTipo
    , ie.incidenciaPuntoServicio
    , ie.incidenciaId
    , ie.incidenciaComentario
    , ie.incidenciaFechaRegistro
    , cie.nomenclaturaIncidenciaEspecial
    , cie.descripcionIncidenciaEspecial
    , ie.incidenciaFecha
    , cps.puntoServicio
    , cie.valorIncidenciaEspecial
    , count(cie.valorIncidenciaEspecial) as diasFestivos
    , ie.incidenciaIdPlantilla
    , ie.incidenciaIdPlantilla as IdPlantilla
    from incidenciasespeciales ie
    left join  catalogoincidenciasespeciales cie on (cie.incidenciaEspecialId=ie.incidenciaId)
    left join  catalogopuntosservicios cps on (cps.idPuntoServicio=ie.incidenciaPuntoServicio)
    where
    ie.incidenciaFecha  between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
    and ie.incidenciaEmpleadoEntidad='" . $this->safeValue($empleadoEntidad) . "'
    and ie.incidenciaEmpleadoConsecutivo='" . $this->safeValue($empleadoConsecutivo) . "'
    and ie.incidenciaEmpleadoTipo='" . $this->safeValue($empleadoTipo) . "' 
    and ie.incidenciaPuntoServicio=" . $puntoServicioI . " 
    and incidenciaIdPlantilla= '" . $this->safeValue($idplantillaPunto) . "'
    and ie.incidenciaId=5";
    $res = mysqli_query($this->conn, $sql);
    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
            $lista["diasFestivos"] = $reg["diasFestivos"];
        }
    }
    return $lista;
}





///////////////////////////////////////////////////////////////////7//////// se finalizan las consultas reutilizadas para fatiga  ///////////////////////////////////////////////////////////////////////////////////


public function existeCorreoEmpleadosR($datosDireccion)
    {
        // $this-> logger -> LogInfo("existeCorreoEmpleadosR");

        $result = false;
        $sql = "SELECT count(entidadEmpleadoDirectorio) as ConteoCorreo from directorio where correoEmpleado='" . mysqli_real_escape_string($this->conn, $datosDireccion["correoEmpleado"]) . "'";
// $this -> logger -> LogInfo ("Ejecutando SQL: existeCorreoEmpleadosR " . $sql);
        
        $res = mysqli_query($this->conn, $sql);
        $reg = mysqli_fetch_array($res, MYSQLI_ASSOC);
        if ($reg["ConteoCorreo"] > 0) {
            $result = true;
        }
        // $this -> logger -> LogInfo ("valor del array de la consulta de result ".var_export ($result, true));
        return $result;
    }

public function getAsistenciaApp($fecha1, $fecha2, $numeroEmpleado)
{

        // $this-> logger -> LogInfo("getAsistenciaApp");

    $lista = array();

    $sql = "select fechaAsistencia as Fecha, horaEntrada as Hora 
            from asistencias_guardias 
            where concat_ws('-',entidadEmpleado,consecutivoEmpleado,categoriaEmpleado) = '" . $this->safeValue($numeroEmpleado) . "'
            and fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
            UNION
            select fechaAsistenciaSupervisor as Fecha, horaEntradaSupervisor as Hora 
            from asistencia_supervisor
            where concat_ws('-',entidadSupervisor,consecutivoSupervisor,categoriaSupervisor) = '" . $this->safeValue($numeroEmpleado) . "'
            and fechaAsistenciaSupervisor between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE)
            UNION
            select fechaAsistencia as Fecha, horaEntrada as Hora
            from asistencias_administrativos 
            where concat_ws('-',entidadEmpleadoAdmin,consecutivoEmpleadoAdmin,categoriaEmpleadoAdmin) = '" . $this->safeValue($numeroEmpleado) . "'
            and fechaAsistencia between CAST('" . $this->safeValue($fecha1) . "' AS DATE) and CAST('" . $this->safeValue($fecha2) . "' AS DATE )";

        // $this -> logger -> LogInfo ("Ejecutando getSumaDiasFestivos: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    if (!is_bool($res)) {
        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {
             $lista[] = $reg;
        }
    }

        // $this -> logger -> LogInfo ("Se ejecuto consulta  lista como" . var_export ($lista, true));

    return $lista;

}

// calculo diferencias

public function obtenerEmpleadosEmaHP($registro, $fechaPeriodo1, $fechaPeriodo2,$lineaNeg,$tipoEmp)
{
        //$this-> logger -> LogInfo("obtenerDatosCuadroAntig");
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo1: " . $fechaPeriodo1);
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo2: " . $fechaPeriodo2);

    $listaEmpleados = array();

    $sql = "SELECT concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleado,
                             concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreCompleto,e.empleadoNumeroSeguroSocial as nss,ef.nombreEntidadFederativa,cps.puntoServicio,cc.razonSocial,e.empleadoEstatusId,
                             dp.curpEmpleado,dp.rfcEmpleado,di.fechaImss,di.empleadoEstatusImss,di.fechaBajaImss,datediff(now(), di.fechaImss) as diasTranscurridos,di.salarioDiario,di.registroPatronal, if( idTipoPuesto='02', 'ADMINISTRATIVO', 'OPERATIVO') as tipoPuesto,idTipoPuesto,empleadoLineaNegocioId
                             FROM datosimss di
                             LEFT JOIN empleados e ON (di.empladoEntidadImss=e.entidadFederativaId AND di.empleadoConsecutivoImss=e.empleadoConsecutivoId AND di.empleadoCategoriaImss=e.empleadoCategoriaId)
                             LEFT JOIN catalogopuntosservicios cps ON (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
                             LEFT JOIN catalogoclientes cc ON (cps.idClientePunto=cc.idCliente)
                             LEFT JOIN entidadesfederativas ef ON (e.idEntidadTrabajo=ef.idEntidadFederativa)
                             LEFT JOIN datospersonales dp ON (di.empladoEntidadImss=dp.empleadoEntidadPersonal AND di.empleadoConsecutivoImss=dp.empleadoConsecutivoPersonal AND di.empleadoCategoriaImss=dp.empleadoCategoriaPersonal)
                             WHERE ((di.empleadoEstatusImss=7 AND di.fechaBajaImss >= CAST('$fechaPeriodo1' AS DATE) AND di.fechaImss <= CAST('$fechaPeriodo2' AS DATE)) OR (di.empleadoEstatusImss=3 AND di.fechaImss<= CAST('$fechaPeriodo2' AS DATE) ))
                            AND di.registroPatronal='$registro'
                            AND idTipoPuesto='$tipoEmp'
                            AND empleadoLineaNegocioId='$lineaNeg'";

        //$this->logger->LogInfo("Ejecutando obtener c: " . $sql);

    $res = mysqli_query($this->conn, $sql);

    while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

        $listaEmpleados[] = $reg;
    }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

    return $listaEmpleados;
}

public function obtenerEmpleadosEvaHP($registro, $fechaPeriodo1, $fechaPeriodo2,$lineaNeg,$tipoEmp)
    {
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo1: " . $fechaPeriodo1);
        //$this -> logger -> LogInfo ("Ejecutando fechaPeriodo2: " . $fechaPeriodo2);

        $listaEmpleados = array();

        $sql = "SELECT concat_ws('-',di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss) as numeroEmpleado,
                           concat_ws(' ', e.apellidoPaterno, e.apellidoMaterno, e.nombreEmpleado) as nombreCompleto,e.empleadoNumeroSeguroSocial as nss,ef.nombreEntidadFederativa,cps.puntoServicio,cc.razonSocial,e.empleadoEstatusId,
                           dp.curpEmpleado,dp.rfcEmpleado,di.fechaImss,di.empleadoEstatusImss,di.fechaBajaImss,datediff(now(), di.fechaImss) as diasTranscurridos,di.salarioDiario,di.registroPatronal,di.empladoEntidadImss, di.empleadoConsecutivoImss, di.empleadoCategoriaImss, if( idTipoPuesto='02', 'ADMINISTRATIVO', 'OPERATIVO') as tipoPuesto,idTipoPuesto,empleadoLineaNegocioId
                           FROM datosimss di
                           LEFT JOIN historicomovimientosimss hmi ON (di.empladoEntidadImss=hmi.empEntidadMovimiento and di.empleadoConsecutivoImss=hmi.EmpConsecutivoMovimiento and di.empleadoCategoriaImss=hmi.empCategoriaMovimiento)
                           LEFT JOIN empleados e ON (di.empladoEntidadImss=e.entidadFederativaId and di.empleadoConsecutivoImss=e.empleadoConsecutivoId and di.empleadoCategoriaImss=e.empleadoCategoriaId)
                           LEFT JOIN catalogopuntosservicios cps ON (e.empleadoIdPuntoServicio=cps.idPuntoServicio)
                           LEFT JOIN catalogoclientes cc ON (cps.idClientePunto=cc.idCliente)
                           LEFT JOIN entidadesfederativas ef ON (e.idEntidadTrabajo=ef.idEntidadFederativa)
                           LEFT JOIN datospersonales dp ON (di.empladoEntidadImss=dp.empleadoEntidadPersonal and di.empleadoConsecutivoImss=dp.empleadoConsecutivoPersonal and di.empleadoCategoriaImss=dp.empleadoCategoriaPersonal)
                           where di.registroPatronal='$registro' AND ((di.empleadoEstatusImss=7 AND di.fechaBajaImss >= CAST('$fechaPeriodo1' AS DATE) and di.fechaBajaImss <= CAST('$fechaPeriodo2' AS DATE)
                           AND di.fechaImss <= CAST('$fechaPeriodo2' AS DATE)
                           OR (di.empleadoEstatusImss=3 AND di.fechaImss <= CAST('$fechaPeriodo2' AS DATE)) )) 
                           AND idTipoPuesto=$tipoEmp
                           AND empleadoLineaNegocioId=$lineaNeg
                           GROUP BY numeroEmpleado";
$this -> logger -> LogInfo ("Ejecutando obtenerEmpleadosEvaHP: " . $sql);
        $res = mysqli_query($this->conn, $sql);

        while (($reg = mysqli_fetch_array($res, MYSQLI_ASSOC))) {

            $listaEmpleados[] = $reg;
        }

        //$this -> logger -> LogInfo ("valor del array de la obtenerDatosCuadroAntig ".var_export ($listaEmpleados, true));

        return $listaEmpleados;
    }





























} // Termina la clase Persistencia